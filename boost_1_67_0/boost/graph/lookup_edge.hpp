//=======================================================================
// Copyright 2009 Trustees of Indiana University
// Author: Jeremiah Willcock
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//=======================================================================

#ifndef BOOST_GRAPH_LOOKUP_EDGE_HPP
#define BOOST_GRAPH_LOOKUP_EDGE_HPP

#include <utility>
#include <boost/config.hpp>
#include <boost/utility/enable_if.hpp>
#include <boost/graph/graph_traits.hpp>

// lookup_edge: a function that acts like edge() but falls back to out_edges()
// and a search when edge() is not provided.

namespace boost
{

template < typename Graph >
std::pair< typename boost::graph_traits< Graph >::edge_descriptor, bool >
lookup_edge(typename boost::graph_traits< Graph >::vertex_descriptor src,
    typename boost::graph_traits< Graph >::vertex_descriptor tgt,
    const Graph& g,
    typename boost::enable_if< is_adjacency_matrix< Graph >, int >::type = 0)
{
    return edge(src, tgt, g);
}

template < typename Graph >
std::pair< typename boost::graph_traits< Graph >::edge_descriptor, bool >
lookup_edge(typename boost::graph_traits< Graph >::vertex_descriptor src,
    typename boost::graph_traits< Graph >::vertex_descriptor tgt,
    const Graph& g,
    typename boost::disable_if< is_adjacency_matrix< Graph >, int >::type = 0)
{
    typedef typename boost::graph_traits< Graph >::out_edge_iterator it;
    typedef typename boost::graph_traits< Graph >::edge_descriptor edesc;
    std::pair< it, it > oe = out_edges(src, g);
    for (; oe.first != oe.second; ++oe.first)
    {
        edesc e = *oe.first;
        if (target(e, g) == tgt)
            return std::make_pair(e, true);
    }
    return std::make_pair(edesc(), false);
}

}

#endif // BOOST_GRAPH_LOOKUP_EDGE_HPP

/* lookup_edge.hpp
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
*/