
#ifndef BOOST_MPL_DISTANCE_HPP_INCLUDED
#define BOOST_MPL_DISTANCE_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/distance_fwd.hpp>
#include <boost/mpl/iter_fold.hpp>
#include <boost/mpl/iterator_range.hpp>
#include <boost/mpl/long.hpp>
#include <boost/mpl/next.hpp>
#include <boost/mpl/tag.hpp>
#include <boost/mpl/apply_wrap.hpp>
#include <boost/mpl/aux_/msvc_eti_base.hpp>
#include <boost/mpl/aux_/value_wknd.hpp>
#include <boost/mpl/aux_/na_spec.hpp>
#include <boost/mpl/aux_/config/forwarding.hpp>
#include <boost/mpl/aux_/config/static_constant.hpp>


namespace boost { namespace mpl {

// default implementation for forward/bidirectional iterators
template< typename Tag > struct distance_impl
{
    template< typename First, typename Last > struct apply
#if !defined(BOOST_MPL_CFG_NO_NESTED_FORWARDING)
        : aux::msvc_eti_base< typename iter_fold<
              iterator_range<First,Last>
            , mpl::long_<0>
            , next<>
            >::type >
    {
#else
    {
        typedef typename iter_fold<
              iterator_range<First,Last>
            , mpl::long_<0>
            , next<>
            >::type type;
        
        BOOST_STATIC_CONSTANT(long, value =
              (iter_fold<
                  iterator_range<First,Last>
                , mpl::long_<0>
                , next<>
                >::type::value)
            );
#endif
    };
};

template<
      typename BOOST_MPL_AUX_NA_PARAM(First)
    , typename BOOST_MPL_AUX_NA_PARAM(Last)
    >
struct distance
    : distance_impl< typename tag<First>::type >
        ::template apply<First, Last>
{
    BOOST_MPL_AUX_LAMBDA_SUPPORT(2, distance, (First, Last))
};

BOOST_MPL_AUX_NA_SPEC(2, distance)

}}

#endif // BOOST_MPL_DISTANCE_HPP_INCLUDED

/* distance.hpp
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
*/