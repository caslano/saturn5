
// NO INCLUDE GUARDS, THE HEADER IS INTENDED FOR MULTIPLE INCLUSION

// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/preprocessor/expr_if.hpp>
#include <boost/preprocessor/inc.hpp>
#include <boost/preprocessor/cat.hpp>

#if !defined(AUX778076_COUNT_ARGS_PARAM_NAME)
#   define AUX778076_COUNT_ARGS_PARAM_NAME T
#endif

#if !defined(AUX778076_COUNT_ARGS_TEMPLATE_PARAM)
#   define AUX778076_COUNT_ARGS_TEMPLATE_PARAM typename AUX778076_COUNT_ARGS_PARAM_NAME
#endif

// local macros, #undef-ined at the end of the header

#if !defined(AUX778076_COUNT_ARGS_USE_STANDARD_PP_PRIMITIVES)

#   include <boost/mpl/aux_/preprocessor/repeat.hpp>
#   include <boost/mpl/aux_/preprocessor/params.hpp>

#   define AUX778076_COUNT_ARGS_REPEAT BOOST_MPL_PP_REPEAT
#   define AUX778076_COUNT_ARGS_PARAMS(param) \
    BOOST_MPL_PP_PARAMS( \
          AUX778076_COUNT_ARGS_ARITY \
        , param \
        ) \
    /**/

#else

#   include <boost/preprocessor/enum_shifted_params.hpp>
#   include <boost/preprocessor/repeat.hpp>
#   include <boost/preprocessor/inc.hpp>

#   define AUX778076_COUNT_ARGS_REPEAT BOOST_PP_REPEAT
#   define AUX778076_COUNT_ARGS_PARAMS(param) \
    BOOST_PP_ENUM_SHIFTED_PARAMS( \
          BOOST_PP_INC(AUX778076_COUNT_ARGS_ARITY) \
        , param \
        ) \
    /**/

#endif // AUX778076_COUNT_ARGS_USE_STANDARD_PP_PRIMITIVES


#define AUX778076_IS_ARG_TEMPLATE_NAME \
    BOOST_PP_CAT(is_,BOOST_PP_CAT(AUX778076_COUNT_ARGS_PREFIX,_arg)) \
/**/

#define AUX778076_COUNT_ARGS_FUNC(unused, i, param) \
    BOOST_PP_EXPR_IF(i, +) \
    AUX778076_IS_ARG_TEMPLATE_NAME<BOOST_PP_CAT(param,BOOST_PP_INC(i))>::value \
/**/

// is_<xxx>_arg
template< AUX778076_COUNT_ARGS_TEMPLATE_PARAM >
struct AUX778076_IS_ARG_TEMPLATE_NAME
{
    BOOST_STATIC_CONSTANT(bool, value = true);
};

template<>
struct AUX778076_IS_ARG_TEMPLATE_NAME<AUX778076_COUNT_ARGS_DEFAULT>
{
    BOOST_STATIC_CONSTANT(bool, value = false);
};

// <xxx>_count_args
template<
      AUX778076_COUNT_ARGS_PARAMS(AUX778076_COUNT_ARGS_TEMPLATE_PARAM)
    >
struct BOOST_PP_CAT(AUX778076_COUNT_ARGS_PREFIX,_count_args)
{
    BOOST_STATIC_CONSTANT(int, value = AUX778076_COUNT_ARGS_REPEAT(
          AUX778076_COUNT_ARGS_ARITY
        , AUX778076_COUNT_ARGS_FUNC
        , AUX778076_COUNT_ARGS_PARAM_NAME
        ));
};

#undef AUX778076_COUNT_ARGS_FUNC
#undef AUX778076_IS_ARG_TEMPLATE_NAME
#undef AUX778076_COUNT_ARGS_PARAMS
#undef AUX778076_COUNT_ARGS_REPEAT

#undef AUX778076_COUNT_ARGS_ARITY
#undef AUX778076_COUNT_ARGS_DEFAULT
#undef AUX778076_COUNT_ARGS_PREFIX
#undef AUX778076_COUNT_ARGS_USE_STANDARD_PP_PRIMITIVES
#undef AUX778076_COUNT_ARGS_TEMPLATE_PARAM
#undef AUX778076_COUNT_ARGS_PARAM_NAME

/* count_args.hpp
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
*/