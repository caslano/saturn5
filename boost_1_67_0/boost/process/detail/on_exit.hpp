// Copyright (c) 2016 Klemens D. Morgenstern
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PROCESS_DETAIL_ON_EXIT_HPP_
#define BOOST_PROCESS_DETAIL_ON_EXIT_HPP_

#include <boost/process/detail/config.hpp>

#if defined(BOOST_POSIX_API)
#include <boost/process/detail/posix/on_exit.hpp>
#elif defined(BOOST_WINDOWS_API)
#include <boost/process/detail/windows/on_exit.hpp>
#endif

#include <future>
#include <memory>

namespace boost { namespace process { namespace detail {

inline std::function<void(int, const std::error_code &)> on_exit_from_future(std::future<int> &f)
{
    std::shared_ptr<std::promise<int>> promise = std::make_shared<std::promise<int>>();
    f = promise->get_future();
    return [promise](int code, const std::error_code & ec)
            {
                if (ec)
                    promise->set_exception(
                        std::make_exception_ptr(process_error(ec, "on_exit failed with error"))
                        );
                else
                    promise->set_value(code);
            };
}


struct on_exit_
{
    api::on_exit_ operator= (const std::function<void(int, const std::error_code&)> & f) const {return f;}
    api::on_exit_ operator()(const std::function<void(int, const std::error_code&)> & f) const {return f;}

    api::on_exit_ operator= (std::future<int> &f) const {return on_exit_from_future(f);}
    api::on_exit_ operator()(std::future<int> &f) const {return on_exit_from_future(f);}
};

}

constexpr static ::boost::process::detail::on_exit_ on_exit{};


}}
#endif /* INCLUDE_BOOST_PROCESS_WINDOWS_ON_EXIT_HPP_ */

/* on_exit.hpp
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
*/