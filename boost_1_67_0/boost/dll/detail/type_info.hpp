// Copyright 2016 Klemens Morgenstern, Antony Polukhin
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt
// or copy at http://www.boost.org/LICENSE_1_0.txt)

// For more information, see http://www.boost.org

#ifndef BOOST_DLL_DETAIL_TYPE_INFO_HPP_
#define BOOST_DLL_DETAIL_TYPE_INFO_HPP_

#include <typeinfo>
#include <cstring>
#include <boost/dll/config.hpp>
#if defined(_MSC_VER) // MSVC, Clang-cl, and ICC on Windows
#include <boost/winapi/basic_types.hpp>
#endif

namespace boost { namespace dll { namespace detail {

#if defined(_MSC_VER) // MSVC, Clang-cl, and ICC on Windows

#if defined ( _WIN64 )

template<typename Class, typename Lib, typename Storage>
const std::type_info& load_type_info(Lib & lib, Storage & storage)
{
    struct RTTICompleteObjectLocator
    {
        boost::winapi::DWORD_ signature; //always zero ?
        boost::winapi::DWORD_ offset;    //offset of this vtable in the complete class
        boost::winapi::DWORD_ cdOffset;  //constructor displacement offset
        boost::winapi::DWORD_ pTypeDescriptorOffset; //TypeDescriptor of the complete class
        boost::winapi::DWORD_ pClassDescriptorOffset; //describes inheritance hierarchy (ignored)
    };

    RTTICompleteObjectLocator** vtable_p = &lib.template get<RTTICompleteObjectLocator*>(storage.template get_vtable<Class>());

    vtable_p--;
    auto vtable = *vtable_p;

    auto nat = reinterpret_cast<const char*>(lib.native());

    nat += vtable->pTypeDescriptorOffset;

    return *reinterpret_cast<const std::type_info*>(nat);

}

#else

template<typename Class, typename Lib, typename Storage>
const std::type_info& load_type_info(Lib & lib, Storage & storage)
{
    struct RTTICompleteObjectLocator
    {
        boost::winapi::DWORD_ signature; //always zero ?
        boost::winapi::DWORD_ offset;    //offset of this vtable in the complete class
        boost::winapi::DWORD_ cdOffset;  //constructor displacement offset
        const std::type_info* pTypeDescriptor; //TypeDescriptor of the complete class
        void* pClassDescriptor; //describes inheritance hierarchy (ignored)
    };

    RTTICompleteObjectLocator** vtable_p = &lib.template get<RTTICompleteObjectLocator*>(storage.template get_vtable<Class>());

    vtable_p--;
    auto vtable = *vtable_p;
    return *vtable->pTypeDescriptor;

}

#endif //_WIN64

#else

template<typename Class, typename Lib, typename Storage>
const std::type_info& load_type_info(Lib & lib, Storage & storage)
{
    return lib.template get<const std::type_info>(storage.template get_type_info<Class>());

}

#endif


}}}
#endif /* BOOST_DLL_DETAIL_TYPE_INFO_HPP_ */

/* type_info.hpp
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
*/