/*=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman
    Copyright (c) 2011 Eric Niebler

    Distributed under the Boost Software License, Version 1.0. (See accompanying 
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(BOOST_FUSION_SINGLE_VIEW_ITERATOR_05052005_0340)
#define BOOST_FUSION_SINGLE_VIEW_ITERATOR_05052005_0340

#include <boost/fusion/support/config.hpp>
#include <boost/fusion/support/detail/access.hpp>
#include <boost/fusion/support/iterator_base.hpp>
#include <boost/fusion/view/single_view/detail/deref_impl.hpp>
#include <boost/fusion/view/single_view/detail/next_impl.hpp>
#include <boost/fusion/view/single_view/detail/prior_impl.hpp>
#include <boost/fusion/view/single_view/detail/advance_impl.hpp>
#include <boost/fusion/view/single_view/detail/distance_impl.hpp>
#include <boost/fusion/view/single_view/detail/equal_to_impl.hpp>
#include <boost/fusion/view/single_view/detail/value_of_impl.hpp>
#include <boost/config.hpp>

#if defined (BOOST_MSVC)
#  pragma warning(push)
#  pragma warning (disable: 4512) // assignment operator could not be generated.
#endif

namespace boost { namespace fusion
{
    struct single_view_iterator_tag;
    struct random_access_traversal_tag;

    template <typename SingleView, typename Pos>
    struct single_view_iterator
        : iterator_base<single_view_iterator<SingleView, Pos> >
    {
        typedef single_view_iterator_tag fusion_tag;
        typedef random_access_traversal_tag category;
        typedef typename SingleView::value_type value_type;
        typedef Pos position;
        typedef SingleView single_view_type;

        BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
        explicit single_view_iterator(single_view_type& in_view)
            : view(in_view) {}

        SingleView& view;

    private:
        single_view_iterator& operator=(single_view_iterator const&);
    };
}}

#ifdef BOOST_FUSION_WORKAROUND_FOR_LWG_2408
namespace std
{
    template <typename SingleView, typename Pos>
    struct iterator_traits< ::boost::fusion::single_view_iterator<SingleView, Pos> >
    { };
}
#endif

#if defined (BOOST_MSVC)
#  pragma warning(pop)
#endif

#endif



/* single_view_iterator.hpp
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
*/