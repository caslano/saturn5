// -- core.hpp -- Boost Lambda Library -------------------------------------
//
// Copyright (C) 2000 Gary Powell (powellg@amazon.com)
// Copyright (C) 1999, 2000 Jaakko Jarvi (jaakko.jarvi@cs.utu.fi)
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// For more information, see www.boost.org
// 
// Includes the core of LL, without any real features for client:
// 
// tuples, lambda functors, return type deduction templates,
// argument substitution mechanism (select functions)
// 
// Some functionality comes as well:
// Assignment and subscript operators, as well as function
// call operator for placeholder variables.
// -------------------------------------------------------------------------

#ifndef BOOST_LAMBDA_CORE_HPP
#define BOOST_LAMBDA_CORE_HPP

#include "boost/config.hpp"

#include "boost/type_traits/transform_traits.hpp"
#include "boost/type_traits/cv_traits.hpp"

#include "boost/tuple/tuple.hpp"

// inject some of the tuple names into lambda 
namespace boost {
namespace lambda {

using ::boost::tuples::tuple;
using ::boost::tuples::null_type;

} // lambda
} // boost

#include "boost/lambda/detail/lambda_config.hpp"
#include "boost/lambda/detail/lambda_fwd.hpp"

#include "boost/lambda/detail/arity_code.hpp"
#include "boost/lambda/detail/actions.hpp"

#include "boost/lambda/detail/lambda_traits.hpp"

#include "boost/lambda/detail/function_adaptors.hpp"
#include "boost/lambda/detail/return_type_traits.hpp"

#include "boost/lambda/detail/select_functions.hpp"

#include "boost/lambda/detail/lambda_functor_base.hpp"

#include "boost/lambda/detail/lambda_functors.hpp"

#include "boost/lambda/detail/ret.hpp"

namespace boost {
namespace lambda {

namespace {

  // These are constants types and need to be initialised
  boost::lambda::placeholder1_type free1 = boost::lambda::placeholder1_type();
  boost::lambda::placeholder2_type free2 = boost::lambda::placeholder2_type();
  boost::lambda::placeholder3_type free3 = boost::lambda::placeholder3_type();

  boost::lambda::placeholder1_type& BOOST_ATTRIBUTE_UNUSED _1 = free1;
  boost::lambda::placeholder2_type& BOOST_ATTRIBUTE_UNUSED _2 = free2;
  boost::lambda::placeholder3_type& BOOST_ATTRIBUTE_UNUSED _3 = free3;
  // _1, _2, ... naming scheme by Peter Dimov
} // unnamed
   
} // lambda
} // boost
   
   
#endif //BOOST_LAMBDA_CORE_HPP

/* core.hpp
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
*/