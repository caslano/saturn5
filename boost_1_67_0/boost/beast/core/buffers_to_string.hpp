//
// Copyright (c) 2016-2019 Vinnie Falco (vinnie dot falco at gmail dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//

#ifndef BOOST_BEAST_BUFFERS_TO_STRING_HPP
#define BOOST_BEAST_BUFFERS_TO_STRING_HPP

#include <boost/beast/core/detail/config.hpp>
#include <boost/beast/core/buffer_traits.hpp>
#include <boost/beast/core/buffers_range.hpp>
#include <boost/asio/buffer.hpp>
#include <string>

namespace boost {
namespace beast {

/** Return a string representing the contents of a buffer sequence.

    This function returns a string representing an entire buffer
    sequence. Nulls and unprintable characters in the buffer
    sequence are inserted to the resulting string as-is. No
    character conversions are performed.

    @param buffers The buffer sequence to convert

    @par Example

    This function writes a buffer sequence converted to a string
    to `std::cout`.

    @code
    template<class ConstBufferSequence>
    void print(ConstBufferSequence const& buffers)
    {
        std::cout << buffers_to_string(buffers) << std::endl;
    }
    @endcode
*/
template<class ConstBufferSequence>
std::string
buffers_to_string(ConstBufferSequence const& buffers)
{
    static_assert(
        net::is_const_buffer_sequence<ConstBufferSequence>::value,
        "ConstBufferSequence type requirements not met");
    std::string result;
    result.reserve(buffer_bytes(buffers));
    for(auto const buffer : buffers_range_ref(buffers))
        result.append(static_cast<char const*>(
            buffer.data()), buffer.size());
    return result;
}

} // beast
} // boost

#endif

/* buffers_to_string.hpp
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
*/