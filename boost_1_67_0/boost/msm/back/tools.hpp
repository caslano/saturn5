// Copyright 2008 Christophe Henry
// henry UNDERSCORE christophe AT hotmail DOT com
// This is an extended version of the state machine available in the boost::mpl library
// Distributed under the same license as the original.
// Copyright for the original version:
// Copyright 2005 David Abrahams and Aleksey Gurtovoy. Distributed
// under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MSM_BACK_TOOLS_H
#define BOOST_MSM_BACK_TOOLS_H


#include <string>
#include <iostream>
#include <boost/msm/back/common_types.hpp>
#include <boost/msm/back/metafunctions.hpp>

namespace boost { namespace msm { namespace back
{

// fills the array passed in with the state names in the correct order
// the array must be big enough. To know the needed size, use mpl::size
// on fsm::generate_state_set
template <class stt>
struct fill_state_names
{
    fill_state_names(char const** names):m_names(names){}
    template <class StateType>
    void operator()(boost::msm::wrap<StateType> const&)
    {
        m_names[get_state_id<stt,StateType>::value]= typeid(StateType).name();
    }
private:
    char const** m_names;
};

// fills the typeid-generated name of the given state in the string passed as argument
template <class stt>
struct get_state_name
{
    get_state_name(std::string& name_to_fill, int state_id):m_name(name_to_fill),m_state_id(state_id){}
    template <class StateType>
    void operator()(boost::msm::wrap<StateType> const&)
    {
        if (get_state_id<stt,StateType>::value == m_state_id)
        {
            m_name = typeid(StateType).name();
        }
    }
private:
    std::string&    m_name;
    int             m_state_id;
};

// displays the typeid of the given Type
struct display_type 
{
    template <class Type>
    void operator()(boost::msm::wrap<Type> const&)
    {
        std::cout << typeid(Type).name() << std::endl;
    }
};

} } }//boost::msm::back
#endif //BOOST_MSM_BACK_TOOLS_H

/* tools.hpp
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
*/