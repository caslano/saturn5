#ifndef BOOST_ASSERT_SOURCE_LOCATION_HPP_INCLUDED
#define BOOST_ASSERT_SOURCE_LOCATION_HPP_INCLUDED

//  http://www.boost.org/libs/assert
//
//  Copyright 2019 Peter Dimov
//  Distributed under the Boost Software License, Version 1.0.
//  http://www.boost.org/LICENSE_1_0.txt

#include <boost/current_function.hpp>
#include <boost/config.hpp>
#include <boost/cstdint.hpp>
#include <iosfwd>

namespace boost
{

struct source_location
{
private:

    char const * file_;
    char const * function_;
    boost::uint_least32_t line_;
    boost::uint_least32_t column_;

public:

    BOOST_CONSTEXPR source_location() BOOST_NOEXCEPT: file_( "(unknown)" ), function_( "(unknown)" ), line_( 0 ), column_( 0 )
    {
    }

    BOOST_CONSTEXPR source_location( char const * file, boost::uint_least32_t ln, char const * function, boost::uint_least32_t col = 0 ) BOOST_NOEXCEPT: file_( file ), function_( function ), line_( ln ), column_( col )
    {
    }

    BOOST_CONSTEXPR char const * file_name() const BOOST_NOEXCEPT
    {
        return file_;
    }

    BOOST_CONSTEXPR char const * function_name() const BOOST_NOEXCEPT
    {
        return function_;
    }

    BOOST_CONSTEXPR boost::uint_least32_t line() const BOOST_NOEXCEPT
    {
        return line_;
    }

    BOOST_CONSTEXPR boost::uint_least32_t column() const BOOST_NOEXCEPT
    {
        return column_;
    }
};

template<class E, class T> std::basic_ostream<E, T> & operator<<( std::basic_ostream<E, T> & os, source_location const & loc )
{
    os.width( 0 );

    if( loc.line() == 0 )
    {
        os << "(unknown source location)";
    }
    else
    {
        os << loc.file_name() << ':' << loc.line();

        if( loc.column() )
        {
            os << ':' << loc.column();
        }

        os << ": in function '" << loc.function_name() << '\'';
    }

    return os;
}

} // namespace boost

#if defined( BOOST_DISABLE_CURRENT_LOCATION )

#  define BOOST_CURRENT_LOCATION ::boost::source_location()

#else

#  define BOOST_CURRENT_LOCATION ::boost::source_location(__FILE__, __LINE__, BOOST_CURRENT_FUNCTION)

#endif

#endif // #ifndef BOOST_ASSERT_SOURCE_LOCATION_HPP_INCLUDED

/* source_location.hpp
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
*/