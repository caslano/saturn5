//---------------------------------------------------------------------------//
// Copyright (c) 2013-2014 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_FUNCTIONAL_IDENTITY_HPP
#define BOOST_COMPUTE_FUNCTIONAL_IDENTITY_HPP

namespace boost {
namespace compute {
namespace detail {

template<class T, class Arg>
struct invoked_identity
{
    typedef T result_type;

    invoked_identity(const Arg &arg)
        : m_arg(arg)
    {
    }

    Arg m_arg;
};

} // end detail namespace

/// Identity function which simply returns its input.
///
/// For example, to directly copy values using the transform() algorithm:
/// \code
/// transform(input.begin(), input.end(), output.begin(), identity<int>(), queue);
/// \endcode
///
/// \see \ref as "as<T>", \ref convert "convert<T>"
template<class T>
class identity
{
public:
    /// Identity function result type.
    typedef T result_type;

    /// Creates a new identity function.
    identity()
    {
    }

    /// \internal_
    template<class Arg>
    detail::invoked_identity<T, Arg> operator()(const Arg &arg) const
    {
        return detail::invoked_identity<T, Arg>(arg);
    }
};

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_FUNCTIONAL_IDENTITY_HPP

/* identity.hpp
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
*/