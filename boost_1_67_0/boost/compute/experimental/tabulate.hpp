//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_EXPERIMENTAL_TABULATE_HPP
#define BOOST_COMPUTE_EXPERIMENTAL_TABULATE_HPP

#include <iterator>

#include <boost/compute/algorithm/transform.hpp>
#include <boost/compute/iterator/counting_iterator.hpp>

namespace boost {
namespace compute {
namespace experimental {

template<class Iterator, class UnaryFunction>
inline void tabulate(Iterator first,
                     Iterator last,
                     UnaryFunction function,
                     command_queue &queue)
{
    size_t n = detail::iterator_range_size(first, last);

    ::boost::compute::transform(
        ::boost::compute::make_counting_iterator<int>(0),
        ::boost::compute::make_counting_iterator<int>(n),
        first,
        function,
        queue
    );
}

} // end experimental namespace
} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_EXPERIMENTAL_TABULATE_HPP

/* tabulate.hpp
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
*/