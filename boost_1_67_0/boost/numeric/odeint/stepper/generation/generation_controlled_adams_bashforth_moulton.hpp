/*
 boost/numeric/odeint/stepper/detail/generation_controlled_adams_bashforth_moulton.hpp

 [begin_description]
 Spezialization of the generation functions for creation of the controlled adams bashforth moulton stepper.
 [end_description]

 Copyright 2017 Valentin Noah Hartmann

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef GENERATION_CONTROLLED_ADAMS_BASHFORTH_MOULTON_HPP_INCLUDED
#define GENERATION_CONTROLLED_ADAMS_BASHFORTH_MOULTON_HPP_INCLUDED

#include <boost/numeric/odeint/stepper/adaptive_adams_bashforth_moulton.hpp>
#include <boost/numeric/odeint/stepper/controlled_adams_bashforth_moulton.hpp>
#include <boost/numeric/odeint/stepper/generation/make_controlled.hpp>

namespace boost {
namespace numeric {
namespace odeint {

template< size_t Steps, class State , class Value , class Deriv , class Time , class Algebra , class Operations , class Resizer >
struct get_controller< adaptive_adams_bashforth_moulton< Steps, State , Value , Deriv , Time , Algebra , Operations , Resizer > >
{
	typedef adaptive_adams_bashforth_moulton<Steps, State, Value, Deriv, Time, Algebra, Operations, Resizer> stepper_type;
    typedef controlled_adams_bashforth_moulton< stepper_type > type;
};

// controller factory for controlled_adams_bashforth_moulton
template< class Stepper >
struct controller_factory< Stepper , controlled_adams_bashforth_moulton< Stepper > >
{
    typedef Stepper stepper_type;
    typedef controlled_adams_bashforth_moulton< stepper_type > controller_type;
    typedef typename controller_type::step_adjuster_type step_adjuster_type;
    typedef typename stepper_type::value_type value_type;
    typedef typename stepper_type::value_type time_type;

    controller_type operator()( value_type abs_error , value_type rel_error , const stepper_type &stepper )
    {
        return controller_type(step_adjuster_type(abs_error, rel_error));
    }

    controller_type operator()( value_type abs_error , value_type rel_error ,
                                time_type max_dt, const stepper_type &stepper )
    {
        return controller_type( step_adjuster_type(abs_error, rel_error, max_dt));
    }
};

}
}
}

#endif
/* generation_controlled_adams_bashforth_moulton.hpp
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
*/