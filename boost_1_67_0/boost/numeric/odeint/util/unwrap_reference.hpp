/*
 [auto_generated]
 boost/numeric/odeint/util/unwrap_reference.hpp

 [begin_description]
 unwrap_reference
 [end_description]

 Copyright 2012-2013 Karsten Ahnert
 Copyright 2012-2013 Mario Mulansky

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */


#ifndef BOOST_NUMERIC_ODEINT_UTIL_UNWRAP_REFERENCE_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_UTIL_UNWRAP_REFERENCE_HPP_INCLUDED


#include <boost/numeric/odeint/config.hpp>


#if BOOST_NUMERIC_ODEINT_CXX11
#include <functional>
#else
#include <boost/ref.hpp>
#endif

namespace boost {

#if BOOST_NUMERIC_ODEINT_CXX11
template<typename T> class reference_wrapper;

template<typename T> struct unwrap_reference;
#endif

namespace numeric {
namespace odeint {


#if BOOST_NUMERIC_ODEINT_CXX11

template<typename T>
struct unwrap_reference
{
    typedef typename std::remove_reference<T>::type type;
};

template<typename T>
struct unwrap_reference< std::reference_wrapper<T> >
{
    typedef typename std::remove_reference<T>::type type;
};

template<typename T>
struct unwrap_reference< boost::reference_wrapper<T> >
{
    typedef typename boost::unwrap_reference<T>::type type;
};

#else

using ::boost::unwrap_reference;

#endif

namespace detail
{

#if BOOST_NUMERIC_ODEINT_CXX11

using ::std::ref;

#else

using ::boost::ref;

#endif
}

}
}
}



/*
 * 
 * the following is the suggested way, but unfortunately it does not work with all compilers.
 */

/*

#include <boost/config.hpp>


#ifdef BOOST_NO_CXX11_HDR_FUNCTIONAL
#include <boost/ref.hpp>
#else
#include <functional>
#endif



namespace boost {
namespace numeric {
namespace odeint {


#ifndef BOOST_NO_CXX11_HDR_FUNCTIONAL

template<typename T>
struct unwrap_reference
{
    typedef typename std::remove_reference<T>::type type;
};

template<typename T>
struct unwrap_reference< std::reference_wrapper<T> >
{
    typedef typename std::remove_reference<T>::type type;
};

template<typename T>
struct unwrap_reference< boost::reference_wrapper<T> >
{
    typedef typename boost::unwrap_reference<T>::type type;
};

#else

using ::boost::unwrap_reference;

#endif

}
}
}

namespace boost {
namespace numeric {
namespace odeint {  
namespace detail {


#ifndef BOOST_NO_CXX11_HDR_FUNCTIONAL

using ::std::ref;

#else

using ::boost::ref;

#endif


}
}
}
}

*/

#endif // BOOST_NUMERIC_ODEINT_UTIL_UNWRAP_REFERENCE_HPP_INCLUDED

/* unwrap_reference.hpp
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
*/