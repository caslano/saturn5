//  (c) Copyright Fernando Luis Cacciola Carballal 2000-2004
//  Use, modification, and distribution is subject to the Boost Software
//  License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)

//  See library home page at http://www.boost.org/libs/numeric/conversion
//
// Contact the author at: fernando_cacciola@hotmail.com
// 
#ifndef BOOST_NUMERIC_CONVERSION_DETAIL_INT_FLOAT_MIXTURE_FLC_12NOV2002_HPP
#define BOOST_NUMERIC_CONVERSION_DETAIL_INT_FLOAT_MIXTURE_FLC_12NOV2002_HPP

#include "boost/config.hpp"
#include "boost/limits.hpp"

#include "boost/numeric/conversion/int_float_mixture_enum.hpp"
#include "boost/numeric/conversion/detail/meta.hpp"

#include "boost/mpl/integral_c.hpp"

namespace boost { namespace numeric { namespace convdetail
{
  // Integral Constants for 'IntFloatMixture'
  typedef mpl::integral_c<int_float_mixture_enum, integral_to_integral> int2int_c ;
  typedef mpl::integral_c<int_float_mixture_enum, integral_to_float>    int2float_c ;
  typedef mpl::integral_c<int_float_mixture_enum, float_to_integral>    float2int_c ;
  typedef mpl::integral_c<int_float_mixture_enum, float_to_float>       float2float_c ;

  // Metafunction:
  //
  //   get_int_float_mixture<T,S>::type
  //
  // Selects the appropriate Int-Float Mixture Integral Constant for the combination T,S.
  //
  template<class T,class S>
  struct get_int_float_mixture
  {
    typedef mpl::bool_< ::std::numeric_limits<S>::is_integer > S_int ;
    typedef mpl::bool_< ::std::numeric_limits<T>::is_integer > T_int ;

    typedef typename
      for_both<S_int, T_int, int2int_c, int2float_c, float2int_c, float2float_c>::type
        type ;
  } ;

  // Metafunction:
  //
  //   for_int_float_mixture<Mixture,int_int,int_float,float_int,float_float>::type
  //
  // {Mixture} is one of the Integral Constants for Mixture, declared above.
  // {int_int,int_float,float_int,float_float} are aribtrary types. (not metafunctions)
  //
  // According to the value of 'IntFloatMixture', selects the corresponding type.
  //
  template<class IntFloatMixture, class Int2Int, class Int2Float, class Float2Int, class Float2Float>
  struct for_int_float_mixture
  {
    typedef typename
      ct_switch4<IntFloatMixture
                 ,int2int_c, int2float_c, float2int_c  // default
                 ,Int2Int  , Int2Float  , Float2Int  , Float2Float
                >::type
        type ;
  } ;

} } } // namespace boost::numeric::convdetail

#endif
//
///////////////////////////////////////////////////////////////////////////////////////////////



/* int_float_mixture.hpp
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
*/