/* Copyright 2003-2013 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/multi_index for library home page.
 */

#ifndef BOOST_MULTI_INDEX_DETAIL_UINTPTR_TYPE_HPP
#define BOOST_MULTI_INDEX_DETAIL_UINTPTR_TYPE_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/config.hpp> /* keep it first to prevent nasty warns in MSVC */
#include <boost/mpl/bool.hpp>

namespace boost{

namespace multi_index{

namespace detail{

/* has_uintptr_type is an MPL integral constant determining whether
 * there exists an unsigned integral type with the same size as
 * void *.
 * uintptr_type is such a type if has_uintptr is true, or unsigned int
 * otherwise.
 * Note that uintptr_type is more restrictive than C99 uintptr_t,
 * where an integral type with size greater than that of void *
 * would be conformant.
 */

template<int N>struct uintptr_candidates;
template<>struct uintptr_candidates<-1>{typedef unsigned int           type;};
template<>struct uintptr_candidates<0> {typedef unsigned int           type;};
template<>struct uintptr_candidates<1> {typedef unsigned short         type;};
template<>struct uintptr_candidates<2> {typedef unsigned long          type;};

#if defined(BOOST_HAS_LONG_LONG)
template<>struct uintptr_candidates<3> {typedef boost::ulong_long_type type;};
#else
template<>struct uintptr_candidates<3> {typedef unsigned int           type;};
#endif

#if defined(BOOST_HAS_MS_INT64)
template<>struct uintptr_candidates<4> {typedef unsigned __int64       type;};
#else
template<>struct uintptr_candidates<4> {typedef unsigned int           type;};
#endif

struct uintptr_aux
{
  BOOST_STATIC_CONSTANT(int,index=
    sizeof(void*)==sizeof(uintptr_candidates<0>::type)?0:
    sizeof(void*)==sizeof(uintptr_candidates<1>::type)?1:
    sizeof(void*)==sizeof(uintptr_candidates<2>::type)?2:
    sizeof(void*)==sizeof(uintptr_candidates<3>::type)?3:
    sizeof(void*)==sizeof(uintptr_candidates<4>::type)?4:-1);

  BOOST_STATIC_CONSTANT(bool,has_uintptr_type=(index>=0));

  typedef uintptr_candidates<index>::type type;
};

typedef mpl::bool_<uintptr_aux::has_uintptr_type> has_uintptr_type;
typedef uintptr_aux::type                         uintptr_type;

} /* namespace multi_index::detail */

} /* namespace multi_index */

} /* namespace boost */

#endif

/* uintptr_type.hpp
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
*/