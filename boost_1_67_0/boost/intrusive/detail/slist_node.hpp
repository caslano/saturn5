/////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Olaf Krzikalla 2004-2006.
// (C) Copyright Ion Gaztanaga  2006-2013
//
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/intrusive for documentation.
//
/////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTRUSIVE_SLIST_NODE_HPP
#define BOOST_INTRUSIVE_SLIST_NODE_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif

#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/intrusive/detail/config_begin.hpp>
#include <boost/intrusive/detail/workaround.hpp>
#include <boost/intrusive/pointer_rebind.hpp>

namespace boost {
namespace intrusive {

template<class VoidPointer>
struct slist_node
{
   typedef typename pointer_rebind<VoidPointer, slist_node>::type   node_ptr;
   node_ptr next_;
};

// slist_node_traits can be used with circular_slist_algorithms and supplies
// a slist_node holding the pointers needed for a singly-linked list
// it is used by slist_base_hook and slist_member_hook
template<class VoidPointer>
struct slist_node_traits
{
   typedef slist_node<VoidPointer>  node;
   typedef typename node::node_ptr  node_ptr;
   typedef typename pointer_rebind<VoidPointer, const node>::type    const_node_ptr;

   BOOST_INTRUSIVE_FORCEINLINE static node_ptr get_next(const const_node_ptr & n)
   {  return n->next_;  }

   BOOST_INTRUSIVE_FORCEINLINE static node_ptr get_next(const node_ptr & n)
   {  return n->next_;  }

   BOOST_INTRUSIVE_FORCEINLINE static void set_next(node_ptr n, node_ptr next)
   {  n->next_ = next;  }
};

} //namespace intrusive
} //namespace boost

#include <boost/intrusive/detail/config_end.hpp>

#endif //BOOST_INTRUSIVE_SLIST_NODE_HPP

/* slist_node.hpp
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
*/