#ifndef DATE_TIME_FILETIME_FUNCTIONS_HPP__
#define DATE_TIME_FILETIME_FUNCTIONS_HPP__

/* Copyright (c) 2004 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst
 * $Date$
 */

/*! @file filetime_functions.hpp
 * Function(s) for converting between a FILETIME structure and a
 * time object. This file is only available on systems that have
 * BOOST_HAS_FTIME defined.
 */

#include <boost/date_time/compiler_config.hpp>

#if defined(BOOST_HAS_FTIME) // skip this file if no FILETIME

#include <boost/cstdint.hpp>
#include <boost/date_time/time.hpp>
#include <boost/date_time/date_defs.hpp>

namespace boost {

namespace date_time {

//! Create a time object from an initialized FILETIME struct.
/*!
 * Create a time object from an initialized FILETIME struct.
 * A FILETIME struct holds 100-nanosecond units (0.0000001). When
 * built with microsecond resolution the file_time's sub second value
 * will be truncated. Nanosecond resolution has no truncation.
 *
 * \note The function is templated on the FILETIME type, so that
 *       it can be used with both native FILETIME and the ad-hoc
 *       boost::detail::winapi::FILETIME_ type.
 */
template< typename TimeT, typename FileTimeT >
inline
TimeT time_from_ftime(const FileTimeT& ft)
{
    typedef typename TimeT::date_type date_type;
    typedef typename TimeT::date_duration_type date_duration_type;
    typedef typename TimeT::time_duration_type time_duration_type;

    // https://svn.boost.org/trac/boost/ticket/2523
    // Since this function can be called with arbitrary times, including ones that
    // are before 1970-Jan-01, we'll have to cast the time a bit differently,
    // than it is done in the microsec_clock::file_time_to_microseconds function. This allows to
    // avoid integer wrapping for dates before 1970-Jan-01.

    // 100-nanos since 1601-Jan-01
    uint64_t ft_as_integer = (static_cast< uint64_t >(ft.dwHighDateTime) << 32) | static_cast< uint64_t >(ft.dwLowDateTime);
    uint64_t sec = ft_as_integer / 10000000UL;
    uint32_t sub_sec = static_cast< uint32_t >(ft_as_integer % 10000000UL) // 100-nanoseconds since the last second
#if !defined(BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG)
        / 10U; // microseconds since the last second
#else
        * 100U; // nanoseconds since the last second
#endif

    // split sec into usable chunks: days, hours, minutes, & seconds
    const uint32_t sec_per_day = 86400; // seconds per day
    uint32_t days = static_cast< uint32_t >(sec / sec_per_day);
    uint32_t tmp = static_cast< uint32_t >(sec % sec_per_day);
    uint32_t hours = tmp / 3600; // sec_per_hour
    tmp %= 3600;
    uint32_t minutes = tmp / 60; // sec_per_min
    tmp %= 60;
    uint32_t seconds = tmp; // seconds

    date_duration_type dd(days);
    date_type d = date_type(1601, Jan, 01) + dd;
    return TimeT(d, time_duration_type(hours, minutes, seconds, sub_sec));
}

}} // boost::date_time

#endif // BOOST_HAS_FTIME

#endif // DATE_TIME_FILETIME_FUNCTIONS_HPP__

/* filetime_functions.hpp
Y9EOcCs5n0jlf7mZVJYkI1rXW86UW/sDB7SytxWN054z3NWoTztf7jjf/RA6G2EhnBLUGHNZojviinbLpI3TW8KOuIu8JiBkLpOH/KWJs6qW5Y7igbX86C0fQj9p55NMwsk/m2guwYnHRR8BpWKmSTcpkYb2xwuENiwdbERSwr6yffzKI6zPT1uYMD9S/NFUSZ6LEhFqPWHcY9FeXo8rz1JBQuRlNIWKUIPGUcmCya2laUGv6746nQM8A+PKv4mVbjXWe0yLFFIbO2JKKPmYu2/qWsAdyx7U35sIMqHFe3fNQAdQohcc39TTI2m2ncihD5Bcfk+WbJefssTQzlw76U26AQhwUhUqYQQvz3IoJdtUSrlJaKW0MsvTKBpJTjgG9obcn85ttvJYFqXzlVeXRFveYtU+XgAcsasjlKfpKxzC6pmkZJpQibQbiqFwQaTeaVPidmNJ/BfbcRijkmMrmrPJ0LobVObvNecaCwwQJQofIs9FcEQRn8dvzhjCvbq8Zkly9vU69XG6biJPlGYFepWRZ5F8OlN2Ck2yUKxNhHcpIDrD6gy2lJ+73a/bHrxVUrxsK3Q5ceRV9kQaLMOJNWHQlS/kA8kFJ29te5884moO3MxPR7fYigMWtnpQIO88L154G0nJRhZnFqUaoOMYBd7JIvsNPKd4BhkYpkpZGsEDO8U9xa/HGKzLP8A/RzBIAgorhsDP58UfI5PjX53c882hz4sqP3Nx8vkVgfmCfut3VfXthdzkxqwPbRBIrxCP1oTM4TyTL5f10w6mwaHkcviBy8a4NO78VnPzdWdlO4qYFbbitqyZsjWVLOHfSTTAZrJn358g57aM/XzXGsqHF6y7AIyMdlHh1EYA4gBz1ImTuRAEaXLYSiEGxGnOox5UEu6pFSQgDODhRKH2aOAexLB6IVrb7LgSNW9gCGZ4zYEQVFwreIBddwQm9dn6TmjTRL0YWM5PW+01EJTudfeVj/ssKMOZNWnY4JHpOltIxQBHu2AsOvgw8Mwk+LoZZ9KJD7JPoCMCtxehGjT1UvvRKeqX7DzpNUX5m5rCft2yDlnQ82PoU2mBYnC2oqzYymAivqsS9QL2hzeQTxLZ5VQl6mvY41wUnb9ULkMQ/xxtQs2C+whyh9MbUX9nJ39SFzFmwF1AdJJTezxLEucfCBFKEYMgq4IeS8rFdeww9sxY9kTTb7BREYXnEXdlBBMzpXSLEOR12kSyvHlSz0tMNDYEBdxvu7IXq95uAzM37aDQq4mskXNh4hwz+LJy3zldYjxp0VqSC3p0GYovBNucEe/nRokri3DYlf6V/WfK2rPBypDBTZjX8Xmg3IXxH0k06YjNo/bHnYIrJlQGYIXi0QB7HfchBoICFRYEEXhRdARw9G04jla05Ykn0glB/jN3xZo0neI4PHoNYKTWmgAu96RT4H/IoVxpXcUoB2I2Ch4dT/EWI9B4GN3ahIMp7h7eVc27/4H8fBHdBjnYdk5OfhoybM0sHk9mRnD1ULWTRjS4aTOPMMQ5lGiZhgHmDHIMs9HIJzvBqJk1+ZrbtnKA6ZkbrZLtPwN9bvHMJuhtYznAvmUgRi+f1WSGmZWkdb5fVPbJU8Pwnt1sW/UQYKXNZkWjHuYdJNsZwxndIPI8B/mBCOjmCykZc4YPbkxjBJWZk1dsIgu8FdG/LEI+ksfvWs3tGDmkbQUF8kRYHbBGHfj11Z3J8goQFIHhCRLXtSRtb2br1vDyWSvsNRfcjkg51ThuvCIJyr+A7NIcGT48caAZjt+fmOQXvhNUf7Ddc3aZe6onPMTZv+eLDRN1E3HaAKDdeGha7mJq7amzWMNwMd3wt6l/u+fs4BxbV+ypIBkRb3hRGdvhXT6K4tmV7N4VJTB2zJpsTQSNujEAtrYBqL60cdzEnyCq93A+8NUpu+iwcdLKTQhQmUUTIMkU/Z4W938xNCyMi175/ytnuDTrQGgDVOUmrnlqcTAPpiVYQDiXVbL1zeHzcXnp0wa85wkjPr7xCj/p7xMVMvR3GlNfqV1Jd6B4Azsb/Tc9EvSwe2tmKGz/rDx+B39dyRsXb/DMQ5jQJR+0Tv+Bglpd4X3bpAdzoJAemSBQW5a7VhVXOM+HZO+VWLGe1cjjKJMJimf4NQg77VvNqUOrJMYnt6MCvktUHo+VwRLUIJgiwz1okOW3c1txGAzE9VpVPv3SW+082VP0GkHE3lZinxGs2jP+QmbwIa58tR4gy1yLuBCfm0dfztVHt9wVzrrTZWg5D0brt0ZpGWG02S+PxuUxHBMFnqeXChbEWJXihBvJi+4Y5rCrLYVHEANrQ8ikCM5FQO+3IGOTHBuOE8Y52NYa2V8n6vclPB04fefU3nbpKBttmc0jShp1azGa1/3R+l9ftS1mMxAB1723qIbHngmgiYl3BcL6SXSucxV0SeZF72p7/kofS+ulq7tYsckPOmhcjMi2oVmPBs44gNZc7dWF0ka4+s8cqmcz4WzZLvOpNPf6vtUlU2/4FYUi1yZFfjaN6HtZsJSW+3Js2aNITpe+Ji1C6gOD42cUD1oPuWTKBJQW7x1bWAyNmEv8+540To5ewPYU8Qm2lMyO89loDJeTV/Gbc5yfBHE1NKyLp3Dlvxxwe/sxlF44gBINQ39OtyxcgLPcLQ1NHCwqGHGJnVonjDd2yMgAHgPX9EvPJmb+22WhCOsqLUwy8FOVAm3irh6aqs6RK0HtKA0bI00LInPnvWpvWjywXiFQ11e/xKTiewmHB8Xy3Z+PGRHgJ5/Jqe/XnVSKMfR/jY/QXrcf6PAQ2DWHxVNeM67PLbfc9JuA8fe03BgCw21pcuFPJsQG0QKPXWxo4vVpiY+/twhQYLT33CMNNNXWiBQNkXMT2X70qmjMR+LwuRsOjq6B03ycSauu8HxgXNS6Smh3dYGw3u1b2Qj3jjIBhWiLmyyMBS1wCh6P9wEdjchJ8PHUHK4oICyIiNRHp6vvtP55Okq1oLnHicv67NVM6klEDt8YPSgc95GSiFZsYgFRiT60cXlyukn1lxS3sHjqoYTVDzt7c8r3Viyr6ahr5B7Fb51dfIkvZQAb/ACcvhRJlFuLTwxLRiHywumktuVOM1RREvSEzLoZaHlZadD3swEpkhOw7GjyfIoxo9/ONXP/BPAWlc7DG32WF8yY5Xd3TNJIsq8L2z0zY7HKrJgiHiuDdRvDH402KEKz5cKBmIc7DwYmcMNENoOmk2ob4vrRmEJoT3Hh1iGZ9c1dAW0nAHHWCMxMl21rW+os3+/Fmh7P3uCNZli+avvzFZOoeQ4y4kJ9gZsqzAQxDD9fXpKoNDeru7WDSTxpQkn3Q3WFtFckFBhvwwG72CBt8GZWbQYWGVPA9PY6dj4IJpQFYNTdfVUtsDCm4OuvBJ0lV6+NfmpqkgEUsk5NRQTIJdfbfJjUdb/WpTqZSjMpxYbvnzQcaSxmGlAIevZX0JAwnpiIgSlmaCePO82IfvmkRXVhn4kER527qEY5VH9PS6RJAg2/AjAuFAw5wh2cJkEPOeE9dZxo+03PdXb+tST1WlFEuuOYZaylJLE1GlYVl+jd/pfjkImv/PjfpaIQyQm4NsTMJE6ArH86k+eVBJOT5Jwlu3lk5J7G7WwzBFRboEf8CDpr/7XKA57oJHR499TIkee+wEfC8eBbrIc7ULS59s9DCPNRYy0csmwFLV7WRGnlIGgux9zXC5HTykmbIs7BwWoqBTdqZsnof2PupFbmLwkWqW4h39T68bOburj+VxWS4SCQyFOdpv9d5jUalhOEIFGyIWPafR0UCWS1BnWbn9ZfIj2jj0JwvfznvhBuWrYYN+7daj9NArXdzPUTRwMyTwsTsUnFIvtuZ05FYInC3x/Yst6rqHagU+Swdt24i4gHnednt1H6Ez4FQeYBMWQwwKGoSnT1l0mUVw70lKhE4uSlXSa/DiNAs/QVYbdd4arDE/skQdwHrMpc4BJp8+tNGpHc2V/s/rNB/m7bZ+8iRXKPl0lbRFJIWzLtKaShoGteivenhmHL1g7Dtu/Jm1JsfXPF2xZ0TyKySLeZshLj4hmBEHnkGQl7F14exQHF8mDpmxVnybbV+PwcQjMx4MOshm7iMGGwgTf4b84P3XK2TpajdFvCJBznkXKj6DXyrYm1abBLm4LsM4K2+kXlpNUcH1VJE/dA8Mca0pxYFuPkDeCtbdF7jbVZyn23zkQYZtALNTk9a1zFx8/yYI+CoPHDsegUf6n/uk6Y126380eSq8r6QNEhRdU23f3L/Smmvgqlj8muUZPjiKsJEVA7NFXhbZSrFtrvLdSBY6kJ2mUAoAFmUCY/0QK+8OF+4HKLhJ73yYfMaRtO1qzEIk3aPoyGWOiDRLIKsOp/RDwNkLGYcYVe7eptWMa2KxktjnAnf0NrEp1OYtUeTLxmtOy+e0v37FSkSHLWXjObTFKWqTtcgsOg05ga95TJp73hitDrt3IFMnyPH+qiiccrnpmPVdhzQSZV/Andn5tdI5gtgrqZlRHeaxwg2ollaJlwnzluD1e5os76wqY52/OB24U7Vd0v+J4MTnf6c9GWzix0bUt6yRF2ki/Y58ooutllV4nkr8IifqdB66JvD1N9buY8T6CjQ8NdTONULq2gyrKeU0njpaVJJyb+gpvzEKBbSo2HSJ0AXcrKLSFkMurT5nXrpBkvkZ2JERdCh6gHnmuXaWHCV3sCTSOwXB1oQrwhaP7cO8kRXRxdxjgDbVDYF3Jk37a7DOD0oKw3SiF/SlsCq3wBuqCpRh3JfJoEcU3/JZPzqul2tiU5SA1gKsgVgY+846oD+7m2fcffxzthPYBHO+0+++7wYmrlTAag4uzzqT/EZV9Dd+1bg6qbicW6i1E0NCoJXnp4KJAEPnE3PtdgFNoAqIH90UgjsF6KDIlfpQNuQyFJ+2JUyJssWqPq3Ee5FR5GBXYR7buBnTADFT41WX1FMIzcRz4ehemQ/ptvgKurUa4BuSDd2kVnOPpjrDA2m1LDW69Rf2sSIf+I/OKb2vvNeCWpsT2U026l1kCe1hLuMRnQRqJcCNAB9n631BChVk08S7j1pjoeVL1/m2a0mSbpX09ZcGaDuIWqbS988Ij37egBFZF408QsUMjtNIZXY4+Yi1wLQT9Lsfm5LS0dcX5aMRLYRQ06PDTYLW8Eom2sLlfqMKibzTzOkzyFLOAjxz+0nwTRLhU9Qwdk+MACThLzVdxK/hKLp63gqmEQ0OD7bdRn+529xv+Dm6NKYQedk190pcalvdu/a3Uvz5t97jEPQWWjWU3CK5tyEwa2Y3LyAvluV6l4DMfEtjidFvA+ucQVwyXB0h36m9Bb13WhhroCvY2sMawRn/sjjTJNVUeq05ONlz8AtQuuiQFomxWIOzE92INa9jJ+iy4rCSNRppgzSFzFTnnAby79tJviqgnhHmfyKvLKZ9o5ywACbQQeA20YUlQfx4+RVyC7M2/y85PTaW1t2hxln1YEhZVoILsGdRHDg6pqe3Mx7MpjnNPMLkPb4I0IX778e6d/9onE1xH6q3I09K8Ns3+YW1gcXRqkibXCkaLjJHN1wu2rT7MbEFl2XTdjvhqopEhLOJ97CtdDS4bwYQghe/gLHZ1zlXAc9G7RTzBRNQ5fEdDX4Oho1ZbFZ+lLL2G9UHQ28Dt2cSW4aCQ3DOZtNNAzAoVxX8r6FXwB4Tf6i6TxF/wq578eMUUOD6VrciD9+NYIxDLJNnZMuHlXFkwJluD+yiyRBQYspmvM+rMkEw3+n9xB0TRGLvWWwcgYZgwn2XjzNMtfKA7S94iMsBMdK5Xy5Xs9RWk/yiJ2QFw671XAUeuwqjSrqkyDAWMhxyoYik2dvd9M9Klmcm8cbvY5HVP9BhQAP65L8DbPPLfMsjnge07gpUDNoThUi04fX9VHSP98d/7dB6qwtUYXiISugmdhus8XyvleJEakDfUKfHXa4/nKp8cKMe3zWTxR6EnqS9lHSz6KLzOUlC4oqAloTcRlHRt1y9Mzu04Kfph/RHB7ON/Tw6YxwMoJ/YhlQHWAHFNj256lsslzGKZ8Bn0y84wBAwomJMyw/T1WFDA1qkyhxBA2F8slhjMs8baQn4QzHDehtRHYgew4HrtgT7CVlyrCayznzOek+5gNQggVW4FisnIoLkXl2ovUQdhBHoj4gp+lCwszKIQqQcMy7S+HafgX0SMPZg8adYYm80BPdOctBmK0os61HRsY1+2JI+Fa1PNtQ6RA3YrUDrxVN1pHgu2BL9HglAAGpPZj64DdTlsmDqrpcpgHgmC30MjqJg0lYgFgPN/RE/Sv/Q62OJ6aRF8gWysHEyBgiju60b24O/Ul66mJ2keG8A/vZpstaoml9QdWP0ea1rUlDWsXJcABIOrqgMwNgq/Oic4uOgIHYNgy39mKqXfFMKPNRR/+q0iXTyzkSlLO8QpGoAMo3JCOn/+2rJtuFtdFJ4vI4JjZdI4CkeMcOro2qseku/ISusvYXgaZwKZmnBlUS/J5zwESJNXfbuWGCk478f+rTQPbyZqEeLoKh0Fc/LbC1AfoEmUn91TtrsF520CqdDOa+w8jOcspBIk8JZt1qEyGKSSmeQ5s6EoNoyBUmi0L58symy61W0lJhS6vqjoKY31mgvDgkxA2IhMf03k6CoQUIZ92zQN5UVfDr6EOQ/gQrfr3EMFy9TV+pRv3Yr7SECeTOirWCVClD5BsM03leX6ngcMBP/h6vSNtEcbdK8wzVzAqjGwj6QhU3sdBmS3VAbaOwTyIw38q2ihGsfiBxld2PFNgo7rKwnpDSpaDjS1GoCoCxKkeQO2aUmrElrDilRSHAfDhWR1Jd8zUF0Biw4VG7sfeWXBOszgkw7DzKwsAN3MYocStqsL4mJAznD08dFB9ANl66Dq/ayMR4SN0oKMyUZyWLoFBy9gJtOVqrGYXOwMqvobOU1n+EPyy7L37E7sjizTD/PFdk/YJtzQwR1edQdkcggDhN7T9LrHE7e0G3HLimb0ayl86XbgAitMc/hk4N8BW01OF1EeryWjaD4vsmRMINLE4rsTLleP2tv564AWb/j/qYmVoZIlM1ZvY9sDztozBjdYSaxHNaI9kggSS1/Demj4KBiaSSYw9C1pAgH892p3uDcEX06P53vdE5SZqJWNvLf5mNmKesOgNseWK0jo3Jy+CMkgUAAr3oYCPTtQHkXoYxPWjKTbNz4YmVL263/++IAib0mADCHbhou/6mN5N8Cha9cLxUdxx+2ssJfoeft9pQ2dibA8MituR/2PQdi5QLrn+2BfIcJSuwtjWgFbhOrN/Hs7cb8PqHD+CWT7XV/glf5KjXwN2br8yj2tArh1mqENT+RrQjF3nwgtAFK3VMMHpdJjCjMyhUqzE68/+8MLH0nht7ULdk8oE2RiHvQBfKlAyBKwI1tKCp2aVbwNsxjJdIDV22AsKHOdE3k9a8yMJrtaJHPhqiivP846CFQlEftQ6kB4IDJbWERozMCCC8ccd2VMNU0ZPMFxBoUMozgT/GmAaIDCIBTI9MNBJ/+TAh73/TszsHYEmsiV1mEPS+InrwAn7pSmuRMuVH1wh0razkTuUGu1mcfgY7pCZb+N5Bn7A7+7uWy4Hm7KyZJZcc7LcfRP1D1BAfKBUziPaV/yvws5s11AJLPrFkbiV1b9fF1rkx/rD7liVWCqB/PmHPPrBKhiTApZIi1Wg9wuWqmT62JsrHcdclSEEdhj9fPtNm0QQd+4/2hyp57lXqvdoRRr95qhXl8fn6B1PBw7OvN/OGbGP/+KqUrQt8oqruceE8lWF9Dq5HLxw4V5+BMg6oqCX6pzYzOHPjxDJ+gRMS2DSsK1vDQ8WuKsEqx1YpnU5zl7csQBTG2qBINMDeflFNaXXd+h9/iPEIS+Uzo6q/pbOwjsn2iA/6HJp+0IDLFpqBjh3k20XnAm8ny1Q93dBDY7cp+6oNhPBdDfCzMpKKRpNJNA4h5Eb97KGfWU/Qs51Ru/LMgiav0mhu791New3FiO6iP6etQ2ZU25AECGbQEI4HY6GarS7/fQ7HO8FTzmGThZksDWZrFzcy+duQesZdQ1sQ0vq2VcJSrhFESKX5QJ+bKBKvjH/L1ZDWUMwts9lT2A1wb6+7GHs5m7fKya2K1zv9FXLp3ovqxnUdc1Y6RJrxbPc/gqXKKcK2hqURqxgs9bgIVmxvkQVCbmx20msEDhyrIZlyln0YNBhx1o0GhvYLZhZKnGbj/m8/ViUQVd53533wxyZWTRDpCeKtsOdJCK4ewkEzbKC+6Nc49sgDrVpqsqz6IawR75roBGRrPIVu0c4VkyqnbKcH6Qqs+NusbthgPA9V682c3u0CriLAk4RDoaz6dhlfaEBTM7B5p8+DbJJTR9ViHn2CSLIdlnk7H+qSxV2pqvIsR2wjwRlsVrxvFd0qTaTTUna040AYIXOUSyDgcP5uFtFPejQjat7XqShgI63y4jfI/jBQQwQH3DGq2xScpALqpNomiKCs+c/T6hTBdxcNWNsMZ8IQw8Q23AM8m2dARyILTllx6RKGOxioOdntTl+GF1ZjPX2B0wAWg4+EtX3iKa2Q5rHAbYC44AAppoJE5ELG4UmIw/YtFGfE1y76ZOJkLSFo1pryb0f0uK67/itNrbIvMJ5Uijwr8/lXHe2un4UXe9U7TGwD2+cEeLNvjn4hGKG3Iib6avL4sm7ijUu5C+JMUJfvvN923pU7puEeBfeWtbOok2X7WSVimAzfhs7Ww+zRXytaISnNOP61aVBQu4ey9KW2yIMw8R7Ws4E8642Qs//MuPDied4Zlvk13roJOL6qcEJub7YDaqEjQMBFGAINny3UmLWye8jefIAWtIK9cBXHKSDPAUbQCKtWBQSp9A2izLoWt2Lrw8CS34ajEEXQcSZ9zh2F1eHHGEXE52TBWpWHs/X0tpgjKtsrO+aTrAF2cdEPq1kC1caW9X2fS8ywXPrUSceNWWtrGjYEECnAqJHPDtgLdJECRjVXVfkZq/0KF+to3u/7m8RD3bybcj8J+dvXJIYAczORnlq6b0Qj2djC4o4Bt8Yxv35FyZJrpy8WCfZ3NdYHH9Nm1trN2ongQGg+JjuaB4p+mmsH5/XC1ouwR2dFSCpTC93H3uGVXzQyf4tHOkHPD96oI+XjckpkuuSk4rhRVU6+oEO3c74uBjeMa46hTmPO0E=
*/