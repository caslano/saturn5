///////////////////////////////////////////////////////////////////////////////
//  Copyright 2017 John Maddock
//  Distributed under the Boost
//  Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MT_ATOMIC_DETAIL_HPP
#define BOOST_MT_ATOMIC_DETAIL_HPP

#include <boost/config.hpp>

#ifdef BOOST_HAS_THREADS

#ifndef BOOST_NO_CXX11_HDR_ATOMIC
#  include <atomic>
#  define BOOST_MATH_ATOMIC_NS std
namespace boost {
   namespace multiprecision {
      namespace detail {
#if ATOMIC_INT_LOCK_FREE == 2
         typedef std::atomic<int> atomic_counter_type;
         typedef std::atomic<unsigned> atomic_unsigned_type;
         typedef int atomic_integer_type;
         typedef unsigned atomic_unsigned_integer_type;
#elif ATOMIC_SHORT_LOCK_FREE == 2
         typedef std::atomic<short> atomic_counter_type;
         typedef std::atomic<unsigned short> atomic_unsigned_type;
         typedef short atomic_integer_type;
         typedef unsigned short atomic_unsigned_integer_type;
#elif ATOMIC_LONG_LOCK_FREE == 2
         typedef std::atomic<long> atomic_unsigned_integer_type;
         typedef std::atomic<unsigned long> atomic_unsigned_type;
         typedef unsigned long atomic_unsigned_integer_type;
         typedef long atomic_integer_type;
#elif ATOMIC_LLONG_LOCK_FREE == 2
         typedef std::atomic<long long> atomic_unsigned_integer_type;
         typedef std::atomic<unsigned long long> atomic_unsigned_type;
         typedef long long atomic_integer_type;
         typedef unsigned long long atomic_unsigned_integer_type;
#else

#define BOOST_MT_NO_ATOMIC_INT

#endif
      }
   }}
#else // BOOST_NO_CXX11_HDR_ATOMIC
//
// We need Boost.Atomic, but on any platform that supports auto-linking we do
// not need to link against a separate library:
//
#define BOOST_ATOMIC_NO_LIB
#include <boost/atomic.hpp>
#  define BOOST_MATH_ATOMIC_NS boost

namespace boost{ namespace multiprecision{ namespace detail{

//
// We need a type to use as an atomic counter:
//
#if BOOST_ATOMIC_INT_LOCK_FREE == 2
typedef boost::atomic<int> atomic_counter_type;
typedef boost::atomic<unsigned> atomic_unsigned_type;
typedef int atomic_integer_type;
typedef unsigned atomic_unsigned_integer_type;
#elif BOOST_ATOMIC_SHORT_LOCK_FREE == 2
typedef boost::atomic<short> atomic_counter_type;
typedef boost::atomic<unsigned short> atomic_unsigned_type;
typedef short atomic_integer_type;
typedef unsigned short atomic_unsigned_integer_type;
#elif BOOST_ATOMIC_LONG_LOCK_FREE == 2
typedef boost::atomic<long> atomic_counter_type;
typedef boost::atomic<unsigned long> atomic_unsigned_type;
typedef long atomic_integer_type;
typedef unsigned long atomic_unsigned_integer_type;
#elif BOOST_ATOMIC_LLONG_LOCK_FREE == 2
typedef boost::atomic<long long> atomic_counter_type;
typedef boost::atomic<unsigned long long> atomic_unsigned_type;
typedef long long atomic_integer_type;
typedef unsigned long long atomic_unsigned_integer_type;
#else
#  define BOOST_MT_NO_ATOMIC_INT
#endif

}}} // namespaces

#endif  // BOOST_NO_CXX11_HDR_ATOMIC

#else // BOOST_HAS_THREADS

#define BOOST_MT_NO_ATOMIC_INT

#endif // BOOST_HAS_THREADS

namespace boost { namespace multiprecision { namespace detail {

#ifdef BOOST_MT_NO_ATOMIC_INT
typedef unsigned precision_type;
#else
typedef atomic_unsigned_type precision_type;
#endif

} } }

#endif // BOOST_MATH_ATOMIC_DETAIL_HPP

/* atomic.hpp
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
*/