/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 */
/*!
 * \file   atomic/detail/fence_ops_gcc_atomic.hpp
 *
 * This header contains implementation of the \c fence_operations struct.
 */

#ifndef BOOST_ATOMIC_DETAIL_FENCE_OPS_GCC_ATOMIC_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_FENCE_OPS_GCC_ATOMIC_HPP_INCLUDED_

#include <boost/memory_order.hpp>
#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/fence_arch_operations.hpp>
#include <boost/atomic/detail/gcc_atomic_memory_order_utils.hpp>
#include <boost/atomic/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

#if defined(__INTEL_COMPILER)
// This is used to suppress warning #32013 described in gcc_atomic_memory_order_utils.hpp
// for Intel Compiler.
// In debug builds the compiler does not inline any functions, so basically
// every atomic function call results in this warning. I don't know any other
// way to selectively disable just this one warning.
#pragma system_header
#endif

namespace boost {
namespace atomics {
namespace detail {

//! Fence operations based on gcc __atomic* intrinsics
struct fence_operations_gcc_atomic
{
    static BOOST_FORCEINLINE void thread_fence(memory_order order) BOOST_NOEXCEPT
    {
#if defined(__x86_64__) || defined(__i386__)
        if (order != memory_order_seq_cst)
        {
            __atomic_thread_fence(atomics::detail::convert_memory_order_to_gcc(order));
        }
        else
        {
            // gcc, clang, icc and probably other compilers generate mfence for a seq_cst fence,
            // while a dummy lock-prefixed instruction would be enough and faster. See the comment in fence_ops_gcc_x86.hpp.
            fence_arch_operations::thread_fence(order);
        }
#else
        __atomic_thread_fence(atomics::detail::convert_memory_order_to_gcc(order));
#endif
    }

    static BOOST_FORCEINLINE void signal_fence(memory_order order) BOOST_NOEXCEPT
    {
        __atomic_signal_fence(atomics::detail::convert_memory_order_to_gcc(order));
    }
};

typedef fence_operations_gcc_atomic fence_operations;

} // namespace detail
} // namespace atomics
} // namespace boost

#include <boost/atomic/detail/footer.hpp>

#endif // BOOST_ATOMIC_DETAIL_FENCE_OPS_GCC_ATOMIC_HPP_INCLUDED_

/* fence_ops_gcc_atomic.hpp
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
*/