/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 */
/*!
 * \file   atomic/detail/fence_arch_ops_gcc_aarch32.hpp
 *
 * This header contains implementation of the \c fence_arch_operations struct.
 */

#ifndef BOOST_ATOMIC_DETAIL_FENCE_ARCH_OPS_GCC_AARCH32_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_FENCE_ARCH_OPS_GCC_AARCH32_HPP_INCLUDED_

#include <boost/cstdint.hpp>
#include <boost/memory_order.hpp>
#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/capabilities.hpp>
#include <boost/atomic/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {
namespace atomics {
namespace detail {

//! Fence operations for AArch32
struct fence_arch_operations_gcc_aarch32
{
    static BOOST_FORCEINLINE void thread_fence(memory_order order) BOOST_NOEXCEPT
    {
        if (order != memory_order_relaxed)
        {
            if (order == memory_order_consume || order == memory_order_acquire)
                __asm__ __volatile__ ("dmb ishld\n\t" ::: "memory");
            else
                __asm__ __volatile__ ("dmb ish\n\t" ::: "memory");
        }
    }

    static BOOST_FORCEINLINE void signal_fence(memory_order order) BOOST_NOEXCEPT
    {
        if (order != memory_order_relaxed)
            __asm__ __volatile__ ("" ::: "memory");
    }
};

typedef fence_arch_operations_gcc_aarch32 fence_arch_operations;

} // namespace detail
} // namespace atomics
} // namespace boost

#include <boost/atomic/detail/footer.hpp>

#endif // BOOST_ATOMIC_DETAIL_FENCE_ARCH_OPS_GCC_AARCH32_HPP_INCLUDED_

/* fence_arch_ops_gcc_aarch32.hpp
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
*/