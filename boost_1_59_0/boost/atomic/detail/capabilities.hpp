/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2014 Andrey Semashev
 */
/*!
 * \file   atomic/detail/capabilities.hpp
 *
 * This header defines core feature capabilities macros.
 */

#ifndef BOOST_ATOMIC_DETAIL_CAPABILITIES_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_CAPABILITIES_HPP_INCLUDED_

#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/platform.hpp>
#include <boost/atomic/detail/int_sizes.hpp>
#if !defined(BOOST_ATOMIC_NO_FLOATING_POINT)
#include <boost/atomic/detail/float_sizes.hpp>
#endif

#if defined(BOOST_ATOMIC_DETAIL_CORE_BACKEND_HEADER)
#include BOOST_ATOMIC_DETAIL_CORE_BACKEND_HEADER(boost/atomic/detail/caps_)
#elif defined(BOOST_ATOMIC_DETAIL_CORE_ARCH_BACKEND_HEADER)
#include BOOST_ATOMIC_DETAIL_CORE_ARCH_BACKEND_HEADER(boost/atomic/detail/caps_arch_)
#endif

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

#ifndef BOOST_ATOMIC_INT8_LOCK_FREE
#define BOOST_ATOMIC_INT8_LOCK_FREE 0
#endif

#ifndef BOOST_ATOMIC_INT16_LOCK_FREE
#define BOOST_ATOMIC_INT16_LOCK_FREE 0
#endif

#ifndef BOOST_ATOMIC_INT32_LOCK_FREE
#define BOOST_ATOMIC_INT32_LOCK_FREE 0
#endif

#ifndef BOOST_ATOMIC_INT64_LOCK_FREE
#define BOOST_ATOMIC_INT64_LOCK_FREE 0
#endif

#ifndef BOOST_ATOMIC_INT128_LOCK_FREE
#define BOOST_ATOMIC_INT128_LOCK_FREE 0
#endif


#ifndef BOOST_ATOMIC_CHAR_LOCK_FREE
#define BOOST_ATOMIC_CHAR_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#endif

#ifndef BOOST_ATOMIC_CHAR8_T_LOCK_FREE
#define BOOST_ATOMIC_CHAR8_T_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#endif

#ifndef BOOST_ATOMIC_CHAR16_T_LOCK_FREE
#define BOOST_ATOMIC_CHAR16_T_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#endif

#ifndef BOOST_ATOMIC_CHAR32_T_LOCK_FREE
#define BOOST_ATOMIC_CHAR32_T_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#endif

#ifndef BOOST_ATOMIC_WCHAR_T_LOCK_FREE
#if BOOST_ATOMIC_DETAIL_SIZEOF_WCHAR_T == 1
#define BOOST_ATOMIC_WCHAR_T_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_WCHAR_T == 2
#define BOOST_ATOMIC_WCHAR_T_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_WCHAR_T == 4
#define BOOST_ATOMIC_WCHAR_T_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_WCHAR_T == 8
#define BOOST_ATOMIC_WCHAR_T_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#else
#define BOOST_ATOMIC_WCHAR_T_LOCK_FREE 0
#endif
#endif

#ifndef BOOST_ATOMIC_SHORT_LOCK_FREE
#if BOOST_ATOMIC_DETAIL_SIZEOF_SHORT == 1
#define BOOST_ATOMIC_SHORT_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_SHORT == 2
#define BOOST_ATOMIC_SHORT_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_SHORT == 4
#define BOOST_ATOMIC_SHORT_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_SHORT == 8
#define BOOST_ATOMIC_SHORT_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#else
#define BOOST_ATOMIC_SHORT_LOCK_FREE 0
#endif
#endif

#ifndef BOOST_ATOMIC_INT_LOCK_FREE
#if BOOST_ATOMIC_DETAIL_SIZEOF_INT == 1
#define BOOST_ATOMIC_INT_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_INT == 2
#define BOOST_ATOMIC_INT_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_INT == 4
#define BOOST_ATOMIC_INT_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_INT == 8
#define BOOST_ATOMIC_INT_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#else
#define BOOST_ATOMIC_INT_LOCK_FREE 0
#endif
#endif

#ifndef BOOST_ATOMIC_LONG_LOCK_FREE
#if BOOST_ATOMIC_DETAIL_SIZEOF_LONG == 1
#define BOOST_ATOMIC_LONG_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LONG == 2
#define BOOST_ATOMIC_LONG_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LONG == 4
#define BOOST_ATOMIC_LONG_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LONG == 8
#define BOOST_ATOMIC_LONG_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#else
#define BOOST_ATOMIC_LONG_LOCK_FREE 0
#endif
#endif

#ifndef BOOST_ATOMIC_LLONG_LOCK_FREE
#if BOOST_ATOMIC_DETAIL_SIZEOF_LLONG == 1
#define BOOST_ATOMIC_LLONG_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LLONG == 2
#define BOOST_ATOMIC_LLONG_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LLONG == 4
#define BOOST_ATOMIC_LLONG_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LLONG == 8
#define BOOST_ATOMIC_LLONG_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#else
#define BOOST_ATOMIC_LLONG_LOCK_FREE 0
#endif
#endif

#ifndef BOOST_ATOMIC_POINTER_LOCK_FREE
#if (BOOST_ATOMIC_DETAIL_SIZEOF_POINTER + 0) == 8
#define BOOST_ATOMIC_POINTER_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#elif (BOOST_ATOMIC_DETAIL_SIZEOF_POINTER + 0) == 4
#define BOOST_ATOMIC_POINTER_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#else
#define BOOST_ATOMIC_POINTER_LOCK_FREE 0
#endif
#endif

#define BOOST_ATOMIC_ADDRESS_LOCK_FREE BOOST_ATOMIC_POINTER_LOCK_FREE

#ifndef BOOST_ATOMIC_BOOL_LOCK_FREE
// We store bools in 1-byte storage in all backends
#define BOOST_ATOMIC_BOOL_LOCK_FREE BOOST_ATOMIC_INT8_LOCK_FREE
#endif

#ifndef BOOST_ATOMIC_FLAG_LOCK_FREE
// atomic_flag uses 4-byte storage
#define BOOST_ATOMIC_FLAG_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#endif

#if !defined(BOOST_ATOMIC_NO_FLOATING_POINT)

#if !defined(BOOST_ATOMIC_FLOAT_LOCK_FREE) && defined(BOOST_ATOMIC_DETAIL_SIZEOF_FLOAT)
#if BOOST_ATOMIC_DETAIL_SIZEOF_FLOAT == 2
#define BOOST_ATOMIC_FLOAT_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_FLOAT == 4
#define BOOST_ATOMIC_FLOAT_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_FLOAT == 8
#define BOOST_ATOMIC_FLOAT_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_FLOAT > 8 && BOOST_ATOMIC_DETAIL_SIZEOF_FLOAT <= 16
#define BOOST_ATOMIC_FLOAT_LOCK_FREE BOOST_ATOMIC_INT128_LOCK_FREE
#else
#define BOOST_ATOMIC_FLOAT_LOCK_FREE 0
#endif
#endif

#if !defined(BOOST_ATOMIC_DOUBLE_LOCK_FREE) && defined(BOOST_ATOMIC_DETAIL_SIZEOF_DOUBLE)
#if BOOST_ATOMIC_DETAIL_SIZEOF_DOUBLE == 2
#define BOOST_ATOMIC_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_DOUBLE == 4
#define BOOST_ATOMIC_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_DOUBLE == 8
#define BOOST_ATOMIC_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_DOUBLE > 8 && BOOST_ATOMIC_DETAIL_SIZEOF_DOUBLE <= 16
#define BOOST_ATOMIC_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT128_LOCK_FREE
#else
#define BOOST_ATOMIC_DOUBLE_LOCK_FREE 0
#endif
#endif

#if !defined(BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE) && defined(BOOST_ATOMIC_DETAIL_SIZEOF_LONG_DOUBLE)
#if BOOST_ATOMIC_DETAIL_SIZEOF_LONG_DOUBLE == 2
#define BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT16_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LONG_DOUBLE == 4
#define BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT32_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LONG_DOUBLE == 8
#define BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT64_LOCK_FREE
#elif BOOST_ATOMIC_DETAIL_SIZEOF_LONG_DOUBLE > 8 && BOOST_ATOMIC_DETAIL_SIZEOF_LONG_DOUBLE <= 16
#define BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE BOOST_ATOMIC_INT128_LOCK_FREE
#else
#define BOOST_ATOMIC_LONG_DOUBLE_LOCK_FREE 0
#endif
#endif

#endif // !defined(BOOST_ATOMIC_NO_FLOATING_POINT)

#ifndef BOOST_ATOMIC_THREAD_FENCE
#define BOOST_ATOMIC_THREAD_FENCE 0
#endif

#ifndef BOOST_ATOMIC_SIGNAL_FENCE
#define BOOST_ATOMIC_SIGNAL_FENCE 0
#endif

#endif // BOOST_ATOMIC_DETAIL_CAPABILITIES_HPP_INCLUDED_

/* capabilities.hpp
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
*/