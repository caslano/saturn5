/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 */
/*!
 * \file   atomic/detail/core_arch_operations.hpp
 *
 * This header defines core atomic operations, including the emulated version.
 */

#ifndef BOOST_ATOMIC_DETAIL_CORE_ARCH_OPERATIONS_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_CORE_ARCH_OPERATIONS_HPP_INCLUDED_

#include <boost/atomic/detail/core_arch_operations_fwd.hpp>
#include <boost/atomic/detail/core_operations_emulated.hpp>
#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/platform.hpp>
#include <boost/atomic/detail/storage_traits.hpp>

#if defined(BOOST_ATOMIC_DETAIL_CORE_ARCH_BACKEND_HEADER)
#include BOOST_ATOMIC_DETAIL_CORE_ARCH_BACKEND_HEADER(boost/atomic/detail/core_arch_ops_)
#endif

#include <boost/atomic/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {
namespace atomics {
namespace detail {

//! Default specialization that falls back to lock-based implementation
template< std::size_t Size, bool Signed, bool Interprocess >
struct core_arch_operations :
    public core_operations_emulated< Size, storage_traits< Size >::alignment, Signed, Interprocess >
{
};

} // namespace detail
} // namespace atomics
} // namespace boost

#include <boost/atomic/detail/footer.hpp>

#endif // BOOST_ATOMIC_DETAIL_CORE_ARCH_OPERATIONS_HPP_INCLUDED_

/* core_arch_operations.hpp
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
*/