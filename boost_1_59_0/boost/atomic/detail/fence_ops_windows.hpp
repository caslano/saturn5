/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 */
/*!
 * \file   atomic/detail/fence_ops_windows.hpp
 *
 * This header contains implementation of the \c fence_operations struct.
 */

#ifndef BOOST_ATOMIC_DETAIL_FENCE_OPS_WINDOWS_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_FENCE_OPS_WINDOWS_HPP_INCLUDED_

#include <boost/cstdint.hpp>
#include <boost/memory_order.hpp>
#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/interlocked.hpp>
#include <boost/atomic/detail/ops_msvc_common.hpp>
#include <boost/atomic/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {
namespace atomics {
namespace detail {

//! Fence operations based on Windows-specific system calls or intrinsics
struct fence_operations_windows
{
    static BOOST_FORCEINLINE void thread_fence(memory_order order) BOOST_NOEXCEPT
    {
        if (order != memory_order_relaxed)
        {
            BOOST_ATOMIC_DETAIL_COMPILER_BARRIER();
            if (order == memory_order_seq_cst)
                hardware_full_fence();
            BOOST_ATOMIC_DETAIL_COMPILER_BARRIER();
        }
    }

    static BOOST_FORCEINLINE void signal_fence(memory_order order) BOOST_NOEXCEPT
    {
        if (order != memory_order_relaxed)
            BOOST_ATOMIC_DETAIL_COMPILER_BARRIER();
    }

    static BOOST_FORCEINLINE void hardware_full_fence() BOOST_NOEXCEPT
    {
        boost::uint32_t tmp;
        BOOST_ATOMIC_INTERLOCKED_INCREMENT(&tmp);
    }
};

typedef fence_operations_windows fence_operations;

} // namespace detail
} // namespace atomics
} // namespace boost

#include <boost/atomic/detail/footer.hpp>

#endif // BOOST_ATOMIC_DETAIL_FENCE_OPS_WINDOWS_HPP_INCLUDED_

/* fence_ops_windows.hpp
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
*/