/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2018 Andrey Semashev
 */
/*!
 * \file   atomic/detail/fp_ops_emulated.hpp
 *
 * This header contains emulated (lock-based) implementation of the floating point atomic operations.
 */

#ifndef BOOST_ATOMIC_DETAIL_FP_OPS_EMULATED_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_FP_OPS_EMULATED_HPP_INCLUDED_

#include <cstddef>
#include <boost/static_assert.hpp>
#include <boost/memory_order.hpp>
#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/bitwise_fp_cast.hpp>
#include <boost/atomic/detail/fp_operations_fwd.hpp>
#include <boost/atomic/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {
namespace atomics {
namespace detail {

//! Emulated implementation of floating point operations
template< typename Base, typename Value, std::size_t Size >
struct fp_operations_emulated :
    public Base
{
    typedef Base base_type;
    typedef typename base_type::storage_type storage_type;
    typedef Value value_type;
    typedef typename base_type::scoped_lock scoped_lock;

    static value_type fetch_add(storage_type volatile& storage, value_type v, memory_order) BOOST_NOEXCEPT
    {
        BOOST_STATIC_ASSERT_MSG(!base_type::is_interprocess, "Boost.Atomic: operation invoked on a non-lock-free inter-process atomic object");
        storage_type& s = const_cast< storage_type& >(storage);
        scoped_lock lock(&storage);
        value_type old_val = atomics::detail::bitwise_fp_cast< value_type >(s);
        value_type new_val = old_val + v;
        s = atomics::detail::bitwise_fp_cast< storage_type >(new_val);
        return old_val;
    }

    static value_type fetch_sub(storage_type volatile& storage, value_type v, memory_order) BOOST_NOEXCEPT
    {
        BOOST_STATIC_ASSERT_MSG(!base_type::is_interprocess, "Boost.Atomic: operation invoked on a non-lock-free inter-process atomic object");
        storage_type& s = const_cast< storage_type& >(storage);
        scoped_lock lock(&storage);
        value_type old_val = atomics::detail::bitwise_fp_cast< value_type >(s);
        value_type new_val = old_val - v;
        s = atomics::detail::bitwise_fp_cast< storage_type >(new_val);
        return old_val;
    }
};

template< typename Base, typename Value, std::size_t Size >
struct fp_operations< Base, Value, Size, false > :
    public fp_operations_emulated< Base, Value, Size >
{
};

} // namespace detail
} // namespace atomics
} // namespace boost

#include <boost/atomic/detail/footer.hpp>

#endif // BOOST_ATOMIC_DETAIL_FP_OPS_EMULATED_HPP_INCLUDED_

/* fp_ops_emulated.hpp
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
*/