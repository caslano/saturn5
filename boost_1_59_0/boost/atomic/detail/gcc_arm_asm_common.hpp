/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2009 Helge Bahmann
 * Copyright (c) 2013 Tim Blechmann
 * Copyright (c) 2014, 2020 Andrey Semashev
 */
/*!
 * \file   atomic/detail/gcc_arm_asm_common.hpp
 *
 * This header contains basic utilities for gcc asm-based ARM backend.
 */

#ifndef BOOST_ATOMIC_DETAIL_GCC_ARM_ASM_COMMON_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_GCC_ARM_ASM_COMMON_HPP_INCLUDED_

#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/capabilities.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

// A memory barrier is effected using a "co-processor 15" instruction,
// though a separate assembler mnemonic is available for it in v7.
//
// "Thumb 1" is a subset of the ARM instruction set that uses a 16-bit encoding.  It
// doesn't include all instructions and in particular it doesn't include the co-processor
// instruction used for the memory barrier or the load-locked/store-conditional
// instructions.  So, if we're compiling in "Thumb 1" mode, we need to wrap all of our
// asm blocks with code to temporarily change to ARM mode.
//
// You can only change between ARM and Thumb modes when branching using the bx instruction.
// bx takes an address specified in a register.  The least significant bit of the address
// indicates the mode, so 1 is added to indicate that the destination code is Thumb.
// A temporary register is needed for the address and is passed as an argument to these
// macros.  It must be one of the "low" registers accessible to Thumb code, specified
// using the "l" attribute in the asm statement.
//
// Architecture v7 introduces "Thumb 2", which does include (almost?) all of the ARM
// instruction set.  (Actually, there was an extension of v6 called v6T2 which supported
// "Thumb 2" mode, but its architecture manual is no longer available, referring to v7.)
// So in v7 we don't need to change to ARM mode; we can write "universal
// assembler" which will assemble to Thumb 2 or ARM code as appropriate.  The only thing
// we need to do to make this "universal" assembler mode work is to insert "IT" instructions
// to annotate the conditional instructions.  These are ignored in other modes (e.g. v6),
// so they can always be present.

// A note about memory_order_consume. Technically, this architecture allows to avoid
// unnecessary memory barrier after consume load since it supports data dependency ordering.
// However, some compiler optimizations may break a seemingly valid code relying on data
// dependency tracking by injecting bogus branches to aid out of order execution.
// This may happen not only in Boost.Atomic code but also in user's code, which we have no
// control of. See this thread: http://lists.boost.org/Archives/boost/2014/06/213890.php.
// For this reason we promote memory_order_consume to memory_order_acquire.

#if defined(__thumb__) && !defined(__thumb2__)
#define BOOST_ATOMIC_DETAIL_ARM_ASM_START(TMPREG) "adr " #TMPREG ", 8f\n\t" "bx " #TMPREG "\n\t" ".arm\n\t" ".align 4\n\t" "8:\n\t"
#define BOOST_ATOMIC_DETAIL_ARM_ASM_END(TMPREG)   "adr " #TMPREG ", 9f + 1\n\t" "bx " #TMPREG "\n\t" ".thumb\n\t" ".align 2\n\t" "9:\n\t"
#define BOOST_ATOMIC_DETAIL_ARM_ASM_TMPREG_CONSTRAINT(var) "=&l" (var)
#else
// Indicate that start/end macros are empty and the tmpreg is not needed
#define BOOST_ATOMIC_DETAIL_ARM_ASM_TMPREG_UNUSED
#define BOOST_ATOMIC_DETAIL_ARM_ASM_START(TMPREG)
#define BOOST_ATOMIC_DETAIL_ARM_ASM_END(TMPREG)
#define BOOST_ATOMIC_DETAIL_ARM_ASM_TMPREG_CONSTRAINT(var) "=&l" (var)
#endif

#if defined(BOOST_ATOMIC_DETAIL_ARM_LITTLE_ENDIAN)
#define BOOST_ATOMIC_DETAIL_ARM_ASM_ARG_LO(arg) "%" BOOST_STRINGIZE(arg)
#define BOOST_ATOMIC_DETAIL_ARM_ASM_ARG_HI(arg) "%H" BOOST_STRINGIZE(arg)
#else
#define BOOST_ATOMIC_DETAIL_ARM_ASM_ARG_LO(arg) "%H" BOOST_STRINGIZE(arg)
#define BOOST_ATOMIC_DETAIL_ARM_ASM_ARG_HI(arg) "%" BOOST_STRINGIZE(arg)
#endif

#endif // BOOST_ATOMIC_DETAIL_GCC_ARM_ASM_COMMON_HPP_INCLUDED_

/* gcc_arm_asm_common.hpp
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
*/