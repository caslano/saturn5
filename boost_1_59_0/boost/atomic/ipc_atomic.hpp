/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 */
/*!
 * \file   atomic/ipc_atomic.hpp
 *
 * This header contains definition of \c ipc_atomic template.
 */

#ifndef BOOST_ATOMIC_IPC_ATOMIC_HPP_INCLUDED_
#define BOOST_ATOMIC_IPC_ATOMIC_HPP_INCLUDED_

#include <cstddef>
#include <boost/static_assert.hpp>
#include <boost/memory_order.hpp>
#include <boost/atomic/capabilities.hpp>
#include <boost/atomic/detail/config.hpp>
#include <boost/atomic/detail/classify.hpp>
#include <boost/atomic/detail/atomic_impl.hpp>
#include <boost/atomic/detail/type_traits/is_trivially_copyable.hpp>
#include <boost/atomic/detail/type_traits/is_nothrow_default_constructible.hpp>
#include <boost/atomic/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {
namespace atomics {

//! Atomic object for inter-process communication
template< typename T >
class ipc_atomic :
    public atomics::detail::base_atomic< T, typename atomics::detail::classify< T >::type, true >
{
private:
    typedef atomics::detail::base_atomic< T, typename atomics::detail::classify< T >::type, true > base_type;
    typedef typename base_type::value_arg_type value_arg_type;

public:
    typedef typename base_type::value_type value_type;

    BOOST_STATIC_ASSERT_MSG(sizeof(value_type) > 0u, "boost::ipc_atomic<T> requires T to be a complete type");
#if !defined(BOOST_ATOMIC_DETAIL_NO_CXX11_IS_TRIVIALLY_COPYABLE)
    BOOST_STATIC_ASSERT_MSG(atomics::detail::is_trivially_copyable< value_type >::value, "boost::ipc_atomic<T> requires T to be a trivially copyable type");
#endif

public:
    BOOST_FORCEINLINE BOOST_ATOMIC_DETAIL_CONSTEXPR_UNION_INIT ipc_atomic() BOOST_NOEXCEPT_IF(atomics::detail::is_nothrow_default_constructible< value_type >::value) : base_type()
    {
    }

    BOOST_FORCEINLINE BOOST_ATOMIC_DETAIL_CONSTEXPR_UNION_INIT ipc_atomic(value_arg_type v) BOOST_NOEXCEPT : base_type(v)
    {
    }

    BOOST_FORCEINLINE value_type operator= (value_arg_type v) BOOST_NOEXCEPT
    {
        this->store(v);
        return v;
    }

    BOOST_FORCEINLINE value_type operator= (value_arg_type v) volatile BOOST_NOEXCEPT
    {
        this->store(v);
        return v;
    }

    BOOST_FORCEINLINE operator value_type() const volatile BOOST_NOEXCEPT
    {
        return this->load();
    }

    BOOST_DELETED_FUNCTION(ipc_atomic(ipc_atomic const&))
    BOOST_DELETED_FUNCTION(ipc_atomic& operator= (ipc_atomic const&))
    BOOST_DELETED_FUNCTION(ipc_atomic& operator= (ipc_atomic const&) volatile)
};

} // namespace atomics

using atomics::ipc_atomic;

} // namespace boost

#include <boost/atomic/detail/footer.hpp>

#endif // BOOST_ATOMIC_IPC_ATOMIC_HPP_INCLUDED_

/* ipc_atomic.hpp
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
*/