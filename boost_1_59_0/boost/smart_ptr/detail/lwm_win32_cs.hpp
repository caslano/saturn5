#ifndef BOOST_SMART_PTR_DETAIL_LWM_WIN32_CS_HPP_INCLUDED
#define BOOST_SMART_PTR_DETAIL_LWM_WIN32_CS_HPP_INCLUDED

// MS compatible compilers support #pragma once

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
# pragma once
#endif

//
//  boost/detail/lwm_win32_cs.hpp
//
//  Copyright (c) 2002, 2003 Peter Dimov
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//

#ifdef BOOST_USE_WINDOWS_H

#include <windows.h>

#else

struct _RTL_CRITICAL_SECTION;

#endif

namespace boost
{

namespace detail
{

#ifndef BOOST_USE_WINDOWS_H

struct critical_section
{
    struct critical_section_debug * DebugInfo;
    long LockCount;
    long RecursionCount;
    void * OwningThread;
    void * LockSemaphore;
#if defined(_WIN64)
    unsigned __int64 SpinCount;
#else
    unsigned long SpinCount;
#endif
};

extern "C" __declspec(dllimport) void __stdcall InitializeCriticalSection(::_RTL_CRITICAL_SECTION *);
extern "C" __declspec(dllimport) void __stdcall EnterCriticalSection(::_RTL_CRITICAL_SECTION *);
extern "C" __declspec(dllimport) void __stdcall LeaveCriticalSection(::_RTL_CRITICAL_SECTION *);
extern "C" __declspec(dllimport) void __stdcall DeleteCriticalSection(::_RTL_CRITICAL_SECTION *);

typedef ::_RTL_CRITICAL_SECTION rtl_critical_section;

#else // #ifndef BOOST_USE_WINDOWS_H

typedef ::CRITICAL_SECTION critical_section;

using ::InitializeCriticalSection;
using ::EnterCriticalSection;
using ::LeaveCriticalSection;
using ::DeleteCriticalSection;

typedef ::CRITICAL_SECTION rtl_critical_section;

#endif // #ifndef BOOST_USE_WINDOWS_H

class lightweight_mutex
{
private:

    critical_section cs_;

    lightweight_mutex(lightweight_mutex const &);
    lightweight_mutex & operator=(lightweight_mutex const &);

public:

    lightweight_mutex()
    {
        boost::detail::InitializeCriticalSection(reinterpret_cast< rtl_critical_section* >(&cs_));
    }

    ~lightweight_mutex()
    {
        boost::detail::DeleteCriticalSection(reinterpret_cast< rtl_critical_section* >(&cs_));
    }

    class scoped_lock;
    friend class scoped_lock;

    class scoped_lock
    {
    private:

        lightweight_mutex & m_;

        scoped_lock(scoped_lock const &);
        scoped_lock & operator=(scoped_lock const &);

    public:

        explicit scoped_lock(lightweight_mutex & m): m_(m)
        {
            boost::detail::EnterCriticalSection(reinterpret_cast< rtl_critical_section* >(&m_.cs_));
        }

        ~scoped_lock()
        {
            boost::detail::LeaveCriticalSection(reinterpret_cast< rtl_critical_section* >(&m_.cs_));
        }
    };
};

} // namespace detail

} // namespace boost

#endif // #ifndef BOOST_SMART_PTR_DETAIL_LWM_WIN32_CS_HPP_INCLUDED

/* lwm_win32_cs.hpp
8D6grrJxudC0fLKaQ/L0NWu/a/0lpS6M5tdNu0+SW+Qor91ijRXGTDFPJrMWjgfoHxKB2+SXvLXWNB5DI3TLoAaNo5LeU0GtVNJo2+jvG55L7ol2KzGOV//1iFIevoQNYoTf8gz71v6v9jPlPFKrq0OWb1c2id3zDSa47IBe6eEdfhk3td24fO08yhw7GjBw2q4E3KMIiDNzUZK0x59MfmQ5obGu4j5X8QFrrmbS/GUW2+U7xB47pElMPBBea1PV5a5jtrp5egMKrQ5Aq+479HMFWmyUEG3LXuruTkodKhxNaxpf6it3oqy/CSj90k2AwXLkGq0H6CrI3LGg9j/rfnYNke2UNm8umB7/sGZGusklMdR6JbBmTqoP9UNoIu0A9Nbqd4c23efEebaoHMW/zeczRK0odt2tNpfai2zREMdecNsSamZYM5HC+R2JQovbbtH81Gom+AU7IlHtrKBQrGub5ymfo+wP9cw7U4DIglZnJQ+j1SE0PZIEKbi5zhNrskYrI/ExwSc8bqaS8ttFu1frGlnsD+/nmz6KWzOjvkcnZgnFR9d+IH1h4XcUSitFL3YsQSQQDd6pOJ1LX7n0xmKmynfx28iPtLueQd1rJa/y8k0x1ak8vZbIIYrwZEeKmCt+0EA4M+dXgfaHvmzbm9lVt2Voweci27cC3HPxQwV+gOzhTYWAkISpuMdf9TntpJnoadxVevsBse5ZzjmM0QXN+VTdAwX9NFV/ry/ztg1Ns6ljQl5a5KiQWFOkjS7Xlpmf0riowzwYW9IGOWrZM5o9jwqckifBS+wNJmEHg1OuYaPa4v+pU/yAqDJ3oKeIShiv3eH7c2D/IqlPwbPybtbgTHHanzHPBCRj0cK/0OimPP7z2uGlVQ738Hj+G38CyWXsSl/4yUqM1vn/Cjxclz55WrT2YYOkEqiBtZtSh/LP8kNG7AdMiItdeUDp1kXwl2ziqFjZdqB+gNNDzOp/e7qacEScxaM93pK6D4MUOPED0N6T9yfoNoTQmHpCxR9hiWR9zd2One1zNPScpFxI0zp8fiOz7/F9ZL3LuGzzUhHBx+J9O3oKB7CwJLpVUDj2Fe9+WkMQyUUwi4Gq427H1ArEz1NfK9jq+ERgIyozhGy3aEN/i/fhDKzIstlIcgyEzPyT/MCdMG0r+M50a78s2Y6lc0lYF7iy9sGGeM4itfdec7ydK1DMY5htetzEcS01Wu/w4IUJmtGG8Kbk82JikGrLxmiqN9Rhu+JvbqpFR3laVSddK0FO+In6nnC3zal9DzFT+PeSEuujxgc7fxSTdrG20sFJyy+Xd3zplQ9lMw4Vme9DRLB1Mon0+JvFfeIOMdJ1zmEisr5/Qv2r3naS6RrJRLRxLu5pvI/L+BdCXnt+kpBaVYPBBbimvIBLDlCS3LQEg0TWcprNFKZEUKsimbMjKGPHvsT/vGZY2zrMmnIQ7V3FfaBVfe2tpPQPPTeOnh80HiotbwgELxY8bTvVYG0SRQ0XUyoBatOSIXzLeLgTfw/5hTgeFgxLAAgUkDeKopt6UV9GY6ILpryexblawMfPipPArLrWX7C5aIhkpDVJZwHT3Ebz0YT2bjPtDASzfn4fX/0+rjnwPdVFPIwZkyP5LU9sGr4hIO0S19J65sUfW6etc5Hd9SNjG/utGBA0TDsBu3FrFWhAFyC9uTaBt6yY1I+hVhJIdPzNQX0vs3tcz2xDnVwBlVbvHzupSA18/QtWQwna8xjc8xtADJUceL4nNPlmQ71Pw/u0jrK0Yw2evtxzxOcNIPDisHHXjeoZ+7eDWaralSm2kkNebJPVTVUS/dUlflxrA+SwIiBUTIsDEWb8Wk5QUIwfrXu+egNoIP80TlFQntdwJ/zfM0kQSdPx8a6iMVa95Rewx/X/qDnxnRjCcu0hOMtPXPK//M5tyVpkIoHG87RAKJNwImwrjrn7fIOF8i/wYuerkisg/sUIpuvAJhpGoQjrXO8bJ5xABxlisuWqVeblMdjNlgsqZqsalguxiXcX713l4E/htxdq4BUtiWdHn0ffb3FuHA7hCILiRL4WD9jpR+I5oMQ8VdIKs5QnJTRDpXetHh34Xhy+s8E6m3dk4DSw8/R0Pf31yqIa3OMbesvfDzQsVUFuJBvTD5cpCJQR9ghQnSZeBb8Zr7FPLlp6SCoyY0uIDsIEoXV6M1WJKk3d7CONlEaC+FI/yW3kNLLIUZEjVQdBbX0pC5GBgCHSc+kuGV3pXRnJ9M10V7pRmTRKEwVGqcE3lYKspPpAHmR58nG6c5kGavPIJqJCg9STjANkE0cTjjFHk3O4H0yUJm4myjaAYkBsKbaMDjmFLCTLORpy9DgqnEP9sqkyqVtSwddAElkHIHFrT5akm6WbZQTRTeiRdK0yZYGaQEkAmZVDS6E3oWWapGEgkhRJBkSOIbPJiSFbBSCBqkB+p5odVZNQWvtkbLjbfCg55a6S5lDv0nxSW8nuIjo3uJZ0+SbCqNccEeNHdQPxZb+E1a9MKv7EqmU2BTeAXunuRAX3BCm/EpIyUr5nLsA8LKZwYf37t/U4u3lf7KceKFp1+3Gln2hc1Kw7FSs83fB+zRou56x1ppvy8oL/E0EjKdHrQGS+sxNBTdMi19m7zKIR3HN4wMfEo/BIvbNFjLEHXQvTowxssr/Id9Nu1xJivSRcvRTqclpDRzmzITFTcifLBiioIDVoB5+RC2Ew200qxi5UaT0X0UV9dFEFwqh0JLy3cQTYnA8pd5+DfiNAjJcOKcfX5OvOtKPSTgk+7bn3PnU2CT/cf7YctcPdf9j+2+S7U5QWyUU0BM3487F0kWXSFq+PmWePmYyLGG2BRGTyjbZQ3YtsEFCeQSaQrV+wCIw67BI2sqq8evSY9wHNK5XjZUlclV52WsXvQ3C0t21nGrNH30wkClpC8vgpCbQl5vkvSqKDVU40TzTn1D8caBrJhaQr2BZ7nyHJeRSn6d8l2hncNXnyJgV3rmuyeNfqlzlo52HSW9roWgXaTCKu1iMRdBLRDWDc7F99tY2Z3O57Gw9PCE3mPpAwRGLe8PvGOZvfENUxc6+YN/X8G9/ZIuZvEuAKfmVptRiARGK0CjZO6Qx2+XBu0oN4HZMlVFXf9qAXg7/ioOwzvYYCobqTvy9w+Qg57UxsJJAUPEpTbV8L/wcB+WvPc9Ysk33CoZCY8G+OrjquqfcLEzJE6ot0h6IirXQjCiIS0h2CMEBaOgailAqChHSDqHRLDQHpjZIYNXLUGGP06jd/f5x3n93FvZ83znnO85x73+KoqB/H/DtZp2tAyfTptsF559/OZ4Gyu9TEqDwR2yQM/dKjgeoHvj4mSyRWJGPiopOvcfozeuGMMgUK2M2VmOkZn2L4ZLiUcowt4l8edBPYRLepqmUz1JgERJO8h7xvpSqE8JAfsS9u0tQLBdHBRM2UKQGHkVOQvinIl+/5aPVLz9XwvNoPhuUEY/dGOpjd3hZXehgqzMbm1UTBnRyrkuJ6lAzQPKHi8R53WbeZChBS2nIZ3mkNdf4reOpmDKpWmaLjC1fvzaEsrAuolQK6JrlCmFV0aMsLRPlmvH/0bgDQlqIw5Sd6G7ynjT0tZk3I+wiW2G35yccqwxs8p2XL9vWa4STa01vGF8PSOgjuwutCqrRlehGrDjhZ3pLdsLRBpN7fFJdYuTMR5dabJGboLZGQ2Ivqr1TIqjL0k2gsXMfOdVZeLDgumEQwdtvCyhHR6J6r8Bp26GB/o66KAzPUAI1bF4nqXjxLt62lD1p9QO9VJuKdHdNh68dNt+QxgDxbi/sjFAVeRS0D+D4YcoeIdQPh9RfFMYMv60g2WBkqVlK4Xf/1SmbfVWX8V2OB63Ko4eKcW00x8iZJwXWDr9S2/XPM69q4bShe91/s8IP6FjJGxmEjxh4uIb4U1GPz3I8s7/OJkpgIj9jtoMmlHzK8gHHRklA9dyHQ+Rzugg6KRD17OKyjlQfvAbkfLWOtQmvCMgfFCVZ8rcxlBUKnu9BjrtxbaNvJ1Lh1OD40/AL13Sc0M6BCPf7s28rqpWJFX+qcVNUukbaESLtWg8uPRWj11EY9eXlF9PrFBPr4tZO7oHnu6VUQqtuYZouzc5BGfmYldhR5trMaGOWniI1XIYhuYDJKDXuhPa0Bhc94kPHbMX+8DoqIKo/lj0MOl4eQz4GbfmrP9r5wtS9/eGexBKyNdYk9jywJNd3TrnJgY9zTSu3dYJ/EVcG8HgAZopJldVQGI5XOFLH2f30mCm7BLktousMJa7Xt5jLy9/UzNRs121gsONoc1AYDjrqOfc4m/7t7gXIgun/F0uedF3C7HMof5fE3xpxfbtJ3QqEw8JzjLIDw3HkXQOj+FUIJcojEAwiqAVukBnNFn3fXj4TCOoUVIwQUcYb+F7r+HGcqiDrlvdvl/JcUDvJvJE6wEy3qyNX4P7iBOe2sUrxRR7ECOtQ7eARzvPgN0b4MUvdx8DGtzWxbD20mEI8PbdKSbtlz5XhOOgTVjKd5ZvdBs/cb0/bvDJ/SDzdPp+5L6J/B9s6HU9sSk5Rn14mt4A/h3szQv2/vQDaEJo0ZRABI3u/5xpTBpU2NT2ChjYlYbHfIhMIst0qUCdLroe95ZMyi8gVVuPcgPWauLPHOBhUETTE5ZVnG3SRPInT9KVt1/XLplmpZSWTQp0VggHNceIDWOeY1iUfJr0sddB7R5kt5KH+cl9+TOreT9imC16El9TyN+Hqza1NuOPYsxVyLe3xK+0cTurtp8pYX7p6XpaQ/d0fXkNfHyNTzH1r2m/suLTOIbiA02PEdaNHieta6C+W5/cC4vO9qWCr2JHGkfKSIRqbRNcX1kPpvcfOc90SBuG1SqRCuPeu+d0kMtugfrK0V8W4n5cwyPsuAHp9XKlHe24HS68L27KX264H1KL1OCYbwxLkBGkl023jkMOSWNzVR5WnWfp9gj439uoo3KBHTZrEeXxb1CBZp2GzjDcw63FiOCwqe7ydk+awHjZbZiw5S5rYR/UhG/fS57CfU2k3+1kTUBsJ7XQW10h+apnv2lMizkt6ilt7Ss9IfUBfJDNWcGV36syI52tNx5xRtbPglLHMmoNxe7PRZVW1UNlE8ntthGzRafPwKchpYtRq50J0cFuFfcfOqx7TlJ0z460Onthk/5T8AfFRoNrZcb8c69xqD390DjpXkaeLlftwVeyKRT3yFYLbu4Hrk8EJupscEd/fygjEJVJui3lV6G++WpbETMqQunYbXysHYxHUHvNJuAD3bNAKt20+/dKDOYEj+0mHvZ0O3FMzaugrmTUcnzr+uza1XvvRkWBzLKZUfbSwFVkHd1azXJ4jZL3yOoItjzqH1Fw7ip5/8O433csYj9FW6s1EB3HKY006rvaC1yM7swtGe+TEQ9Ch+HIcqoXvWtcG2/cRnjfjQGSWOA7k+n/9NdPvzwuaCOKagGzJdLrHyMiXgD4QwZ72DutuqAvYUOTF4jtALZnDQO3+9RlC7h5yQ9og/S4Hlh+qbKcBom0tXm6vtvmp5TXdEjId55640i2Rp9/9aDnJvnS5f9uvw7YjkQxpzvxHnM1VuAi10vDv3mRddghjU0nlVPoeJpC/lI3cIgcpXwTitNXzupVEIMTk9KCXYfS5pPYiUrCFdH79vDcf0rSFXiL4hHbRly7R2MPG0oC8DD00fzT0aED3m/C16drqwCffQT0ti9IB33vPxEG3j1+D+VXj3cMTLpuNXK2/SojARYnFRMFt9pXlaU53nbPsj3zmzb3o38pdvrOcC2O4+QTQD1KgZkHK86grvLm/bCMIgCLfbX1u0l3HJYDtHcmLtm2WFAeNvJsv08kWsc0YBsWeuk0sVsH15oFyC65epj6vLDphGEoST8j0HjW+TOEMThw1b14Q4/yp5oHn3H8/jG/8gymFGEF/Yp7nzxpJy6WTaC091NqT5JEHgFLWuOWfzq9cZNbewAZ5D5onS52SXZJfKeAHGZUvaNd1/viDkfCLhs14wXhsHCssfdLTkRjF3tC44p746evraOaVM7uyrCF/2SOkfuF81SSGU9eUnEcRA0OFiUq4LXLuzF58Q1se3rxK7nSAfguSrlfkLGH/p7vYvrVkV4JOx5wWkfCoJPaXnw7SuwqVRxnx+pXjVINCXgFWTPcrVptri57FyWiR3zNWWJeL9gbSkTxjYmTdQFtg75/gq+XYU9+pmd2uXCNF7OBfXPYu9o+5MOCY12p0D0MxJHz+QYcgoRHR6wrUGeEyqc8nglPHMAH2JwU7ZPCgc6ZkrunwiA7o/Pg+68GTwdhtnQrbcGS/KlswZeGbiMbF0zzaJRB2HDSDRazfjtx86fexZ7UhDDSI71bo9EKdozw6czV2fgPCmO8/o7ON7xu0HO8fth30a5362Lojue9l76g18mbWI7220VvEsrwHlzs0GGK/eIRX6OWRdhbvHRpS8xC8qHPHOHuCTVd0SAfpJ/wfikuzER1WSLOKfdMs1w2uBfMbtgRwy/N+WhDZw7Yus8r3gZYRdQazzanPA8AOgBIvEAKva0kQYUvrC7BnD/uqW7OyRRG29PuqYyxOUNShaEru/alrzIvwinH+x+BAE8G5Z3+ZsM0vTew98C1VXy5mwPOGOcEDC63d2SLjiZ+zg+j4D34fC8uWulcaAT4vTdTWrzuPZJYI9LrGu74ESFjlCsRVXqu015TXs4lt2bhPdojkpZuFdgPFCD7o/h1vQZVTkIVS9nDCHDfImBZqlc8VW2hWEotX3pnIAUvwfQAV7vVhSozynHt6VH3YfZDzIW/9z5bmhDpf+ekLuaZgR0hJyrZBIzzeXWGEr03uKKr0Mx3NHyEeB8TCh9i4RZCeRvJZoKLxS/SXUWQl5tnF2dl4gZJtkQr+UsQ7KOJZ8ACwwIgSSusSSjgunlsHTvbNZPz87HN57xBgqRsF/bMlzXrx8eBGJU8WwyI+TIJ2WN3GFsR0/qL555vAfo/XdAUCKZP+GMpqDRXxr9fUE30Vq/n5RjLIeydnuQ7vM/abpl6wHxKV91QkJ2F9mMjLmJJpgKMWqcXGwpWKxKPu2bZLzn8sAdlHvtJjw0n+dzc3SOgXGP/7nW/M7XnuTMqnX7CSGooRGjYhC1A6bEdwBh/rroI5jSTmgvSnhFHDY+o/uPzwlCUbgu0ESqVisZwVN1rou4FBoYFzW18d06QZlq71fLv0/Xw0F45/4bTAcIQ7RVeP6cr53I0c28sS4uBARsa7FwBvpFX+K2g1lGEX1KzUxMXs6MyGgQ4lCdJfTiVsLqEQzYMwtb9qlfPghkI0U2knJuesACQE4GC2RU7baHB/iP6KkexIyD6U3GE9mjYmPiNt38O1GbcUgbqmgEe9ehZPlod6E4awok+kQARDx89YR41aTjzzija884vF7mEJJLmp5MAgTjhG5WVgRwmJiMGNwxIsQUJa8It7zznNF/H13keGexx4ZlB70H0IWnmrRvWl2G5nxBqOqOuOdvdnckquu/KuD1FjXhmxitFthRGF1N5rmy44mRVzP2S8PaSADq3edJMD713qy+nxhePt6BWfbPmsrKavR8/OkXyIfQJK8InZp25oZ114pckjivNrXXTnaWqMgmOBWIJDwjD7HIh1U+o9chwgR3S21
*/