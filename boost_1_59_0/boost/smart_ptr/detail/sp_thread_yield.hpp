#ifndef BOOST_SMART_PTR_DETAIL_SP_THREAD_YIELD_HPP_INCLUDED
#define BOOST_SMART_PTR_DETAIL_SP_THREAD_YIELD_HPP_INCLUDED

// MS compatible compilers support #pragma once

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
# pragma once
#endif

// boost/smart_ptr/detail/sp_thread_yield.hpp
//
// inline void bost::detail::sp_thread_yield();
//
//   Gives up the remainder of the time slice,
//   as if by calling sched_yield().
//
// Copyright 2008, 2020 Peter Dimov
// Distributed under the Boost Software License, Version 1.0
// https://www.boost.org/LICENSE_1_0.txt

#include <boost/config.hpp>
#include <boost/config/pragma_message.hpp>

#if defined( WIN32 ) || defined( _WIN32 ) || defined( __WIN32__ ) || defined( __CYGWIN__ )

#if defined(BOOST_SP_REPORT_IMPLEMENTATION)
  BOOST_PRAGMA_MESSAGE("Using Sleep(0) in sp_thread_yield")
#endif

#include <boost/smart_ptr/detail/sp_win32_sleep.hpp>

namespace boost
{

namespace detail
{

inline void sp_thread_yield()
{
    Sleep( 0 );
}

} // namespace detail

} // namespace boost

#elif defined(BOOST_HAS_SCHED_YIELD)

#if defined(BOOST_SP_REPORT_IMPLEMENTATION)
  BOOST_PRAGMA_MESSAGE("Using sched_yield() in sp_thread_yield")
#endif

#ifndef _AIX
# include <sched.h>
#else
  // AIX's sched.h defines ::var which sometimes conflicts with Lambda's var
  extern "C" int sched_yield(void);
#endif

namespace boost
{

namespace detail
{

inline void sp_thread_yield()
{
    sched_yield();
}

} // namespace detail

} // namespace boost

#else

#if defined(BOOST_SP_REPORT_IMPLEMENTATION)
  BOOST_PRAGMA_MESSAGE("Using sp_thread_pause() in sp_thread_yield")
#endif

#include <boost/smart_ptr/detail/sp_thread_pause.hpp>

namespace boost
{

namespace detail
{

inline void sp_thread_yield()
{
    sp_thread_pause();
}

} // namespace detail

} // namespace boost

#endif

#endif // #ifndef BOOST_SMART_PTR_DETAIL_SP_THREAD_YIELD_HPP_INCLUDED

/* sp_thread_yield.hpp
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
*/