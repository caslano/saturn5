#ifndef BOOST_SMART_PTR_DETAIL_SPINLOCK_STD_ATOMIC_HPP_INCLUDED
#define BOOST_SMART_PTR_DETAIL_SPINLOCK_STD_ATOMIC_HPP_INCLUDED

// MS compatible compilers support #pragma once

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
# pragma once
#endif

//
//  Copyright (c) 2014 Peter Dimov
//
//  Distributed under the Boost Software License, Version 1.0.
//  See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//

#include <boost/smart_ptr/detail/yield_k.hpp>
#include <boost/config.hpp>
#include <atomic>

#if defined(BOOST_SP_REPORT_IMPLEMENTATION)

#include <boost/config/pragma_message.hpp>
BOOST_PRAGMA_MESSAGE("Using std::atomic spinlock")

#endif

namespace boost
{

namespace detail
{

class spinlock
{
public:

    std::atomic_flag v_;

public:

    bool try_lock() BOOST_NOEXCEPT
    {
        return !v_.test_and_set( std::memory_order_acquire );
    }

    void lock() BOOST_NOEXCEPT
    {
        for( unsigned k = 0; !try_lock(); ++k )
        {
            boost::detail::yield( k );
        }
    }

    void unlock() BOOST_NOEXCEPT
    {
        v_ .clear( std::memory_order_release );
    }

public:

    class scoped_lock
    {
    private:

        spinlock & sp_;

        scoped_lock( scoped_lock const & );
        scoped_lock & operator=( scoped_lock const & );

    public:

        explicit scoped_lock( spinlock & sp ) BOOST_NOEXCEPT: sp_( sp )
        {
            sp.lock();
        }

        ~scoped_lock() /*BOOST_NOEXCEPT*/
        {
            sp_.unlock();
        }
    };
};

} // namespace detail
} // namespace boost

#define BOOST_DETAIL_SPINLOCK_INIT { ATOMIC_FLAG_INIT }

#endif // #ifndef BOOST_SMART_PTR_DETAIL_SPINLOCK_STD_ATOMIC_HPP_INCLUDED

/* spinlock_std_atomic.hpp
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
*/