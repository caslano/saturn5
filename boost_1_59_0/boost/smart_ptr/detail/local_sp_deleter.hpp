#ifndef BOOST_SMART_PTR_DETAIL_LOCAL_SP_DELETER_HPP_INCLUDED
#define BOOST_SMART_PTR_DETAIL_LOCAL_SP_DELETER_HPP_INCLUDED

// MS compatible compilers support #pragma once

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
# pragma once
#endif

//  detail/local_sp_deleter.hpp
//
//  Copyright 2017 Peter Dimov
//
//  Distributed under the Boost Software License, Version 1.0. (See
//  accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//  See http://www.boost.org/libs/smart_ptr/ for documentation.

#include <boost/smart_ptr/detail/local_counted_base.hpp>
#include <boost/config.hpp>

namespace boost
{

namespace detail
{

template<class D> class local_sp_deleter: public local_counted_impl_em
{
private:

    D d_;

public:

    local_sp_deleter(): d_()
    {
    }

    explicit local_sp_deleter( D const& d ) BOOST_SP_NOEXCEPT: d_( d )
    {
    }

#if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )

    explicit local_sp_deleter( D&& d ) BOOST_SP_NOEXCEPT: d_( std::move(d) )
    {
    }

#endif

    D& deleter() BOOST_SP_NOEXCEPT
    {
        return d_;
    }

    template<class Y> void operator()( Y* p ) BOOST_SP_NOEXCEPT
    {
        d_( p );
    }

#if !defined( BOOST_NO_CXX11_NULLPTR )

    void operator()( boost::detail::sp_nullptr_t p ) BOOST_SP_NOEXCEPT
    {
        d_( p );
    }

#endif
};

template<> class local_sp_deleter<void>
{
};

template<class D> D * get_local_deleter( local_sp_deleter<D> * p ) BOOST_SP_NOEXCEPT
{
    return &p->deleter();
}

inline void * get_local_deleter( local_sp_deleter<void> * /*p*/ ) BOOST_SP_NOEXCEPT
{
    return 0;
}

} // namespace detail

} // namespace boost

#endif  // #ifndef BOOST_SMART_PTR_DETAIL_LOCAL_SP_DELETER_HPP_INCLUDED

/* local_sp_deleter.hpp
+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
*/