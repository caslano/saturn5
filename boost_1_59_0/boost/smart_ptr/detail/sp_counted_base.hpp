#ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_HPP_INCLUDED
#define BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_HPP_INCLUDED

// MS compatible compilers support #pragma once

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
# pragma once
#endif

//
//  detail/sp_counted_base.hpp
//
//  Copyright 2005-2013 Peter Dimov
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//

#include <boost/smart_ptr/detail/sp_has_gcc_intrinsics.hpp>
#include <boost/smart_ptr/detail/sp_has_sync_intrinsics.hpp>
#include <boost/config.hpp>

#if defined( BOOST_SP_DISABLE_THREADS )
# include <boost/smart_ptr/detail/sp_counted_base_nt.hpp>

#elif defined( BOOST_SP_USE_STD_ATOMIC )
# include <boost/smart_ptr/detail/sp_counted_base_std_atomic.hpp>

#elif defined( BOOST_SP_USE_SPINLOCK )
# include <boost/smart_ptr/detail/sp_counted_base_spin.hpp>

#elif defined( BOOST_SP_USE_PTHREADS )
# include <boost/smart_ptr/detail/sp_counted_base_pt.hpp>

#elif defined( BOOST_DISABLE_THREADS ) && !defined( BOOST_SP_ENABLE_THREADS ) && !defined( BOOST_DISABLE_WIN32 )
# include <boost/smart_ptr/detail/sp_counted_base_nt.hpp>

#elif defined( BOOST_SP_HAS_GCC_INTRINSICS )
# include <boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp>

#elif !defined( BOOST_NO_CXX11_HDR_ATOMIC )
# include <boost/smart_ptr/detail/sp_counted_base_std_atomic.hpp>

#elif defined( __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 )
# include <boost/smart_ptr/detail/sp_counted_base_sync.hpp>

#elif defined( __GNUC__ ) && ( defined( __i386__ ) || defined( __x86_64__ ) ) && !defined(__PATHSCALE__)
# include <boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp>

#elif defined( BOOST_SP_HAS_SYNC_INTRINSICS )
# include <boost/smart_ptr/detail/sp_counted_base_sync.hpp>

#elif defined( __SNC__ )
# include <boost/smart_ptr/detail/sp_counted_base_snc_ps3.hpp>

#elif defined(__HP_aCC) && defined(__ia64)
# include <boost/smart_ptr/detail/sp_counted_base_acc_ia64.hpp>

#elif defined( __GNUC__ ) && defined( __ia64__ ) && !defined( __INTEL_COMPILER ) && !defined(__PATHSCALE__)
# include <boost/smart_ptr/detail/sp_counted_base_gcc_ia64.hpp>

#elif defined( __IBMCPP__ ) && defined( __powerpc )
# include <boost/smart_ptr/detail/sp_counted_base_vacpp_ppc.hpp>

#elif defined( __MWERKS__ ) && defined( __POWERPC__ )
# include <boost/smart_ptr/detail/sp_counted_base_cw_ppc.hpp>

#elif defined( __GNUC__ ) && ( defined( __powerpc__ ) || defined( __ppc__ ) || defined( __ppc ) ) && !defined(__PATHSCALE__) && !defined( _AIX )
# include <boost/smart_ptr/detail/sp_counted_base_gcc_ppc.hpp>

#elif defined( __GNUC__ ) && ( defined( __mips__ ) || defined( _mips ) ) && !defined(__PATHSCALE__) && !defined( __mips16 )
# include <boost/smart_ptr/detail/sp_counted_base_gcc_mips.hpp>

#elif defined(__GNUC__) && ( defined( __sparcv9 ) || ( defined( __sparcv8 ) && ( __GNUC__ * 100 + __GNUC_MINOR__ >= 402 ) ) )
# include <boost/smart_ptr/detail/sp_counted_base_gcc_sparc.hpp>

#elif defined( WIN32 ) || defined( _WIN32 ) || defined( __WIN32__ ) || defined(__CYGWIN__)
# include <boost/smart_ptr/detail/sp_counted_base_w32.hpp>

#elif defined( _AIX )
# include <boost/smart_ptr/detail/sp_counted_base_aix.hpp>

#elif !defined( BOOST_HAS_THREADS )
# include <boost/smart_ptr/detail/sp_counted_base_nt.hpp>

#else
# include <boost/smart_ptr/detail/sp_counted_base_spin.hpp>

#endif

#endif  // #ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_HPP_INCLUDED

/* sp_counted_base.hpp
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
*/