#ifndef BOOST_SMART_PTR_ENABLE_SHARED_FROM_THIS_HPP_INCLUDED
#define BOOST_SMART_PTR_ENABLE_SHARED_FROM_THIS_HPP_INCLUDED

//
//  enable_shared_from_this.hpp
//
//  Copyright 2002, 2009 Peter Dimov
//
//  Distributed under the Boost Software License, Version 1.0.
//  See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt
//
//  See http://www.boost.org/libs/smart_ptr/ for documentation.
//

#include <boost/smart_ptr/weak_ptr.hpp>
#include <boost/smart_ptr/shared_ptr.hpp>
#include <boost/smart_ptr/detail/sp_noexcept.hpp>
#include <boost/assert.hpp>
#include <boost/config.hpp>

namespace boost
{

template<class T> class enable_shared_from_this
{
protected:

    BOOST_CONSTEXPR enable_shared_from_this() BOOST_SP_NOEXCEPT
    {
    }

    BOOST_CONSTEXPR enable_shared_from_this(enable_shared_from_this const &) BOOST_SP_NOEXCEPT
    {
    }

    enable_shared_from_this & operator=(enable_shared_from_this const &) BOOST_SP_NOEXCEPT
    {
        return *this;
    }

    ~enable_shared_from_this() BOOST_SP_NOEXCEPT // ~weak_ptr<T> newer throws, so this call also must not throw
    {
    }

public:

    shared_ptr<T> shared_from_this()
    {
        shared_ptr<T> p( weak_this_ );
        BOOST_ASSERT( p.get() == this );
        return p;
    }

    shared_ptr<T const> shared_from_this() const
    {
        shared_ptr<T const> p( weak_this_ );
        BOOST_ASSERT( p.get() == this );
        return p;
    }

    weak_ptr<T> weak_from_this() BOOST_SP_NOEXCEPT
    {
        return weak_this_;
    }

    weak_ptr<T const> weak_from_this() const BOOST_SP_NOEXCEPT
    {
        return weak_this_;
    }

public: // actually private, but avoids compiler template friendship issues

    // Note: invoked automatically by shared_ptr; do not call
    template<class X, class Y> void _internal_accept_owner( shared_ptr<X> const * ppx, Y * py ) const BOOST_SP_NOEXCEPT
    {
        if( weak_this_.expired() )
        {
            weak_this_ = shared_ptr<T>( *ppx, py );
        }
    }

private:

    mutable weak_ptr<T> weak_this_;
};

} // namespace boost

#endif  // #ifndef BOOST_SMART_PTR_ENABLE_SHARED_FROM_THIS_HPP_INCLUDED

/* enable_shared_from_this.hpp
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
*/