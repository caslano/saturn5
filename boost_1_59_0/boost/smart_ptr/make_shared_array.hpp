/*
Copyright 2012-2019 Glen Joseph Fernandes
(glenjofe@gmail.com)

Distributed under the Boost Software License, Version 1.0.
(http://www.boost.org/LICENSE_1_0.txt)
*/
#ifndef BOOST_SMART_PTR_MAKE_SHARED_ARRAY_HPP
#define BOOST_SMART_PTR_MAKE_SHARED_ARRAY_HPP

#include <boost/core/default_allocator.hpp>
#include <boost/smart_ptr/allocate_shared_array.hpp>

namespace boost {

template<class T>
inline typename enable_if_<is_bounded_array<T>::value, shared_ptr<T> >::type
make_shared()
{
    return boost::allocate_shared<T>(boost::default_allocator<typename
        detail::sp_array_element<T>::type>());
}

template<class T>
inline typename enable_if_<is_bounded_array<T>::value, shared_ptr<T> >::type
make_shared(const typename remove_extent<T>::type& value)
{
    return boost::allocate_shared<T>(boost::default_allocator<typename
        detail::sp_array_element<T>::type>(), value);
}

template<class T>
inline typename enable_if_<is_unbounded_array<T>::value, shared_ptr<T> >::type
make_shared(std::size_t size)
{
    return boost::allocate_shared<T>(boost::default_allocator<typename
        detail::sp_array_element<T>::type>(), size);
}

template<class T>
inline typename enable_if_<is_unbounded_array<T>::value, shared_ptr<T> >::type
make_shared(std::size_t size, const typename remove_extent<T>::type& value)
{
    return boost::allocate_shared<T>(boost::default_allocator<typename
        detail::sp_array_element<T>::type>(), size, value);
}

template<class T>
inline typename enable_if_<is_bounded_array<T>::value, shared_ptr<T> >::type
make_shared_noinit()
{
    return boost::allocate_shared_noinit<T>(boost::default_allocator<typename
        detail::sp_array_element<T>::type>());
}

template<class T>
inline typename enable_if_<is_unbounded_array<T>::value, shared_ptr<T> >::type
make_shared_noinit(std::size_t size)
{
    return boost::allocate_shared_noinit<T>(boost::default_allocator<typename
        detail::sp_array_element<T>::type>(), size);
}

} /* boost */

#endif

/* make_shared_array.hpp
ek4TWuRbcXncsrD/i7M3ouTBy1fPrqgm9o8y5UM9TOgMXK9UPzLvcZ2Zb3V12H9DBNG05CTm+6ODQ2Pu8acRte6fnxf6pz30nd11ZtbsYFJTCQ1ie5UZmJVS2ZQY+tocOml99KoTG7Qhzy9+jghV1d/xMtRkedQWajCbq7UhZaufdTi0IeFV9HoV/U3B31cprZauVrou++ip5OU9nspOWD4h4ansRCp2+YTE0B5zqIoLr4kVHp5oiuXlXAmhPYmhqkTkei2Wa5XME9qDPKGqBLxdHl/GAvozh6676ZpK1x10jadrNF0j0IfxKxuV8U830l9BfwX9baa/zfQ3Sn+j9LeV/rbS3w7620F/O+lvZ9iCsKYmc9TcYUBDQ6fX0PUqXeVIcVtnzd67axVaGH8ve6+nUBu7QYTAYeQNB67vDC90dupjMKRrDPr8dGJDJ9U7+HnU236YIF2zmvtrjMlJOSYZGJP01TwmyLxqON1PpWshXU9lmy/7aPkEc+gHht4xht7f4opG2/Q8XWP1A+XkUVgel3NVXD7K1DVmP5hDx9Bk+28we7qXXUttqKOrgS5BV5SuDrpM9Lr/8zw2gwnWg+lvGv1No78p9DeF/jroL97b6K+N/lrpr5X+WuivpfvYSBgNo98RdI2na/rzcWOTbaZWx40FP3cfh/i0bmPXNdX+r8y3vqX/fr5FX/j5+WZ5gcfW9KKcb6X0uCqFfrLomvPC/3K+ofD/Pt+Q69/PN72Mf9Kfg3TV0LWbru10babrTbpefeH/1nxjaGjotJWuFLqGvvj/x3xbsSY230av+bfzbdWLPCbIvGo93e+mq/nF/zLfVsjy/hfzjcv9P5pvetlZ9CeHLi9d0+m6h65CuubRFVrzf2u+SRitpd9X6dpMV/Wa/0vzLW4h35NtMxH/cL94/0mwUVY15yGlr5pTqEy2qH1dfeoaBzoC56l9Vn090FGWMy/YQxSqlA+LtytpzVf0cgCO28TeW0VViNkxSm3LmpcYTAnlzEukShLAf1HJWRa87LbH6fBBkoIFE8ewDLZmHnHOsgb1vTlRooJviZSocMwdTBfBq4nzNg0gQInLHzKZRhV0BnpAbXvPvJ9IcrvfWWALHBmVFpiUT/x/ZOhT/exbTrWNv+lCS2DgzY6g9anchJu9CYGUcG7CqAsCfdQPIpabHYGksaPODx4cdX4gxb7F2jb+esqdlEWF4Ce4dXaG2yqr8XSE7p33U4wV1UUjq0CMKWKkYqII9Prco2ehES62lmnBK8X2q2INf+hBk2kxRAGj5bxr1bTBBLfYQRtJoUNEuCv7mJ/NHinyqQWt2FYN9s7LF8m/ZDg9bN9it2+pnNA2Pg19fqpHqXT70KfyK5hKze1dbd+6d4J9S7J9S2122/gLONOA0o9Z7u1T2UCZPp7be6d9a0X2XFdlMG1u2d7gm6M88UCeCRyCD+nEHG7VMR0uke+6Q+XYmXioEDUv2xsYRCywfWuturPyawckh947P2o68Ub/vXNPvDGbRthgyLtE8Tm6ZFwy1JCMr/OzZDyJJePzIYqnhC03GuLwnW1cKYLw6dJ4iRwczl4upfHrh3YJ0m/FSeNARqhmy44E+kEwmd+v7EjwssyKJvjFRELgmPjxSqMhr/0SDWlaz/y6zSemJGEEXG7bo0l7zKbIpwYShDuJ/3WZ1NPqicD9T9nVaa00QOadT3kvbNtpCThVd6s/QZtnCXus/sRcf2J+IQIvkOjGvhXefAo8+hBi2m8lGWJ53+wJoY6EkgHLr430a9uZHrA+tfjCBJzLf6pyeXL2hMW3moK/x6DsSe7CFj5huneXcF0JjKLpY6LmiWuulEilmgINxgAe6j6AwhjA7uuzOnWITb3j/yHub+CiKrMHcPwOMwwjDN5RQVFRKbEstCi0xBHDl0EssUFkkBStzVia3M3wXrVW3rpMcbnNVlttuVtbrrVb+1q7+dKLxoDxYm+obWFqYVE907VCJRgEub9znufO8CLutvv7/v5/Pp/L3Pu8nOc8b+c553mec06iyXNYuDOlpnpxogXG2NiKc3RVHhlclcP911fjZeZu6Zyp+Jquo9JJo2BNOgSLHix3foPYqTTCaDP68McGPwdhjQDiK5jP/hkAR7J032A6KGBdHfw3BQeSxZVHj79LrB70DXv7ZcEeiSmiQ2OBkmvDQ496A6eeBIFmPieYMm4WuzyacCrpTHVYlWnswsoawXizeBYAjIJkZMpl/SNiLzZY/0i0wEiMIX3TQtPxbz9FiVsdB5PIST7J5rgMtENkxmIMGf3Cp3QqJgcvFGWdIgoq2mRZKrrxyuTmu1Jq8gpB7POW9BX+WfHRi1gWxdGecqwqa8S61FUW0TanIIDd16FTtY04QKw4RkAyd4ehbOQ25JCrFSrMQ+EfFKYW9IlRnY5eC7s4FJZSAzDUqxTHKWkvXnEylI7Cmz5uSzZ12YJTJFopx4tJ/B5TptRqKS8J4JDJ6sCRMJDCWchMmEH5+f1zRB/Xu7pRn6dD2goTNEEfMq3VbFTl5/OVbRxuAdCRBeAcVlhnLiG7E0PtWFg4hKyl1DTVlc/hxNGDQoEsNNXp/XAJ2dyf/7IL86vFOXlOpY/kT4WiP3UltZCb4S3fWAedky8sThKt9sCWtOopsDZUHhNGV4+qPCwsnBMzUoxYUD5vJCd+V57KCdfQGfpO9bJRk5ZklJ80CREwrYQIeIfZ9daQEtetXgtID8K3Qf1m8Dw6MIgQIkET0KIvxM+uWRZn02Kr2K2VOBd5EhFv12I3zELtnCWIvGwO7ezRsxccAzrgK6sxNYCGpolLdfQKY4hrKr1OFkmyEFJWL4zo+tChcpY1J+WY/Z3NE92tKYdXdZ22O2ybeDJ1KjaplaOjegH/9ywbXpxKLbBQF4bEdjN64WyhuwnLFgDQQH4+WmK0f7rJlnTW5eaMn+UQ0kOriOL86tBASUAeI89tyd9/K8jV3pLWsy/gtQ2HdR2M/rWApbWTswgRDY4OLn27wevocOJZOLpEbdViK6FNQjf20EmOdTMPcwg7KCJ9AVLZjmCzZOPRpRZbfi29tAaVdnPhXLnvyqLyXz/FVRy6ZPlP+rKdxAODRjoXsW1kWUSadnf6Y5vDpUZNaQaYQEzCZYOcbepnjaCdXHmpBTGiDZgOGzAV4mimqF9nr6OUx96zZQzxXxKkPL+5nVKeE5jFVBWnHgYSZD9CX49KJTGa0iiOUdqB+ERWWccunPuOcCkQH3WSciapvTpmZNWoBXOPCJabhXAtK0b8DoGEVY2394gK5hWh3la3s2qNRVvlx7saVXHk7kv66dX9bLRFsslqMdLZrbdNgf+z4JaKkmuBxS0GaOcxEcmjLTW3v1ZAckP0dEyoVgd+wmoFOSJSagrlMLWZLuPBrw+VWqkHzRSeSTrN7zEUyqaRki+sEHr28pvF79RLldNJZ/g9VnOhbJFqILxJMN8sGG8SVbwWltIEwR6N99yr4dVbBGSjFS2UF9/Yt8qP3CAUQioTQlX1u4OVkU7F44BEXw5X/YBkyIZ8U40QJidT7unmhBCZ0G5DMtFOJ+gpNmn9qNAFTcsJwBbEhG1rhv+JZQepdd+stpzqyXneUoP0GqOb47yONie/u85tcZLJuA2Y1YbU06Y8Sqnn7jogoAuBgOKdzeopS9SG8p6ZolnKigtTw8t7kkQjBNK7gHzVzVhswMBXZtCXRP7hNANOV/HK8p5kYUSDIyYSQKrXVUfM2ypEz1tFgywYNBVebPgSKQVsYiwkF200lWneKtFcvc6AImajlnK4S4xRXkHE5NwAaontsS5XDkmfmwQLv/8dyZ+sjq84aYRChWTvTc+Wd4+H0C1GyZ8g+ZrsWTGbJgDeFqAkxdPFcHtWYPMl8G1C1kmcqjjibn7RIiZQRsoIgwWbS12NF7z+nhtjPCTn9mL1q/cjc/qiSZz4okFMAyZRGFFRgudp5VtGoLfZVLF382Xk75M5rtMRZ2jgLoUowYyHjyoPIWFubhX/RI2xnjmrol06B8MFY1dB76B+VBy9alwwTfKQLqZ0WacdjDdEipkafgAIrhhRdBwEG9XgJH9H/zsHYoIkKw2jOTxk1jMEkwJaRBqUNjvHpczeei1eJZm9ATge7SNtdhH8Ki1yQa/2kdJuP8vfX4FLYF9Sj3cJupYuFnNI7VIIaYHvfHvLpsy9HPQuvIQpdUagLMU8npGQO3+FjCQ01ljvIqA/xfNpaI4eKlzt08Kc3ll7tdhtUPxOWrhoUdLwS/tYZpZ6Pt5JkXFYdPfT9AaH2+ROIG89inCUdteA/DQx3n11x61aWyddBivB2jq3tSjdOc5G/jIRZtHs2Rw9DEES0wvrWb7saGtw4JtGRmAtHW2kcSIaRomZHTylxbR7IAFe1exqyc8sgDlUdCuCzJ+IOaxoIPg+cq1E5wC66JmDhw7qz9k3uR4iVD+55Sm8TS4grlsBTfLPJzlup2UpvLU+iinvjSBPgoSkfkA+/TV+b00g6x6nL+Og176cBdUFcFFauAny+A8jTTj1GKRvwjtd4urUNAwvrdCi8RfNp6Q54UUMJ09ex3GpJTaRJ29CenItFEJ23k91KWi9IwCU/35cNzVMhqzviXE2TQgnEWhJUXVLgTAxn7wEAktRTBjVqFj4CGt8exdfaQUYLm02zTNbWIqMAI4nrRk1//JcRHNjWi12BvAC0KvLTZoKHMLeLmh8fzOyFAGjGJFHlv8MkqGDjaUT6HUT6LZybOMfxkMbdytnQKBB09mONuhfa2osVpKvfJtj3WlvF8KlvjDxqh3lsERDwZY8V47WLFMboxxfCQ3KQQhZ1IeK7G14yUbSg3rr8epum9RnEEE8ERPynMAG1KM3BC6HjIH0QZBmDIFadWJRRvEyzHz2PDWDY7yEFSSMuqB8vZFhXMEy6TilWJQRzmzS9iS2SZ1yB9HjU2pI9viQ+m6J1QD99tmT9EoI7h/mWskpHK30Hr9/2SjbzjlfjrM1hM+D/58tGgVv6fD2GH1bDG/v0rdMeJsNbzuX0cRO+H/bMoxYCW/ZNMkqePvnQnxbA283wJt+5PRrFDeRxQsnn/+e4459PlR8eldKy7wTqAxfiUNHOmXh/7Ym0YTyzbTyMo5LK5/CcSJ/dF5ioWJKLJRaywqlQJl3faJFzPX7AeIjen7h2v8mb7j/id9jadYTMYmk+CUYyWhqGBayOu/KRBOZBCErfgsZhWUAzVpYMS+xDGSxozP3PhZrg7j2MmHtS0jExQVHTx1tOnpaSotbipXwzINgb3TCsXG21yfifEiFb5ZynPrhS5rGc+IkaVsiyAhjp2Gw8PaJlmMzywHsXjy6VC8lVS/Cz0SW9G2WdD+muRLToBJVqKzmFweVRZqgoFv6JZUBR8vqS1i5EF3/EXL9pLgg1/N+/mC5/r4fUPy5UK7fdeq/lesN/XL9h/f9G7ne9l/J9bePGyjX54778XJ9UE7VtXHondYOoID2LmADreOCDbJvFWUDV+a4E6lCsot0fw8zs8AKQOyfiaPIybHBpL+CpOp0ZZFJibI3lJm3jbF/UMxLgYhtE8tQ/EW2exT5RzC5Ur8ab7wS8yuolxhwkvp/UmLNez4zYEiHk5wMhrxHQ3qdpDcY8gaEKDeZFLunaZsbwGvlHUZu863AFmxPotpbEw+6UIMIumr2K/qK+nCqI8BX2g1Yic9eZoAqqbKwo2P7FWi/6pRzfG67ixj1HLwnH08GMxJwsPrD4H+Oi3z1cjASTcEBSGGGizzCwAmXAAJGR4eeZbvSqJjlXMt2JaB8ktQ9scCi8op5O7uH/wkgOvETN+eel5NHxH/iziosZ1FSzTyp4QCQ/COaHoceUiBLhgmygMAVcM8b8wkEL/wn3WyFPFY9T4apP1NHBstkCWaKo5miaSYLyxQnNRD4YJniIPYtzNToObwtqcxE9+sy4ow+dwTaBTcst8quOMPyeJg4i1EP43DZD9sg0abvIZF3sSFiuzuCJVMyMKWnpuxwhQ+vy0MeqWaKtjxGzrA2ZNio8+3X8/CP8C6O082owQyVelq33O3Kk9JQLubEOPL1qzBUJpNrAGc69MgTM2jTHxNMSp1qhIXN2S9Gb0QBMAAyzGVu69rU8DdXxtmE6Byivso4gJdUYClioPLJJJn+oLSqxuSQg5iAxMf0i8H9MmwMneynqHY/u0ubSM6MCQkXv8/F2UZ3TthuDd2abapDJ6tAYy4j9f1pN+fidnX/xg7b9K2ig6+d7qIk4vDLWUHmWClpRsB85U8xAduW8a+G97y3qGNWfnckv/v0ws7F5kkmGF/C6vK5nGhK6VSLdKrTS6nOjSvyKMk55SS3baYkB5kuM79b7FUTqDWsWg6lGEfva0ieCvm/o6n684VGH7+nXaP7UupY5ZDXGta5YJJNGMHvfoURJuUMvzuK331oUefisEkmIQ8oId1oXj+oeO9NWnYIgVZxIAJZvWo8MkiO4QtvhJIXDSla1os+WGh/X5xRCBzFPOgT/2kYjKRgdLChL+wPNTG4XQ0xcXpjqvyghMDxrrtgY7/r/GBKacvRaf9rXyFrYkEDR2ICOTkq1MmP5lxwJrERyGsHHmnMxdvK5Jl/0I36NGi7zsXXQtNNSK+2gfg/l9/TxO8+TO3Qp2ZZxahMdTy/5xBI6cKIdH63pdD+jgjyXBPGjcQixgXJ+8jBBV54PjF/6PlEjr6GpRxL0ci3X9LdSQCfQMb116RhxQU1KQzWZDwAziaP0ZpgmmVBVBbhgUtt5+JkqNekBXR/bTS/+xO0sVuX6rBCofdqapRHU434FaZ0L6g8LL4zJ7e/GKVhmH5YfEEFgmdGyYh88MxodHBfjCKGl3+4YMXm20IV+y77gordyY6NxuOxkQOPjWwDjo1GiZZqp2FuNh4bOdmxUa1qmjuKHQ99CE8Mv9vA6ownSew4ac86CETJZ6rv3x8eXTGobmynazSgXSilctDzki8MWY/T/btqee6IlMPA8XtL2uTc1rN/XocbObFkDR+qoRVqKDVqTXXAE9FL8rYGRxtOBCiywXFqIaRxyrkEcmu5FumATUcpeGRS9PhPR9mIl+Jl6y83Jy/lGBRdk48FF0DBuE8VR9pGhsp93EnL9VOTTyU2PMuy9wjj7WcBvX39yX7Gkql30ckJvL49sMUol7RpYjzFNk7HEbCXReKURR1N2RFjPyvMttdtu1TLatsK/ddaFaeOwrvkOWQzXZPR+Vq44ohReWjIgraqNfM1/pkaiYT1Dyq6mxFLZvbjc+Jmik+BvsssmJEl3BJNIkNJ1GsAqxCD6Sq6RhjFdBGlA7DM3WsEtkwK9AHT9HE0ZsE9DfIggxrcvIXc7Poi6/V7aOuGGNSSGMRpe3QIp6VBnGAlsVH+jG7bdYq2VJFu2/n/xFFv2Pq2nY2sCWWm3jLJsmhswXiGuL1n85XKnEU5OupXMNQR5yVkKiSU5lwKkup4eJPnqE4lLk9PyLGE9Yvna7SG46H1NHEc+d7K8kwjX8KbHKfGQzNM1JvBRpqtoWYoX04r0r8vDAgNYda7WSFBQQkPfJRlibaoRvhvFUegeNN1stbG5XSdVFowtmt9YoyRvZ00HlkNUQPlKxdExETViNMRCEozKYe7TusZ
*/