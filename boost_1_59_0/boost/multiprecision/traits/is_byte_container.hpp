///////////////////////////////////////////////////////////////////////////////
//  Copyright 2015 John Maddock. Distributed under the Boost
//  Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_IS_BYTE_CONTAINER_HPP
#define BOOST_IS_BYTE_CONTAINER_HPP

#include <iterator>
#include <type_traits>

namespace boost { namespace multiprecision { namespace detail {

template <class T>
struct has_member_const_iterator
{
   template <class U>
   static double         check(U*, typename U::const_iterator* = nullptr);
   static char           check(...);
   static T*             get();
   static constexpr bool value = sizeof(check(get())) == sizeof(double);
};


template <class C, class Iterator>
struct is_byte_container_imp_2
{
   using container_value_type = typename std::remove_cv<typename std::iterator_traits<typename C::const_iterator>::value_type>::type;
   static constexpr const bool value = boost::multiprecision::detail::is_integral<container_value_type>::value && (sizeof(container_value_type) == 1);
};

template <class C>
struct is_byte_container_imp_2<C, void> : public std::false_type
{};

template <class C, bool b>
struct is_byte_container_imp : public is_byte_container_imp_2<C, typename C::const_iterator>
{
};

template <class C>
struct is_byte_container_imp<C, false> : public std::false_type
{};

template <class C>
struct is_byte_container : public is_byte_container_imp<C, has_member_const_iterator<C>::value>
{};

}}} // namespace boost::multiprecision::detail

#endif // BOOST_IS_BYTE_CONTAINER_HPP

/* is_byte_container.hpp
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
*/