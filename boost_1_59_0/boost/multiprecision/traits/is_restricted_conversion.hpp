///////////////////////////////////////////////////////////////////////////////
//  Copyright Vicente J. Botet Escriba 2009-2011
//  Copyright 2012 John Maddock. Distributed under the Boost
//  Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MP_RESTRICTED_CONVERSION_HPP
#define BOOST_MP_RESTRICTED_CONVERSION_HPP

#include <boost/multiprecision/traits/explicit_conversion.hpp>
#include <boost/multiprecision/detail/number_base.hpp>

namespace boost { namespace multiprecision { namespace detail {

template <class From, class To>
struct is_lossy_conversion
{
   using type = typename std::conditional<
       ((number_category<From>::value == number_kind_floating_point) && (number_category<To>::value == number_kind_integer))
           /* || ((number_category<From>::value == number_kind_floating_point) && (number_category<To>::value == number_kind_rational))*/
           || ((number_category<From>::value == number_kind_rational) && (number_category<To>::value == number_kind_integer)) || ((number_category<From>::value == number_kind_fixed_point) && (number_category<To>::value == number_kind_integer)) || (number_category<From>::value == number_kind_unknown) || (number_category<To>::value == number_kind_unknown),
       std::integral_constant<bool, true>,
       std::integral_constant<bool, false>>::type;
   static constexpr const bool                     value = type::value;
};

template <typename From, typename To>
struct is_restricted_conversion
{
   using type = typename std::conditional<
       ((is_explicitly_convertible<From, To>::value && !std::is_convertible<From, To>::value) || is_lossy_conversion<From, To>::value),
       std::integral_constant<bool, true>,
       std::integral_constant<bool, false>>::type;
   static constexpr const bool                     value = type::value;
};

}}} // namespace boost::multiprecision::detail

#endif // BOOST_MP_RESTRICTED_CONVERSION_HPP

/* is_restricted_conversion.hpp
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
*/