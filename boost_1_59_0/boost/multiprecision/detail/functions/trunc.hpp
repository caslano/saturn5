///////////////////////////////////////////////////////////////////////////////
//  Copyright 2022 Matt Borland. Distributed under the Boost
//  Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MP_DETAIL_FUNCTIONS_TRUNC_HPP
#define BOOST_MP_DETAIL_FUNCTIONS_TRUNC_HPP

#include <cmath>
#include <limits>
#include <stdexcept>
#include <boost/multiprecision/detail/standalone_config.hpp>
#include <boost/multiprecision/detail/no_exceptions_support.hpp>

#ifdef BOOST_MP_MATH_AVAILABLE
#include <boost/math/special_functions/trunc.hpp>
#endif

namespace boost { namespace multiprecision { namespace detail {

namespace impl {

template <typename T>
inline T trunc BOOST_PREVENT_MACRO_SUBSTITUTION (const T arg)
{
    using std::floor;
    using std::ceil;

    return (arg > 0) ? floor(arg) : ceil(arg);
}

} // namespace impl

#ifdef BOOST_MP_MATH_AVAILABLE

template <typename T>
inline long long lltrunc BOOST_PREVENT_MACRO_SUBSTITUTION (const T arg)
{
    return boost::math::lltrunc(arg);
}

template <typename T>
inline int itrunc BOOST_PREVENT_MACRO_SUBSTITUTION (const T arg)
{
    return boost::math::itrunc(arg);
}

#else

template <typename T>
inline long long lltrunc BOOST_PREVENT_MACRO_SUBSTITUTION (const T arg)
{
    if (arg > LLONG_MAX)
    {
        BOOST_MP_THROW_EXCEPTION(std::domain_error("arg cannot be converted into a long long"));
    }

    return static_cast<long long>(boost::multiprecision::detail::impl::trunc(arg));
}

template <typename T>
inline int itrunc BOOST_PREVENT_MACRO_SUBSTITUTION (const T arg)
{
    if (arg > INT_MAX)
    {
        BOOST_MP_THROW_EXCEPTION(std::domain_error("arg cannot be converted into an int"));
    }

    return static_cast<int>(boost::multiprecision::detail::impl::trunc(arg));
}

#endif

}}} // Namespaces

#endif // BOOST_MP_DETAIL_FUNCTIONS_TRUNC_HPP

/* trunc.hpp
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
*/