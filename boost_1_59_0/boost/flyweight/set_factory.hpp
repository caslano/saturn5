/* Copyright 2006-2009 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/flyweight for library home page.
 */

#ifndef BOOST_FLYWEIGHT_SET_FACTORY_HPP
#define BOOST_FLYWEIGHT_SET_FACTORY_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/config.hpp> /* keep it first to prevent nasty warns in MSVC */
#include <boost/detail/allocator_utilities.hpp>
#include <boost/flyweight/assoc_container_factory.hpp>
#include <boost/flyweight/factory_tag.hpp>
#include <boost/flyweight/set_factory_fwd.hpp>
#include <boost/mpl/aux_/lambda_support.hpp>
#include <boost/mpl/if.hpp>
#include <set>

/* Particularization of assoc_container_factory_class using a set.
 */

namespace boost{

namespace flyweights{

template<
  typename Entry,typename Key,
  typename Compare,typename Allocator
>
class set_factory_class:
  public assoc_container_factory_class<
    std::set<
      Entry,
      typename boost::mpl::if_<
        mpl::is_na<Compare>,
        std::less<Key>,
        Compare
      >::type,
      typename boost::mpl::if_<
        mpl::is_na<Allocator>,
        std::allocator<Entry>,
        Allocator
      >::type
    >
  >
{
public:
  typedef set_factory_class type;
  BOOST_MPL_AUX_LAMBDA_SUPPORT(
    4,set_factory_class,(Entry,Key,Compare,Allocator))
};

/* set_factory_class specifier */

template<
  typename Compare,typename Allocator
  BOOST_FLYWEIGHT_NOT_A_PLACEHOLDER_EXPRESSION_DEF
>
struct set_factory:factory_marker
{
  template<typename Entry,typename Key>
  struct apply:
    mpl::apply2<
      set_factory_class<
        boost::mpl::_1,boost::mpl::_2,Compare,Allocator
      >,
      Entry,Key
    >
  {};
};

} /* namespace flyweights */

} /* namespace boost */

#endif

/* set_factory.hpp
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
*/