#ifndef BOOST_QVM_DETAIL_VEC_ASSIGN_HPP_INCLUDED
#define BOOST_QVM_DETAIL_VEC_ASSIGN_HPP_INCLUDED

// Copyright 2008-2022 Emil Dotchevski and Reverge Studios, Inc.

// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#include <boost/qvm/gen/vec_assign2.hpp>
#include <boost/qvm/gen/vec_assign3.hpp>
#include <boost/qvm/gen/vec_assign4.hpp>

namespace boost { namespace qvm {

namespace
qvm_detail
    {
    template <int D>
    struct
    assign_vv_defined
        {
        static bool const value=false;
        };

    template <int I,int N>
    struct
    copy_vector_elements
        {
        template <class A,class B>
        static
        void
        f( A & a, B const & b )
            {
            vec_traits<A>::template write_element<I>(a)=vec_traits<B>::template read_element<I>(b);
            copy_vector_elements<I+1,N>::f(a,b);
            }
        };

    template <int N>
    struct
    copy_vector_elements<N,N>
        {
        template <class A,class B>
        static
        void
        f( A &, B const & )
            {
            }
        };
    }

template <class A,class B>
inline
typename enable_if_c<
    is_vec<A>::value && is_vec<B>::value &&
    vec_traits<A>::dim==vec_traits<B>::dim &&
    !qvm_detail::assign_vv_defined<vec_traits<A>::dim>::value,
    A &>::type
assign( A & a, B const & b )
    {
    qvm_detail::copy_vector_elements<0,vec_traits<A>::dim>::f(a,b);
    return a;
    }

} }

#endif

/* vec_assign.hpp
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
*/