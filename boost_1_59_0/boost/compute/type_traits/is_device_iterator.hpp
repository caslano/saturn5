//---------------------------------------------------------------------------//
// Copyright (c) 2013-2014 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_TYPE_TRAITS_IS_DEVICE_ITERATOR_HPP
#define BOOST_COMPUTE_TYPE_TRAITS_IS_DEVICE_ITERATOR_HPP

#include <boost/type_traits/integral_constant.hpp>

namespace boost {
namespace compute {

/// Meta-function returning \c true if \c Iterator is a device-iterator.
///
/// By default, this function returns false. Device iterator types (such as
/// buffer_iterator) should specialize this trait and return \c true.
///
/// For example:
/// \code
/// is_device_iterator<buffer_iterator<int>>::value == true
/// is_device_iterator<std::vector<int>::iterator>::value == false
/// \endcode
template<class Iterator>
struct is_device_iterator : boost::false_type {};

/// \internal_
template<class Iterator>
struct is_device_iterator<const Iterator> : is_device_iterator<Iterator> {};

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_TYPE_TRAITS_IS_DEVICE_ITERATOR_HPP

/* is_device_iterator.hpp
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
*/