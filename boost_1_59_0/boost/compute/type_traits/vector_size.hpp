//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_TYPE_TRAITS_VECTOR_SIZE_HPP
#define BOOST_COMPUTE_TYPE_TRAITS_VECTOR_SIZE_HPP

#include <boost/preprocessor/cat.hpp>

#include <boost/compute/types/fundamental.hpp>

namespace boost {
namespace compute {

/// Meta-function returning the size (number of components) of a vector type
/// \p T. For scalar types this function returns \c 1.
///
/// For example,
/// \code
/// vector_size<float>::value == 1
/// vector_size<float4_>::value == 4
/// \endcode
template<class T>
struct vector_size
{
    /// \internal_
    BOOST_STATIC_CONSTANT(size_t, value = 1);
};

/// \internal_
#define BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTION(scalar, size) \
    template<> \
    struct vector_size<BOOST_PP_CAT(BOOST_PP_CAT(scalar, size), _)> \
    { \
        BOOST_STATIC_CONSTANT(size_t, value = size); \
    };

/// \internal_
#define BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(scalar) \
    BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTION(scalar, 2) \
    BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTION(scalar, 4) \
    BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTION(scalar, 8) \
    BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTION(scalar, 16)

BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(char)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(uchar)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(short)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(ushort)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(int)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(uint)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(long)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(ulong)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(float)
BOOST_COMPUTE_DECLARE_VECTOR_SIZE_FUNCTIONS(double)

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_TYPE_TRAITS_VECTOR_SIZE_HPP

/* vector_size.hpp
+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
*/