//---------------------------------------------------------------------------//
// Copyright (c) 2013-2014 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_TYPE_TRAITS_RESULT_OF_HPP
#define BOOST_COMPUTE_TYPE_TRAITS_RESULT_OF_HPP

#include <boost/utility/result_of.hpp>

namespace boost {
namespace compute {

/// Returns the result of \c Function when called with \c Args.
///
/// For example,
/// \code
/// // int + int = int
/// result_of<plus(int, int)>::type == int
/// \endcode
template<class Signature>
struct result_of
{
    // the default implementation uses the TR1-style result_of protocol. note
    // that we explicitly do *not* use the C++11 decltype operator as we want
    // the result type as it would be on an OpenCL device, not the actual C++
    // type resulting from "invoking" the function on the host.
    typedef typename ::boost::tr1_result_of<Signature>::type type;
};

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_TYPE_TRAITS_RESULT_OF_HPP

/* result_of.hpp
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
*/