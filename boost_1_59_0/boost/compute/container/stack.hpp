//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_CONTAINER_STACK_HPP
#define BOOST_COMPUTE_CONTAINER_STACK_HPP

#include <boost/compute/container/vector.hpp>

namespace boost {
namespace compute {

template<class T>
class stack
{
public:
    typedef vector<T> container_type;
    typedef typename container_type::size_type size_type;
    typedef typename container_type::value_type value_type;

    stack()
    {
    }

    stack(const stack<T> &other)
        : m_vector(other.m_vector)
    {
    }

    stack<T>& operator=(const stack<T> &other)
    {
        if(this != &other){
            m_vector = other.m_vector;
        }

        return *this;
    }

    ~stack()
    {
    }

    bool empty() const
    {
        return m_vector.empty();
    }

    size_type size() const
    {
        return m_vector.size();
    }

    value_type top() const
    {
        return m_vector.back();
    }

    void push(const T &value)
    {
        m_vector.push_back(value);
    }

    void pop()
    {
        m_vector.pop_back();
    }

private:
    container_type m_vector;
};

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_CONTAINER_STACK_HPP

/* stack.hpp
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
*/