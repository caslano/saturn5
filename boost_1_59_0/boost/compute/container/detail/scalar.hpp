//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_CONTAINER_DETAIL_SCALAR_HPP
#define BOOST_COMPUTE_CONTAINER_DETAIL_SCALAR_HPP

#include <boost/compute/buffer.hpp>
#include <boost/compute/event.hpp>
#include <boost/compute/detail/read_write_single_value.hpp>

namespace boost {
namespace compute {
namespace detail {

// scalar<T> provides a trivial "container" that stores a
// single value in a memory buffer on a compute device
template<class T>
class scalar
{
public:
    typedef T value_type;

    scalar(const context &context)
        : m_buffer(context, sizeof(T))
    {
    }

    ~scalar()
    {
    }

    T read(command_queue &queue) const
    {
        return read_single_value<T>(m_buffer, 0, queue);
    }

    event write(const T &value, command_queue &queue)
    {
        return write_single_value<T>(value, m_buffer, 0, queue);
    }

    const buffer& get_buffer() const
    {
        return m_buffer;
    }

private:
    buffer m_buffer;
};

} // end detail namespace
} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_CONTAINER_DETAIL_SCALAR_HPP

/* scalar.hpp
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
*/