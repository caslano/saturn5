//---------------------------------------------------------------------------//
// Copyright (c) 2013-2015 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ASYNC_WAIT_GUARD_HPP
#define BOOST_COMPUTE_ASYNC_WAIT_GUARD_HPP

#include <boost/noncopyable.hpp>

namespace boost {
namespace compute {

/// \class wait_guard
/// \brief A guard object for synchronizing an operation on the device
///
/// The wait_guard class stores a waitable object representing an operation
/// on a compute device (e.g. \ref event, \ref future "future<T>") and calls
/// its \c wait() method when the guard object goes out of scope.
///
/// This is useful for ensuring that an OpenCL operation completes before
/// leaving the current scope and cleaning up any resources.
///
/// For example:
/// \code
/// // enqueue a compute kernel for execution
/// event e = queue.enqueue_nd_range_kernel(...);
///
/// // call e.wait() upon exiting the current scope
/// wait_guard<event> guard(e);
/// \endcode
///
/// \ref wait_list, wait_for_all()
template<class Waitable>
class wait_guard : boost::noncopyable
{
public:
    /// Creates a new wait_guard object for \p waitable.
    wait_guard(const Waitable &waitable)
        : m_waitable(waitable)
    {
    }

    /// Destroys the wait_guard object. The default implementation will call
    /// \c wait() on the stored waitable object.
    ~wait_guard()
    {
        m_waitable.wait();
    }

private:
    Waitable m_waitable;
};

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ASYNC_WAIT_GUARD_HPP

/* wait_guard.hpp
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
*/