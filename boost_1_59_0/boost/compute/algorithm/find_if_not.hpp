//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ALGORITHM_FIND_IF_NOT_HPP
#define BOOST_COMPUTE_ALGORITHM_FIND_IF_NOT_HPP

#include <boost/static_assert.hpp>

#include <boost/compute/system.hpp>
#include <boost/compute/functional.hpp>
#include <boost/compute/command_queue.hpp>
#include <boost/compute/algorithm/find_if.hpp>
#include <boost/compute/type_traits/is_device_iterator.hpp>

namespace boost {
namespace compute {

/// Returns an iterator pointing to the first element in the range
/// [\p first, \p last) for which \p predicate returns \c false.
///
/// Space complexity: \Omega(1)
///
/// \see find_if()
template<class InputIterator, class UnaryPredicate>
inline InputIterator find_if_not(InputIterator first,
                                 InputIterator last,
                                 UnaryPredicate predicate,
                                 command_queue &queue = system::default_queue())
{
    BOOST_STATIC_ASSERT(is_device_iterator<InputIterator>::value);
    return ::boost::compute::find_if(
               first,
               last,
               not1(predicate),
               queue
           );
}

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ALGORITHM_FIND_IF_NOT_HPP

/* find_if_not.hpp
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
*/