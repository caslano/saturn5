//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ALGORITHM_DETAIL_RANDOM_FILL_HPP
#define BOOST_COMPUTE_ALGORITHM_DETAIL_RANDOM_FILL_HPP

#include <iterator>

#include <boost/compute/command_queue.hpp>
#include <boost/compute/random/default_random_engine.hpp>
#include <boost/compute/random/uniform_real_distribution.hpp>

namespace boost {
namespace compute {
namespace detail {

template<class OutputIterator, class Generator>
inline void random_fill(OutputIterator first,
                        OutputIterator last,
                        Generator &g,
                        command_queue &queue)
{
    g.fill(first, last, queue);
}

template<class OutputIterator>
inline void
random_fill(OutputIterator first,
            OutputIterator last,
            typename std::iterator_traits<OutputIterator>::value_type lo,
            typename std::iterator_traits<OutputIterator>::value_type hi,
            command_queue &queue)
{
    typedef typename
        std::iterator_traits<OutputIterator>::value_type value_type;
    typedef typename
        boost::compute::default_random_engine engine_type;
    typedef typename
        boost::compute::uniform_real_distribution<value_type> distribution_type;

    engine_type engine(queue);
    distribution_type generator(lo, hi);
    generator.fill(first, last, engine, queue);
}

} // end detail namespace
} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ALGORITHM_DETAIL_RANDOM_FILL_HPP

/* random_fill.hpp
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
*/