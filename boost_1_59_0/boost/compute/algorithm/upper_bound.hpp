//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ALGORITHM_UPPER_BOUND_HPP
#define BOOST_COMPUTE_ALGORITHM_UPPER_BOUND_HPP

#include <boost/static_assert.hpp>

#include <boost/compute/lambda.hpp>
#include <boost/compute/system.hpp>
#include <boost/compute/command_queue.hpp>
#include <boost/compute/algorithm/detail/binary_find.hpp>
#include <boost/compute/type_traits/is_device_iterator.hpp>

namespace boost {
namespace compute {

/// Returns an iterator pointing to the first element in the sorted
/// range [\p first, \p last) that is not less than or equal to
/// \p value.
///
/// Space complexity: \Omega(1)
template<class InputIterator, class T>
inline InputIterator
upper_bound(InputIterator first,
            InputIterator last,
            const T &value,
            command_queue &queue = system::default_queue())
{
    BOOST_STATIC_ASSERT(is_device_iterator<InputIterator>::value);
    using ::boost::compute::_1;

    InputIterator position =
        detail::binary_find(first, last, _1 > value, queue);

    return position;
}

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ALGORITHM_UPPER_BOUND_HPP

/* upper_bound.hpp
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
*/