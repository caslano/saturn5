//---------------------------------------------------------------------------//
// Copyright (c) 2014 Roshan <thisisroshansmail@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ALGORITHM_PARTITION_POINT_HPP
#define BOOST_COMPUTE_ALGORITHM_PARTITION_POINT_HPP

#include <boost/static_assert.hpp>

#include <boost/compute/system.hpp>
#include <boost/compute/command_queue.hpp>
#include <boost/compute/algorithm/detail/binary_find.hpp>
#include <boost/compute/type_traits/is_device_iterator.hpp>

namespace boost {
namespace compute {

///
/// \brief Partition point algorithm
///
/// Finds the end of true values in the partitioned range [first, last)
/// \return Iterator pointing to end of true values
///
/// \param first Iterator pointing to start of range
/// \param last Iterator pointing to end of range
/// \param predicate Unary predicate to be applied on each element
/// \param queue Queue on which to execute
///
/// Space complexity: \Omega(1)
///
/// \see partition() and stable_partition()
///
template<class InputIterator, class UnaryPredicate>
inline InputIterator partition_point(InputIterator first,
                                     InputIterator last,
                                     UnaryPredicate predicate,
                                     command_queue &queue = system::default_queue())
{
    BOOST_STATIC_ASSERT(is_device_iterator<InputIterator>::value);
    return detail::binary_find(first, last, not1(predicate), queue);
}

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ALGORITHM_PARTITION_POINT_HPP

/* partition_point.hpp
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
*/