//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ALGORITHM_EQUAL_RANGE_HPP
#define BOOST_COMPUTE_ALGORITHM_EQUAL_RANGE_HPP

#include <utility>

#include <boost/static_assert.hpp>

#include <boost/compute/system.hpp>
#include <boost/compute/command_queue.hpp>
#include <boost/compute/algorithm/lower_bound.hpp>
#include <boost/compute/algorithm/upper_bound.hpp>
#include <boost/compute/type_traits/is_device_iterator.hpp>

namespace boost {
namespace compute {

/// Returns a pair of iterators containing the range of values equal
/// to \p value in the sorted range [\p first, \p last).
///
/// Space complexity: \Omega(1)
template<class InputIterator, class T>
inline std::pair<InputIterator, InputIterator>
equal_range(InputIterator first,
            InputIterator last,
            const T &value,
            command_queue &queue = system::default_queue())
{
    BOOST_STATIC_ASSERT(is_device_iterator<InputIterator>::value);
    return std::make_pair(
               ::boost::compute::lower_bound(first, last, value, queue),
               ::boost::compute::upper_bound(first, last, value, queue)
           );
}

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ALGORITHM_EQUAL_RANGE_HPP

/* equal_range.hpp
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
*/