//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ALGORITHM_ALL_OF_HPP
#define BOOST_COMPUTE_ALGORITHM_ALL_OF_HPP

#include <boost/static_assert.hpp>

#include <boost/compute/system.hpp>
#include <boost/compute/algorithm/find_if_not.hpp>
#include <boost/compute/type_traits/is_device_iterator.hpp>

namespace boost {
namespace compute {

/// Returns \c true if \p predicate returns \c true for all of the elements in
/// the range [\p first, \p last).
///
/// Space complexity: \Omega(1)
///
/// \see any_of(), none_of()
template<class InputIterator, class UnaryPredicate>
inline bool all_of(InputIterator first,
                   InputIterator last,
                   UnaryPredicate predicate,
                   command_queue &queue = system::default_queue())
{
    BOOST_STATIC_ASSERT(is_device_iterator<InputIterator>::value);
    return ::boost::compute::find_if_not(first, last, predicate, queue) == last;
}

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ALGORITHM_ALL_OF_HPP

/* all_of.hpp
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
*/