//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_ALGORITHM_FIND_IF_HPP
#define BOOST_COMPUTE_ALGORITHM_FIND_IF_HPP

#include <boost/static_assert.hpp>

#include <boost/compute/system.hpp>
#include <boost/compute/command_queue.hpp>
#include <boost/compute/algorithm/detail/find_if_with_atomics.hpp>
#include <boost/compute/type_traits/is_device_iterator.hpp>

namespace boost {
namespace compute {

/// Returns an iterator pointing to the first element in the range
/// [\p first, \p last) for which \p predicate returns \c true.
///
/// Space complexity: \Omega(1)
template<class InputIterator, class UnaryPredicate>
inline InputIterator find_if(InputIterator first,
                             InputIterator last,
                             UnaryPredicate predicate,
                             command_queue &queue = system::default_queue())
{
    BOOST_STATIC_ASSERT(is_device_iterator<InputIterator>::value);
    return detail::find_if_with_atomics(first, last, predicate, queue);
}

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_ALGORITHM_FIND_IF_HPP

/* find_if.hpp
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
*/