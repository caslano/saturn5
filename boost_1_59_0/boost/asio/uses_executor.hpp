//
// uses_executor.hpp
// ~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_USES_EXECUTOR_HPP
#define BOOST_ASIO_USES_EXECUTOR_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/type_traits.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {

/// A special type, similar to std::nothrow_t, used to disambiguate
/// constructors that accept executor arguments.
/**
 * The executor_arg_t struct is an empty structure type used as a unique type
 * to disambiguate constructor and function overloading. Specifically, some
 * types have constructors with executor_arg_t as the first argument,
 * immediately followed by an argument of a type that satisfies the Executor
 * type requirements.
 */
struct executor_arg_t
{
  /// Constructor.
  BOOST_ASIO_CONSTEXPR executor_arg_t() BOOST_ASIO_NOEXCEPT
  {
  }
};

/// A special value, similar to std::nothrow, used to disambiguate constructors
/// that accept executor arguments.
/**
 * See boost::asio::executor_arg_t and boost::asio::uses_executor
 * for more information.
 */
#if defined(BOOST_ASIO_HAS_CONSTEXPR) || defined(GENERATING_DOCUMENTATION)
constexpr executor_arg_t executor_arg;
#elif defined(BOOST_ASIO_MSVC)
__declspec(selectany) executor_arg_t executor_arg;
#endif

/// The uses_executor trait detects whether a type T has an associated executor
/// that is convertible from type Executor.
/**
 * Meets the BinaryTypeTrait requirements. The Asio library provides a
 * definition that is derived from false_type. A program may specialize this
 * template to derive from true_type for a user-defined type T that can be
 * constructed with an executor, where the first argument of a constructor has
 * type executor_arg_t and the second argument is convertible from type
 * Executor.
 */
template <typename T, typename Executor>
struct uses_executor : false_type {};

} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_USES_EXECUTOR_HPP

/* uses_executor.hpp
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
*/