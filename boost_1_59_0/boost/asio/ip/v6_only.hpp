//
// ip/v6_only.hpp
// ~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_IP_V6_ONLY_HPP
#define BOOST_ASIO_IP_V6_ONLY_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/socket_option.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace ip {

/// Socket option for determining whether an IPv6 socket supports IPv6
/// communication only.
/**
 * Implements the IPPROTO_IPV6/IPV6_V6ONLY socket option.
 *
 * @par Examples
 * Setting the option:
 * @code
 * boost::asio::ip::tcp::socket socket(my_context);
 * ...
 * boost::asio::ip::v6_only option(true);
 * socket.set_option(option);
 * @endcode
 *
 * @par
 * Getting the current option value:
 * @code
 * boost::asio::ip::tcp::socket socket(my_context);
 * ...
 * boost::asio::ip::v6_only option;
 * socket.get_option(option);
 * bool v6_only = option.value();
 * @endcode
 *
 * @par Concepts:
 * GettableSocketOption, SettableSocketOption.
 */
#if defined(GENERATING_DOCUMENTATION)
typedef implementation_defined v6_only;
#elif defined(IPV6_V6ONLY)
typedef boost::asio::detail::socket_option::boolean<
    IPPROTO_IPV6, IPV6_V6ONLY> v6_only;
#else
typedef boost::asio::detail::socket_option::boolean<
    boost::asio::detail::custom_socket_option_level,
    boost::asio::detail::always_fail_option> v6_only;
#endif

} // namespace ip
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_IP_V6_ONLY_HPP

/* v6_only.hpp
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
*/