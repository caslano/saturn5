//
// time_traits.hpp
// ~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_TIME_TRAITS_HPP
#define BOOST_ASIO_TIME_TRAITS_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/socket_types.hpp> // Must come before posix_time.

#if defined(BOOST_ASIO_HAS_BOOST_DATE_TIME) \
  || defined(GENERATING_DOCUMENTATION)

#include <boost/date_time/posix_time/posix_time_types.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {

/// Time traits suitable for use with the deadline timer.
template <typename Time>
struct time_traits;

/// Time traits specialised for posix_time.
template <>
struct time_traits<boost::posix_time::ptime>
{
  /// The time type.
  typedef boost::posix_time::ptime time_type;

  /// The duration type.
  typedef boost::posix_time::time_duration duration_type;

  /// Get the current time.
  static time_type now()
  {
#if defined(BOOST_DATE_TIME_HAS_HIGH_PRECISION_CLOCK)
    return boost::posix_time::microsec_clock::universal_time();
#else // defined(BOOST_DATE_TIME_HAS_HIGH_PRECISION_CLOCK)
    return boost::posix_time::second_clock::universal_time();
#endif // defined(BOOST_DATE_TIME_HAS_HIGH_PRECISION_CLOCK)
  }

  /// Add a duration to a time.
  static time_type add(const time_type& t, const duration_type& d)
  {
    return t + d;
  }

  /// Subtract one time from another.
  static duration_type subtract(const time_type& t1, const time_type& t2)
  {
    return t1 - t2;
  }

  /// Test whether one time is less than another.
  static bool less_than(const time_type& t1, const time_type& t2)
  {
    return t1 < t2;
  }

  /// Convert to POSIX duration type.
  static boost::posix_time::time_duration to_posix_duration(
      const duration_type& d)
  {
    return d;
  }
};

} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // defined(BOOST_ASIO_HAS_BOOST_DATE_TIME)
       // || defined(GENERATING_DOCUMENTATION)

#endif // BOOST_ASIO_TIME_TRAITS_HPP

/* time_traits.hpp
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
*/