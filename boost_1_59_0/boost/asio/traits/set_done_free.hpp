//
// traits/set_done_free.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_TRAITS_SET_DONE_FREE_HPP
#define BOOST_ASIO_TRAITS_SET_DONE_FREE_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/type_traits.hpp>

#if defined(BOOST_ASIO_HAS_DECLTYPE) \
  && defined(BOOST_ASIO_HAS_NOEXCEPT) \
  && defined(BOOST_ASIO_HAS_WORKING_EXPRESSION_SFINAE)
# define BOOST_ASIO_HAS_DEDUCED_SET_DONE_FREE_TRAIT 1
#endif // defined(BOOST_ASIO_HAS_DECLTYPE)
       //   && defined(BOOST_ASIO_HAS_NOEXCEPT)
       //   && defined(BOOST_ASIO_HAS_WORKING_EXPRESSION_SFINAE)

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace traits {

template <typename T, typename = void>
struct set_done_free_default;

template <typename T, typename = void>
struct set_done_free;

} // namespace traits
namespace detail {

struct no_set_done_free
{
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_valid = false);
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_noexcept = false);
};

#if defined(BOOST_ASIO_HAS_DEDUCED_SET_DONE_FREE_TRAIT)

template <typename T, typename = void>
struct set_done_free_trait : no_set_done_free
{
};

template <typename T>
struct set_done_free_trait<T,
  typename void_type<
    decltype(set_done(declval<T>()))
  >::type>
{
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_valid = true);

  using result_type = decltype(set_done(declval<T>()));

  BOOST_ASIO_STATIC_CONSTEXPR(bool,
    is_noexcept = noexcept(set_done(declval<T>())));
};

#else // defined(BOOST_ASIO_HAS_DEDUCED_SET_DONE_FREE_TRAIT)

template <typename T, typename = void>
struct set_done_free_trait :
  conditional<
    is_same<T, typename remove_reference<T>::type>::value,
    typename conditional<
      is_same<T, typename add_const<T>::type>::value,
      no_set_done_free,
      traits::set_done_free<typename add_const<T>::type>
    >::type,
    traits::set_done_free<typename remove_reference<T>::type>
  >::type
{
};

#endif // defined(BOOST_ASIO_HAS_DEDUCED_SET_DONE_FREE_TRAIT)

} // namespace detail
namespace traits {

template <typename T, typename>
struct set_done_free_default :
  detail::set_done_free_trait<T>
{
};

template <typename T, typename>
struct set_done_free :
  set_done_free_default<T>
{
};

} // namespace traits
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_TRAITS_SET_DONE_FREE_HPP

/* set_done_free.hpp
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
*/