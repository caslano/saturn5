//
// traits/start_member.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_TRAITS_START_MEMBER_HPP
#define BOOST_ASIO_TRAITS_START_MEMBER_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/type_traits.hpp>

#if defined(BOOST_ASIO_HAS_DECLTYPE) \
  && defined(BOOST_ASIO_HAS_NOEXCEPT) \
  && defined(BOOST_ASIO_HAS_WORKING_EXPRESSION_SFINAE)
# define BOOST_ASIO_HAS_DEDUCED_START_MEMBER_TRAIT 1
#endif // defined(BOOST_ASIO_HAS_DECLTYPE)
       //   && defined(BOOST_ASIO_HAS_NOEXCEPT)
       //   && defined(BOOST_ASIO_HAS_WORKING_EXPRESSION_SFINAE)

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace traits {

template <typename T, typename = void>
struct start_member_default;

template <typename T, typename = void>
struct start_member;

} // namespace traits
namespace detail {

struct no_start_member
{
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_valid = false);
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_noexcept = false);
};

#if defined(BOOST_ASIO_HAS_DEDUCED_START_MEMBER_TRAIT)

template <typename T, typename = void>
struct start_member_trait : no_start_member
{
};

template <typename T>
struct start_member_trait<T,
  typename void_type<
    decltype(declval<T>().start())
  >::type>
{
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_valid = true);

  using result_type = decltype(declval<T>().start());

  BOOST_ASIO_STATIC_CONSTEXPR(bool,
    is_noexcept = noexcept(declval<T>().start()));
};

#else // defined(BOOST_ASIO_HAS_DEDUCED_START_MEMBER_TRAIT)

template <typename T, typename = void>
struct start_member_trait :
  conditional<
    is_same<T, typename remove_reference<T>::type>::value,
    typename conditional<
      is_same<T, typename add_const<T>::type>::value,
      no_start_member,
      traits::start_member<typename add_const<T>::type>
    >::type,
    traits::start_member<typename remove_reference<T>::type>
  >::type
{
};

#endif // defined(BOOST_ASIO_HAS_DEDUCED_START_MEMBER_TRAIT)

} // namespace detail
namespace traits {

template <typename T, typename>
struct start_member_default :
  detail::start_member_trait<T>
{
};

template <typename T, typename>
struct start_member :
  start_member_default<T>
{
};

} // namespace traits
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_TRAITS_START_MEMBER_HPP

/* start_member.hpp
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
*/