//
// traits/schedule_free.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_TRAITS_SCHEDULE_FREE_HPP
#define BOOST_ASIO_TRAITS_SCHEDULE_FREE_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/type_traits.hpp>

#if defined(BOOST_ASIO_HAS_DECLTYPE) \
  && defined(BOOST_ASIO_HAS_NOEXCEPT) \
  && defined(BOOST_ASIO_HAS_WORKING_EXPRESSION_SFINAE)
# define BOOST_ASIO_HAS_DEDUCED_SCHEDULE_FREE_TRAIT 1
#endif // defined(BOOST_ASIO_HAS_DECLTYPE)
       //   && defined(BOOST_ASIO_HAS_NOEXCEPT)
       //   && defined(BOOST_ASIO_HAS_WORKING_EXPRESSION_SFINAE)

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace traits {

template <typename T, typename = void>
struct schedule_free_default;

template <typename T, typename = void>
struct schedule_free;

} // namespace traits
namespace detail {

struct no_schedule_free
{
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_valid = false);
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_noexcept = false);
};

#if defined(BOOST_ASIO_HAS_DEDUCED_SCHEDULE_FREE_TRAIT)

template <typename T, typename = void>
struct schedule_free_trait : no_schedule_free
{
};

template <typename T>
struct schedule_free_trait<T,
  typename void_type<
    decltype(schedule(declval<T>()))
  >::type>
{
  BOOST_ASIO_STATIC_CONSTEXPR(bool, is_valid = true);

  using result_type = decltype(schedule(declval<T>()));

  BOOST_ASIO_STATIC_CONSTEXPR(bool,
    is_noexcept = noexcept(schedule(declval<T>())));
};

#else // defined(BOOST_ASIO_HAS_DEDUCED_SCHEDULE_FREE_TRAIT)

template <typename T, typename = void>
struct schedule_free_trait :
  conditional<
    is_same<T, typename remove_reference<T>::type>::value,
    typename conditional<
      is_same<T, typename add_const<T>::type>::value,
      no_schedule_free,
      traits::schedule_free<typename add_const<T>::type>
    >::type,
    traits::schedule_free<typename remove_reference<T>::type>
  >::type
{
};

#endif // defined(BOOST_ASIO_HAS_DEDUCED_SCHEDULE_FREE_TRAIT)

} // namespace detail
namespace traits {

template <typename T, typename>
struct schedule_free_default :
  detail::schedule_free_trait<T>
{
};

template <typename T, typename>
struct schedule_free :
  schedule_free_default<T>
{
};

} // namespace traits
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_TRAITS_SCHEDULE_FREE_HPP

/* schedule_free.hpp
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
*/