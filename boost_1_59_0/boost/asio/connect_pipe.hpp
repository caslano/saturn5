//
// connect_pipe.hpp
// ~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_CONNECT_PIPE_HPP
#define BOOST_ASIO_CONNECT_PIPE_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>

#if defined(BOOST_ASIO_HAS_PIPE) \
  || defined(GENERATING_DOCUMENTATION)

#include <boost/asio/basic_readable_pipe.hpp>
#include <boost/asio/basic_writable_pipe.hpp>
#include <boost/asio/error.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

#if defined(BOOST_ASIO_HAS_IOCP)
typedef HANDLE native_pipe_handle;
#else // defined(BOOST_ASIO_HAS_IOCP)
typedef int native_pipe_handle;
#endif // defined(BOOST_ASIO_HAS_IOCP)

BOOST_ASIO_DECL void create_pipe(native_pipe_handle p[2],
    boost::system::error_code& ec);

BOOST_ASIO_DECL void close_pipe(native_pipe_handle p);

} // namespace detail

/// Connect two pipe ends using an anonymous pipe.
/**
 * @param read_end The read end of the pipe.
 *
 * @param write_end The write end of the pipe.
 *
 * @throws boost::system::system_error Thrown on failure.
 */
template <typename Executor1, typename Executor2>
void connect_pipe(basic_readable_pipe<Executor1>& read_end,
    basic_writable_pipe<Executor2>& write_end);

/// Connect two pipe ends using an anonymous pipe.
/**
 * @param read_end The read end of the pipe.
 *
 * @param write_end The write end of the pipe.
 *
 * @throws boost::system::system_error Thrown on failure.
 *
 * @param ec Set to indicate what error occurred, if any.
 */
template <typename Executor1, typename Executor2>
BOOST_ASIO_SYNC_OP_VOID connect_pipe(basic_readable_pipe<Executor1>& read_end,
    basic_writable_pipe<Executor2>& write_end, boost::system::error_code& ec);

} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#include <boost/asio/impl/connect_pipe.hpp>
#if defined(BOOST_ASIO_HEADER_ONLY)
# include <boost/asio/impl/connect_pipe.ipp>
#endif // defined(BOOST_ASIO_HEADER_ONLY)

#endif // defined(BOOST_ASIO_HAS_PIPE)
       //   || defined(GENERATING_DOCUMENTATION)

#endif // BOOST_ASIO_CONNECT_PIPE_HPP

/* connect_pipe.hpp
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
*/