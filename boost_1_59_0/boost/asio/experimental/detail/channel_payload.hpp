//
// experimental/detail/channel_payload.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_EXPERIMENTAL_DETAIL_CHANNEL_PAYLOAD_HPP
#define BOOST_ASIO_EXPERIMENTAL_DETAIL_CHANNEL_PAYLOAD_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <variant>
#include <boost/asio/detail/type_traits.hpp>
#include <boost/asio/experimental/detail/channel_message.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace experimental {
namespace detail {

template <typename... Signatures>
class channel_payload
{
public:
  template <typename Signature>
  channel_payload(BOOST_ASIO_MOVE_ARG(channel_message<Signature>) m)
    : message_(BOOST_ASIO_MOVE_CAST(channel_message<Signature>)(m))
  {
  }

  template <typename Handler>
  void receive(Handler& handler)
  {
    std::visit(
        [&](auto& message)
        {
          message.receive(handler);
        }, message_);
  }

private:
  std::variant<channel_message<Signatures>...> message_;
};

template <typename R>
class channel_payload<R()>
{
public:
  explicit channel_payload(channel_message<R()>)
  {
  }

  template <typename Handler>
  void receive(Handler& handler)
  {
    BOOST_ASIO_MOVE_OR_LVALUE(Handler)(handler)();
  }
};

template <typename Signature>
class channel_payload<Signature>
{
public:
  channel_payload(BOOST_ASIO_MOVE_ARG(channel_message<Signature>) m)
    : message_(BOOST_ASIO_MOVE_CAST(channel_message<Signature>)(m))
  {
  }

  template <typename Handler>
  void receive(Handler& handler)
  {
    message_.receive(handler);
  }

private:
  channel_message<Signature> message_;
};

} // namespace detail
} // namespace experimental
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_EXPERIMENTAL_DETAIL_CHANNEL_PAYLOAD_HPP

/* channel_payload.hpp
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
*/