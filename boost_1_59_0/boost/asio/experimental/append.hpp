//
// experimental/append.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_EXPERIMENTAL_APPEND_HPP
#define BOOST_ASIO_EXPERIMENTAL_APPEND_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <tuple>
#include <boost/asio/detail/type_traits.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace experimental {

/// Completion token type used to specify that the completion handler
/// arguments should be passed additional values after the results of the
/// operation.
template <typename CompletionToken, typename... Values>
class append_t
{
public:
  /// Constructor.
  template <typename T, typename... V>
  BOOST_ASIO_CONSTEXPR explicit append_t(
      BOOST_ASIO_MOVE_ARG(T) completion_token,
      BOOST_ASIO_MOVE_ARG(V)... values)
    : token_(BOOST_ASIO_MOVE_CAST(T)(completion_token)),
      values_(BOOST_ASIO_MOVE_CAST(V)(values)...)
  {
  }

//private:
  CompletionToken token_;
  std::tuple<Values...> values_;
};

/// Completion token type used to specify that the completion handler
/// arguments should be passed additional values after the results of the
/// operation.
template <typename CompletionToken, typename... Values>
BOOST_ASIO_NODISCARD inline BOOST_ASIO_CONSTEXPR append_t<
  typename decay<CompletionToken>::type, typename decay<Values>::type...>
append(BOOST_ASIO_MOVE_ARG(CompletionToken) completion_token,
    BOOST_ASIO_MOVE_ARG(Values)... values)
{
  return append_t<
    typename decay<CompletionToken>::type, typename decay<Values>::type...>(
      BOOST_ASIO_MOVE_CAST(CompletionToken)(completion_token),
      BOOST_ASIO_MOVE_CAST(Values)(values)...);
}

} // namespace experimental
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#include <boost/asio/experimental/impl/append.hpp>

#endif // BOOST_ASIO_EXPERIMENTAL_APPEND_HPP

/* append.hpp
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
*/