//
// experimental/channel_error.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_EXPERIMENTAL_CHANNEL_ERROR_HPP
#define BOOST_ASIO_EXPERIMENTAL_CHANNEL_ERROR_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/system/error_code.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace experimental {
namespace error {

enum channel_errors
{
  /// The channel was closed.
  channel_closed = 1,

  /// The channel was cancelled.
  channel_cancelled = 2
};

extern BOOST_ASIO_DECL
const boost::system::error_category& get_channel_category();

static const boost::system::error_category&
  channel_category BOOST_ASIO_UNUSED_VARIABLE
  = boost::asio::experimental::error::get_channel_category();

} // namespace error
namespace channel_errc {
  // Simulates a scoped enum.
  using error::channel_closed;
  using error::channel_cancelled;
} // namespace channel_errc
} // namespace experimental
} // namespace asio
} // namespace boost

namespace boost {
namespace system {

template<> struct is_error_code_enum<
    boost::asio::experimental::error::channel_errors>
{
  static const bool value = true;
};

} // namespace system
} // namespace boost

namespace boost {
namespace asio {
namespace experimental {
namespace error {

inline boost::system::error_code make_error_code(channel_errors e)
{
  return boost::system::error_code(
      static_cast<int>(e), get_channel_category());
}

} // namespace error
} // namespace experimental
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#if defined(BOOST_ASIO_HEADER_ONLY)
# include <boost/asio/experimental/impl/channel_error.ipp>
#endif // defined(BOOST_ASIO_HEADER_ONLY)

#endif // BOOST_ASIO_EXPERIMENTAL_CHANNEL_ERROR_HPP

/* channel_error.hpp
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
*/