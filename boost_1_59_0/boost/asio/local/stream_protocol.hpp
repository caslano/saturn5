//
// local/stream_protocol.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_LOCAL_STREAM_PROTOCOL_HPP
#define BOOST_ASIO_LOCAL_STREAM_PROTOCOL_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>

#if defined(BOOST_ASIO_HAS_LOCAL_SOCKETS) \
  || defined(GENERATING_DOCUMENTATION)

#include <boost/asio/basic_socket_acceptor.hpp>
#include <boost/asio/basic_socket_iostream.hpp>
#include <boost/asio/basic_stream_socket.hpp>
#include <boost/asio/detail/socket_types.hpp>
#include <boost/asio/local/basic_endpoint.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace local {

/// Encapsulates the flags needed for stream-oriented UNIX sockets.
/**
 * The boost::asio::local::stream_protocol class contains flags necessary for
 * stream-oriented UNIX domain sockets.
 *
 * @par Thread Safety
 * @e Distinct @e objects: Safe.@n
 * @e Shared @e objects: Safe.
 *
 * @par Concepts:
 * Protocol.
 */
class stream_protocol
{
public:
  /// Obtain an identifier for the type of the protocol.
  int type() const BOOST_ASIO_NOEXCEPT
  {
    return SOCK_STREAM;
  }

  /// Obtain an identifier for the protocol.
  int protocol() const BOOST_ASIO_NOEXCEPT
  {
    return 0;
  }

  /// Obtain an identifier for the protocol family.
  int family() const BOOST_ASIO_NOEXCEPT
  {
    return AF_UNIX;
  }

  /// The type of a UNIX domain endpoint.
  typedef basic_endpoint<stream_protocol> endpoint;

  /// The UNIX domain socket type.
  typedef basic_stream_socket<stream_protocol> socket;

  /// The UNIX domain acceptor type.
  typedef basic_socket_acceptor<stream_protocol> acceptor;

#if !defined(BOOST_ASIO_NO_IOSTREAM)
  /// The UNIX domain iostream type.
  typedef basic_socket_iostream<stream_protocol> iostream;
#endif // !defined(BOOST_ASIO_NO_IOSTREAM)
};

} // namespace local
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // defined(BOOST_ASIO_HAS_LOCAL_SOCKETS)
       //   || defined(GENERATING_DOCUMENTATION)

#endif // BOOST_ASIO_LOCAL_STREAM_PROTOCOL_HPP

/* stream_protocol.hpp
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
*/