//
// ssl/verify_mode.hpp
// ~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_SSL_VERIFY_MODE_HPP
#define BOOST_ASIO_SSL_VERIFY_MODE_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/ssl/detail/openssl_types.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace ssl {

/// Bitmask type for peer verification.
/**
 * Possible values are:
 *
 * @li @ref verify_none
 * @li @ref verify_peer
 * @li @ref verify_fail_if_no_peer_cert
 * @li @ref verify_client_once
 */
typedef int verify_mode;

#if defined(GENERATING_DOCUMENTATION)
/// No verification.
const int verify_none = implementation_defined;

/// Verify the peer.
const int verify_peer = implementation_defined;

/// Fail verification if the peer has no certificate. Ignored unless
/// @ref verify_peer is set.
const int verify_fail_if_no_peer_cert = implementation_defined;

/// Do not request client certificate on renegotiation. Ignored unless
/// @ref verify_peer is set.
const int verify_client_once = implementation_defined;
#else
const int verify_none = SSL_VERIFY_NONE;
const int verify_peer = SSL_VERIFY_PEER;
const int verify_fail_if_no_peer_cert = SSL_VERIFY_FAIL_IF_NO_PEER_CERT;
const int verify_client_once = SSL_VERIFY_CLIENT_ONCE;
#endif

} // namespace ssl
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_SSL_VERIFY_MODE_HPP

/* verify_mode.hpp
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
*/