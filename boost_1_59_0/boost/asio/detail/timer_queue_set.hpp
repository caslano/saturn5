//
// detail/timer_queue_set.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_TIMER_QUEUE_SET_HPP
#define BOOST_ASIO_DETAIL_TIMER_QUEUE_SET_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/timer_queue_base.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

class timer_queue_set
{
public:
  // Constructor.
  BOOST_ASIO_DECL timer_queue_set();

  // Add a timer queue to the set.
  BOOST_ASIO_DECL void insert(timer_queue_base* q);

  // Remove a timer queue from the set.
  BOOST_ASIO_DECL void erase(timer_queue_base* q);

  // Determine whether all queues are empty.
  BOOST_ASIO_DECL bool all_empty() const;

  // Get the wait duration in milliseconds.
  BOOST_ASIO_DECL long wait_duration_msec(long max_duration) const;

  // Get the wait duration in microseconds.
  BOOST_ASIO_DECL long wait_duration_usec(long max_duration) const;

  // Dequeue all ready timers.
  BOOST_ASIO_DECL void get_ready_timers(op_queue<operation>& ops);

  // Dequeue all timers.
  BOOST_ASIO_DECL void get_all_timers(op_queue<operation>& ops);

private:
  timer_queue_base* first_;
};

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#if defined(BOOST_ASIO_HEADER_ONLY)
# include <boost/asio/detail/impl/timer_queue_set.ipp>
#endif // defined(BOOST_ASIO_HEADER_ONLY)

#endif // BOOST_ASIO_DETAIL_TIMER_QUEUE_SET_HPP

/* timer_queue_set.hpp
JDHoe/pbZP3i30n6uwXw+awf/Zql7L+sgaMk37S1aZ4B/qHVk0CoLN8hopUnItKTFWJ/GHmJJ+pr6ik0lzh2rC4MFcqUufGfH8Z8PnRcGEr8z0Fz13TC2JOt3z/1F9t/rQUkeey4eJWICX1TJLTAqM4KMtK0Iay0omdrkFO//cm0LqPibKstQ/yI7/mQTinOv7DQBB9Y6fNhZn+fmf3P9gYuWzg7X+c0BnICvxiI/pPloOxo4fEnjpa/rQhOqNh/XRHuA5ZPLp2N91kYKOpXzLayYCkyx/prUsGFmY8yinZ8OEI2YBylpk2Vz6xCOHKJkajVmjY5mZSL2pz2ylOai1TB2sxtPxGde0l0PEVH/jIZ0dt0ucJvg/9nSv3/I3hx0N8Fb855vEWR+By1DnkqY5iR6M2qDNJfXhAxIka8yRivXQyFEwHgz92+NT7796IS+/uomElTzenD/DVFKeFV5p/zLo6I+NsIJP52MqmYmKi4OAj0vxr7fv4yMQgQCAKCRP+HyaQQyB+MfSHQb4x9IRL/MfYVE4dCQHBFUQgQLCYOV4JJQiXhQChYXkFUAQhSFIXJccpAxSTEJWBQCBisCIFCgTCYghhMUUkJBAYqSiopgOX/q7GvGFj0b7xkaToqhWqJ2epXCNoQlccj+m8pohM5PjEsthGGSqXdFrlCtFXJ7vVYScQ3cnCSxcbIq0aHy6uS+fpfuBhXt4Gnft0OkmnuJr8ovgWH0UFT22RfWumURM7uI5yZwGzJaV4EDEL4RIZwBFIkY5e8bgnRQDv7TskElTFNh+dDjJDOXpAnoYuDwu+Z2bhThb9L7hQ/XQY7lWCzynC59cVHtbiwZOwZ1f0Uc/LrcgiJIEeIwNLlABKdHfgre527yg+JdF93akGM7sKE2m3w1KhnqXjtz+9HFRtSnbN0elSU2GqMo9QrJBUy7GdEIXW5dVp9+5lLNPaItUkvfvgvdsWfV5Q48EedqQr825mq9k+l869iaBT138vKGAfq7EeKKKflGL6HiqkI1lvUzpvyR7+5RhiPCjNX3kAZ6wpwRl/Ec5jtbeZPK4/e2iNsQ16sEvRs59x84iqfl1r3T4+z2pjstmjdL/bcBnhn2a9rsj7f+Lgw1JzuuM3Om9dpdWNtnCACa74xR7HglmSMn+gv2aD7YOSV9D6e26r/GQE72unV0g226pN+clEjV7Mv1KMJq17NZ5mb52KbkO21ruHcZnKlpXsrSe3W1UncQueFPMwD6/ZOFKHC4cU4jsWpxHUO5wesL7thPwQisQSDCbskCy64fsvF8mZZIw2TkhVVn2wTAsuGJSMO1ekTZ9hOUaZT5SlN3qVh4JlUUH3XKVHWeN4CRMgEeuKGPSTgHJczhxeB9V1eNzsdxFMD4wbMRMNx4eMskA6nm53snypbMzXwM3GEhucymBu5gII+rw2KsqEu5ledKGRycqkLD++V0pVFTYcWp0GrztPdfCd0UDOzNg9k8tABPeLjdTnc5/rPk+U2pD7G8bCut52t9te3Pjn3MXHjw5azR/OMUbuAt+r2nmKR6OtfJqoyt2WjpHCix6n1mx6uXWdZIyWdCw0B4NrPV89tVoa7t/c2Ta3aFL8B0NXCnwNPqEXpBmDSpxNaNWJ35x/eN8ZLyglYTlk4tLr3CkSgw/ENoRm6V5FU4abT63RzPgjRsUu2DwqoOI58GajqXzejtfTBrzfU7MYihkwvsvOhLhvKTiDXThvmc7xdli/INjt/gT0JeBtdUXOX9Eow89yb2YW7ERrNpv3WKGuPSW/Ker+c+MwgFL2dHyZ2nM0fEZizMThSsUNovrCHR3nvrPma7QF03O4MMToMWCT1eCKGF1DOZWaZ7sbvrKhhCGZGWV4bGF3eePCxyG72NZ0w9mQjPvLTQVCJqsJ7fIohdzh9GDeY/d6Rz/9Mk88iV8J5hJ0iKFeXnv55vY2Q3MNSqwelCWz2SUE59R+EZ9JyAA0IUbma+xbPi8NoNtX4WGMp1NKrEbUIWlXZtbXYo43Cdzhb8l2j1pFF6bkv+0EYMovHFXbEM+W5UNoW0MomNLfYkyaMac2zTGl6YXQrcfJpw7WeRYqEEfQjwVN97PhNRSPh0iUQ9NMLv5qO02d8/LUtWxjDa/m/TlSlhWsBEMbwpSphfCZynx3rJ6JraZ8EwMFwY0quMwVM2AXa7IkT5PIWLtGwBsHjdIkeOIo0msuL6ldKNNzTmK8/jY+uqRjUQDar1IVqz8jlFa2IRk7dNkIQKkJ74pUxefWsIYsnPyrQF3LnbLCwOcTwf7LxUIpNHHqLKSDk8dwYxQJGy5JLX8QGnBpRaWJoz7ivHDVdX7B8w6LdU7Id/BSz5hS2uzd5gc7r/iRF+9Nz91bovE7dPMbltwEM13jeHeK2AJu6LZXhQtPNnxssvnJJT/hVvCqGcUt8QO9kxMNCz2qxKH7fmgdSaRXsJtls0PmqT1hGzGlkA29hknbW9aN3pDdcsoLSmj2RkRd7Bup/UnnmTs4iEyO32A5UVr/N6BZvEhy7bi52lAVUEdR7JYeGY27XgJ7WcbT5VKWMFQ3SUqQ9nNq8wIrGUZ3HFo2l3kK9USkgv3VDpL2cCf08hDoruNEhVH6QSbfuwhJZuwty1xsphRlpycLzZztYoV+ZF2A+1WJirK0GjjBJ8iy/PgNabolXFjCGqMY4gDszsULOwLDL0wUUkFTrGhfZU8SMVFM/wewsZzpGKsyTeRJrzTpNpY8tz1mLK71nlRCTr0AK1K+906aiiVM5LlFdveLqcYSe0Z88kisqILoVQ+nxKN2kmTgGwAEzp4Xi42vOFPwc68I5alBHq1zyLDV7NbBzKiygOPA1HCkdH8C9xMhr3rGiciFL8NlLO6NNWTk52zzJD0XCn7I2oGo72yf1p27HiKTbRbvwXq0ko5xWjObEBpAY1BGTcKcpFFJ7LC4PsV6fX2NZjqEiV28bHL/E47ZIPuZa7F11eqktX2EGDRbdnl8bPwUX7par8L170tDE12M1zCxvjpm2KfjnvqqQO++3ai3B7icwwyUE98boM1O018vxV3mvTbVI5rmcOW0H8eZSlJ5ZjC4KrI22z7sN9VUTHIu50TgYqhHDzQ1Lic+k16hinuCrfRDwrCldIOS2DhM4NKVXbVVgSfIR+s2gozxZpFFiCj5CEu48cYtp5LppdFkRQrBrkV+GjdrodX3elCj8pZ2lwDEvOoTqu3KeYO6yaE8U7H1UaX0jAs/woHO+ofhkVuPu04zdLfl9yu1ujWLQ1vQKc6akdlOA8DmqS+YGvTVHHs0ogefydviPssVmRESTEt3o7GIJUwh2yWqiSrpbVR0/zrL7gkexyz1nhgbArb/u/8rtncWCFfGLoj7EmxjMFFWeayuFcZFeyJuLw6MBwzZuHoGPhM77VomqtZAQuPzN8uKtzxLLZayr5QAKchM0Hyx6IbQc1OhXSsMXpebLFcqDzXnEdhw9as6bF+MjLjsSLjdXvpgXN5gnTV29U+WbwQYK7KBE8glJc3GtiqC7Wo4h6ZhMSVhzELzYeILnZIhhrNgOjkl8Q0H08TVJLEP/WU1MJxPWIEkTKXeiaXKiJk0nBpfHsSFk32Ih68ERbvaz4Oo+YfnafdjM8pWqhJV7bkzWgwEkNVO+A9PWrIYWywGWZB4+i2pW+sVBTRtCjHcojPqm+c+kdN2twhXBJs6s13luFmdT7zB66AKfsMm9gwggeU5wiWDdt9hViZOoc09rrbe5Q7fyTXmR0LYPvE+P8NHQj1UM0/BmTS8vvaoGv/N90HLPLQNVMibcW0rbbV9qmNdK6w7MH1QCCgrlCeY3DU2qj8KMBN09Fsru95piExzAMtL7QraKvZznZdOEgfvHWf1gj/CkNHaGmu8sCobw/koewha6OxN6xLS4gPOz4AHSa2NjU+yJjrcmPPMezUEtxpjOxQnzlnEHupmix/synCSbTJzSdpIu2E7Md6Mj3Fm1PC+gEbObmsJLGnqv8qGVfJKs0drWSledX6uUM0UGSnQV0On1b42pDKLBmZzpDz39mpAMbxRbW0KBuXjaANKqk2uFXp5ONao+bSsR0Wxwq5Ks0L4BxF1Jtn3YcL0WU8/epn9yE8oPh04Px0ekBF2oBHVWnt6Xfe58xdvKs35wfGRKX3tsTTqdFW1Ow9UCbr3GUVHRK6MLmAjuyc0HW+VwgoAGVmnhnQzC4qv3yPRiS9/noO+j8qbu1dn4ZwQop2TX+Xg6ZucU9gaOpVakxJm04TcpAp4rZw9VLiYXAofM7V2EskhSg9G6jf5WoCssZq5t5j2Du+QdqRTHbjUwOU5Dw9eA+yZzgqLufQzUcn2rpdx7zhoUMXcUtJsyE3Q/seJRyG7dyKgc/gyCg97RF5ZwfEOsqg6Lb6xASC/IE/+WmIqVoc9bSksZEMpbQIGHt5pqxPKAs+HG1Rpa+PgzJ7ZYcdvsGsjacX4L5HaIBFuWyf2O/PChrCw2gk8cA1IZmjk4htUZ9kCtYm+DJNBQJxf1Gg75oFXNzWW93Yc9rIZS3u7cuoFAnoDdp/41HuEMmfOqF2b7+k7m2G1lpQRedBOZaJMbAeITmkFbDEolD9s1Fq890aceSGyfycFKBOjQADQfa/kKWIbJDiU2DF7ty8D0xDjJe9zQcC5lKum5UxEyHGPgCq4K/NAkp/5qUl1FKg/OlxL6GoCFLLtc1KmvmO03TmmTfJltEgWgMI2VfElYUCFVUvqglvkxJfRoWYR43uIVjj0zbPO6tC6RcGrf3lGaE27HXwxNEZxVcU9ncfGvNTmT5oMFNxZYAZdxWzthSDfCrrj2g1MzVKcCaUqomaRWSGNPWQE2A13DZtwqUjLXcKLvpryrB3QbWoVvxaj3eqMyKPFS16caJ5DZjbWAx+ipWeyTu91UxXoGbUs7fseLgnZfvi2+k2sC5BCCVU7jGag8pegBJ6AfiRX05dCUYXY5sEC9a+dSg6ZdeaexrpbqmXypPenH5RcYO4dtP1ac9KpSVRa3Ru2EugoFQ3I2T8Piy/LLaVV4penP9XkEyCS8hYX76DO/nlUBFK1eAuxmvamQG369UbCtxNe/sX9+uI6ysp9cwbAhF/jI3rekh5tSSATUI3jb51Oxra5T5mkDX5f05MkZxtFpXEMkg0PG3oqqyhBdX7CgYGEjUUe44U9u5/XPhqvHsJW7bF9vyxK6paDjfe16UMRgrpF8gZD+6BbAhBTHHM3x9mw2HGw+sJX8/pH0pfKojKFXOungm+foa27zB4sVvx1sp8wSS+2/PBmjO2O/GArBJ8+vzJJJ1WgtPe1Bi8xlPilrhPbwJ5+DJE7G/B975x3XVLK3caqCItKRojQBKTEkJIEoAiFUEZAWepWAoRN6RxeUqtKFpQpIR0GKIKCgSBUU6R2kCEiREkHaTdB1d912P/fdd9c/PIEAZybD5Mwzc84z55f56sWKKzh3i84Iz24ZUS280lFq8Hygk2+9XmC0lefAwhKUwdE/PnHZ63nJ3P3sDAXqNlbm0i15zKw8QPAa3wFcbCEra2v+5JNr97i2cvUOioxjD/BF6My4rExjgfpZRR90j7ZNidGFte31aSzYdoj6Miren5Z715Hven/RNpu9YqVH/mNzfJLiDwVMrrl2WXLWgig+KbVwrLGrsSA9bjzl4uBNSW60RWGut0t+it8K0w30asv17tZV1VBpg+C+ecvTx2dOSPKj3gySsvAwhoduZGcge1TKhd6oPo48ZiNlP7voYeZyc1quu1Lr3MCyBfcdBcAVJlu4fo2fydn8maRzgiX9TvYz5zp8k70mePvFzoIfg0McVNs1eKCeeXmSO0w1TIbc79pFMH0Pj/zo1FnX0R80tRbnTwY6meqNO2N6rJeXrn7h4Q8BcRHQ2avFAPfhvuCzReZLpdOohskmk8nR9y7Dzyhw01C7rEJUynx7f7vjPduObUp5zQ64XTUU03cl0DBZABYs6dO9FGgStppJVrKUmbheKJ/Bb2Rgkuy9/vadOnY798OPMoMVJF0Glm+y95ZeZU23PFgJK5J2jT8aWfBI4ZLoo7exSbcYJ1CYyXaf2IEPgmWlEsnhRfyhpGw8zgx1hg/2qF4/DAN1tzkBEyju1Wbw8nyYnrH3v+2aM/xquFnQiXav22jtTavvw8KH86QoI+2A43u2yGHcm61HfJuiKSeqi0J4Zp7ILboznLzqDdKQKuaoLodHdUXBN0kTWdBmQyebhPLPvnLX7wC4Zkdv9TWsCbzRvQkI4ZiZfTH0Yth0ozGUMv9F1z1hR7mbJGqhHN0P4ws4hFiSm7PFTZUiKBRmOgDU/m2yVekF0KUgXr+V5onBtkJlTfdSXo8hqVps9U5n+vplif6dRw2zDKNms9eZa3fSJxfbgTkL8+8y4lKhZ5qx+gdXk077H89SFqv0o5taZJtuSB2jydN+VddoAgpMQEod1GtnNJi7Y2WiolNDe6TKafkFKjdXPOe+InMtZd7mpcj0McNpMy0ikw0cSVw5vzRfjxryg/niNcRZgHvRR4i3KXQxHquwGF+QBWvw63/k4Kcs2eu3vX19u2tnlXNH5mRHUI7A4jMBpNXSltaoYo72PTaGUaz0RU+2cibztgLtjPgF7wdtPcFT7yxz9GKzd8MAJvbIR+uce7s7U3umqrmK3xme3xme3xme30GP3xme35v2W2V4ikK+Mzz/JobnH2zA5c/3zr8NaicY9s9RO8XBIFl8MyHEYQgEBCkmBheVl0PIQ5Cycki4mKwYUpJTQh4iixQRh8iJI+FysuJQWVkkVB4kAkfiXyouKysj+/dQO2lV8N8EcmcFETFjJBExsxsRMYsxETEr9Z9RO2EwMZFv6C4YBMQpCv+7qZ2fC/0b7ptBYH912yxGxZodRBOklnb2MstBcJFg981SqBunMhIJG3GlqGs7Kf7BJLNr2FrJwvKAvg/rbI1XXo/CBkU47faPLThdh/H3g0cmVjlSrx6mo7VMrYrRCL8y8QJTThXimaaTHRSk3rg3QT53XQN9gZJXTZjtUOJzaDiDAP2hrRQecpB8Rp9r7RPJmjpLTMD8mP+TbkGKmUywg3osmVPnXEFl3iO3AcGHqqXdA0FefB/ARk/vLe84bxhlNLLuzDNJ5vaSDZq3tz287kB5xCJTe+g8MTl7zo/RmdYoBXIu3iQW4lwOP0COJl23Ie7qmQZhuEOW6/GjgQAE+3FoueoiW6E3XUBifekJPVo3tzmXHna7Rs/O6d0zrx+0F71e3ZDqAHlUMVenitMt1dGDKSO6FIw3zOiJIp0sM9ajVXvOQpmD7LpzNYOF48EGUn1nKuoRFagm7kCMfmruLf0UlwOw8nqlbNTbtYIH82sS11DifV5iHfMs3tbFUoC6iRUxCb8GL6VnU9n31tyz3dJjPKpz73tzNApsbSq3lKBn1KTz3aNz7gswjbbc7Fgqn1LYWJu2GZFe5zq9NI7OpfZwH3vcu3y0kXin93+3MvJ4ueJ3yYM+2ZP/2dx8Icv9bGnAP3PlRL8MO3aQz1S5PzA6MmbOaEKdgMrKahrq+kIILMbMVkULf7Z0voTPbWbvQkh1NgB97p9y9ngdY+ytgEoW+B6CcfEEKAJVzezQ+Hf05WxM6CAiQC0HbXsMQfQ/Iev2
*/