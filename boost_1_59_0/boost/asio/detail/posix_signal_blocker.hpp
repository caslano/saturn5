//
// detail/posix_signal_blocker.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_POSIX_SIGNAL_BLOCKER_HPP
#define BOOST_ASIO_DETAIL_POSIX_SIGNAL_BLOCKER_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>

#if defined(BOOST_ASIO_HAS_PTHREADS)

#include <csignal>
#include <pthread.h>
#include <signal.h>
#include <boost/asio/detail/noncopyable.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

class posix_signal_blocker
  : private noncopyable
{
public:
  // Constructor blocks all signals for the calling thread.
  posix_signal_blocker()
    : blocked_(false)
  {
    sigset_t new_mask;
    sigfillset(&new_mask);
    blocked_ = (pthread_sigmask(SIG_BLOCK, &new_mask, &old_mask_) == 0);
  }

  // Destructor restores the previous signal mask.
  ~posix_signal_blocker()
  {
    if (blocked_)
      pthread_sigmask(SIG_SETMASK, &old_mask_, 0);
  }

  // Block all signals for the calling thread.
  void block()
  {
    if (!blocked_)
    {
      sigset_t new_mask;
      sigfillset(&new_mask);
      blocked_ = (pthread_sigmask(SIG_BLOCK, &new_mask, &old_mask_) == 0);
    }
  }

  // Restore the previous signal mask.
  void unblock()
  {
    if (blocked_)
      blocked_ = (pthread_sigmask(SIG_SETMASK, &old_mask_, 0) != 0);
  }

private:
  // Have signals been blocked.
  bool blocked_;

  // The previous signal mask.
  sigset_t old_mask_;
};

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // defined(BOOST_ASIO_HAS_PTHREADS)

#endif // BOOST_ASIO_DETAIL_POSIX_SIGNAL_BLOCKER_HPP

/* posix_signal_blocker.hpp
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
*/