//
// detail/scheduler_operation.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_SCHEDULER_OPERATION_HPP
#define BOOST_ASIO_DETAIL_SCHEDULER_OPERATION_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/system/error_code.hpp>
#include <boost/asio/detail/handler_tracking.hpp>
#include <boost/asio/detail/op_queue.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

class scheduler;

// Base class for all operations. A function pointer is used instead of virtual
// functions to avoid the associated overhead.
class scheduler_operation BOOST_ASIO_INHERIT_TRACKED_HANDLER
{
public:
  typedef scheduler_operation operation_type;

  void complete(void* owner, const boost::system::error_code& ec,
      std::size_t bytes_transferred)
  {
    func_(owner, this, ec, bytes_transferred);
  }

  void destroy()
  {
    func_(0, this, boost::system::error_code(), 0);
  }

protected:
  typedef void (*func_type)(void*,
      scheduler_operation*,
      const boost::system::error_code&, std::size_t);

  scheduler_operation(func_type func)
    : next_(0),
      func_(func),
      task_result_(0)
  {
  }

  // Prevents deletion through this type.
  ~scheduler_operation()
  {
  }

private:
  friend class op_queue_access;
  scheduler_operation* next_;
  func_type func_;
protected:
  friend class scheduler;
  unsigned int task_result_; // Passed into bytes transferred.
};

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_DETAIL_SCHEDULER_OPERATION_HPP

/* scheduler_operation.hpp
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
*/