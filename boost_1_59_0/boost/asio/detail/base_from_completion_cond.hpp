//
// detail/base_from_completion_cond.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_BASE_FROM_COMPLETION_COND_HPP
#define BOOST_ASIO_DETAIL_BASE_FROM_COMPLETION_COND_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/completion_condition.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

template <typename CompletionCondition>
class base_from_completion_cond
{
protected:
  explicit base_from_completion_cond(CompletionCondition& completion_condition)
    : completion_condition_(
        BOOST_ASIO_MOVE_CAST(CompletionCondition)(completion_condition))
  {
  }

  std::size_t check_for_completion(
      const boost::system::error_code& ec,
      std::size_t total_transferred)
  {
    return detail::adapt_completion_condition_result(
        completion_condition_(ec, total_transferred));
  }

private:
  CompletionCondition completion_condition_;
};

template <>
class base_from_completion_cond<transfer_all_t>
{
protected:
  explicit base_from_completion_cond(transfer_all_t)
  {
  }

  static std::size_t check_for_completion(
      const boost::system::error_code& ec,
      std::size_t total_transferred)
  {
    return transfer_all_t()(ec, total_transferred);
  }
};

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_DETAIL_BASE_FROM_COMPLETION_COND_HPP

/* base_from_completion_cond.hpp
5rGleaMbbpyx+jWY2GomdZ091vwk8zRaQH31mPzwyCWMSH5FxFZBOHlLsVazIivBpZZ4hSZhZNgxFEcUybcY5zqClse/nncksf9VEsP2WcResXiiEHdh8OhdNJWqrXmcDvW7PUGSqQXpmdivsESSZZh9BIvMnz/bmBxFsYa2ucIsgkGVc29eSX8mj8IY5q72mDs50uK5bMQ+Wk7SkT+lgXywaZ2b05nja8V5a8pzL6gyezKH3rEA4LfsrX4fyHxxQwWV6heavkHbDWH5IovbZr8Zo8DEWDE8yOhI98om1MnB14m8MNNtl+i6P9Wn97ZoZ++5/wI6uDhC821L/PazjEGDfSsx+8mPxf9Ixb6RG2cQ5gcyTKhtwAMBMCQEAhrInfCFX3AKYhFHp6+BZxLFdWo9zeUL33A8mt/6nHgedYpocCHw5VSItSBu4Wh+PQ06AJJrr7llU1IsfbNS7EqLlPLVlV0ol/G5ASs+2V2w3N2rJFuKQoHUxDqhqq1UnzXwTCNcNnKJxFnYgfd+BfflXvS8f+oZONd5KWaIHz1iZPOukPPSe6DLLU1XuRNq7UV3b9jNJFvjA9HQQCKHURoeSGyia4CM5OfgbKTZGChhMtzJNk7N0zNb0sK8yIXnQzWudDtblP+eHr7dMOkOy+YwdEwUxJTFiuCRy2+i41nwhdPJM9lBL+U2salvMvt6rU809NuabG9kBc5DXAQLUeh55DowHycizL99VR/kiERZB8k+tRrd4AHRmgrcbifDluqQ9RPwQ7rf/KweuFDJF9OB9JDDbVW80mEuM4+netoRQedEduDU1bLuCjLJeIFnjuppP/t83p/ztLQKCH1R7Xq31A8ADcskL81Dx4stmoEdzvGO1Ex8ySwjImXTSI/NcXLcaHWJVKyfSjpkifJpnfJdkanirOz5VJFU2ZsSu4ZSzkaGGI5fMtKVmeClACIgDY/dBcYS22IlczMkI300zL5JF390Hlc+hIsSjtWJSm+UbSSj85Mgx7F1PoY1cRiiRoUuMcLnbmVTclQNTBTQpfFcTeBdKSCwo3JxO9RQk1WUymRIDgWZM81So4kOl+9TnSNm7VBU/pANerr6+7dv85l4WBTMypcreAhFKXmY4SYnPXSs8KomEk624zouponsjoabqfjj3eCVKdU2YO5fbwzZty6ivtLZ5rJdTIB/vh8yMDzk+8Wmpmkfn0jrmO9CNw7G5hOfxPP4X8edXufwFAB7RLjBPwAL7TyE/AA0PV3lficAdtMiwT+0Pd/1Z/2xx5k7BNSfE7tyAVAQXxkroX+tHAQQ+LYbnAaPzWZ7uLyeqzY0APrvh4XCAYe8mYvEFjtx/Qdo9Wy6syzidU5c00zZ0t7BaJLstd8Q1djWCgXx+wn49aDKb9lSpT+po+F+GEZAvjCNgIL00ZFRoUILHdTR1WGJoAIngwzQoYFCBycEDHINpcHLsA+VHPFIfyR4wIAE9RX0sUEi+Oru3ZGKmhh6SHTJU9D0RqCGv0pYBcSzsqhldWFDhfb1G9D/UmNGCQo4yKdxS8P+cLXt9EPncQAAGd/tpN7BhTB/140GZcB/t/0BSDAG8C/iAsAXQQcQnwYAmGcH9G+CyjXSdt7eMQbri/vXK/8OHL0fSNST/flqeH9TyotvD/7JJQAXy5TARnZeHsUQmY5ahNrkTSaQYyTFnpgItAiKN/ICigkYaOAAujx4ai1XnFf8vNtcMh8kpdz56SWN8O3r25ejVfjN2+lmLExXThfDXI/lbGoMimoJQtXyODamoYtAoSBLqgez6ee2/byn9SfqTCIkq21E64rzjfPAXPMOjEmhsJKFrYvpJrecl7aJcoUm/ruj/OcLOGFb4687iEtq8jjWTBcZzAOMnAwfWFQ7Pfs52SpCzy3etoaOnh71U2/Tj6/tnT6d2ZyfnVONs4UbdSe/A4UxW3UPqdJhBrifr9SZBlc8avCgpVxaYlOwaC1E1opUxuLx+z8SdQ9JZL7Mx7TmluqiqRkYGIpAtSSSGBrwmaazcWvS+uJIwblrUO6I9BEazhqRSQydMAUPWkiJIdau0Tdq2Q0yhk0XN3TWQG36VIcZ3RT6FRqJYKSz9WwirWg0phWanuXnDPpV9g3QbT+yY8McJ8IV3g/jqjZWJd6ZcSLdluRSej7BQXcGENXMqU9+UuaLFKRk508jaRf9hTJBec8m+SJbrGS9W4HqoZyCv1YWIRr53JGAd43JUJPtm2KBOyO4nH8z1+kxRQOMhxa39GvRmh7segWD6xfFbyZGEkfwlTEOoal5hrgPCZM8r4Z4qZMgNk96jjPjaW18b599TR3wwpqszQLEkjS9vOEVwyxFg7tHrr1LcPGU3AL6wWdHa8Bn5rdIqd6P0DkiJqrkFV09AZ8R4Tc3Xz38/uI4alQqH+0NN6OjETx9l6LmrzwBRGFjK3sCwNmQTB5NRoOPRHjdra9IFOlycxT7iEv3urX2oiksOVb4J+zHWf4YZU92Yc4Sb4AMSs4gQ8lHJYx7XY16yOBxL0VBYs2Gu0/NZf2pECco5u31QOQyS+SlMQ6dVog6t591l0+WULRwLBQUii0+jhIjTa5v23KOWnnMOLddalYYRsPGbDnJgLs4MjAWIR8YH9Ec6gSxa9QCltVhz4uCi9dfOp1NrsywsiqhrN9b3OEHIcDU3s7JnzL8XRabk2v5yZwZXVSbKx/y2FskOpP8WE/bpAdCn/Lr81w7OKnk8AoxeE0/t1Fz+ShpVUzVY057d/c/IJqQi+2fr2Qm7AILjI+OpuD1NLSzZLNQHGrymhy3J2ZbTKdu5it0wy+hWrv17kSrcQShQcE29cxUj7fJqFRh/ctFJJZmyWkjZxfJ7VKZquHZk40hn23K7JHK7fHWji2ZoNxr9iR53SeFk3+WdiUOVFB+9e3tT748S+RJyy7sL9oWQlsDD2RakXX07ULmns8QQ0WgdNDOe9l+uBYR7O1B4TzQAtIuWKpkjcJBZdhN1roNlBCMMJbaxCmgIb6IjIxadp3pqZfqYz4u2cO5/rr8+JcWY2IZNMPUfhlhVvhPruNhegYQx6hlllbb14BC5P1enlhZMmFUKXuwQpDyQKAlCtSq4P32gtn4wf15MhVsuji8doDIK3Z57UO7NPDQvKPe6kF4071awKnEwtH/rX8AuDoMG0v6uDW5tWPKbddK2q3rnAp6Yntnr9CP636drHS/igrLyMCKZFrTxdSA8xCwurVW+yc+bII9orVSWfzhoPvvBO65W3dse8ycYzeYXd6wJxsoMsT5AnMDZ+wVbjkbUPUGPjUbi5gRcSYJ5TDMR+K1nUaA5QQZPoSAsg9oVUWS9ZG1taIzBQbFC00H/42g2AC8h9gLm1FXx4kTm3W6fFIGheyLmMnH0/R949TzaRRNlfqfC1W6bGn27yyco7c9VTlYkspQ9dHwPWqvlE7vHjKk0NTlOiziB5MqwI+/E/bQfGJzGdSMItHawoGXhMMd6oGiROKikmUMvDmQVDYj5hR5tbKIqMf2Sa8R1j/OQrW5nxvrWELC7Vc0A5tsf2B186NKSodWGgxl2Q86chO7C3I6NQicmyWG3hNcrfRJtzy3ouL1oRMDTx1lXMVWjH1rD/8EDLACnX8ELImzbW15rc1vrG6iJfGi8ZvayKVHW7jG+mCDb+bK2/A6nFBsI1WOSNtJuzprdxN8cTdQdc3xFAYjmbwhvgauNcdO7HOjKUlKaqV5WGrrUF9ZbGowbOUzMoKOSqGg+42fbp5ecV5Tefj0YDExu/lz22WKdqGBNeGSF3RJ5b8QZEa9m22DsOrqZ5G1ZxFvNdoYBlxB7Hd+vN/PhIqmF3gVjlzWewjBMwB3HgTG9VF7CEI+GKVonOSkN0VXcto4RA8sjHMMDo8vyHJiUkF0dA8IBCYftzkS2PpMaPB8ASnMHqTRnAiflCmJVDgciluhI3Brnu9Tb8/RgJWmJpUU9kX+A5az/tk2NqtofLVnVftJSZ8NirOUKWXCC0x2iAykYza4xkAtCg+8304iRRkM5UmmxLbN6kjJIoEyRsADdz9bWMjGugl1Mwl7O9TkRuAVCdpAj3q87dA/Iyc9LdTuP9pHNFvba8xonkK4RHnJclgLNOqMP46r+PRAIuN9RHEdco8qqpNzKQjiTbM9fJ/4WjHQ6KNlEFR5ZlLIx1dsFlMpf2Gl/SOnUyngxcJwuyqLnpCRUHPdSOH41rwNzaGws8WVp1Rf2aCabeMk9uJDjZPxNN6iVSNs0upY8d2XXEiyDNXKjeBmco5P5WZhixuyXgw3w00w1K1sWQmFDX5KsO/mN8jzadqF3jWfplPpqADLKng7A3p/CmPjtZLf7I/ueUeIGjhhbOaKKWp7+YyMMOO8/SSLuoFCrNmwHNn/Qp3UEHU+DZoZCicXh5YzWiXPA21FeruTUKAo3ZsHVpmcK0njC01naa5KHLng7N7iKjms6P/sEXmOvfOEFLT9f7H1TrGiNdG27rRt27Zt27Zt2/Zc07Zt27Zt2/fP2ee+nOyHaun1JaPGW6vWk0pVXAXa5jcwt7DPDDr12e3RJ39vF/vP+sCZV6S4h1bWPBLqkgQElhSzR0XavXCJITGcZO5A0U9g266dcY2pRTIbj++KVYZZ9HCr4+ky1r+fHnzBYezB1Vn0JejsQvI5SLkwCGbHJALiyRliLoBOVZg6t1vYE7ZXMbBSt4yQ2GLN6wfoJ7JZ/V7nFJGpGj1thcP1kdLynIMz9XCfpZU4Xk4VAVLKukwMzOuLs2we2/gV5aT51ClNTst/hV/TJIqX573i2MRqWKTqmw07e++77bmds0fPnZsTUYk+vuGqUkumYzF+lWgzOAOnXDksgrp7EYbuoWAHvnmx7DBzyPY4HcvL0d0PcgYCnVBrN5BWgTokEo0DpfbrZspk8F02DqcrGzHSWq1sJKVJrz0vMflotoe7mUPCj0XWQb56u/LCUeGKvBuLXobtdGmzyM8wa7Y0QSw04Ts2WnyjFrwJhMl1HQLUWbx9GeNOqJpJmUy8Z+N/zwg+XENtDrmL67lWqSE+R/fa41htZUsrCWZLqchL1aRf0YSkCAnHKbs3M5Z2dsVCznF12XoiTxZKuXU4SdmnSkHO0RpLT+6ysrH4lmqPhEz+B6zhCfzR8kA/k7Di/qbJ/Yh/beMkFAEfb+MkJH9JMoMQ3yuLd46SQH7MPcDv5LW23/QXuot/LndsP6+3P8zq4kKG5X+3tz89MvWlAI1dKPXD8qhGAIBkPvZ/9HN/09kwKFHfXWv++nXAAGvAjahAELnI7Zf+re8nH/bO9/xU5/ChgX99V5d/sgFf7n394nigSCyLyYo2OadImCdQFLCfXp85a5wH7kiIf5mxkMHC83982MgwYgIJDPN35saD/piU4t9PQW34wiccKFCRoQOOEpyeGHDAwoUDGggwsYAHCBw4UDEi0s6ShIkQJEgxgFOTU4Ymjo1OCjAYsOLjwiaEEgwwv7g5rsPsF/+W9c//EQMQkPbGMYECFD+CAVg+AwhwoQIkAIICMEH6wFkyv/gpF4HHfXpvTe5hgYgT9FbV4dFfjP5KFpVNK/PeECbwIDggUha3wGJ0+xKPun7fR7CgizUT/3qMHkBMiuoHTWUfUt92CTOKkcO7Zb7eJcAuQTuwK7MZvOORR65NGncAHe/oO9ZGasQy7YZawOvVt6IVYjRhNZgBP92QXUHjP25QsrQjJ29cWvVLI5CYnqt70NB3EbW49F6zFe1o+Sxujd5yOD25viFjPXfZ1JanTBSO1WHPOe4eqzYyqnIlYnw3yz9HlK6M5xN1YNyBG6FL0vqKkkdSfa3xTPcHERE6G6peN4fLZuUFlleuVLSX2dvIa8xDUhiu6yizEsiAlr3OipNz3UN30irWU2gM6jfLBIfCxOtEt56nw9snoz7uSM28cVibwdWA2/pcL6phISxVBjItenOfG7aXke3mKvQwlayoICW+SBab//7GAlx0Ygm97Tcz/5Z3mptJ0tZOwLLdLYVZFXGAi/N105uyY/E52GzmyMpT0FIu6C7D5THnYdd5GpKyrRqhvvau7Ics5yR9fPo2k2HSP7AaIJIrWMqpQXIYELMQfrmV0ug1a8gWxxN7K6ipl/+jmVR71ugmkVXplYhSo7Cvpyi0KXPtb8x74JmVSFkd+1e8RXW6/sDpQD3O9I91PnirOjkj1E7c7XW9anTUcxwYjnSzcFk2uBT54ydMmi+FbHbm9i2y7TWbkQ/fGlgkOFwyenfTFR9peUGdUCETP68iSMbcXFd+T/EBGJGDEXYN7Okpopn2ZIO/pxmV8355ALoTbcbx6cAPBjscoDD1yGcXMU45QvZONLha7o2sFjvIt+a1BO0ANVNts42qbL/pyyxqGeLruPto9adXT9eHt7SsiA/lwsLzFTVfdCCwglwFF02LUZ1bXJd2x94TrU1fVbEWsmmk1qmw7lT475L5fa5ScL5vZfwPDeFTW+C8jpAgJOhnBCTEj1BJSEBERkIqrC5kya+wKRFJEcFPFQEICQlhYQE5melbWHB8uiUpMQO0uqACF5ebal9tdkj74el3y5JJRnOoRqcQzm9sEek199Tk7JGoKmN5msWV1unzcxjuBPihCkaeEwiLrrWhUvIdAc397t5GGpxOMY5PqyeTcLYBZ/Cehddgdoe+WZG2KNBgStXKJbOxZ4DGgpVd2MiCRJrHTQtn3kME9kT4vsTQ7Z++/Mquno2nL81Cgn/ZmrCR3H7Wmk2RVyt2hnzdJmgGbEmViSr08OaFMA4vqizEXfpYX4XniQW+4Kr4vJJf0M5ibkGZWjPEqj9fuHGi3LZSpoKDPYiCIB10czE8kYdPTMx7GNGNIptTyurDW9cv7lroE6hrrKWWbPN0mVOqWtSEuygX7jTNLRXFY7ZpGgAELPvTjAr8vH6/vpUjur/ucRcH3XFHfjaOq2UGmlm7XTqE/7lGhUJp1+pxq9m93zcJkBbfMLtkmZxns+Z9cTm5Ilm+D8Rf1g1dVPP1pl2mbJtuGr+SEoo2s+hUh9WOj562QH06dVc1Onu9miQ+slc6h2JiGhLK2IhNWN9ngVf/qKczlqncrHsJKPUAGpbSZrKqUVOBrNAlLFcyhAjvzmsy4A90NauOVRBfTY39F/6JPM8S/1xXpsJryf3B4Pa/1yjZxGFy6QnhsGYgR/JpHt60UH5KiMQb2Vl8WERo0/Njii71PlT6VBZx3OOzVsGdwe8InySxvfeaOqPOR6936Hipl2OT+QSSrn+v1UPL0JAzdjXCSjCuK/jUPPa5VQ7r149HNdT64KkufvNR4S8FWlwkG7Y0qlt4L0H3rnTR0tn+VCsoL+hJn58k5CAkvxvQySkJEf9CYgDeR1QjIyAiJib6sAAg71dcnkmKY7axFhpoDGRt16ZQU4tMYJzMTm/PjiZ3/G4r24hQPJifatnLKXW7Linw996FtiyIyDNZdeNP5qPtrDg1GKJD3EDp136QeYaUmE3fahY7LEl8OGFphRj5+NrB1gMkR5g3qa3UT3F0JoZX5NbCihV6uZjFrLtcJhiTsCkwUt/be8yGrXCMvpSeJb3wd5xtuW+rdHE7KOnklexNJOdNTI8D80FEby2JZ3a2JhiVaCcsUyxljbrZd2oiupUV
*/