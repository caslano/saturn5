//
// detail/concurrency_hint.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_CONCURRENCY_HINT_HPP
#define BOOST_ASIO_DETAIL_CONCURRENCY_HINT_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/noncopyable.hpp>

// The concurrency hint ID and mask are used to identify when a "well-known"
// concurrency hint value has been passed to the io_context.
#define BOOST_ASIO_CONCURRENCY_HINT_ID 0xA5100000u
#define BOOST_ASIO_CONCURRENCY_HINT_ID_MASK 0xFFFF0000u

// If set, this bit indicates that the scheduler should perform locking.
#define BOOST_ASIO_CONCURRENCY_HINT_LOCKING_SCHEDULER 0x1u

// If set, this bit indicates that the reactor should perform locking when
// managing descriptor registrations.
#define BOOST_ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_REGISTRATION 0x2u

// If set, this bit indicates that the reactor should perform locking for I/O.
#define BOOST_ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_IO 0x4u

// Helper macro to determine if we have a special concurrency hint.
#define BOOST_ASIO_CONCURRENCY_HINT_IS_SPECIAL(hint) \
  ((static_cast<unsigned>(hint) \
    & BOOST_ASIO_CONCURRENCY_HINT_ID_MASK) \
      == BOOST_ASIO_CONCURRENCY_HINT_ID)

// Helper macro to determine if locking is enabled for a given facility.
#define BOOST_ASIO_CONCURRENCY_HINT_IS_LOCKING(facility, hint) \
  (((static_cast<unsigned>(hint) \
    & (BOOST_ASIO_CONCURRENCY_HINT_ID_MASK \
      | BOOST_ASIO_CONCURRENCY_HINT_LOCKING_ ## facility)) \
        ^ BOOST_ASIO_CONCURRENCY_HINT_ID) != 0)

// This special concurrency hint disables locking in both the scheduler and
// reactor I/O. This hint has the following restrictions:
//
// - Care must be taken to ensure that all operations on the io_context and any
//   of its associated I/O objects (such as sockets and timers) occur in only
//   one thread at a time.
//
// - Asynchronous resolve operations fail with operation_not_supported.
//
// - If a signal_set is used with the io_context, signal_set objects cannot be
//   used with any other io_context in the program.
#define BOOST_ASIO_CONCURRENCY_HINT_UNSAFE \
  static_cast<int>(BOOST_ASIO_CONCURRENCY_HINT_ID)

// This special concurrency hint disables locking in the reactor I/O. This hint
// has the following restrictions:
//
// - Care must be taken to ensure that run functions on the io_context, and all
//   operations on the io_context's associated I/O objects (such as sockets and
//   timers), occur in only one thread at a time.
#define BOOST_ASIO_CONCURRENCY_HINT_UNSAFE_IO \
  static_cast<int>(BOOST_ASIO_CONCURRENCY_HINT_ID \
      | BOOST_ASIO_CONCURRENCY_HINT_LOCKING_SCHEDULER \
      | BOOST_ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_REGISTRATION)

// The special concurrency hint provides full thread safety.
#define BOOST_ASIO_CONCURRENCY_HINT_SAFE \
  static_cast<int>(BOOST_ASIO_CONCURRENCY_HINT_ID \
      | BOOST_ASIO_CONCURRENCY_HINT_LOCKING_SCHEDULER \
      | BOOST_ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_REGISTRATION \
      | BOOST_ASIO_CONCURRENCY_HINT_LOCKING_REACTOR_IO)

// This #define may be overridden at compile time to specify a program-wide
// default concurrency hint, used by the zero-argument io_context constructor.
#if !defined(BOOST_ASIO_CONCURRENCY_HINT_DEFAULT)
# define BOOST_ASIO_CONCURRENCY_HINT_DEFAULT -1
#endif // !defined(BOOST_ASIO_CONCURRENCY_HINT_DEFAULT)

// This #define may be overridden at compile time to specify a program-wide
// concurrency hint, used by the one-argument io_context constructor when
// passed a value of 1.
#if !defined(BOOST_ASIO_CONCURRENCY_HINT_1)
# define BOOST_ASIO_CONCURRENCY_HINT_1 1
#endif // !defined(BOOST_ASIO_CONCURRENCY_HINT_DEFAULT)

#endif // BOOST_ASIO_DETAIL_CONCURRENCY_HINT_HPP

/* concurrency_hint.hpp
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
*/