//
// detail/impl/service_registry.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_IMPL_SERVICE_REGISTRY_HPP
#define BOOST_ASIO_DETAIL_IMPL_SERVICE_REGISTRY_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

template <typename Service>
Service& service_registry::use_service()
{
  execution_context::service::key key;
  init_key<Service>(key, 0);
  factory_type factory = &service_registry::create<Service, execution_context>;
  return *static_cast<Service*>(do_use_service(key, factory, &owner_));
}

template <typename Service>
Service& service_registry::use_service(io_context& owner)
{
  execution_context::service::key key;
  init_key<Service>(key, 0);
  factory_type factory = &service_registry::create<Service, io_context>;
  return *static_cast<Service*>(do_use_service(key, factory, &owner));
}

template <typename Service>
void service_registry::add_service(Service* new_service)
{
  execution_context::service::key key;
  init_key<Service>(key, 0);
  return do_add_service(key, new_service);
}

template <typename Service>
bool service_registry::has_service() const
{
  execution_context::service::key key;
  init_key<Service>(key, 0);
  return do_has_service(key);
}

template <typename Service>
inline void service_registry::init_key(
    execution_context::service::key& key, ...)
{
  init_key_from_id(key, Service::id);
}

#if !defined(BOOST_ASIO_NO_TYPEID)
template <typename Service>
void service_registry::init_key(execution_context::service::key& key,
    typename enable_if<
      is_base_of<typename Service::key_type, Service>::value>::type*)
{
  key.type_info_ = &typeid(typeid_wrapper<Service>);
  key.id_ = 0;
}

template <typename Service>
void service_registry::init_key_from_id(execution_context::service::key& key,
    const service_id<Service>& /*id*/)
{
  key.type_info_ = &typeid(typeid_wrapper<Service>);
  key.id_ = 0;
}
#endif // !defined(BOOST_ASIO_NO_TYPEID)

template <typename Service, typename Owner>
execution_context::service* service_registry::create(void* owner)
{
  return new Service(*static_cast<Owner*>(owner));
}

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_DETAIL_IMPL_SERVICE_REGISTRY_HPP

/* service_registry.hpp
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
*/