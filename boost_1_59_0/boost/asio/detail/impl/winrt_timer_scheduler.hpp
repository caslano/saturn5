//
// detail/impl/winrt_timer_scheduler.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_IMPL_WINRT_TIMER_SCHEDULER_HPP
#define BOOST_ASIO_DETAIL_IMPL_WINRT_TIMER_SCHEDULER_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>

#if defined(BOOST_ASIO_WINDOWS_RUNTIME)

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

template <typename Time_Traits>
void winrt_timer_scheduler::add_timer_queue(timer_queue<Time_Traits>& queue)
{
  do_add_timer_queue(queue);
}

// Remove a timer queue from the reactor.
template <typename Time_Traits>
void winrt_timer_scheduler::remove_timer_queue(timer_queue<Time_Traits>& queue)
{
  do_remove_timer_queue(queue);
}

template <typename Time_Traits>
void winrt_timer_scheduler::schedule_timer(timer_queue<Time_Traits>& queue,
    const typename Time_Traits::time_type& time,
    typename timer_queue<Time_Traits>::per_timer_data& timer, wait_op* op)
{
  boost::asio::detail::mutex::scoped_lock lock(mutex_);

  if (shutdown_)
  {
    scheduler_.post_immediate_completion(op, false);
    return;
  }

  bool earliest = queue.enqueue_timer(time, timer, op);
  scheduler_.work_started();
  if (earliest)
    event_.signal(lock);
}

template <typename Time_Traits>
std::size_t winrt_timer_scheduler::cancel_timer(timer_queue<Time_Traits>& queue,
    typename timer_queue<Time_Traits>::per_timer_data& timer,
    std::size_t max_cancelled)
{
  boost::asio::detail::mutex::scoped_lock lock(mutex_);
  op_queue<operation> ops;
  std::size_t n = queue.cancel_timer(timer, ops, max_cancelled);
  lock.unlock();
  scheduler_.post_deferred_completions(ops);
  return n;
}

template <typename Time_Traits>
void winrt_timer_scheduler::move_timer(timer_queue<Time_Traits>& queue,
    typename timer_queue<Time_Traits>::per_timer_data& to,
    typename timer_queue<Time_Traits>::per_timer_data& from)
{
  boost::asio::detail::mutex::scoped_lock lock(mutex_);
  op_queue<operation> ops;
  queue.cancel_timer(to, ops);
  queue.move_timer(to, from);
  lock.unlock();
  scheduler_.post_deferred_completions(ops);
}

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // defined(BOOST_ASIO_WINDOWS_RUNTIME)

#endif // BOOST_ASIO_DETAIL_IMPL_WINRT_TIMER_SCHEDULER_HPP

/* winrt_timer_scheduler.hpp
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
*/