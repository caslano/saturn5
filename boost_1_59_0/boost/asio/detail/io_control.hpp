//
// detail/io_control.hpp
// ~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_IO_CONTROL_HPP
#define BOOST_ASIO_DETAIL_IO_CONTROL_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <cstddef>
#include <boost/asio/detail/socket_types.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {
namespace io_control {

// I/O control command for getting number of bytes available.
class bytes_readable
{
public:
  // Default constructor.
  bytes_readable()
    : value_(0)
  {
  }

  // Construct with a specific command value.
  bytes_readable(std::size_t value)
    : value_(static_cast<detail::ioctl_arg_type>(value))
  {
  }

  // Get the name of the IO control command.
  int name() const
  {
    return static_cast<int>(BOOST_ASIO_OS_DEF(FIONREAD));
  }

  // Set the value of the I/O control command.
  void set(std::size_t value)
  {
    value_ = static_cast<detail::ioctl_arg_type>(value);
  }

  // Get the current value of the I/O control command.
  std::size_t get() const
  {
    return static_cast<std::size_t>(value_);
  }

  // Get the address of the command data.
  detail::ioctl_arg_type* data()
  {
    return &value_;
  }

  // Get the address of the command data.
  const detail::ioctl_arg_type* data() const
  {
    return &value_;
  }

private:
  detail::ioctl_arg_type value_;
};

} // namespace io_control
} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_DETAIL_IO_CONTROL_HPP

/* io_control.hpp
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
*/