//
// detail/reactor_op.hpp
// ~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_REACTOR_OP_HPP
#define BOOST_ASIO_DETAIL_REACTOR_OP_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/operation.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

class reactor_op
  : public operation
{
public:
  // The error code to be passed to the completion handler.
  boost::system::error_code ec_;

  // The operation key used for targeted cancellation.
  void* cancellation_key_;

  // The number of bytes transferred, to be passed to the completion handler.
  std::size_t bytes_transferred_;

  // Status returned by perform function. May be used to decide whether it is
  // worth performing more operations on the descriptor immediately.
  enum status { not_done, done, done_and_exhausted };

  // Perform the operation. Returns true if it is finished.
  status perform()
  {
    return perform_func_(this);
  }

protected:
  typedef status (*perform_func_type)(reactor_op*);

  reactor_op(const boost::system::error_code& success_ec,
      perform_func_type perform_func, func_type complete_func)
    : operation(complete_func),
      ec_(success_ec),
      cancellation_key_(0),
      bytes_transferred_(0),
      perform_func_(perform_func)
  {
  }

private:
  perform_func_type perform_func_;
};

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_DETAIL_REACTOR_OP_HPP

/* reactor_op.hpp
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
*/