//
// detail/win_tss_ptr.hpp
// ~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_DETAIL_WIN_TSS_PTR_HPP
#define BOOST_ASIO_DETAIL_WIN_TSS_PTR_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>

#if defined(BOOST_ASIO_WINDOWS)

#include <boost/asio/detail/noncopyable.hpp>
#include <boost/asio/detail/socket_types.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {

// Helper function to create thread-specific storage.
BOOST_ASIO_DECL DWORD win_tss_ptr_create();

template <typename T>
class win_tss_ptr
  : private noncopyable
{
public:
  // Constructor.
  win_tss_ptr()
    : tss_key_(win_tss_ptr_create())
  {
  }

  // Destructor.
  ~win_tss_ptr()
  {
    ::TlsFree(tss_key_);
  }

  // Get the value.
  operator T*() const
  {
    return static_cast<T*>(::TlsGetValue(tss_key_));
  }

  // Set the value.
  void operator=(T* value)
  {
    ::TlsSetValue(tss_key_, value);
  }

private:
  // Thread-specific storage to allow unlocked access to determine whether a
  // thread is a member of the pool.
  DWORD tss_key_;
};

} // namespace detail
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#if defined(BOOST_ASIO_HEADER_ONLY)
# include <boost/asio/detail/impl/win_tss_ptr.ipp>
#endif // defined(BOOST_ASIO_HEADER_ONLY)

#endif // defined(BOOST_ASIO_WINDOWS)

#endif // BOOST_ASIO_DETAIL_WIN_TSS_PTR_HPP

/* win_tss_ptr.hpp
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
*/