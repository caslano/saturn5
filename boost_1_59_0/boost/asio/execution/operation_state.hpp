//
// execution/operation_state.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_EXECUTION_OPERATION_STATE_HPP
#define BOOST_ASIO_EXECUTION_OPERATION_STATE_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/type_traits.hpp>
#include <boost/asio/execution/start.hpp>

#if defined(BOOST_ASIO_HAS_DEDUCED_START_FREE_TRAIT) \
  && defined(BOOST_ASIO_HAS_DEDUCED_START_MEMBER_TRAIT)
# define BOOST_ASIO_HAS_DEDUCED_EXECUTION_IS_OPERATION_STATE_TRAIT 1
#endif // defined(BOOST_ASIO_HAS_DEDUCED_START_FREE_TRAIT)
       //   && defined(BOOST_ASIO_HAS_DEDUCED_START_MEMBER_TRAIT)

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace execution {
namespace detail {

template <typename T>
struct is_operation_state_base :
  integral_constant<bool,
    is_destructible<T>::value
      && is_object<T>::value
  >
{
};

} // namespace detail

/// The is_operation_state trait detects whether a type T satisfies the
/// execution::operation_state concept.
/**
 * Class template @c is_operation_state is a type trait that is derived from
 * @c true_type if the type @c T meets the concept definition for an
 * @c operation_state, otherwise @c false_type.
 */
template <typename T>
struct is_operation_state :
#if defined(GENERATING_DOCUMENTATION)
  integral_constant<bool, automatically_determined>
#else // defined(GENERATING_DOCUMENTATION)
  conditional<
    can_start<typename add_lvalue_reference<T>::type>::value
      && is_nothrow_start<typename add_lvalue_reference<T>::type>::value,
    detail::is_operation_state_base<T>,
    false_type
  >::type
#endif // defined(GENERATING_DOCUMENTATION)
{
};

#if defined(BOOST_ASIO_HAS_VARIABLE_TEMPLATES)

template <typename T>
BOOST_ASIO_CONSTEXPR const bool is_operation_state_v =
  is_operation_state<T>::value;

#endif // defined(BOOST_ASIO_HAS_VARIABLE_TEMPLATES)

#if defined(BOOST_ASIO_HAS_CONCEPTS)

template <typename T>
BOOST_ASIO_CONCEPT operation_state = is_operation_state<T>::value;

#define BOOST_ASIO_EXECUTION_OPERATION_STATE \
  ::boost::asio::execution::operation_state

#else // defined(BOOST_ASIO_HAS_CONCEPTS)

#define BOOST_ASIO_EXECUTION_OPERATION_STATE typename

#endif // defined(BOOST_ASIO_HAS_CONCEPTS)

} // namespace execution
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_EXECUTION_OPERATION_STATE_HPP

/* operation_state.hpp
tA7iV0N8f4mZCVbQQBl5KVUfZZNIXjthEm0h8PMEkajL0QInLb0zQicnU5gqQT1+0wAhmVQ+BOuSMCdhbJj39kW4JC6okDcyU9f5h0TtkijRSkaVAX7ttc1+3CvM7AWs9ZP99iV4LAYFHil14cOwOxOFh4Mjt4Ube23tUkKaCUblNHrsZUAf4hsJNA7WwCIpijdh56UdE5uHG1PIiYld/fdIspg4blRBqcTs6aG7W1r3rTkJTOyUyn3TkFFB+JSAr18EtFwM/OhoKNI5CNUYLLYdwJ8eIsR+AX/670+drpW41WTztrudrhY5lUTjOvpwnq812c61q46hTWSw2s62Krr2fdIszrMuJ4IJY5byRHWTGb9acEtTpHc55jCRsOfeqINgkuLBZD7xiU3iqJfpsg9WHnczGQGj4OQuMBEsNwnQjjd7/hQL2uUFDOd+OtGPcLu1LVYekvv0FO8+RNn9dInjWSisfzGtKXB48Au8eyfZabfbk6tPXSdHg8VN9DqSQ6VlcjqCCy3puMsrzqUdtBBUxSciGmZpBg28TLgWbeB1kTHfTLDgRNstEn2p5QSjRVthihs9JXExBpO7jWOTjN1N6lLvrtFCbSjtrtDY0KcvWw5Jaa+2LCXiBDUkqmbdF9sxzl63hlxdp5MzYzxzZo7mXEOLydaRlz7N6MZiHuVx8FQ780lzrE+ytNNhZs90s8P2MXwneZ+Pu81ogEn/9aQuocvN6fw0kVIBimeMi9ysUgLkNEIwtG/o2R+b2290z9OTr/Z2xd6oR/XkdZQLbY2T+QB40hQdhHtYncoO3l58F+7JZCd58bRYBYMneUFYFeFDTSZzkarNXyo7REl63XyaHo+6m2xjobpt7bKXtdm1aMouBe2qGxgskaqplz/edagg55CBxTeZRNOkPe9AQSHSZZ+MoMXURtyp3N+dKDocrolE8cmvWMG9vPurZ2GnHnV6HVFHTpY9vz49l7nbbdVjkv8n55eLNWInKQbxi8xX6jpJbXkd1cBny/Zu86knPF4bVMXwXPm8KPAsZ99LvQi2hmhcdLNnkIDHYYxY25FEXx/Bl7Y2Vyj9xjb/8R8ir7N1CcqW+GkrZryUR2tOUrwZhlseTD4lKyLPk7O3uA/XmLiCCexc3FYTJwt0Fz3BKxMZX6fO1eUz3kPWTMue+4bccPhcT0z0r8MxKdZ+o0RLFF2Ir3tJLLBTpo+vMRRqYF+sQxZlHqA1oyRMeJYxvyTgFtFtVJbmJsnB35GeNJjDSuqWHLW1ve8LZyTwL8tzHl0ZL48/+fLGyDzwE/mI3Iyj4mDBKu9fQSurV07HtEKVJxtxfEWy4Elj4FxSV5En+zV8BvvORp4TucxQJOsDGlo5TAfylDL6aw8Jco2AF/JteXWlQx0MdiMcNSy6uz8ck1qKjTxl8uxo7KJ1B+mexctz4NcOpuXASua6o2LGU/+AsoCakyU/xtfIr9WnEikxuuoCKTE5XMA4GyHvMXIZvSkK6nRFjgE0Eup0hpU1r8nY1NkMhpPWll/R89Q/9thGbecx6e4RMHGvrskRvi4b2ufcFnZhr+EetHtqKKfO6yy1grJ05xqqFWwjcmng5jvosrI0yzUDv7IwSAbSWDWyq6o2pmBiOn/rzQ2cmhWLKphhg+Rdkqr1L1aZdZZcuKM7dwzccH4ir/TwUbH6AvRkL7CNXUV3cQK8wvmT9kLKnum4izSqm5gdncvmn8TMhpw5AW7zvrOJjCjDqBTDM0P9BDS6gEv94EluHF119hnLLqj3wwSO+Z+BfkS4HXqH9eXwYl8170GZLEBYYAwECijOof2Sw/h45XnaDuuZs21jX8+Y/M0t77764fEC+7NzgyCxTmOxi2idClYP9qpDtEQ1Q9QUn+soA7yxvhweHLIVSNk1XNhspRJCNUtWIXSyBG01xNXQ4rq+v0Ilcj5wE8vXjnWv20ykb37rrbHCXkg7t39urGhYuo9svAL04PFwkGeUFjuJ5RT7RoUhmm7nKRZSZLzcbeuXmOFvMg3xawKZzFaysYR4vWIySRZizUCEk1xN6lJFyOZMTai0heVaAlqIIWd9CrFGqwOcYa/QnjUp+JEM2HtB/CVBqhjtSQSge9254Uzx63KCuNBW7zhag2VUnSSSUhN5Pr+ohaMP2/irCmyR+UhdxBWYgBZe+h82S/34cc50NS7lAdcGD7D//txAYI+6PRLbjXpkeaWDN5vuCF3pCgo+HLuFe9L2eauF2i/8R2H63tAVnXLupCEIOkgMoz8KSF+eDEpvEMjYEYwJpw+hB/Y6lMwk5NvYmbc/xw6hwhTwmx8izxL07CHYBtYqIbjd51iY6agN8fxKSg/Yb/ru77vKl3BXYGnWPQ3PctO+NnNbhAuDv/VAsmPAnU1m9g79WeXXmH6vw2KMgptQbgNBbEEG65eGwSwh8ghqTgcOf6yBeJqPWaL3OihRYhatijPmm3QuS9jVzoEQ45ZK4iXaEVUA6UnAHuSS1H95JX7vNDzv9SX2WWkpbFlPy4R8Qg15mvqkAeniu38kTJkG8vIMAi+Rw83lDNo70GutryXXbEPgw3Z7yrHt0ouHcPXi7v9zml4alOrsHuS9u3n83LckAV4078xcwSwdLnbrF6i7mzb5ufnZYV71ZGlIC+7gHhuFE/SwC4IBdG7aRjALh2cwyEN2iKcW6DDIOcgTiDf8N+xeb39fkD7QdlB7MO+2gppc5mY7rifQdkI9EEyhNZws2a4+qhJ+ZeMDtcqxgwTqLfED4r1Vl9XdgUVNi7F254371HoXsijc1+zLo9eHe69Vrn0jDK9ZPaZlu0DmT4Its8t4btNmXjyVJigjjr3s/ng51qeVG90szftGp+nEKBgooVDum6xTmMT+nIS4iktTsruNNDo8KeugLpOx5t9lNWWDJZpqPdu+jyf6EjhsZt0iecRCXYKbnq7oMckFJcHd7ltI6OcE1DQIrsgdhpH/5l36ztOSkCFYTC69pgllyY1qZAuwFjySNqLlnst7D2YO4EtrNzfG7nx4KwG+k/duolr/NKuW9SVuJk+44lNfNRZakb4B8baEBZ6CJoPdKnjNns4DnRuY4kzGfryAKZCixvrm+/8wnMUjYQXnRjAGBZCHx4yo+UK3Kaxmv/jTkUqvuDoGzEYm9n5pzJuI6JKebPpZjX8lFIOHm+eU1p44aOkz0d88IZ41CkrT97gWfIX5yx6k5zseHFSWjekUXLOP6wFU7QwIeuEtKzClIoc+jhtUP3FxCpY3Kycvx6xYz8zI3A70ORuvZDoaZu7Sfk18bXCFbbbZqTlLMmWqP/tQvZY1d6gZ1zdKZsBhA9QQo/EaBefZICSvJ0aebF8EYOdhDMDb5PCIsQF95fOX2IS79AnnLpGTw/sFbPTypJPdRyHmjQkH0fS/P4Mf2nwRqXY9mJGUe2YBCjomLyO8wrNNW15a4QQSyFs8eFt+Gn755MjYKU7dDTtIvAcu02C6cwtJSHvu8TMbBchKYO5F1/4jc8zNv8eAH5sgKhNohMiJt/oWnwDlVB51zuPA0ya7KU1jSbS8Si5ZtqF+77V8XvesV0WsacVci7IWpt+OPspCzJWofT6c679+fhT0eub9rVQAbZQm338y+juTq08L19TX2EGKGG4cTY6pQHqj01pamFJlO7FBzrd+PceIVInoEEbnivrEdSr5H4xLkevgLuvQU7KNa2BTTa4Hp9bD0AzdyYG2WvBsIRxP/KxtOTVBD5yQZ1wg+l+YtKS1wosI+oCTHUNFiVG6ZjH43cHOdS4i3Z/Oas/ldYTVJHgl63hydMA8UvzpN+Ee9SA8Dn8+TgTWeRHy5AS6ZoBcwhBu+brGno8t833n1UsEmxXRO3kE7bcMPC8B8XtjbUtCIB4TjDE+YSUIuZG033n5WvKKXdWfA0buQ/ZrgDK3bMtM6tXGnG6KzHwZSCOwCQb/iVDSC95HhCsjUTohdOCVwRU7bvOjm1R7J2EHBJu03zK1Ka7K0DXPKaHMRvVhBdtDbM1O+mVF1t2saMd2R8skfeq9GZMsYsmav3LJ9bpE1E2H84GbCpMWlOf6ecMv2PX5VpkpSf57nQvotB/ZZcMYJw8bWUyLIJaQJ/eUR6+lNRbT6nhwnzZcIF/Q/eot0nlQc/u5TMs1xbnT5lw1enbDmAR7PChBSRZIlvLjtIYrtCZMbbqPRPijRP2PzYR1MEdZk15Ee63RkhLw2zjASB+IOfgGzBUKCELx7HbHfgIuyKHwhjzopkENjI1BEImJ8bA25DfcXupjL71aIA7tFky+rOMY0nGIQTVobg9Jy3KsJt4eDpgv4XHrHhq2AHrICkGOaDpVhITyJipgrc8J03Lm0+CccCEK+cjWe5XsO/S2fLZ4NOSmm8wD1PbBO+TZrUFOlIMdwXvG/WsOyO2lJgg5F+A1m0X6GNFSYEv2AoInrFu63gP3iACk0Eu4XVIr+9j3+0tF5kvkG7guYfM48w3zXNrrk71lc4DMg5AWgo5PazxsoyAWxD4o09yJtEkuHMDp22VbT0lRxztkcTzey6cO2dxA3ffsZPGEarZauenFxXtmhgOQ9dtTA2KQs/rJG02TWrj75aYA2x93WP5e/Dlf17bjrIeTqXsIXfg3+I99R87wLfQDGqNgIdchv329cu/tm13mNmMesjXTW03GqZIZXB5+LuF694M2OOuEvQLrvXnPORCFPqISYPPvRHmJFdwWt4N634NwpCOE+pmMcwTzDX05D9p/K5AntQvBBWoYrB1pbwLUm5nw2Q+yHQvQUkIwUshmwvqUVEVgj8JXYeSzqzx16RcX2+ML6s5w9/LGCnLj/4YEcnDzig/q++XKReEN2/2Cp1e+5AI/E/5YFCRG0JO+kBqEDNyHc9vM3wuUBdQCdqqm8ee9+Fsz/GtPdEz326M94yNNQ24Wp+s4zNVxmnXoO1bJ843+twMt4o3392BexkDYzHjwyjQ+0J6azY57oLx1JkvwG88epKURgOAxsfhcfK278pyf+43YyPz14LGuNyW22NLmebL53epP8OVRjdyMIPNepnEJKNfxbfNqVe0JRhMyFm7607U3xQ35afr6wQs8T8DdNpbGFgjH+xgYYYJSrDfuQXUww5ItZMcz9fYSwQb8Vc0xJ62t9ruZ8bup3HNP1lvOZNz7h/4KYuAFf6Pkh0P6kcdmMjnwrvzY0vb87k73HsK5yi3/bj937MEHtypgtJL79Q9cj1PeJhAeU257gG3vc87FW9f8cuaPpMfOZC/nvsUXRa9pi4VNMJi7F35f7leFPI9qL3PshA84XIewiwXFBvRAuKfhDqfXevX833NsoAzeewjVhTbTTkCNyh5QYGYRQHs7PY64e4vueXtbpqXPHl0BBIVTAc7Nt+nKrkxCxz3HTsWbq29tu/jfx3G43ds2fGfRc/kFjP1dQGBmfWxrCAMeoGDNdL2yqGVl36hswYevQN9RDxMSQC9CnIUl2CG011XsIFw7/Ndth3ZBT/1dai+NEYYe46H2lbOY+jKXHWkxwVy7lVbthrrjp7gYu4QL84y4nikOf+GkJ0TPCban4WIrebt2krRh7jox7+UY4PHgHQhPZHP7X5KYy1t0mww5+BGpOwX2Mwavs+BKN+8q33uTPgSYn3EEs0e/UF5Lz0ngGCBeKMs27tK/OJnXmKXhuh0WDBu39qjW1BBWNKIPUzUlksw3ZL4WJ72QOdLtbRTqSNnFe3E9U6PM3ZTzkuOR3psPMWl3MMp6H8rk9FpusTD9ih5yBxbnKKMwpLzt9ecpOYz7XdsaROuDKqSv1ki8ud66mwNUI70mBzh947gPzQePS+LqXmQ0HoqM691AfVMySXRB/JkmbaTT0Yf3t/mBQpZbEEe7WRr6Vj1D0YKs12d9pDicfue3SwodUyJokb+DXd/J8X++tgkdf6WYkqC2xBegum+FfTjXWmGUwF6mwihIYlATgCqqyOTtvEHMtQHQHbaFz3en8eAZIDZas11pGl/iFgVk+mHE50iijHyBymzVArAtsgA/b1vdhzcMLSM+gGlLogvzT33bmT3m/ZmsxE5utyGbDgLyilALMZuV6SZ+NlwOkm39+ZTrGfd8WQf/sIdHycMvMs5Ic98wXuGLgD5cPCK2BLnex3g5weB0VWgLLtDXVmJyPyf2XunH+E6URBkcS9y62APYJ/mNT/dwe34gj18k1rx6LuMSZp+tyh5ZVi57x7apQbb1quFM2WpZWdAfoEsINuhEhfUSbRwJdIewHFOgcnUAKP6vZ1bbuhJSK2bbdVirYN7ubJE9sP7mZkTOwnyBRbuGkbjQomkgU6ut9mQC3VHc5mAHLZMQwy0OhmQCvr8VV6/l99/KcN8Tt0hRCHrG3oNcX5S7cJlBAdxvIfdwUxDD+G/8FkP8I23KH8VL3qejFdNAgAVMa6D30It1IdkhTcc+/ltDwDfrXmKQwHtcTzQLDX0Sc+MnHxo3WpBKv4Ql8F4tTs1QEDZ6y5qAFNA3NJDFhZG6kN/T0v5rxZOGhUCSGrAjUAbKgTHf++kCyk14gilhbKUp/E78tVNJfCv4K9HwnL615i5tEDeIVtCx3aWukBNlW37nhd+Ae59n3KzDEwThePDIwGdO/yH8YGGEIgIg7DYUyFnrEQwIPdEG3r5hz02fq27IORhwbIW6/sHVoFptEXFnfKUkDil6wuc1tI2qyfyVsm2ozu2eXhaeIDkT0nd4onD6HtsGm240E4AeppSa8fmRPCHztRM4i0dUeChBfc2ZRqcaz7EF4XttUNvS27eSEtBu22H7jPMixITcu1LhfP/jrCtBeZjJp2C3x0Q4rXg2ZXrzdERNo4G25WHKxqv6NuB2/4quJV6533JPxQV0heodxHZDzqzPO4lYnlzRAR4zXm9tFCaUTOYKBhE7cXx2Vajbh+03DPJScoD+wydMcCaYEo8ORwUJ5eEealR9Toh4bggfv1zy3s8lE9N6V30kGtrssjnYiOTfZaSy7iMd7zMvSJErZ8KWoZweFGZlZ3ofTqSTrWlHrIDs7giY7ne3mei1D8dLsXSjODvoYxIpt6u6b7B7PAFHljaXQ0W7oNsdG1QTLi8Dg5PdaIPgOpnVfZv22lJ0zVNSJk+slvyjd5QMYtuDOLOX4MvZ/BsP4mfX7EqMQeQ/+W3FPFef3eVkSFCMMzJ9OskFU6ZzVJvjDb9AeaOn0eoLDEbEEaSQmXQCYC0rYclobd9lFHF67AJ4xSP4f6Ljyrf7X6D/dteHNYgp+skxaE34zuv/rLQ7g6fv2s3MRni5DZfKj7Dt7A+Y93nWA1R+9fmmX+57uHlcBoAyxCE75+U4CFs4kwtogL/2eFXhkXb5uXX1u8tL2w/5Pfx9DCOdN/icWVV8ZXeqXx00O0MuMKcFe/Ao6aoSQUDueSYNY6okM+z5LYagG+X6vLl6pVuPbJKnByB/qPkWiJ+BZW7pvdeWwsIH7YD+oDPZY3DJmdbHkdbvHPjO5hrC2LJo6Z14A1WWum5I8277ujcgl4MY7Vt53oPgdA88b+B8B11n1jn0h8eBTrCpnULBgTNJlbRRoIqGuL15R9ob2+YEYSVHiedfA7Hl44YcwUa6J1o3A2/xk/4s0E70Ief+dnvj4gA024bJvZcLACh9wXl/5wcZ
*/