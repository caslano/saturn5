//
// execution/invocable_archetype.hpp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef BOOST_ASIO_EXECUTION_INVOCABLE_ARCHETYPE_HPP
#define BOOST_ASIO_EXECUTION_INVOCABLE_ARCHETYPE_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include <boost/asio/detail/config.hpp>
#include <boost/asio/detail/type_traits.hpp>
#include <boost/asio/detail/variadic_templates.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace execution {

/// An archetypal function object used for determining adherence to the
/// execution::executor concept.
struct invocable_archetype
{
#if !defined(GENERATING_DOCUMENTATION)
  // Necessary for compatibility with a C++03 implementation of result_of.
  typedef void result_type;
#endif // !defined(GENERATING_DOCUMENTATION)

#if defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES) \
  || defined(GENERATING_DOCUMENTATION)

  /// Function call operator.
  template <typename... Args>
  void operator()(BOOST_ASIO_MOVE_ARG(Args)...)
  {
  }

#else // defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)
      //   || defined(GENERATING_DOCUMENTATION)

  void operator()()
  {
  }

#define BOOST_ASIO_PRIVATE_INVOCABLE_ARCHETYPE_CALL_DEF(n) \
  template <BOOST_ASIO_VARIADIC_TPARAMS(n)> \
  void operator()(BOOST_ASIO_VARIADIC_UNNAMED_MOVE_PARAMS(n)) \
  { \
  } \
  /**/
  BOOST_ASIO_VARIADIC_GENERATE(BOOST_ASIO_PRIVATE_INVOCABLE_ARCHETYPE_CALL_DEF)
#undef BOOST_ASIO_PRIVATE_INVOCABLE_ARCHETYPE_CALL_DEF

#endif // defined(BOOST_ASIO_HAS_VARIADIC_TEMPLATES)
       //   || defined(GENERATING_DOCUMENTATION)
};

} // namespace execution
} // namespace asio
} // namespace boost

#include <boost/asio/detail/pop_options.hpp>

#endif // BOOST_ASIO_EXECUTION_INVOCABLE_ARCHETYPE_HPP


/* invocable_archetype.hpp
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
*/