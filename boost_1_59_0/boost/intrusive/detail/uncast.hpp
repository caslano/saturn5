/////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga  2006-2014
//
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/intrusive for documentation.
//
/////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTRUSIVE_DETAIL_UNCAST_HPP
#define BOOST_INTRUSIVE_DETAIL_UNCAST_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif

#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/intrusive/detail/config_begin.hpp>
#include <boost/intrusive/pointer_traits.hpp>
#include <boost/intrusive/detail/mpl.hpp>

namespace boost {
namespace intrusive {
namespace detail {

template<class ConstNodePtr>
struct uncast_types
{
   typedef typename pointer_traits<ConstNodePtr>::element_type element_type;
   typedef typename remove_const<element_type>::type           non_const_type;
   typedef typename pointer_traits<ConstNodePtr>::
      template rebind_pointer<non_const_type>::type            non_const_pointer;
   typedef pointer_traits<non_const_pointer>                   non_const_traits;
};

template<class ConstNodePtr>
static typename uncast_types<ConstNodePtr>::non_const_pointer
   uncast(const ConstNodePtr & ptr)
{
   return uncast_types<ConstNodePtr>::non_const_traits::const_cast_from(ptr);
}

} //namespace detail {
} //namespace intrusive
} //namespace boost

#include <boost/intrusive/detail/config_end.hpp>

#endif //BOOST_INTRUSIVE_DETAIL_UTILITIES_HPP

/* uncast.hpp
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
*/