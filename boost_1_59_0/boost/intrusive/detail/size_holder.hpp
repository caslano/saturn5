/////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga  2014-2014
//
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/intrusive for documentation.
//
/////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTRUSIVE_DETAIL_SIZE_HOLDER_HPP
#define BOOST_INTRUSIVE_DETAIL_SIZE_HOLDER_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif

#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/intrusive/detail/workaround.hpp>

namespace boost {
namespace intrusive {
namespace detail {

template<bool ConstantSize, class SizeType, class Tag = void>
struct size_holder
{
   static const bool constant_time_size = ConstantSize;
   typedef SizeType  size_type;

   BOOST_INTRUSIVE_FORCEINLINE SizeType get_size() const
   {  return size_;  }

   BOOST_INTRUSIVE_FORCEINLINE void set_size(SizeType size)
   {  size_ = size; }

   BOOST_INTRUSIVE_FORCEINLINE void decrement()
   {  --size_; }

   BOOST_INTRUSIVE_FORCEINLINE void increment()
   {  ++size_; }

   BOOST_INTRUSIVE_FORCEINLINE void increase(SizeType n)
   {  size_ += n; }

   BOOST_INTRUSIVE_FORCEINLINE void decrease(SizeType n)
   {  size_ -= n; }

   BOOST_INTRUSIVE_FORCEINLINE void swap(size_holder &other)
   {  SizeType tmp(size_); size_ = other.size_; other.size_ = tmp; }

   SizeType size_;
};

template<class SizeType, class Tag>
struct size_holder<false, SizeType, Tag>
{
   static const bool constant_time_size = false;
   typedef SizeType  size_type;

   BOOST_INTRUSIVE_FORCEINLINE size_type get_size() const
   {  return 0;  }

   BOOST_INTRUSIVE_FORCEINLINE void set_size(size_type)
   {}

   BOOST_INTRUSIVE_FORCEINLINE void decrement()
   {}

   BOOST_INTRUSIVE_FORCEINLINE void increment()
   {}

   BOOST_INTRUSIVE_FORCEINLINE void increase(SizeType)
   {}

   BOOST_INTRUSIVE_FORCEINLINE void decrease(SizeType)
   {}

   BOOST_INTRUSIVE_FORCEINLINE void swap(size_holder){}
};

}  //namespace detail{
}  //namespace intrusive{
}  //namespace boost{

#endif //BOOST_INTRUSIVE_DETAIL_SIZE_HOLDER_HPP

/* size_holder.hpp
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
*/