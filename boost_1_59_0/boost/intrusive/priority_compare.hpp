/////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2008
//
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/intrusive for documentation.
//
/////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTRUSIVE_PRIORITY_COMPARE_HPP
#define BOOST_INTRUSIVE_PRIORITY_COMPARE_HPP

#include <boost/intrusive/detail/config_begin.hpp>
#include <boost/intrusive/detail/workaround.hpp>
#include <boost/intrusive/intrusive_fwd.hpp>

#include <boost/intrusive/detail/minimal_less_equal_header.hpp>

#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

namespace boost {
namespace intrusive {

/// @cond

template<class U>
void priority_order();

/// @endcond

template <class T = void>
struct priority_compare
{
   //Compatibility with std::binary_function
   typedef T      first_argument_type;
   typedef T      second_argument_type;
   typedef bool   result_type;

   BOOST_INTRUSIVE_FORCEINLINE bool operator()(const T &val, const T &val2) const
   {
      return priority_order(val, val2);
   }
};

template <>
struct priority_compare<void>
{
   template<class T, class U>
   BOOST_INTRUSIVE_FORCEINLINE bool operator()(const T &t, const U &u) const
   {
      return priority_order(t, u);
   }
};

/// @cond

template<class PrioComp, class T>
struct get_prio_comp
{
   typedef PrioComp type;
};


template<class T>
struct get_prio_comp<void, T>
{
   typedef ::boost::intrusive::priority_compare<T> type;
};

/// @endcond

} //namespace intrusive
} //namespace boost

#include <boost/intrusive/detail/config_end.hpp>

#endif //BOOST_INTRUSIVE_PRIORITY_COMPARE_HPP

/* priority_compare.hpp
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
*/