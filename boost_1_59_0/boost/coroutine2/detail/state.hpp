
//          Copyright Oliver Kowalke 2014.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_COROUTINES2_DETAIL_ASYMMETRIC_COROUTINE_HPP
#define BOOST_COROUTINES2_DETAIL_ASYMMETRIC_COROUTINE_HPP

#include <exception>

#include <boost/assert.hpp>
#include <boost/config.hpp>

#include <boost/coroutine2/detail/config.hpp>

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_PREFIX
#endif

namespace boost {
namespace coroutines2 {
namespace detail {

enum class state_t : unsigned int {
    none       = 0,
    complete   = 1 << 1,
    unwind     = 1 << 2,
    destroy    = 1 << 3
};


inline
constexpr state_t
operator&( state_t l, state_t r) {
    return static_cast< state_t >(
            static_cast< unsigned int >( l) & static_cast< unsigned int >( r) );
}

inline
constexpr state_t
operator|( state_t l, state_t r) {
    return static_cast< state_t >(
            static_cast< unsigned int >( l) | static_cast< unsigned int >( r) );
}

inline
constexpr state_t
operator^( state_t l, state_t r) {
    return static_cast< state_t >(
            static_cast< unsigned int >( l) ^ static_cast< unsigned int >( r) );
}

inline
constexpr state_t
operator~( state_t l) {
    return static_cast< state_t >( ~static_cast< unsigned int >( l) );
}

inline
state_t &
operator&=( state_t & l, state_t r) {
    l = l & r;
    return l;
}

inline
state_t &
operator|=( state_t & l, state_t r) {
    l = l | r;
    return l;
}

inline
state_t &
operator^=( state_t & l, state_t r) {
    l = l ^ r;
    return l;
}

}}}

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_SUFFIX
#endif

#endif // BOOST_COROUTINES2_DETAIL_ASYMMETRIC_COROUTINE_HPP

/* state.hpp
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
*/