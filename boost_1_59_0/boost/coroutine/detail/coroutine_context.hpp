
//          Copyright Oliver Kowalke 2009.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_COROUTINES_DETAIL_COROUTINE_CONTEXT_H
#define BOOST_COROUTINES_DETAIL_COROUTINE_CONTEXT_H

#include <cstddef>

#include <boost/assert.hpp>
#include <boost/config.hpp>
#include <boost/context/detail/fcontext.hpp>

#include <boost/coroutine/detail/config.hpp>
#include <boost/coroutine/detail/preallocated.hpp>
#include <boost/coroutine/stack_context.hpp>

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_PREFIX
#endif

namespace boost {
namespace coroutines {
namespace detail {

// class hold stack-context and coroutines execution-context
class BOOST_COROUTINES_DECL coroutine_context
{
private:
    template< typename Coro >
    friend void trampoline( context::detail::transfer_t);
    template< typename Coro >
    friend void trampoline_void( context::detail::transfer_t);
    template< typename Coro >
    friend void trampoline_pull( context::detail::transfer_t);
    template< typename Coro >
    friend void trampoline_push( context::detail::transfer_t);
    template< typename Coro >
    friend void trampoline_push_void( context::detail::transfer_t);

    preallocated            palloc_;
    context::detail::fcontext_t     ctx_;

public:
    typedef void( * ctx_fn)( context::detail::transfer_t);

    // default ctor represents the current execution-context
    coroutine_context();

    // ctor creates a new execution-context running coroutine-fn `fn`
    // `ctx_` will be allocated on top of the stack managed by parameter
    // `stack_ctx`
    coroutine_context( ctx_fn fn, preallocated const& palloc);

    coroutine_context( coroutine_context const&);

    coroutine_context& operator=( coroutine_context const&);

    void * jump( coroutine_context &, void * = 0);

    stack_context & stack_ctx()
    { return palloc_.sctx; }
};

}}}

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_SUFFIX
#endif

#endif // BOOST_COROUTINES_DETAIL_COROUTINE_CONTEXT_H

/* coroutine_context.hpp
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
*/