
//          Copyright Oliver Kowalke 2009.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_COROUTINES_DETAIL_TRAMPOLINE_H
#define BOOST_COROUTINES_DETAIL_TRAMPOLINE_H

#include <boost/assert.hpp>
#include <boost/config.hpp>
#include <boost/context/detail/fcontext.hpp>
#include <boost/cstdint.hpp>

#include <boost/coroutine/detail/config.hpp>
#include <boost/coroutine/detail/data.hpp>

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_PREFIX
#endif

namespace boost {
namespace coroutines {
namespace detail {

template< typename Coro >
void trampoline( context::detail::transfer_t t)
{
    typedef typename Coro::param_type   param_type;

    data_t * data = static_cast< data_t * >( t.data);
    data->from->ctx_ = t.fctx;
    param_type * param(
        static_cast< param_type * >( data->data) );
    BOOST_ASSERT( 0 != param);
    BOOST_ASSERT( 0 != param->data);

    Coro * coro(
        static_cast< Coro * >( param->coro) );
    BOOST_ASSERT( 0 != coro);

    coro->run( param->data);
}

template< typename Coro >
void trampoline_void( context::detail::transfer_t t)
{
    typedef typename Coro::param_type   param_type;

    data_t * data = static_cast< data_t * >( t.data);
    data->from->ctx_ = t.fctx;
    param_type * param(
        static_cast< param_type * >( data->data) );
    BOOST_ASSERT( 0 != param);

    Coro * coro(
        static_cast< Coro * >( param->coro) );
    BOOST_ASSERT( 0 != coro);
    
    coro->run();
}

}}}

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_SUFFIX
#endif

#endif // BOOST_COROUTINES_DETAIL_TRAMPOLINE_H

/* trampoline.hpp
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
*/