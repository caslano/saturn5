// Copyright Daniel Wallin 2006.
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PARAMETER_AUX_PREPROCESSOR_IMPL_FUNCTION_FORWARD_MATCH_HPP
#define BOOST_PARAMETER_AUX_PREPROCESSOR_IMPL_FUNCTION_FORWARD_MATCH_HPP

#include <boost/parameter/config.hpp>

#if !defined(BOOST_NO_SFINAE) && \
    !BOOST_WORKAROUND(BOOST_BORLANDC, BOOST_TESTED_AT(0x592))

#include <boost/parameter/aux_/pp_impl/match.hpp>
#include <boost/preprocessor/repetition/enum_trailing_params.hpp>

// Expands to an extra argument that is well-formed
// iff all Args... satisfy the requirements set by params.
#define BOOST_PARAMETER_FUNCTION_FORWARD_MATCH(params, n, prefix)            \
  , typename ::boost::parameter::aux::match<                                 \
        params BOOST_PP_ENUM_TRAILING_PARAMS(n, prefix)                      \
    >::type = params()
/**/

#define BOOST_PARAMETER_FUNCTION_FORWARD_MATCH_Z(z, params, n, prefix)       \
  , typename ::boost::parameter::aux::match<                                 \
        params BOOST_PP_ENUM_TRAILING_PARAMS_Z(z, n, prefix)                 \
    >::type = params()
/**/

#else   // SFINAE/Borland workarounds needed.

#define BOOST_PARAMETER_FUNCTION_FORWARD_MATCH(params, n, prefix)            \
  , params = params()
/**/

#define BOOST_PARAMETER_FUNCTION_FORWARD_MATCH_Z(z, params, n, prefix)       \
  , params = params()
/**/

#endif
#endif  // include guard


/* function_forward_match.hpp
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
*/