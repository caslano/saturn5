/*
 *  (C) Copyright Nick Thompson 2018.
 *  Use, modification and distribution are subject to the
 *  Boost Software License, Version 1.0. (See accompanying file
 *  LICENSE_1_0.txt or copy at https://www.boost.org/LICENSE_1_0.txt)
 */
#ifndef BOOST_INTEGER_MOD_INVERSE_HPP
#define BOOST_INTEGER_MOD_INVERSE_HPP
#include <stdexcept>
#include <boost/throw_exception.hpp>
#include <boost/integer/extended_euclidean.hpp>

namespace boost { namespace integer {

// From "The Joy of Factoring", Algorithm 2.7.
// Here's some others names I've found for this function:
// PowerMod[a, -1, m] (Mathematica)
// mpz_invert (gmplib)
// modinv (some dude on stackoverflow)
// Would mod_inverse be sometimes mistaken as the modular *additive* inverse?
// In any case, I think this is the best name we can get for this function without agonizing.
template<class Z>
Z mod_inverse(Z a, Z modulus)
{
    if (modulus < Z(2))
    {
        BOOST_THROW_EXCEPTION(std::domain_error("mod_inverse: modulus must be > 1"));
    }
    // make sure a < modulus:
    a = a % modulus;
    if (a == Z(0))
    {
        // a doesn't have a modular multiplicative inverse:
        return Z(0);
    }
    boost::integer::euclidean_result_t<Z> u = boost::integer::extended_euclidean(a, modulus);
    if (u.gcd > Z(1))
    {
        return Z(0);
    }
    // x might not be in the range 0 < x < m, let's fix that:
    while (u.x <= Z(0))
    {
        u.x += modulus;
    }
    // While indeed this is an inexpensive and comforting check,
    // the multiplication overflows and hence makes the check itself buggy.
    //BOOST_ASSERT(u.x*a % modulus == 1);
    return u.x;
}

}}
#endif

/* mod_inverse.hpp
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
*/