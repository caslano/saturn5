// Copyright Peter Dimov and David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef GET_POINTER_DWA20021219_HPP
#define GET_POINTER_DWA20021219_HPP

#include <boost/config.hpp>

// In order to avoid circular dependencies with Boost.TR1
// we make sure that our include of <memory> doesn't try to
// pull in the TR1 headers: that's why we use this header 
// rather than including <memory> directly:
#include <boost/config/no_tr1/memory.hpp>  // std::auto_ptr

namespace boost { 

// get_pointer(p) extracts a ->* capable pointer from p

template<class T> T * get_pointer(T * p)
{
    return p;
}

// get_pointer(shared_ptr<T> const & p) has been moved to shared_ptr.hpp

#if !defined( BOOST_NO_AUTO_PTR )

#if defined( __GNUC__ ) && (defined( __GXX_EXPERIMENTAL_CXX0X__ ) || (__cplusplus >= 201103L))
#if defined( BOOST_GCC )
#if BOOST_GCC >= 40600
#define BOOST_CORE_DETAIL_DISABLE_LIBSTDCXX_DEPRECATED_WARNINGS
#endif // BOOST_GCC >= 40600
#elif defined( __clang__ ) && defined( __has_warning )
#if __has_warning("-Wdeprecated-declarations")
#define BOOST_CORE_DETAIL_DISABLE_LIBSTDCXX_DEPRECATED_WARNINGS
#endif // __has_warning("-Wdeprecated-declarations")
#endif
#endif // defined( __GNUC__ ) && (defined( __GXX_EXPERIMENTAL_CXX0X__ ) || (__cplusplus >= 201103L))

#if defined( BOOST_CORE_DETAIL_DISABLE_LIBSTDCXX_DEPRECATED_WARNINGS )
// Disable libstdc++ warnings about std::auto_ptr being deprecated in C++11 mode
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#define BOOST_CORE_DETAIL_DISABLED_DEPRECATED_WARNINGS
#endif

template<class T> T * get_pointer(std::auto_ptr<T> const& p)
{
    return p.get();
}

#if defined( BOOST_CORE_DETAIL_DISABLE_LIBSTDCXX_DEPRECATED_WARNINGS )
#pragma GCC diagnostic pop
#undef BOOST_CORE_DETAIL_DISABLE_LIBSTDCXX_DEPRECATED_WARNINGS
#endif

#endif // !defined( BOOST_NO_AUTO_PTR )

#if !defined( BOOST_NO_CXX11_SMART_PTR )

template<class T> T * get_pointer( std::unique_ptr<T> const& p )
{
    return p.get();
}

template<class T> T * get_pointer( std::shared_ptr<T> const& p )
{
    return p.get();
}

#endif

} // namespace boost

#endif // GET_POINTER_DWA20021219_HPP

/* get_pointer.hpp
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
*/