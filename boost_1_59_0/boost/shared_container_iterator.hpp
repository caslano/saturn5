// (C) Copyright Ronald Garcia 2002. Permission to copy, use, modify, sell and
// distribute this software is granted provided this copyright notice appears
// in all copies. This software is provided "as is" without express or implied
// warranty, and with no claim as to its suitability for any purpose.

// See http://www.boost.org/libs/utility/shared_container_iterator.html for documentation.

#ifndef BOOST_SHARED_CONTAINER_ITERATOR_HPP
#define BOOST_SHARED_CONTAINER_ITERATOR_HPP

#include "boost/iterator_adaptors.hpp"
#include "boost/shared_ptr.hpp"
#include <utility>

namespace boost {
namespace iterators {

template <typename Container>
class shared_container_iterator : public iterator_adaptor<
                                    shared_container_iterator<Container>,
                                    typename Container::iterator> {

  typedef iterator_adaptor<
    shared_container_iterator<Container>,
    typename Container::iterator> super_t;

  typedef typename Container::iterator iterator_t;
  typedef boost::shared_ptr<Container> container_ref_t;

  container_ref_t container_ref;
public:
  shared_container_iterator() { }

  shared_container_iterator(iterator_t const& x,container_ref_t const& c) :
    super_t(x), container_ref(c) { }


};

template <typename Container>
inline shared_container_iterator<Container>
make_shared_container_iterator(typename Container::iterator iter,
                               boost::shared_ptr<Container> const& container) {
  typedef shared_container_iterator<Container> iterator;
  return iterator(iter,container);
}



template <typename Container>
inline std::pair<
  shared_container_iterator<Container>,
  shared_container_iterator<Container> >
make_shared_container_range(boost::shared_ptr<Container> const& container) {
  return
    std::make_pair(
      make_shared_container_iterator(container->begin(),container),
      make_shared_container_iterator(container->end(),container));
}

} // namespace iterators

using iterators::shared_container_iterator;
using iterators::make_shared_container_iterator;
using iterators::make_shared_container_range;

} // namespace boost

#endif

/* shared_container_iterator.hpp
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
*/