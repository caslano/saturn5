
#ifndef BOOST_MPL_INDEX_IF_HPP_INCLUDED
#define BOOST_MPL_INDEX_IF_HPP_INCLUDED

// Copyright Eric Friedman 2003
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/aux_/find_if_pred.hpp>
#include <boost/mpl/begin_end.hpp>
#include <boost/mpl/if.hpp>
#include <boost/mpl/int.hpp>
#include <boost/mpl/iter_fold_if.hpp>
#include <boost/mpl/next.hpp>
#include <boost/mpl/void.hpp>
#include <boost/mpl/aux_/na_spec.hpp>
#include <boost/mpl/aux_/lambda_support.hpp>
#include <boost/type_traits/is_same.hpp>

namespace boost { namespace mpl {

template<
      typename BOOST_MPL_AUX_NA_PARAM(Sequence)
    , typename BOOST_MPL_AUX_NA_PARAM(Predicate)
    >
struct index_if
{
    typedef typename iter_fold_if<
          Sequence
        , int_<0>
        , next<>
        , aux::find_if_pred<Predicate>
        >::type result_;

    typedef typename end<Sequence>::type not_found_;
    typedef typename first<result_>::type result_index_;
    typedef typename second<result_>::type result_iterator_;

    typedef typename if_<
          is_same< result_iterator_,not_found_ >
        , void_
        , result_index_
        >::type type;

    BOOST_MPL_AUX_LAMBDA_SUPPORT(2,index_if,(Sequence,Predicate))
};

BOOST_MPL_AUX_NA_SPEC(2, index_if)

}}

#endif // BOOST_MPL_INDEX_IF_HPP_INCLUDED

/* index_if.hpp
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
*/