
#ifndef BOOST_MPL_STABLE_PARTITION_HPP_INCLUDED
#define BOOST_MPL_STABLE_PARTITION_HPP_INCLUDED

// Copyright Eric Friedman 2002-2003
// Copyright Aleksey Gurtovoy 2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/fold.hpp>
#include <boost/mpl/reverse_fold.hpp>
#include <boost/mpl/protect.hpp>
#include <boost/mpl/aux_/partition_op.hpp>
#include <boost/mpl/aux_/inserter_algorithm.hpp>
#include <boost/mpl/aux_/na.hpp>

namespace boost { namespace mpl {

namespace aux {
 
template <
      typename Sequence
    , typename Pred
    , typename In
    , typename In2
    , typename In1 = typename if_na<In,In2>::type
    >
struct stable_partition_impl
    : fold<
          Sequence
        , pair< typename In1::state, typename In2::state >
        , protect< partition_op< 
              Pred
            , typename In1::operation
            , typename In2::operation
            > >
        >
{
};

template <
      typename Sequence
    , typename Pred
    , typename In
    , typename In2
    , typename In1 = typename if_na<In,In2>::type
    >
struct reverse_stable_partition_impl
    : reverse_fold<
          Sequence
        , pair< typename In1::state, typename In2::state >
        , protect< partition_op< 
              Pred
            , typename In1::operation
            , typename In2::operation
            > >
        >
{
};

} // namespace aux

BOOST_MPL_AUX_INSERTER_ALGORITHM_DEF(4, stable_partition)

}}

#endif // BOOST_MPL_STABLE_PARTITION_HPP_INCLUDED

/* stable_partition.hpp
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
*/