
#ifndef BOOST_MPL_REPLACE_IF_HPP_INCLUDED
#define BOOST_MPL_REPLACE_IF_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
// Copyright John R. Bandela 2000-2002
// Copyright David Abrahams 2003-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/transform.hpp>
#include <boost/mpl/apply.hpp>
#include <boost/mpl/if.hpp>
#include <boost/mpl/aux_/inserter_algorithm.hpp>
#include <boost/mpl/aux_/config/forwarding.hpp>

namespace boost { namespace mpl {

namespace aux {

template< typename Predicate, typename T >
struct replace_if_op
{
    template< typename U > struct apply
#if !defined(BOOST_MPL_CFG_NO_NESTED_FORWARDING)
        : if_<
              typename apply1<Predicate,U>::type
            , T
            , U
            >
    {
#else
    {
        typedef typename if_<
              typename apply1<Predicate,U>::type
            , T
            , U
            >::type type;
#endif
    };
};


template<
      typename Sequence
    , typename Predicate
    , typename T
    , typename Inserter
    >
struct replace_if_impl
    : transform1_impl<
          Sequence
        , protect< aux::replace_if_op<Predicate,T> >
        , Inserter
        >
{
};

template<
      typename Sequence
    , typename Predicate
    , typename T
    , typename Inserter
    >
struct reverse_replace_if_impl
    : reverse_transform1_impl<
          Sequence
        , protect< aux::replace_if_op<Predicate,T> >
        , Inserter
        >
{
};

} // namespace aux

BOOST_MPL_AUX_INSERTER_ALGORITHM_DEF(4, replace_if)

}}

#endif // BOOST_MPL_REPLACE_IF_HPP_INCLUDED

/* replace_if.hpp
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
*/