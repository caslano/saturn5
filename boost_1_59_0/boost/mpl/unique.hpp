
#ifndef BOOST_MPL_UNIQUE_HPP_INCLUDED
#define BOOST_MPL_UNIQUE_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
// Copyright John R. Bandela 2000-2002
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/fold.hpp>
#include <boost/mpl/reverse_fold.hpp>
#include <boost/mpl/eval_if.hpp>
#include <boost/mpl/and.hpp>
#include <boost/mpl/identity.hpp>
#include <boost/mpl/pair.hpp>
#include <boost/mpl/apply.hpp>
#include <boost/mpl/aux_/inserter_algorithm.hpp>
#include <boost/mpl/aux_/na.hpp>
#include <boost/mpl/aux_/na_spec.hpp>
#include <boost/mpl/aux_/lambda_spec.hpp>

namespace boost { namespace mpl {

namespace aux {

template< typename Predicate, typename Operation >
struct unique_op
{
    template< typename Pair, typename T > struct apply
    {
        typedef typename Pair::first seq_;
        typedef typename Pair::second prior_;
        typedef typename eval_if<
              and_< is_not_na<prior_>, apply2<Predicate,prior_,T> >
            , identity<seq_>
            , apply2<Operation,seq_,T>
            >::type new_seq_;

        typedef pair<new_seq_,T> type;
    };
};

template<
      typename Sequence
    , typename Predicate
    , typename Inserter
    >
struct unique_impl
    : first< typename fold<
          Sequence
        , pair< typename Inserter::state,na >
        , protect< aux::unique_op<Predicate,typename Inserter::operation> >
        >::type >
{
};

template<
      typename Sequence
    , typename Predicate
    , typename Inserter
    >
struct reverse_unique_impl
    : first< typename reverse_fold<
          Sequence
        , pair< typename Inserter::state,na >
        , protect< aux::unique_op<Predicate,typename Inserter::operation> >
        >::type >
{
};

} // namespace aux

BOOST_MPL_AUX_INSERTER_ALGORITHM_DEF(3, unique)

}}

#endif // BOOST_MPL_UNIQUE_HPP_INCLUDED

/* unique.hpp
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
*/