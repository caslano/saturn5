
#ifndef BOOST_MPL_SET_AUX_INSERT_IMPL_HPP_INCLUDED
#define BOOST_MPL_SET_AUX_INSERT_IMPL_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2003-2007
// Copyright David Abrahams 2003-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/insert_fwd.hpp>
#include <boost/mpl/set/aux_/has_key_impl.hpp>
#include <boost/mpl/set/aux_/item.hpp>
#include <boost/mpl/set/aux_/tag.hpp>
#include <boost/mpl/identity.hpp>
#include <boost/mpl/base.hpp>
#include <boost/mpl/eval_if.hpp>
#include <boost/mpl/aux_/na.hpp>

#include <boost/type_traits/is_same.hpp>

namespace boost { namespace mpl {

namespace aux {
template<  typename Set, typename T > struct set_insert_impl
    : eval_if< 
          has_key_impl<aux::set_tag>::apply<Set,T>
        , identity<Set>
        , eval_if< 
              is_same< T,typename Set::last_masked_ > 
            , base<Set>
            , identity< s_item<T,typename Set::item_> >
            >
        >
{
};
}

template<>
struct insert_impl< aux::set_tag >
{
    template< 
          typename Set
        , typename PosOrKey
        , typename KeyOrNA
        > 
    struct apply
        : aux::set_insert_impl<
              Set
            , typename if_na<KeyOrNA,PosOrKey>::type
            >
    {
    };
};

}}

#endif // BOOST_MPL_SET_AUX_INSERT_IMPL_HPP_INCLUDED

/* insert_impl.hpp
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
*/