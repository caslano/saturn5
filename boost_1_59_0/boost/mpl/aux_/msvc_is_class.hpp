
#ifndef BOOST_MPL_AUX_MSVC_IS_CLASS_HPP_INCLUDED
#define BOOST_MPL_AUX_MSVC_IS_CLASS_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2002-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/if.hpp>
#include <boost/mpl/bool.hpp>
#include <boost/mpl/aux_/type_wrapper.hpp>
#include <boost/mpl/aux_/yes_no.hpp>

#include <boost/type_traits/is_reference.hpp>

namespace boost { namespace mpl { namespace aux {

template< typename T > struct is_class_helper
{
    typedef int (T::* type)();
};

// MSVC 6.x-specific lightweight 'is_class' implementation; 
// Distinguishing feature: does not instantiate the type being tested.
template< typename T >
struct msvc_is_class_impl
{
    template< typename U>
    static yes_tag  test(type_wrapper<U>*, /*typename*/ is_class_helper<U>::type = 0);
    static no_tag   test(void const volatile*, ...);

    enum { value = sizeof(test((type_wrapper<T>*)0)) == sizeof(yes_tag) };
    typedef bool_<value> type;
};

// agurt, 17/sep/04: have to check for 'is_reference' upfront to avoid ICEs in
// complex metaprograms
template< typename T >
struct msvc_is_class
    : if_<
          is_reference<T>
        , false_
        , msvc_is_class_impl<T>
        >::type
{
};

}}}

#endif // BOOST_MPL_AUX_MSVC_IS_CLASS_HPP_INCLUDED

/* msvc_is_class.hpp
pQCskCrgC30GUoildmAECFDrv+hTprlOvc7B4pzk4hi1jfZD6mpXbetyPPeXSZYzHrPbWN1JCX7JtwPvFP51IdEFKzwuCjIbZMbr9tNWWAy1FQ4CZFa9ujdbG6bqTlLw1Rdd18hrDlb+oJEdHjEvbe3+bWV/CvXSu1V07k+VGNZinBH3V5qVfupFh13c2Sg1eI3tpxOydaxhk9OaKqOafLHfysRfKkVbb+sS3FMwfdHbdJsAV0jtG7bfhCJ6pQJGP7U6vgfFcNHx/oEGL7trieD3JYwx7xqYZMbtV5O50kRcaWzBPTQ8N6c6GhM7vuqdLXPdiLfM1VztRr+npJoP3JkbNsD/OBRLPrwV+9FVT6vGXm16fCGittJSxL0zmAOUXlpEqco76Sh3bv6xra6SZZjG2m2WeOz6GoKUM04MtJpWq1h6y0Ou9rbpZQA5GnBHsaEFHHhbb5Mc7yh3N2drMX2j+5j9iFM16DWe4SZIRkIENG0ggX0CPvtaLgSANzgSvh2KkUXaLot2iW7bbBkZujB3W6WO3Zv+dwQnzJxlGHp92tHEzFMCLB2C8QKhwb05Aq0OJsi+7eWMDBzOkpiYUmvPsPgoPkxaqACQwefz2Vbqeux8/HCzSWr9BbBKI457UO44A0D3eDFt7FSaXTp7AV4Nq8m7cYMgCzaD/zIr0O8dCcuJxSxGkS+XUUhI1wGE8p7et8itRS1kghr3UKhI3jloWlBb5I+yE9V62X45YYB31xgTxJWXo643MGJLgGrRR+seM4q+aLC8ttMNKSnVX1StXWHdx1pCVsM7ZlxtnV+bgdS+xTBoEJgTql2+2LyYWiAdOVdcIVJqPxsPQx6Ji7Z2V7n2cYl1/IRdlloI5sGjB7pfqWRcYwUMkxkOa1XVRnw+byUYlAauBWqVT09cAfP8vUn/EA0kifwz+hr7bqQKObZymR78b8gIogMgoeeOZO4jyK9tnUyz3Cmn/cGp3X74cBSEn0PABZRDkQ724VBgdrpHYqEy21ETOHFlLC2wHz/LP5nYL+c/0E7JxXW/Dxn1MbeJoOWYf2GwHj0aRel9VDL4Kr5XZpj8BKygq3L1n1Fk6E7vHThPKv5rJrKDk34IfgRZaIYSfYZWBxymv3Ve5Nc5p2yRVAJu+HlT/MnDJ8wHBTaKuGEGO+w6m+i9/p23g2Jq3atg24rvL8IER2aEPkvlwAp19s/ul/y4g7odMnbDZOvQBhmgLgfbZfRPWnhcBdIyiRQJbyv9xkOYcZDS9bbH0PKU0nfWRXaGYdhNTLa5VgJx80Zv4Mkfn1F8O9yc4ynXN/q9it82wFhoQNOh1Hsa5z/6u5ADhzoddpdVch03856HTL3gCAZ9udTZuRkH2m25jEEG85gFoOs1NgxF7tkcxz00YQRRLjJJvNi5H1MAej5l4wCb0QlWLXFZ8VcR00952fF5+c/aNR6fx2I3xVeDE+msdK/0hAt4kh15SHyvNVZVsh7ltccNngBxQ2qk8Qf/7ODzqyItFqxts1eTGNSou7tfqQLcl1IlE3UehgcQAXnIqb4kpfDtrH7bhocEA5cqVLxY/SErsgHFQ+u7w44rjG7RAHgREAsJnHCNY2zyY3OX7i9IK9zu3YaowImofDIKRrzjPLZH1qsdw8SSeABxeTC2fcVpQc/o4WcshDj6xU5o4xM9ur5j6pjhrA6Ea9AfH17DYa1HOa4nnSHwzo3mTYdCmuHpbu6H0/dqXSlOy2t57lk7Yl/AjKz7ppPTriZuGZxq5wAvEj2dUVaM4Ixu8CkS9sa9eySbuIfCZnuESiT07sgbMrBz7Y3RRxog/QsSxWnGHaW5aQ6rEa+QROrlDBUoUU/davLbtKiHau5p3zJFdXsmyJLaNcUpHWHfQJUtBT44TNMYvGiIuYi5yNhGD0bqZfgrx4oFEF9U+rEdzmnqjyNfbMX/iik6LqKnjReEKsAwbY2HJLu0XKc9IUeVGsxERSU1FMtmdVCGyQBXMm5XJ/8v9rnT9tYJhMqEY2rA4IZqjPWZmJOAgrdAGd1MEUjhczySsGuXUgFklnRZPwR3ppZApiqkLsMvNOx5IG+ig+llxvp6jjh8+mqQyMoZc63R8JgEqObJUyyGFOdpFgyN1dR8gK8udnop3yQ8IWWDbCPCFa/Cg7mqTxdJSJGDAi0VSLhXNwqI9xfoGUXC/xKS2Lo3TlJR3xNj2FZB1I208EvSY7TrLeQdEC715ygzlkcTzzp4PY2dvPo34kC3VM2rtQT5WbS7n4k6z0Q210YUlVwdFIsXZfmnBZ5X3ekkmoB+QDII2YgqId6tNNIGsc02HPQ1IVxGQ1y8fXVTbI/X3UBbyr1vDZtVsuSKj7E+phaLE+LpoEkbDj1posBJH3/aKGJiE27i2Lw3XU+N4QW/uMRruy84Hrc5D3LwBNiWMuOPnRbXltM9sVR8cjHY3dpTYUQejZJKHITsV19iZipSgLSgZo7C6R0oI1zYZrbnPA4rKui5eaMcr3ci9Rnkg48pwag8pC+uX6MvNjem5dvFVJ51xT6BMEWli9wvphNljekcr3cnp55lPXttc19z1I2XM/axR+KangxP6NP4ubmhqEfX91gZ0No2U6wjKuLQq0Z62+95ZlB0ufzOt15Yncs3BcudpGWZmRVty+3OWV25mWwzADaRD6FHEmv6pX+vNidH7EsiBBWbdZ0WQWaS9TE+AtnttdNTcrrsLZcPIVVsfmOfDmTYJqaEpG274fkeH4eU5pJ6BYG6G/sj6Vqfjvkv/dK+f39/Awz+Awj8E/Qn+E/In9A/YX/C/0T8ifwT9Sf6T8yf2D9xf+L/JPxJ/JP0J/lPyp/UP2l/0v9k/Mn8k/Un+0/On9w/eX/y/xT8KfxT9Kf4T8mf0j9lf8r/VAACLP3T/Kn8U/Wn+k/Nn9o/dX/q/zT8afzT9Kf5T8uf1j9tf9r/dPzp/NP1p/tPz5/eP31/+v8M/Bn8M/Rn+M/In9E/Y3/G/0z8mfwz9Wf6z8yf2T9zf+b/LPxZ/LP0Z/nPyp/VP2t/1v9s/Nn8s/Vn+8/On90/e3/2/xz8Ofxz9Of4z8mf0z9nf87/XPy5/HP15/rPzZ/bP3d/7v88/Hn88/Tn+c/Ln9c/b3/e/3z8+fzz9ef7z88fAMO/8V/s2YH8xhI+OQB/Mg2k6F4E7AVvree/P1Pa0qpQGpzbKlB09c5LbpMRgETSWXgi7tcPz8yNqvJGlPRDr52f0w/1KtC8gdC29phJ3jMDZ576HQe2CIWtgmkS1wZqXcY3A3yyTBO5OHYPLxiGenzYbl5krn1H5J3h3G3gzV6mu/kBAJYY4idK/lnept7P0/E49tH5S3GyuOCeVb9TITY+ct/MdFJApQmVlblHj1dfVpahRnKmpe2pVmk5+kavV9tAbL99TyI8r6Ttz9DHXq/c95SAIG200xKq871I7bpHGqZmpBWNUHZ1tHXhpN5kJOkhegMi/oPSOSAh5JAOZgOAZ4dPmAe+mkYAQ2Ku/G85mASmjb6zS1noIRRTfIGUECjG3pwjViOcq247+Px8OdJeKMevs6OUWBuvEqjb2ov899ge4CIeTHR0Eanus0FbDdoekNoI7+kq5KlWm2e9aWljia7Hl43bcWRA1d8NJGKgaCWrGYsbDwhCqjtlPmomiltJ7YPLpO+qcT1K3tSsQ/fapSngftqoFhwYAnrAOub3K7auPFsaqA1eKIAxp1eejKy88lHFZV4GBj6tJ1g0lK82VBA0ubeHc/VaPMnw67HlbTojSXf669Z26p7j+YNXALmjYpcmF2EqsLf/30EjbXCEa8TgluqMT+TPxdA3jY+Ukx5AFMBIZUMs52ofSDLg5ksQWy76u0S2H8U4YiLef0bs3nLyWvKqQs/RAEw1zBW0N+sDfLIrN2LAUbGPsyROjmBIqRy10CCtAzsAZhILmiH52s76NF2xI63xAD9cHMuMVKpBqtOx/cjhTGo+AcX6z81+h1cvHSdPwLuoXVGF2R2wdAoEx6DAEdr7dkdoRlgD1WLPk33T/1hYSRlvXA8W00WpS4vW9rU+ynrp9bpRXVNvQFjETSwwQEVy6OhJaWa0t1HssBoy6ucw+uIm09WSI0+NFQaFsEOz72R8m5sPf0FIU6SaeUCFUqG8AT57XPARP2cQRQ1y0jCUj5JrcO2KJZUIFqtuvG5xAIGYkecc5fF9BapP2AFqGXPIQdC+cQmCrtu9BRe9VosacrfR2gAjm+Vt89O4MAQxF8WhDgdz7YNevacAxpQ20BSqIWMPfjCaoOns7IgyBVwiVUPryZiqeuXPFgQ+XN8hErKDh3cizxVqWYDecF3zFPKOLRW12vrL1ye2T1pHDSeahs6vFz+CR9AZ4d/eVmPhAJE6v5RTfnGZ+qrB2s7V2jFphB1HuPAIho05O2OBRipS/RX5oxaD1pWlVHlE1/HExCDsLmv4tzr0AMDWBtglCnOZtgn3l5SkTDdBQYTSjfUuMvFKTgALXo9YKGekfhN6TFh9Lwcvv5dE2zWpAlP9/UNf8iKASoaHiUFcaSq25VFWaBhwUCjIwNmLBrVmZlgdJivxizleCvAgbb4PC8icdy4YZQ33w71oFAz7pWRB0sPMcr6N7l6NgPEDy4zIIefXo1cHKjauaEBBSMKQkYMFqiR/JvOFaSKcV49S5dN/tGsUPncQlD4zc6MsW5yBAzJBVf9bkS64u/fIILH5D4zu/jJleXumHE1X+dt0iCPFc+rudGuPVx5cHVsCMOt4k+5U7Y7xZWq5eIr7G+Y/NjN5q5033Vm7LifcJ7jPL87ZwcBbHhRRDvJHmM5RorMXw7hdubTvqLRgb1yxr2HSzmjZHv9/I95+5ODPEWKWaLxPnZXoNBW1VrKQjzVfvnezr82avyoF78O2A8t6QlwvJ+VVL45GB685+K2r00SRNjSRPs6Yk7+2i8sqLz5pVE/IkAGvvYU9hJe3vvOAuWlgtBf/jXji8tvvjK5w/vpzPK9FxybNKkvpY4IjnDO1Fh1BNw3+txDpfi2kOpF25nrguhuM3S3tm6/Q6XeOiuEf25XrvXByoobRTn3omRvCZl9JJsx4CX7zxkwJFwpmOgkCJz33ZBY1xGT5j7V2LG7/6Qn7pANS3sG0PL242SGBlIbOawPIZP8pvC3Rd3WGXYYNRP2mDiYiDCfM1HOiCJYoVXd317KWAk8pUpZSZes69w2WW6i0vvjIv5JRLnmolPo538LOPt/nVHfRr/z+n+x8u0COgYIWBIt+WviPkemTXujfe3bJIbWamTreJqMUbpa+e4jabhG7lLcwrGIg2/6CoB1kibR4ZyD7fB1rhCyf9/n9zBGJ5A7dbasQrqqcKBGtUp9Pm6e7ciDfpvtMjQVLbeHZ7xXLbnfBkF7whfZPdWL7o3LFk4zbAoNa/Dvv2SYQySyxH8g5uqzTWjlUC/+aO1VtlalKhYhPh2DkzaNIoH+zdimQTKdDhAX2sLzav8EvgC99ADVv+Hq64cqVDAEf6rezQukHhE5p0vbEvnTlWaHF3TVFswTSJhMJyuDcH3Jmfk7oh/qK++fNddTwv/egPcR7pD0SMjraOk8nyYsfjiwRpSsScq0y4jh9qoUjfI7Z8/Cy7fSt/4juT9WqOKg5I87QRMJCz5VXkacOj6iw90zNJIiJAw2l752oEzBXLkwhIjsTBlAGZuHGamkYO2XX0O82VJ3ehzzKxNOVyIbei1Wu1iJwkDe4wvwZ2INDcPAoFuR7bxt06ij50Woh1r3Ekvo0JxPZqdk3Q7eEFZWN+uZ12vENHPJPakP1rGnKCZIJcwf0xEgUElKd7egDKGdR4i9ssgvcPgJIFlQusrmlh0/mvJAm01nHj155fhaMa1xlEuQ9o6yTNOU5k6zaXbo7cwM5tDUqM8bYdYoXZAKSuJ+VI0GSPVC29+t1MQUv12dftMrElhALUsCuOHtXc3ATcS+cuZwDpAXcS8uNXHoFteb7tWmMLtNvH5UgoiFW78KMb7xrCkp32/n0JKWOSXpa09XXDVaOeS8E+JfTB6iGlwV1MsKFMOoGYReOuClsQmpiXXBuK8XwhVcRmRGUFXmdxllKIk152emc/FXQj4iVsKrD/QnNWVQ4N49EvE1TIlgEuntZevd/9nY8Epp/I0L6KB0rDRMHLzprDYyzr4eyPRdJsvNiLLIzaeMckxhH0cJ5LGVaJgJCHi8zSh4z3uo6uRur5wbEaboZ7hRo5qXyD5ManjcEaT6lKl5C+O9Bf3Alo0zaMbg1kxepteYJrCUCEGq5lQxhpSEykcl6mciChRQtox1G5LsxRAu9iy/mQ2oEOxDWuTGePSNlqjO4ICn+dSR4sdGv1M9Y1IepoGSEDgtTRASHRSm/M3/RbSo3qXI3DY9G57KT9FqzFTh+MfYFEBYooyafKh8pNVUv6/fRt6mErhdKie5Hs1wQkj47tRIZJkMz82TYuIddbDv31U4hbfGv+k6lXlh5qdftuyceyayxS021jB4mIsYuQfe/SjTAZjcYCAd4vyz0Y93bT1eFO7aDx1mY80noHpxmnD9yPsnP5wy9JnZ9Mrl1gKcCrqojSzDMMzr9t89zy8MEsyu6bbe6D/bphEiW8C8IUa2IuXLxTs5FEAmUZd2s7kzICq+v2zETpne9dodBy553V4FsVECOZGhhmwBJIZV9SAqk8Myb+SbfVhtA0kOHm7wB0HOqu4RBGI40Tr2Bw1VXstL9RLBuyp13XgazDLtTdWUMKOVSJ9h5loak5Z5rZBcXhOABrgJ5Hkdjol/EkzxxA8bSDNUZYQO08Xc1I33mhgoX5aUNJwGNK4LBiv9qWeJDoou6cPRai6wkgcBH9dQETmpyPRFHlvGga/2JRstOr3TsYLj4Suji08P79NN1b81V80okAsIElQgEc3oHAXVhRS6cjkW8Y8hWs6ywiIfelpSSGOHTu0CFSGKk62WZJxLQFVEdIeHpB2/rQcPUQpLETDqcqZazuFS+yso6PAcCkZS3wyrRO60JMU8mVKwxr1Qk8x36Nd2i9YG5wL1p1061oVyCPhI5ZlgHDXp9EAX1WwqR1YxmZMmj4jvsJ6IpmHd6N40H4HVOSpmHDNs7xDrItLpzILGxurI0uovBfoq3Bw7ASHA8FpQ2aHwS1N+gpANNZb30bBmHHAMOMbde06PnpElk/h88RiNVBcWEIBV0NS2dBeKni4Skbe9Ug8rGJVwn3WsW5s2zTJspEp8MZIosXmBlY+vOAiFZRGmrczkUOdqTf8C8xzjVWml23Wtk+FbDoprYx50PwunddG0ujCCZirRzzcpB4hM/uR2sa1oYA4uv0zK0Z/m/1spuX9NxMjHjiGZRb2pwRXE2r6RzGfI8i5yTnwz0/cYOs+TFOgGmpZLNyfTXHBVoVp68nkGJQzmRlP3taMY+pbES3rZuTY7xyclV5KgaCE8QxMVHS+9UkO+RiBpWuOB/8r3HF+Jz8QOL7fcculCtfUWr2uRL6iCtYHlUoeEzFEkldWPuIOdDeAQGBEiQ0rkBL0CWz2O+D58Z9+mrjfaK/ljS3O0a5H2llWsoM5Mhr1/G4Hvt6AVT5SJ3P47GLMhdcR0V9IzuoekiB26FCfpm/7Fddph46YyZZqHzElq3acTAWzR7MJYq6gUq
*/