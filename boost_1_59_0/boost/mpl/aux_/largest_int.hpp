
#ifndef BOOST_MPL_AUX_LARGEST_INT_HPP_INCLUDED
#define BOOST_MPL_AUX_LARGEST_INT_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/if.hpp>
#include <boost/mpl/int.hpp>
#include <boost/mpl/aux_/config/integral.hpp>
#include <boost/config.hpp>

namespace boost { namespace mpl { namespace aux {

template< typename T > struct integral_rank;

template<> struct integral_rank<bool>           : int_<1> {};
template<> struct integral_rank<signed char>    : int_<2> {};
template<> struct integral_rank<char>           : int_<3> {};
template<> struct integral_rank<unsigned char>  : int_<4> {};
#if !defined(BOOST_NO_INTRINSIC_WCHAR_T)
template<> struct integral_rank<wchar_t>        : int_<5> {};
#endif
template<> struct integral_rank<short>          : int_<6> {};
template<> struct integral_rank<unsigned short> : int_<7> {};
template<> struct integral_rank<int>            : int_<8> {};
template<> struct integral_rank<unsigned int>   : int_<9> {};
template<> struct integral_rank<long>           : int_<10> {};
template<> struct integral_rank<unsigned long>  : int_<11> {};

#if defined(BOOST_HAS_LONG_LONG)
template<> struct integral_rank<long_long_type> : int_<12> {};
template<> struct integral_rank<ulong_long_type>: int_<13> {};
#endif

template< typename T1, typename T2 > struct largest_int
#if !defined(BOOST_MPL_CFG_NO_NESTED_VALUE_ARITHMETIC)
    : if_c< 
          ( integral_rank<T1>::value >= integral_rank<T2>::value )
        , T1
        , T2
        >
{
#else
{
    enum { rank1 = integral_rank<T1>::value };
    enum { rank2 = integral_rank<T2>::value };
    typedef typename if_c< (rank1 >= rank2),T1,T2 >::type type;
#endif
};

}}}

#endif // BOOST_MPL_AUX_LARGEST_INT_HPP_INCLUDED

/* largest_int.hpp
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
*/