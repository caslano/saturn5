
#ifndef BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED
#define BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
// Copyright Peter Dimov 2000-2003
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/aux_/config/ctps.hpp>

namespace boost { namespace mpl { namespace aux {

template< typename T > struct type_wrapper
{
    typedef T type;
};

#if !defined(BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION)
// agurt 08/may/03: a complicated way to extract the wrapped type; need it 
// mostly for the sake of GCC (3.2.x), which ICEs if you try to extract the 
// nested 'type' from 'type_wrapper<T>' when the latter was the result of a
// 'typeof' expression
template< typename T > struct wrapped_type;

template< typename T > struct wrapped_type< type_wrapper<T> >
{
    typedef T type;
};
#else
template< typename W > struct wrapped_type
{
    typedef typename W::type type;
};
#endif

}}}

#endif // BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED

/* type_wrapper.hpp
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
*/