
#ifndef BOOST_MPL_AUX_CONTAINS_IMPL_HPP_INCLUDED
#define BOOST_MPL_AUX_CONTAINS_IMPL_HPP_INCLUDED

// Copyright Eric Friedman 2002
// Copyright Aleksey Gurtovoy 2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/contains_fwd.hpp>
#include <boost/mpl/begin_end.hpp>
#include <boost/mpl/find.hpp>
#include <boost/mpl/not.hpp>
#include <boost/mpl/aux_/traits_lambda_spec.hpp>
#include <boost/mpl/aux_/config/forwarding.hpp>
#include <boost/mpl/aux_/config/static_constant.hpp>

#include <boost/type_traits/is_same.hpp>

namespace boost { namespace mpl {

template< typename Tag >
struct contains_impl
{
    template< typename Sequence, typename T > struct apply
#if !defined(BOOST_MPL_CFG_NO_NESTED_FORWARDING)
        : not_< is_same<
              typename find<Sequence,T>::type
            , typename end<Sequence>::type
            > >
    {
#else
    {
        typedef not_< is_same<
              typename find<Sequence,T>::type
            , typename end<Sequence>::type
            > > type;

        BOOST_STATIC_CONSTANT(bool, value = 
              (not_< is_same<
                  typename find<Sequence,T>::type
                , typename end<Sequence>::type
                > >::value)
            );
#endif
    };
};

BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC(2,contains_impl)

}}

#endif // BOOST_MPL_AUX_CONTAINS_IMPL_HPP_INCLUDED

/* contains_impl.hpp
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
*/