
#ifndef BOOST_MPL_AUX_OVERLOAD_NAMES_HPP_INCLUDED
#define BOOST_MPL_AUX_OVERLOAD_NAMES_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/aux_/ptr_to_ref.hpp>
#include <boost/mpl/aux_/config/operators.hpp>

#if defined(BOOST_MPL_CFG_USE_OPERATORS_OVERLOADING)

#   include <boost/mpl/aux_/static_cast.hpp>

#   define BOOST_MPL_AUX_OVERLOAD_VALUE_BY_KEY  operator/
#   define BOOST_MPL_AUX_OVERLOAD_ITEM_BY_ORDER operator|
#   define BOOST_MPL_AUX_OVERLOAD_ORDER_BY_KEY  operator||
#   define BOOST_MPL_AUX_OVERLOAD_IS_MASKED     operator%

#   define BOOST_MPL_AUX_OVERLOAD_CALL_VALUE_BY_KEY(T, x)   BOOST_MPL_AUX_PTR_TO_REF(T) / x
#   define BOOST_MPL_AUX_OVERLOAD_CALL_ITEM_BY_ORDER(T, x)  BOOST_MPL_AUX_PTR_TO_REF(T) | x
#   define BOOST_MPL_AUX_OVERLOAD_CALL_ORDER_BY_KEY(T, x)   BOOST_MPL_AUX_PTR_TO_REF(T) || x
#   define BOOST_MPL_AUX_OVERLOAD_CALL_IS_MASKED(T, x)      BOOST_MPL_AUX_PTR_TO_REF(T) % x

#else

#   define BOOST_MPL_AUX_OVERLOAD_VALUE_BY_KEY  value_by_key_
#   define BOOST_MPL_AUX_OVERLOAD_ITEM_BY_ORDER item_by_order_
#   define BOOST_MPL_AUX_OVERLOAD_ORDER_BY_KEY  order_by_key_
#   define BOOST_MPL_AUX_OVERLOAD_IS_MASKED     is_masked_

#   define BOOST_MPL_AUX_OVERLOAD_CALL_VALUE_BY_KEY(T, x)   T::BOOST_MPL_AUX_OVERLOAD_VALUE_BY_KEY( BOOST_MPL_AUX_PTR_TO_REF(T), x )
#   define BOOST_MPL_AUX_OVERLOAD_CALL_ITEM_BY_ORDER(T, x)  T::BOOST_MPL_AUX_OVERLOAD_ITEM_BY_ORDER( BOOST_MPL_AUX_PTR_TO_REF(T), x )
#   define BOOST_MPL_AUX_OVERLOAD_CALL_ORDER_BY_KEY(T, x)   T::BOOST_MPL_AUX_OVERLOAD_ORDER_BY_KEY( BOOST_MPL_AUX_PTR_TO_REF(T), x )
#   define BOOST_MPL_AUX_OVERLOAD_CALL_IS_MASKED(T, x)      T::BOOST_MPL_AUX_OVERLOAD_IS_MASKED( BOOST_MPL_AUX_PTR_TO_REF(T), x )

#endif

#endif // BOOST_MPL_AUX_OVERLOAD_NAMES_HPP_INCLUDED

/* overload_names.hpp
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
*/