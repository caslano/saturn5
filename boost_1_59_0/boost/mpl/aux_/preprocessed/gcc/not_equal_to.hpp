
// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//

// Preprocessed version of "boost/mpl/not_equal_to.hpp" header
// -- DO NOT modify by hand!

namespace boost { namespace mpl {

template<
      typename Tag1
    , typename Tag2
    >
struct not_equal_to_impl
    : if_c<
          ( BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag1)
              > BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag2)
            )

        , aux::cast2nd_impl< not_equal_to_impl< Tag1,Tag1 >,Tag1, Tag2 >
        , aux::cast1st_impl< not_equal_to_impl< Tag2,Tag2 >,Tag1, Tag2 >
        >::type
{
};

/// for Digital Mars C++/compilers with no CTPS/TTP support
template<> struct not_equal_to_impl< na,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct not_equal_to_impl< na,Tag >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct not_equal_to_impl< Tag,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename T > struct not_equal_to_tag
{
    typedef typename T::tag type;
};

template<
      typename BOOST_MPL_AUX_NA_PARAM(N1)
    , typename BOOST_MPL_AUX_NA_PARAM(N2)
    >
struct not_equal_to

    : not_equal_to_impl<
          typename not_equal_to_tag<N1>::type
        , typename not_equal_to_tag<N2>::type
        >::template apply< N1,N2 >::type
{
    BOOST_MPL_AUX_LAMBDA_SUPPORT(2, not_equal_to, (N1, N2))

};

BOOST_MPL_AUX_NA_SPEC2(2, 2, not_equal_to)

}}

namespace boost { namespace mpl {

template<>
struct not_equal_to_impl< integral_c_tag,integral_c_tag >
{
    template< typename N1, typename N2 > struct apply

        : bool_< ( BOOST_MPL_AUX_VALUE_WKND(N1)::value != BOOST_MPL_AUX_VALUE_WKND(N2)::value ) >
    {
    };
};

}}

/* not_equal_to.hpp
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
*/