
// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//

// Preprocessed version of "boost/mpl/not_equal_to.hpp" header
// -- DO NOT modify by hand!

namespace boost { namespace mpl {

template<
      typename Tag1
    , typename Tag2
    >
struct not_equal_to_impl
    : if_c<
          ( BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag1)
              > BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag2)
            )

        , aux::cast2nd_impl< not_equal_to_impl< Tag1,Tag1 >,Tag1, Tag2 >
        , aux::cast1st_impl< not_equal_to_impl< Tag2,Tag2 >,Tag1, Tag2 >
        >::type
{
};

/// for Digital Mars C++/compilers with no CTPS/TTP support
template<> struct not_equal_to_impl< na,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template<> struct not_equal_to_impl< na,integral_c_tag >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template<> struct not_equal_to_impl< integral_c_tag,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename T > struct not_equal_to_tag
{
    typedef typename T::tag type;
};

template<
      typename BOOST_MPL_AUX_NA_PARAM(N1)
    , typename BOOST_MPL_AUX_NA_PARAM(N2)
    >
struct not_equal_to

    : not_equal_to_impl<
          typename not_equal_to_tag<N1>::type
        , typename not_equal_to_tag<N2>::type
        >::template apply< N1,N2 >::type
{
    BOOST_MPL_AUX_LAMBDA_SUPPORT(2, not_equal_to, (N1, N2))

};

BOOST_MPL_AUX_NA_SPEC2(2, 2, not_equal_to)

}}

namespace boost { namespace mpl {

template<>
struct not_equal_to_impl< integral_c_tag,integral_c_tag >
{
    template< typename N1, typename N2 > struct apply

        : bool_< ( BOOST_MPL_AUX_VALUE_WKND(N1)::value != BOOST_MPL_AUX_VALUE_WKND(N2)::value ) >
    {
    };
};

}}

/* not_equal_to.hpp
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
*/