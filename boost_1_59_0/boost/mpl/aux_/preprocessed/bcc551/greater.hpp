
// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//

// Preprocessed version of "boost/mpl/greater.hpp" header
// -- DO NOT modify by hand!

namespace boost { namespace mpl {

template<
      typename Tag1
    , typename Tag2
    >
struct greater_impl
    : if_c<
          ( BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag1)
              > BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag2)
            )

        , aux::cast2nd_impl< greater_impl< Tag1,Tag1 >,Tag1, Tag2 >
        , aux::cast1st_impl< greater_impl< Tag2,Tag2 >,Tag1, Tag2 >
        >::type
{
};

/// for Digital Mars C++/compilers with no CTPS/TTP support
template<> struct greater_impl< na,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct greater_impl< na,Tag >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct greater_impl< Tag,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename T > struct greater_tag
{
    typedef typename T::tag type;
};

template<
      typename BOOST_MPL_AUX_NA_PARAM(N1)
    , typename BOOST_MPL_AUX_NA_PARAM(N2)
    >
struct greater

    : greater_impl<
          typename greater_tag<N1>::type
        , typename greater_tag<N2>::type
        >::template apply< N1,N2 >::type
{
    BOOST_MPL_AUX_LAMBDA_SUPPORT(2, greater, (N1, N2))

};

BOOST_MPL_AUX_NA_SPEC2(2, 2, greater)

}}

namespace boost { namespace mpl {

template<>
struct greater_impl< integral_c_tag,integral_c_tag >
{
    template< typename N1, typename N2 > struct apply

        : bool_< ( BOOST_MPL_AUX_VALUE_WKND(N1)::value > BOOST_MPL_AUX_VALUE_WKND(N2)::value ) >
    {
    };
};

}}

/* greater.hpp
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
*/