
// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//

// *Preprocessed* version of the main "not_equal_to.hpp" header
// -- DO NOT modify by hand!

namespace boost { namespace mpl {

template<
      typename Tag1
    , typename Tag2
    >
struct not_equal_to_impl
    : if_c<
          ( BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag1)
              > BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag2)
            )

        , aux::cast2nd_impl< not_equal_to_impl< Tag1,Tag1 >,Tag1, Tag2 >
        , aux::cast1st_impl< not_equal_to_impl< Tag2,Tag2 >,Tag1, Tag2 >
        >::type
{
};

/// for Digital Mars C++/compilers with no CTPS/TTP support
template<> struct not_equal_to_impl< na,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct not_equal_to_impl< na,Tag >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct not_equal_to_impl< Tag,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename T > struct not_equal_to_tag
{
    typedef typename T::tag type;
};

template<
      typename BOOST_MPL_AUX_NA_PARAM(N1)
    , typename BOOST_MPL_AUX_NA_PARAM(N2)
    >
struct not_equal_to

    : not_equal_to_impl<
          typename not_equal_to_tag<N1>::type
        , typename not_equal_to_tag<N2>::type
        >::template apply< N1,N2 >::type
{
    BOOST_MPL_AUX_LAMBDA_SUPPORT(2, not_equal_to, (N1, N2))

};

BOOST_MPL_AUX_NA_SPEC2(2, 2, not_equal_to)

}}

namespace boost { namespace mpl {

template<>
struct not_equal_to_impl< integral_c_tag,integral_c_tag >
{
    template< typename N1, typename N2 > struct apply

        : bool_< ( BOOST_MPL_AUX_VALUE_WKND(N1)::value != BOOST_MPL_AUX_VALUE_WKND(N2)::value ) >
    {
    };
};

}}

/* not_equal_to.hpp
+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
*/