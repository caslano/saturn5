
// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//

// Preprocessed version of "boost/mpl/not_equal_to.hpp" header
// -- DO NOT modify by hand!

namespace boost { namespace mpl {

template<
      typename Tag1
    , typename Tag2
    >
struct not_equal_to_impl
    : if_c<
          ( BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag1)
              > BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag2)
            )

        , aux::cast2nd_impl< not_equal_to_impl< Tag1,Tag1 >,Tag1, Tag2 >
        , aux::cast1st_impl< not_equal_to_impl< Tag2,Tag2 >,Tag1, Tag2 >
        >::type
{
};

/// for Digital Mars C++/compilers with no CTPS/TTP support
template<> struct not_equal_to_impl< na,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct not_equal_to_impl< na,Tag >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct not_equal_to_impl< Tag,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename T > struct not_equal_to_tag
{
    typedef typename T::tag type;
};

template<
      typename BOOST_MPL_AUX_NA_PARAM(N1)
    , typename BOOST_MPL_AUX_NA_PARAM(N2)
    >
struct not_equal_to

    : not_equal_to_impl<
          typename not_equal_to_tag<N1>::type
        , typename not_equal_to_tag<N2>::type
        >::template apply< N1,N2 >::type
{
    BOOST_MPL_AUX_LAMBDA_SUPPORT(2, not_equal_to, (N1, N2))

};

BOOST_MPL_AUX_NA_SPEC2(2, 2, not_equal_to)

}}

namespace boost { namespace mpl {

template<>
struct not_equal_to_impl< integral_c_tag,integral_c_tag >
{
    template< typename N1, typename N2 > struct apply

        : bool_< ( BOOST_MPL_AUX_VALUE_WKND(N1)::value != BOOST_MPL_AUX_VALUE_WKND(N2)::value ) >
    {
    };
};

}}

/* not_equal_to.hpp
XB/x9niu4HGnW5QJbeavzwkgnUsaWKn2Iu5I7BVo76uKWKfgpUMgClJu6OQnKw/xzvvvu9lzgxSfissK6zlm8ze+J9TYg6kEOaIhS1r1KN97gVtlVTuGv7gsJzXNjpz/GyVQpQ3tpaic4mu+wFJsjpjXJPxOxhhWJQwqjJXnRQ4iF05Uba1VHGz/n+QXWp9RtUZenM+bG9ESPMQl3gXVTNlg1JeWqH42uTCaJsrQRW3vdkrLhr3di7OGhDwPBEMX9+mWq67OAhFdr/Z3cVet40377unWJ++pQRsWFOVKJLH6Gq7bCsmxuw0E0ktEzD8HXo7RQZbsvX8QKFUlgP3sMFzikowinuZqwdfHyZNrOiyr5dfGPu7iQ++Gczqdu4vnpoeG65+XU3NxRS0L3Wy0bBxoYimy+o90o48TRbmHHpmMd37QGjJXLo987ZnMGE6NKbY6saWdh/TrbdB5TIp46nVangsC/kb7K78C6XjFjwGXBQGK9MU74W1aMgLl8WUcTQqMj2kwMSaBhZOOy47B+ALkRZINpgAb1Xi1Zrb7Q7BrbFKtwAm60vZW+Na3AlKc2LCW3RHkiWBRmLDgoly+V+P6Ky945kUEKOAoUGJbA+gIEzkt8Lv0ZkJzVuXwt9A1diq+tVE9Ld7xTOChVJ/JRgs19bLjusiv5E5hwnCfiVtTNoiA/FeqD/gulhBAuCEzlL2jNtH+e4LnbT15OXbxcGAyg6uPKU/1amb98m6bGqUgX2Aspfe1giDS2Ywp/UMPjlZNNDyTn6sxswuGSweNTuji8mXKho4+NkK/51dMWMo/Qqu+YsP+Z37yeqUQruzaW2Aik5rCJ0gT7cHamLSGW0sOmUa30825GcGs/sAiOKYF4lU8oY6mzr4YAfdZqJtaUNxdidUGJxudGOPPzkQELTQrpqWHB1djD0TxORLLt4F47tE9Qu+1tPzdHNMKLvCPm8jnW6TuK5NIPCDPydRntEPY3fQEjCABcSBzxBgIWLHRnTDDcVfJ/sLN4AWFA9Ud/0Fu+rniH6QVOyPjJd873OAf4tOHfSQhFUF91SNh6nDzwG+TmHPuREBOJdAY2sxb72OHtKxSF3Sje6A4TWhNRINmfxFRwOX1cRPBp9JxKBGIOtIUAwMGoCHl4RVRGQV+ythwTQhoWMFnM92BkF0iXnwmVbiQZRg24/3YAXXZiAplKq1NjSBh1gzvhW1J0ONxDvUNQnBClZ7Gekc0bQb1lW9XiXk4wgrem+pVwGxJ21ZpVK9EaGBXkrvxs2eTHC/LJDaoEISVk4Z3x7ccZnZxVAlbJguRSU3FP7nbMFICwE25iXHQYNQRXVEfbJPMG6NAwsPQduAZkuVd8Z2j5Reur8VtFlHC5DSWESf4B8XQHFbWB33/ZxiwYWZZJ1BAFR4DQqj/FBUq/Gmvkm2wh++xOHSRw7oJgkqpW/8GZtsrSvRWVsdfpSESc45soMfu/5MiB6gtkGy/tWtXOkmuECkvcmVg+Zy4bxjuDacmkuxQKkSvMBS8WPQfM82plP2+FtpNqMTrlFIG8kRoLl5kgBCARmVF7QLf/abpDBnGThzGU3XzfDY66IsIv+Xj/RDXSYZbfaMwWABHh7L29IpH9iHbpUNV7dqnOjvIDbJIwQB/Ntud3IRYvVxITxbISgubppbtxQjeo4LLjupOrnho5UZ1cm5FWC1m9oN/caq+QA9SETh6SBRf+jQzmxihFDfXV+yGTgfA6451jk0qvUjh1OdneV+3jNtaJKxn/mQXUPH+QBaRIfuyfmVrj+aaJRb9argpqtyj9yp+ZTvdNHTaTfxFWO8sVl3bkJN9jzgoBCeYgkhj53QAF3vc8OGhsehZZp6f2hw1v8wsh2AfCJmUE6BzMgQ7wIj6SPsuq9ZijslPyCCkXHRiMYR6cMYAm1figq+cvUQmFfgF4dDm3hxgxqKBGLAT6dAFtXjfBnsoZlsZP/2QjleavnInq3xGamBJD9svft3AXHZDB3P0HTGKc7tl+HsVQk9twzM2d50znQ5Scy35NSZrGp1PkNMKq4KGlQi6Dmh3mR/xll51R9AlE6aUWfabzZz3Pr1Z7hcqvtXchOAc+YYJz+TTttmEOmVvnmsyU7V3gLSlvzmKjRR351zmLa5bfyZH5MGqUjchWIBP77M0OaS8HzAwTmbEf1oYKGmf3a3vJfPVJUBDfh/GhbVIbHsuWY50QcsedvYdz3sAkZFcGM3fHZ1qViopJ9dpJ1oSi+jU0+saGWHlE87Z4MIGX/ub8Z5qwmDxo+Radx5fz2a74FWIHcUMjGhM06GuYNwoNc5xIGhqVTTFTiqswejxFe+Bz715UA9tSQIwDY2erD4Bj/rxF/1yDmqsOUhi1j+xdRpAu3S/ogzaRW+8AxHwc8Z9XoW3KGaqGum7PeyR+LTwWqcL11g8Ed9gG5OiZLxrLJN3XvciXXzWejI9XxvmStu8m1gDxTKpVynny218J53SDZmliaR+qD/Dz4y70T8fGg3pI54hDYXAsHv5AZSVMO8hyuQ9voEC1nlCx6ZCGaqsxoKJlAKVAariQFga2rd2lRra3DAUaCRJ2z8vqGD/PezI2MC3h8Groqpn3HME6vKmFWKHVREsCV7STOmwU8bqQpL4GXYppRFKUzqIx8i/340GKBpEsgEJhu/aDqyNv2be21V92i8Dn8Rm+ANtfVmJuLB/POc2OkxiHKUSIscYfFG9rx44Ew9ZJtGZfYsEFzUW50T2cgnaiQ9xMUx1tdwJXisyu8gidJjlQgtGRSs6X5Fue0dUeP8G0Ygv0wRMArjqse4g2Xl/snpHZIWs1+mP5zsHvRSBXhGSbuEkwiYDfNscTYiz4I2PL1OE69OJx4nROcs0gIn7TIunWBKByDyQxQlV9ouWMiXZfbm7HL2FMsf13kcF4BO9zPsF0xuL7cZEBOXKbLbtuD+YxQHhg3ZXtdzEeX0faCQecZLWAB86/jeEONSMUt7C7g8Qb8k4dsztlRcn+0MFAkmUQpFhV4BnYrNXxFjKu4Vo3Zt1Dvs4qhXq7XxxB0M95lIHZel23vqhjTU43BgYjROS68xZLPlw3ZzBeKGw8aWbpbh3EChmiyy2SoFyOC5++E3L54sJmOw4ONsY1AqsX7MXvEE5DAkLApYDGPvd6IJyixz0fRLumL3j9Eul9Q7vFe7Gq7rhf4DsDvVTMk7XfLB0BWM1bCrBWDAqifPMSk4UaBOTpDMIW5Rq/GA3aFl/wpbgtW/bwE7MKzOXNY4pGWGO44djkjLqD7PvMqEL+44iS7MepMEMZXI2WsyUyseogVGP439ZqZz3c49d20fiPFpJ9OHB6+Pbw/vkfc/cM+p2Vxr48ThbWB7INjXuzZiOOhy2FMKfKUTyZJUyaWpW+Yazzwfy3ehLhK+Yyv9LwR2KM7i0PHRBvLa/kT/4bpp8wJG6upXeBkXjgbBhBBfoHcJXn7HsDQQ5+DbhNhTFUseikqk8DBTbeaFwmveheIGlJJsYvzrS5Ypm8rH7zcG7rNNu+GFsLNE0ZXbZWfYf8jJmB1jljXTcR3FnumT/dj559VCtjLlwcSw6s2kAgt7gRWAkkz8ku0bydGp+tqyDgM43pQY9q6Cmtf18hy52dJonfewO1I6JIndAVpoHyKE87ylvRVvxBzedrkQoRqWuKqTgX8TsR/CdDHg0U+dBUQuNj6stb3sCSYSrQJkBN02KM0xkyjWWLC1fsiKQBu5AMMltGGFGQbs2szC6Nl0e33j7rAQ7aI0rf+PJFjEUOc2rt/a2kg1uSpzZ/hQXzbdG/sDbOzOVl+r/qcMpMtv6hpeXcn6Kg3QL0TH++kHaSrys9MidB35dTotodNqT5QyiqxZDp48PThf6DYDcYBNmgNLwi9jS3Vnqobb5oXUmgbnyll7LDa83OGqF2glaKcyd3ClqEdT9MZX1NcUcELKQq+sLJVPYzIWfHc/h+xQlMhQ5f5N1ARPmOmyxEdIAbWkoJp3gO8OuiSu4b4pbkXhttkVV+QAl+XyY9yV4otG7LX1FA1W4rnfKXUSOSC005qEQvfWUz90FubAhQ6brdSpHOygGuKbCZAivDXapmjgl6SOUfCvcZ6sL5abAjNiPfV8J+Wp1hE+7pqNEu6hcjJmAtLR5kDJR/cUJk1j6dg/f4XzvwJGA0IUyxbVhD80v6lZf6D3q42WRhiZTQD7kf2sQzw06nEzxRQC+rZe2jdUs2Dx8wNRlLPJX/HECfJr0J78Og/7eSWUfm87RPw5QIwoCGucEMdwLeOiK7Sb/8QeyXIZwACJ/haWi9cV5YLrGFI4v/cp+aH3ldEIcmpfYkLsBGcC024U6LSMoRg/RbE7qbCVSwNpkMpDZ3csX2t9NOmCle7KSR9bdphQlgCk93yGyZ70xU+fVkmthuLV7pyNHPNnVvnjdVkQUnwn+8UdfycDcG/ngF/511aFTT7pXbrabX48ojViJvzct2TdmNMes0jWENFr9+Tf4gf5BMs7bb0KOomv/8Gk23UCaLILOwgB8Ubd+NIrLi/OrErwnhitamT7DseWF6Ho4g19vYh3fWPjPjlVFp6xPjd7ZNANue3tltR2TuvXGqcPYBOtw3htm1V7WqWWC9zuywGlBb5X/dpjjqBghh44An5JRl0WMC7knhdRXVnrvulHrA/g4KlBtW4CcyczLwKhKWTq4bKNDKT0FPT0NfjPeAPuk/hOHMCY8qu4w8Du/6itRRiyDcgLDVSiT8iwQYNa668tln4wtT61yZo8i9OVNvOziJgZIxQ97yE84r8pLZF+YeNadWdK4xrKqFhE+yYLZOgOkXK70JuifNrYQjU5BgOZ2rBxltJWyANlmAzjaa1f5ds46cKvzxjWUl+biuoRnjAW/cDqJG7bCPRT+y2f0PJmGEsTMr7tYDSZh7wBiRvjS6eddezA3bC1OpZKXMmXy9ds6q2qhj4vqWaPCV1UOjyKxdJaKzuix91CfZPxFm1oKZgeSsHUgebaL+m7PEIfVrVVz6Lui9O70U6j1EYyBSYQ/R2GcIdnmb+8xcIRIg8F/qXf1B4DBJq49XQb4OS42NVZ3MasqSOF95L2PXike1OhFGrQEQAN475k5kVoECyBgjJh4HYABNnRP9OLesvv7hA8JLgrECGpY8YiozPVzY/GyVHsGx21FhwcROqyAJPs9CDfE9CUODoPsyvKGBNnkg9AICOS9nUkVsGm17WLVd7alynZqTTgamY4jlEZ9tLg+vP65qD61fbdMXydPnsGp+6tAvU+23QHoP9TnjxAQO7nPEIX7rOA+xHeaoL3Vd5/MXzJ9t1xfKgNhVGgIUSVCb7Tk61kMRMsJztW/CwvVLfmDIaZRY1ERpJZMeA15nPAXwra7fVHF66yXXvZXmTbmfPIF1btzJNupMBxaQ+U7OFmEX7xVu3s/h2tuL/W+K+Sw5a+5A0kqFjYb/Uza2zf0FyY4g/4qb1I+pjA2NfXl474AsH1zJiULKBvuMPMNM3O3D0R0G6XOTfpBAkIFazzyyi9o6PtLakGA0ftBIjTV4fA66diBdbwBc0PC0kZBoYbwKkvBp/TxkRlDYKyjBFVReFIHBSSMAqpUA6iEYIntZSYiadiRdpJA+emRGQNgvRnIgXIxZFlINBdwIm+Vf8/2Qsrag6EyJ8PzIEfWERIMK9FUBMPvoEfWPQ9r6weh0FhgEH75mEAJRP4u0w0w0VhwEH6xoehLBpWdaylREiIZwuPE4jU5yFtHzaFH3okB5UdHeoASTkUIv4WCDeRrLZFH3U12oQXdisLBHBbsjIPtRgm3sQbYsaE6UxB6MaDs54ANQNFcaEfZSVANaMMHEbaV8ZoEpZoO4VVF400dFcgYBoUawPeg8acNC2fPgOn+3fYVckucPCmY0QuK/Pu8UBFbQmTGKBijIdzIwOLoKGmo3ljTsMt/zeK56NBbINh5YzbkDgALLPTTChcUWuo7bkN4QoF3ouq7n15Xz3uplD/qsX3OCEvJ/KnjD/xANDkk+NWNfgMM8Eu4rZI4wwfshAvB+k7LjXhA0pwDjsMZqhHCxgr51hPy9TUBX1aMQx0SHWjEPGnUIODGp2Mol2DHWFsCrez/WglqVvvm+62bmoT3zidXTBG/o8m5y/2HSb9SFXKk71knoFSj6XULrOYeqKGeQEGB/bq8lTmjBJroBsWIhsrUtiF9fwfJ7CZFq1rmAogvij7PnVL2BsvfWgF1QeT1qZv3oyQkQQishSOdoaAT+ZPWz7e04mUTMlQWvu/NlaTUvqdwSht/GwtX4QQSPh97GlUo6KqlaMfrVXT6DMkS+EyF49ZQoYa6bs21MPjgHjtoguh8b6ehGBWLZ4+Udem4Wn8ZN9ZmnQLHu7fGnDBDgH0PzJEhd4ovkNxDu9XzrDEguExiq5/Gen8A7Pdtv7Lvw/uNAnLEAQwZGvy2LnOfqB7Q2DNFDxrfL8ixMQ3RMptzvGLDG9FxcqdluDEV0TKXcUpJ4xvZfYhpMFNzpA3UxrfOxPekLA4Y68/SiYLp26cN96RuwmeL7sWxE41GiJYToYJevVFS6cpImRwFGOE2DhBRLsAV2fA/zL5ew9uCCp+CBNH0Tf59nb7Hkwabtu59tnFp5M7diy0/tg0bnnBV3btbLT7W3UGl+dEx+oDgLCOW2A8I4V19MdHswz4FnWfRgYO9DpFevZyBVetLF00xBp26Xh23Sb2cpa89GbtUkqY/mvUipY4ycMfmc4GC4H19uGkNZD4HDbLpA8D1YOfW2SbH2LGRMgHsX7wF9a4impw1cq4a7q9fY4dNGkbnjIJxx2rJIpzeq3jhtF64GzHgCEL42ezWtzmdSjo7qWtko7qR9NfFTSDORue+8XAnXtWFJJ6In0r9eNDTJJI+SYlcSO6TyGKc3k++cdmsPLbxp2JiNVdnidtTkSg8S2WxXTNwePZGXKzm3EvRxxM3KpmUCAmFUuF6YbEG0BcfKMYtRIP9Wr7uwJNdOZxOXtLaXRsl7c7b4o2Bf9+KXEdLh40erUBmBC6aSREsFp4Ryat60vitHEs/1p71Ytg5lWdMc6BHucHemKye7jlUfy85PAe1I/n80B+oViUT2vd7x/T+a63zYN5tpG/i1NhgAKau0Hl+E2upxG9WaU7lFsBdLHDWqXSV78O3DP2Izlblo0XN3qJR47VymOfU2i+KjFq5RqKRNvFkWIHNHB6gycMQjE1DiXU+0i1P1gbtGkkU8SVb7yQaJY/VUJFBJR6UvHA9VRfHrz0bFso1hIj4RjrqgoDVuluVlVLdZ3tdGKYrEYpXWXKs9NIHrl5H7/hEMqO5njM4g/ZZpG9GkhWVqNr+zMB7VTUth1jG+76xa+vxdNhyfvPsYbrh5DC9gFCMQ8Pjcooi6jghrBA1Etv7oHxSzSMFK01OVghwSoTlpcY93kKJAVNlt+97azMd2DsazAEHzMRct26ACGFvTbGZtvZeAG/xo1hpXdB1cC/YNnwXPT1ky8T5EZ00NIzRwHGTqrNJ527Qu/Pz7JQ26lENgu0ykW/mwpFXOiUdpq6AtByIuPBdCUJWvsyoK+CYsLnHSqU/PbsabVLjSQiENTI9bnT3pvv5sT6XSRs4CsgVuY8X8oZ9nfnIN9Sa0/qmG5DMV6/Qo5MFyj4y
*/