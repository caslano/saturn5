
// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//

// Preprocessed version of "boost/mpl/greater_equal.hpp" header
// -- DO NOT modify by hand!

namespace boost { namespace mpl {

template<
      typename Tag1
    , typename Tag2
    >
struct greater_equal_impl
    : if_c<
          ( BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag1)
              > BOOST_MPL_AUX_NESTED_VALUE_WKND(int, Tag2)
            )

        , aux::cast2nd_impl< greater_equal_impl< Tag1,Tag1 >,Tag1, Tag2 >
        , aux::cast1st_impl< greater_equal_impl< Tag2,Tag2 >,Tag1, Tag2 >
        >::type
{
};

/// for Digital Mars C++/compilers with no CTPS/TTP support
template<> struct greater_equal_impl< na,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct greater_equal_impl< na,Tag >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename Tag > struct greater_equal_impl< Tag,na >
{
    template< typename U1, typename U2 > struct apply
    {
        typedef apply type;
        BOOST_STATIC_CONSTANT(int, value  = 0);
    };
};

template< typename T > struct greater_equal_tag
{
    typedef typename T::tag type;
};

template<
      typename BOOST_MPL_AUX_NA_PARAM(N1)
    , typename BOOST_MPL_AUX_NA_PARAM(N2)
    >
struct greater_equal

    : greater_equal_impl<
          typename greater_equal_tag<N1>::type
        , typename greater_equal_tag<N2>::type
        >::template apply< N1,N2 >::type
{
};

BOOST_MPL_AUX_NA_SPEC2(2, 2, greater_equal)

}}

namespace boost { namespace mpl {

template<>
struct greater_equal_impl< integral_c_tag,integral_c_tag >
{
    template< typename N1, typename N2 > struct apply

        : bool_< ( BOOST_MPL_AUX_VALUE_WKND(N1)::value >= BOOST_MPL_AUX_VALUE_WKND(N2)::value ) >
    {
    };
};

}}

/* greater_equal.hpp
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
*/