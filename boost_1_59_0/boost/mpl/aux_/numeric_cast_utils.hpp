
#ifndef BOOST_MPL_AUX_NUMERIC_CAST_HPP_INCLUDED
#define BOOST_MPL_AUX_NUMERIC_CAST_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2003-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/numeric_cast.hpp>
#include <boost/mpl/apply_wrap.hpp>
#include <boost/mpl/aux_/config/forwarding.hpp>

namespace boost { namespace mpl { namespace aux {

template<
      typename F
    , typename Tag1
    , typename Tag2
    >
struct cast1st_impl
{
    template< typename N1, typename N2 > struct apply
#if !defined(BOOST_MPL_CFG_NO_NESTED_FORWARDING)
        : apply_wrap2< 
              F
            , typename apply_wrap1< BOOST_MPL_AUX_NUMERIC_CAST<Tag1,Tag2>,N1 >::type
            , N2
            >
    {
#else
    {
    typedef typename apply_wrap2< 
              F
            , typename apply_wrap1< BOOST_MPL_AUX_NUMERIC_CAST<Tag1,Tag2>,N1 >::type
            , N2
            >::type type;
#endif
    };
};

template<
      typename F
    , typename Tag1
    , typename Tag2
    >
struct cast2nd_impl
{
    template< typename N1, typename N2 > struct apply
#if !defined(BOOST_MPL_CFG_NO_NESTED_FORWARDING)
        : apply_wrap2< 
              F
            , N1
            , typename apply_wrap1< BOOST_MPL_AUX_NUMERIC_CAST<Tag2,Tag1>,N2 >::type
            >
    {
#else
    {
        typedef typename apply_wrap2< 
              F
            , N1
            , typename apply_wrap1< BOOST_MPL_AUX_NUMERIC_CAST<Tag2,Tag1>,N2 >::type
            >::type type;
#endif
    };
};

}}}

#endif // BOOST_MPL_AUX_NUMERIC_CAST_HPP_INCLUDED

/* numeric_cast_utils.hpp
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
*/