
#ifndef BOOST_MPL_AUX_PREPROCESSOR_IS_SEQ_HPP_INCLUDED
#define BOOST_MPL_AUX_PREPROCESSOR_IS_SEQ_HPP_INCLUDED

// Copyright Paul Mensonides 2003
// Copyright Aleksey Gurtovoy 2003-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/preprocessor/seq/size.hpp>
#include <boost/preprocessor/arithmetic/dec.hpp>
#include <boost/preprocessor/punctuation/paren.hpp>
#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/config/config.hpp>

// returns 1 if 'seq' is a PP-sequence, 0 otherwise:
//
//   BOOST_PP_ASSERT( BOOST_PP_NOT( BOOST_MPL_PP_IS_SEQ( int ) ) )
//   BOOST_PP_ASSERT( BOOST_MPL_PP_IS_SEQ( (int) ) )
//   BOOST_PP_ASSERT( BOOST_MPL_PP_IS_SEQ( (1)(2) ) )

#if (BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_BCC()) || defined(_MSC_VER) && defined(__INTEL_COMPILER) && __INTEL_COMPILER == 1010

#   define BOOST_MPL_PP_IS_SEQ(seq) BOOST_PP_DEC( BOOST_PP_SEQ_SIZE( BOOST_MPL_PP_IS_SEQ_(seq) ) )
#   define BOOST_MPL_PP_IS_SEQ_(seq) BOOST_MPL_PP_IS_SEQ_SEQ_( BOOST_MPL_PP_IS_SEQ_SPLIT_ seq )
#   define BOOST_MPL_PP_IS_SEQ_SEQ_(x) (x)
#   define BOOST_MPL_PP_IS_SEQ_SPLIT_(unused) unused)((unused)

#else

#   if BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_MWCC()
#       define BOOST_MPL_PP_IS_SEQ(seq) BOOST_MPL_PP_IS_SEQ_MWCC_((seq))
#       define BOOST_MPL_PP_IS_SEQ_MWCC_(args) BOOST_MPL_PP_IS_SEQ_ ## args
#   else
#       define BOOST_MPL_PP_IS_SEQ(seq) BOOST_MPL_PP_IS_SEQ_(seq)
#   endif

#   define BOOST_MPL_PP_IS_SEQ_(seq) BOOST_PP_CAT(BOOST_MPL_PP_IS_SEQ_, BOOST_MPL_PP_IS_SEQ_0 seq BOOST_PP_RPAREN())
#   define BOOST_MPL_PP_IS_SEQ_0(x) BOOST_MPL_PP_IS_SEQ_1(x
#   define BOOST_MPL_PP_IS_SEQ_ALWAYS_0(unused) 0
#   define BOOST_MPL_PP_IS_SEQ_BOOST_MPL_PP_IS_SEQ_0 BOOST_MPL_PP_IS_SEQ_ALWAYS_0(
#   define BOOST_MPL_PP_IS_SEQ_BOOST_MPL_PP_IS_SEQ_1(unused) 1

#endif

#endif // BOOST_MPL_AUX_PREPROCESSOR_IS_SEQ_HPP_INCLUDED

/* is_seq.hpp
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
*/