
#ifndef BOOST_MPL_AUX_PREPROCESSOR_PARAMS_HPP_INCLUDED
#define BOOST_MPL_AUX_PREPROCESSOR_PARAMS_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/aux_/config/preprocessor.hpp>

// BOOST_MPL_PP_PARAMS(0,T): <nothing>
// BOOST_MPL_PP_PARAMS(1,T): T1
// BOOST_MPL_PP_PARAMS(2,T): T1, T2
// BOOST_MPL_PP_PARAMS(n,T): T1, T2, .., Tn

#if !defined(BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES)

#   include <boost/preprocessor/cat.hpp>

#   define BOOST_MPL_PP_PARAMS(n,p) \
    BOOST_PP_CAT(BOOST_MPL_PP_PARAMS_,n)(p) \
    /**/

#   define BOOST_MPL_PP_PARAMS_Z(z_ignored,n,p) \
    BOOST_PP_CAT(BOOST_MPL_PP_PARAMS_,n)(p) \
    /**/

#   define BOOST_MPL_PP_PARAMS_0(p)
#   define BOOST_MPL_PP_PARAMS_1(p) p##1
#   define BOOST_MPL_PP_PARAMS_2(p) p##1,p##2
#   define BOOST_MPL_PP_PARAMS_3(p) p##1,p##2,p##3
#   define BOOST_MPL_PP_PARAMS_4(p) p##1,p##2,p##3,p##4
#   define BOOST_MPL_PP_PARAMS_5(p) p##1,p##2,p##3,p##4,p##5
#   define BOOST_MPL_PP_PARAMS_6(p) p##1,p##2,p##3,p##4,p##5,p##6
#   define BOOST_MPL_PP_PARAMS_7(p) p##1,p##2,p##3,p##4,p##5,p##6,p##7
#   define BOOST_MPL_PP_PARAMS_8(p) p##1,p##2,p##3,p##4,p##5,p##6,p##7,p##8
#   define BOOST_MPL_PP_PARAMS_9(p) p##1,p##2,p##3,p##4,p##5,p##6,p##7,p##8,p##9

#else

#   include <boost/preprocessor/comma_if.hpp>
#   include <boost/preprocessor/repeat.hpp>
#   include <boost/preprocessor/inc.hpp>
#   include <boost/preprocessor/cat.hpp>

#   define BOOST_MPL_PP_AUX_PARAM_FUNC(unused, i, param) \
    BOOST_PP_COMMA_IF(i) \
    BOOST_PP_CAT(param, BOOST_PP_INC(i)) \
    /**/

#   define BOOST_MPL_PP_PARAMS(n, param) \
    BOOST_PP_REPEAT( \
          n \
        , BOOST_MPL_PP_AUX_PARAM_FUNC \
        , param \
        ) \
    /**/

#   define BOOST_MPL_PP_PARAMS_Z(z, n, param) \
    BOOST_PP_REPEAT_ ## z( \
          n \
        , BOOST_MPL_PP_AUX_PARAM_FUNC \
        , param \
        ) \
    /**/

#endif 

#endif // BOOST_MPL_AUX_PREPROCESSOR_PARAMS_HPP_INCLUDED

/* params.hpp
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
*/