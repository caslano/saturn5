
#ifndef BOOST_MPL_AUX_PREPROCESSOR_DEFAULT_PARAMS_HPP_INCLUDED
#define BOOST_MPL_AUX_PREPROCESSOR_DEFAULT_PARAMS_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2002-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/aux_/config/preprocessor.hpp>

// BOOST_MPL_PP_DEFAULT_PARAMS(0,T,int): <nothing>
// BOOST_MPL_PP_DEFAULT_PARAMS(1,T,int): T1 = int
// BOOST_MPL_PP_DEFAULT_PARAMS(2,T,int): T1 = int, T2 = int
// BOOST_MPL_PP_DEFAULT_PARAMS(n,T,int): T1 = int, T2 = int, .., Tn = int

#if !defined(BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES)

#   include <boost/preprocessor/cat.hpp>

#   define BOOST_MPL_PP_DEFAULT_PARAMS(n,p,v) \
    BOOST_PP_CAT(BOOST_MPL_PP_DEFAULT_PARAMS_,n)(p,v) \
    /**/
    
#   define BOOST_MPL_PP_DEFAULT_PARAMS_0(p,v)
#   define BOOST_MPL_PP_DEFAULT_PARAMS_1(p,v) p##1=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_2(p,v) p##1=v,p##2=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_3(p,v) p##1=v,p##2=v,p##3=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_4(p,v) p##1=v,p##2=v,p##3=v,p##4=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_5(p,v) p##1=v,p##2=v,p##3=v,p##4=v,p##5=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_6(p,v) p##1=v,p##2=v,p##3=v,p##4=v,p##5=v,p##6=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_7(p,v) p##1=v,p##2=v,p##3=v,p##4=v,p##5=v,p##6=v,p##7=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_8(p,v) p##1=v,p##2=v,p##3=v,p##4=v,p##5=v,p##6=v,p##7=v,p##8=v
#   define BOOST_MPL_PP_DEFAULT_PARAMS_9(p,v) p##1=v,p##2=v,p##3=v,p##4=v,p##5=v,p##6=v,p##7=v,p##8=v,p##9=v

#else

#   include <boost/preprocessor/tuple/elem.hpp>
#   include <boost/preprocessor/comma_if.hpp>
#   include <boost/preprocessor/repeat.hpp>
#   include <boost/preprocessor/inc.hpp>
#   include <boost/preprocessor/cat.hpp>

#   define BOOST_MPL_PP_AUX_DEFAULT_PARAM_FUNC(unused, i, pv) \
    BOOST_PP_COMMA_IF(i) \
    BOOST_PP_CAT( BOOST_PP_TUPLE_ELEM(2,0,pv), BOOST_PP_INC(i) ) \
        = BOOST_PP_TUPLE_ELEM(2,1,pv) \
    /**/

#   define BOOST_MPL_PP_DEFAULT_PARAMS(n, param, value) \
    BOOST_PP_REPEAT( \
          n \
        , BOOST_MPL_PP_AUX_DEFAULT_PARAM_FUNC \
        , (param,value) \
        ) \
    /**/

#endif

#endif // BOOST_MPL_AUX_PREPROCESSOR_DEFAULT_PARAMS_HPP_INCLUDED

/* default_params.hpp
qj22+kRSuOxwwdNL9xxokYgNtvQ4fZEbPBIqLp7eRVv8aYv+OEb5xBPBGgVxeCEhMxsjM6sgNWP6D8nMzLqlmWo9dpZhgB2fYufL6R3B0WSBGwwysCSWb22ydHKlBeOfTmWNBHp6NJXrcnYAqwmy4V9qtyZN00G3wzkUb3LDtyxOOUhbyWRf6IlI9XZuut0qsAL9ivOJU9jpTYHiZDw/86P6tG13Xga216oLRodTM59Ebua7yzOn34x12FROQ84TJzMVpy3gZtpi+I5V6xSz7qnk8JKz6ZmcYTJo7uXj1tYEifylQuBPRgkBTn97H/0ZNNHjmI+lT+7TiDiieDdxnNEv5kSCHbYtpIbEzkI9085TziOke6wE7Vp9rB0L70FCC9eS78Kc0b6h+bouS5YhS+8aB4bW9+UOX1Adr3YAXxbQ7ty+OZIj61hEQIwRP/1zMByECiLjPxEQ6O/4Sw1m3o9oFlCb65AW7FFG0peYnHkx+msyWcoe6hFnENMqc3lSnRes/vuwAQC8YSWKTcn9aT7mODJ8Y/RLMYuSgQ0fOjceF2MgDopf9E1L7BdbBdInnrDESvgTDkufzh3sKwvg8mJTwharhztetK0ORD8T9PRUOTSJIkNN2127x5m0SOajX+J0vbc5WpbWFqtEP3/KShk27HNk/PhmofOUlD11/xqBxwr42S9NxHNvMQYdVbIx5X9ktKInlYDcy4f5RsYjgUfNd1eMxyCEJfdGr/2feW5ZjDFsf8zUz8rH3lc5BKChF3E07/JnO2hN8vYy2CYTZcp3e4dM7iJsTqnkXZawkpM1WR+68nWw9gAydkmni76arHx09rxe7lX9ztJUdH6+qbiya1lqPBF2UuI6CHPAhTqurH1SL9HyUFataWehupj7s5na3/F4OufMRRc81Dpnd5TnEfbFTZ5yrBcVsrPLT2z5IwY8NV5+n19DiH+pYCCrlt4FnBNftnhfG6l9BRq8fY2xs1FrERAopW640j+AFZXfvgrlNXVIHDQorucfN3Q3Dybr1qPxVBibuurYdrXnEPwOJFgrRNVv/hMrOi+bJStxSprCVR7NWlI+QVGC7kCJFir+bYN/sx7UNEuWWa8b4a4hRn0AyVfFMyqYJOwbLp/zXMxEv37BeQKW6E4fYwwFbLUAVwhSPtcJHq6R2TAlj4MV107NBHQ6Nm+ncIYF3xcE9VN3h30bv4pUSZca3R982wOWZBwVqrPkGXe1R8ZkdkbVZAhcLtUGuUK//rUxuzeBASMfYjLi2jUKalx+2d3YMMZZXzAnhw44G3AcA0TbCMcmf/F3539G/DdBdznNUYpJEgt8QchGT9cTeRwe0rz/YWDhcpfg9o8XgxnWt1omAFKvFEhkukMa095ldt1iZC6xESTR6Aqbw9x4XZRe1pEjzN54HNRVTl+8mN/86ZTiRb6UVnH7b/y2Si4SX75Sa0KHOUsvxqM+xm2uKYKs9NzbXeIYKL88p6UV5e5waN/aWlw3VuFWLMvGYtV5P5r1Ul38n8Xx3udlNWUAQm1474cT1bvof98rXSVRP9ZRJNbRPZHfXJem333uq7pRC4rs30Q+Jb9GgNlH6vt6UVJ+aOVA9FhqvrFLcFd248fMPoNzszUrJBeHP8v0+cLwYEKM9BcIMQoiNxMroNHtbzep+aKpWpVYzKRNTsPdb/z9gr4fn3hL7hN5VYLt8LyPp3BIF3dF+bCMotcPbgDF7kI8X8wdesWXBQ1RTERC/eL8MVE7HHzqce2C/KUgnSdBALZIG7Ed8/c1jdgsEK5SJe5C3tHd8T583TPGu8b84J2SPFz+pns7kTHwM5m4yAl3GkuYtoYDdNYnwD709IhoFRNSmFK0fdFdkFBzj8UtOa4RtlpR+8URSaNHnebLomMlAkjadgpFx2NEsW5PJVgSiHr+vjvi/hD2b4uCZ5/XCScwdTcGguwW00XjGtkupYcVUfetnwb1XN9ME94t4d+WJLk0TQG1R8K/Ncm+30RozPoSPnDj23Z/0T01vYoDAFxNlcGPNXeep+QGFG4pluy+g4xnTNMAkl18txRcURVNbRqGMyY5JEl985r8ssoijMj2sYGs9wed0o/FvKUeGeVIrx2Vn0PoCU1ChIWHdOOmcQEBr/N1F8i41pSzqHL0szgR5NP4fxdW/XMG87jcmpOnH+mZPZq/XdvuA3gxsQXpjdfOll/7GwWrXvxERvmreA8Box4pWkafc8yQJ/LCXpJALRHsC3r/nBDO3WCOwq+x7H/fwhC1u8WVF8bn/NWny39i0wKfoyW++BtPiEYbGC5av/J0CX/aLqHRaTj6Ofm9Fn6kW2HF+UtGAKUuybT3dlDhIsLVTPgfHzfNb540bU5oir+/+l+hF11XKRiFmRk5HljoRyBLzfS00Mm9OfnzsPi0XMBLmhT8jdOv9WLib7Ll4C5ZImsP5i3YQEzXa26OMp8Iky8WfLghWNhx9jihY7ML0eE8T9oy27qzPwqkvQxq48C4PHNWFPyWHUq3xBHc0hjh+l7lFn46sS7aQnN0VvZ0TkJXflyX+ay7JLUSmt21QbPNH+AftU2mwxfoL9dp6vqdp9zDqcD+mLGqjafCfAzu9fD2Yi67qyIOZPSB7oqCGmr5N/e6+OXexmC7kj2xnDHSlO5n3gNJvg724lJE872LTX7TuPWQ3YSy5skx8Ktx6FrJ6lSeVW5eyEFDo9Zae5eKIO90tGrMxlbv+VMFggx5xag4tzC9zlQHq7bSbOJ7lLucY8ugb8GDFMPSj1lgBz+UwyTboTZmiPgDebcvO8UHhooGlipsbIX8JfQxpRdI2Bd+gmTcVS5nRYeQh0oz1Wwxb3Vn1MN880hC9XIzyCC6dlWipdp3UJyYe3nRenF8NVPGiiaVMBN/a56YxtNbXS/HRO6ESPlULu92ZENwrPU1jVPg5Ms9xK/14bmXLanQdtrvcHaTVNkQI3JreMLjVuTgY12+eOguaZi8GAgBMEqVNHPek7b9d6LWeWf8Wv2ISPBmmu/mUJPtvoMU7Ewf/1KN5dumO+Ibh2B4xcBWXMgAbolIB/gGg0vXbfdiFMDU/aCt/ltJb1/KvniQD2gK8e07OV2S8R3AQf0eyPh4CSBHYOsXwi99H2WYKtpjwp9Wm/msw2DwGK3iy6Jx8R5NdV77jQVy/5mjJVO6IynD16PePjvY4fGMr1Xcas2uZW0ircN2+fND6wnSf0O+vWtndzdpRLFsiGKXNDwKa9VBKkg65aFsV5l0AwuSd8uU6xWOJMIv74Vx6Xpp4f++9tfQ73UxysYbpXLtWF04oln3xvrPbfE+61u1aCr7uGlt8Zc7BIAUNEnSwEapwmC7SAkr6wlWoInYlbsfcwvo0av3G6EVrcFwzongud0smOpPzvtUZBOPdLLWu9Zkoy2Ldx+0RPeWIAeXODPl6wqK8TpdG/x9embJ7Wpnop4Tpr7915qFGgkWCXaweTdOrV3OWx8FWpbYLys8tjSoVYBSCZTf4VN/Qnh4ZB2Ov7U3N/Q6d6WEAyW6TKFkt3H7RfdR08iefglwtez4O49ITgrP39MMlHwC1p9RWt9Te4wffQ+uOMLd/7wDYjmfaMRUSX+GO1LIcnf1l4Gduvq4Xx/939sleKKx1JD7rclGYF8sX0Q4Yd836Ws1Odx8v78AaEZUOdD//wb8C30/LXX1dnokYd9TldkZnFuEYjSCSXuuUzP/CT7JkMOuhJev00XF90Zp6HLSrJKOpCKyDmuSpnRfqqOIbP/1MMDnzJIrcaZvkLMsFCb2H6yiRQZmF1If12y/rvhUdz0XHMW9bb/bgM43r72f12xq32uath79/6GJtusq3c+S73C6ylGYD8kWOov8lG9n7T3Td5ur1ozifGPEcy8WOKV70LwirEyqmS/YmHQijp0sOvl1bRHMNGjR1PojJ0jfWaVSR6pDnqStM/Gwvwx/UZaj+Gl9ZaqdFivnYNxes/T4qpzvWAgeFudT9UrKGvPdw0pmvM3PprjCtFwjivt3gn/aM2DzmlfsDaHalxKt1pcxQ4QPzi9cuFsEzuAlE9fgpeo/6/7PZv6zvf/sAXeLKMDg88c7dHo4g8/kd+jDPeN5Qq7oGmaGSUrQ3s0z31HSd9npUd3gDa4v4RtKObKXDHcYRFq+SOofbF7XFWS0kHzFM7892dv4m1rPz4w08K+T6YtCpuEK+Y1cf1c8dlaN+sLRUsQ/yyTSndkk7Z5iisA4FvnyTrknLw2Vi0nVCZUO710SaE3juRsS/tlk6so/PbtZpKUQJBXb6Qnk4ixI5DraoD/WohMDkQRLyvNzkc/2f7UKz+Oe9rOcTkY02CTiY0hmIdohE9tlmty13A+XtnoFJBL9Po2M/iHHEGxHhsGGm3CWMW2Pe0IkwCUedlXDyvnZuzNQmmcnQTxauh7MujZ2xOz+OdmyUJa3gos+4j5AQ26tUCOL1orh95RQxG1eUSxsWGCXXbGBouTDhEu4rR1jTmOLwGmhPl5xgosRdaxVDyvrKJvhTw9+zTNCcWJC9avS3xtnIsrbfu6/2TFA9d3skbv2BraoUnVvXOxDKvqGWQwWT9K3lpaedZt/9sxUJj6Kc8QSWuenOh6wg7wyIhwsvzJeoh/3CVkH1JttVxMWojANfmgiPlCL1P49W0hIhEkdxxp6TaoGCZrta/jbKyOuLMQWOarCQD63DnBhKPc+bDKtGpzkKFrwENlGa/774AUJg5DCFyvtWf8Iw7FkYWTZUFPEmGUQqo9Ylg1XpyuXaEovIiwtHzTramV5V1OcqRUHdqFjp5NHSSmln+zHTH3BCyb+7Xq0SEhaGInIGmLITGG6fHXU9bC2Z3F4msRen5FZMeajyHw8V73GIbtVod6WkSmSmIgx+eoku2UfD/uT5LB3YEk/ekBrcbdca2ghWK1gObaqLXp5T/SZTs5oDPFI80PDvteY2psL/WKoDejCaJlRc5U7WTib+Y5ia0RO1LVrSHZNr9j4fRLTJ7ahe0Db3y9EHyDE2mA/naqdZ0l7+Rbx/fzuF93Sbvajbvbjl6lXtJBH95BHB/5zXoKl+8mqJIt5IcTMcWmUnKLjfCwx9pqj4R+oX4qFO9r1hdW9oIoTUvYrMLoKqFel7+EE6LReM4GZkzldFeSt0fTVkNC/K22dprGBc09Yc8UNpzuJzWPrNTTpPTTJ3KX+uvb7d7q474ireNkX1oru6Ukc/Nya8dX63gkvGlt+7XqpevwK2TvWot+0cL5pP1VRgsspW50r9FLtGzLxT91bz7/bDf9h0x5bfKrkqhY0d6Lf90DpGf+gPESE2DNOrTJkidSzjjaqOf2rkOCSNAPjo3Gb0kN4VGHGzAbjzBtfJtp0jELkTZWeX/RoWtg4LZXO87ckgTf9+m/6BMPUccmoLAQVoMgAACz/06Tg3yPIMmWvSzBDjMVaOgaxxy1NedjY+36BCT/G2zNiJeit/npMrTAcNb5DtJu+9y/IakHI5lsySZGfvbgSlOZRB6H3FzCs0OZJZXCkl/ttwe9y+Lbvq6WS0AP78QiNf27+Wov2x7+uHT/6xarq0nTX7ji5I7PCU6VwIu/oVRyGiLkKUSf5+P7kUSzYKNT028KUasO4iLrIZ7Ha0nML1wYf4Alq+iuAGvt81sberqSBawGPiWh3L2JyO/chBmIyklpYyBeBlIA/liW8/VDTzptnh6VEDwq1R4UISma4VaJ9OwgzHiHnc3/rIBnUQIFReGhV4piTrEIp0YbFtuYmung/xXPCvto1zUpJWFeeKIjnTPcEVHUZMYMd2AiUloyaxEReEnP8iYTi0MkIo+FW3oD+4nueQa0CnFY8MqMpafL8fu/TtiixJMcxk9hy7/UpjVxaxUcS4l7ABCofN5oz9Egmw5QL925G3fYeZGR42oDRXAJP0b0m5JhQr07GrQbPbdLLR5uicheXEe8guCELI+E7ikL/Aa8DQGzLkMuCRmjCU5XtHF3o4mr6mtgod3OPNGMfo2TS08V0fFOUhiIykwe8X8bdt9zd3/s4qbtnOQzC/eoy+NOO3MaqOa5DyX0GzydWt0mLsUNKoc1spJarwLmYuicvhrX1smqMlKTWTxJSDG/fpS3yvZLdUZR9h8lGMzULmj5K6TI12q9NoHNd86x1RqpNH0U434OXGIwbb/CjJO//wmIh7KZ2+x0ltMsZe4YDxuIxX0Ccy0bvJYP0yy+L2QOqVfl6me07cWRNDyn3pEzWIpNe8iGVSa8/81cKgQP9e/4UL1DWzaVU9J2W0sKoOWsi4QWqIcUnUgFSy3qsdBx6zOFPnoXinoVKQ+kXj6SEUfpUNhEM2U61Qt0roJvBRR3+C/uYW47ty2mRkmf/2/0i77EaWXFd26Z76Yi4BmP8pwLWEZig1ABJHLm6fSQQ6+9HHH0KO05DAslMyBGu9OkdBXeU8v3OScDL+NFgaha1nV605B612rrQWmLcz6hY1uf1QTq0SO4w5k0kEZGbDH6di+nxppKEQ7XtzW+456Ho1YxijaCA03lOZbs1QDzMrnExTzxG8CPwJeGQDuWto4eS7KOe09F7Kyc37NO07/SFrtsEUEwjzzV64JtoF2tnrnPHp5ZCkDi0lk+fItaX7/JemGwzO+9H9jWPcMAQAD4M3zF9gi8cYnmLAhE6Xn3eRVG7vOAsayB3s4+tr4N9vaawHfN4Em+bmMFFaSWHX36WZryVz7x8N880MRL+8JpSiP+GpnQ9S6m7im6HUkFvEAArvcM94C3AArIOchno141uBeSVCpPRQNNedpKwRNJMCHw0BPvnn3oIaWDAc+lN1VBYxCewoFDRteEX66SKH6MeA8em1d3dY+yDq80f+Nf8YG6rDkSRPi4/bKhEbU0XBZDssksTePw/998d0v2EV/t1+mJ/xg3sDlREfK1cXPTHEuFH2HGNMMnN7KMTTMh9ovs3qy1I2oEt5GIcbQ4tPW9Qm04QMy5JJJNcPze73Axot1+IObycbGcbpE3ecUUzoOuV+8p3384YRjwpmT7l/AmLhM2aRfx2o+i6ANbZfxF3qUU5eJ7PSUb6o2wU9x4xQSJ4L/cA9/elRaXmT+NdHle78yI/f+uQSzV76KkkaZXD+awSNnpSEcEQF3rp7K8Q1YYqKrmHF6X8VYv+v8BEQ4kfCLRUic3/4q7ayaRqieqgFAUHQX+j8iron6KEOgQ1UfHgzb3qX9xPbargG+yMCIWpjYTkw2Jq51nULqQGXfpfXsS7jnT+iNQsq2r+s/vNVcPStnetSdKc6SUqBL3+VqdzQho6+JP5Lg+TF8I5qgkYrbetLb3tAz7r87fUTJDK8exj8wOKxv6lVSjM9orAtZA6ZgnrTU0zgvn5QG98ANbyzPNPDNuVCAA1TVEYsj/bzXk4zxSKFTSrqV04m/rjEGZSakBLoTd9haaU3Jv6Sgs7NH0YY02/5EDSOcP5ey91rTGDCVbTJx7mv6de0btxxQOo3+5eGHLqCRY5lf1UubJAFazDErSEPwxtrwgDwisALRKvRFGqwlf65hWGXU9J1OCWE3rF4JI1sflpsYZJMRcoYJIrgzBTIMXCo4J+UKxhXizJqMBrUAxvwso9ax+p7IrT9z2dmNbvWUUlvYktgbz28xEe4FA46ZOuT+ZXTFyEnvnL
*/