
#ifndef BOOST_MPL_AUX_PREPROCESSOR_EXT_PARAMS_HPP_INCLUDED
#define BOOST_MPL_AUX_PREPROCESSOR_EXT_PARAMS_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/aux_/config/preprocessor.hpp>

// BOOST_MPL_PP_EXT_PARAMS(2,2,T): <nothing>
// BOOST_MPL_PP_EXT_PARAMS(2,3,T): T2
// BOOST_MPL_PP_EXT_PARAMS(2,4,T): T2, T3
// BOOST_MPL_PP_EXT_PARAMS(2,n,T): T2, T3, .., Tn-1

#if !defined(BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES)

#   include <boost/mpl/aux_/preprocessor/filter_params.hpp>
#   include <boost/mpl/aux_/preprocessor/sub.hpp>

#   define BOOST_MPL_PP_EXT_PARAMS(i,j,p) \
    BOOST_MPL_PP_EXT_PARAMS_DELAY_1(i,BOOST_MPL_PP_SUB(j,i),p) \
    /**/

#   define BOOST_MPL_PP_EXT_PARAMS_DELAY_1(i,n,p) \
    BOOST_MPL_PP_EXT_PARAMS_DELAY_2(i,n,p) \
    /**/

#   define BOOST_MPL_PP_EXT_PARAMS_DELAY_2(i,n,p) \
    BOOST_MPL_PP_EXT_PARAMS_##i(n,p) \
    /**/

#   define BOOST_MPL_PP_EXT_PARAMS_1(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##1,p##2,p##3,p##4,p##5,p##6,p##7,p##8,p##9)
#   define BOOST_MPL_PP_EXT_PARAMS_2(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##2,p##3,p##4,p##5,p##6,p##7,p##8,p##9,p1)
#   define BOOST_MPL_PP_EXT_PARAMS_3(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##3,p##4,p##5,p##6,p##7,p##8,p##9,p1,p2)
#   define BOOST_MPL_PP_EXT_PARAMS_4(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##4,p##5,p##6,p##7,p##8,p##9,p1,p2,p3)
#   define BOOST_MPL_PP_EXT_PARAMS_5(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##5,p##6,p##7,p##8,p##9,p1,p2,p3,p4)
#   define BOOST_MPL_PP_EXT_PARAMS_6(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##6,p##7,p##8,p##9,p1,p2,p3,p4,p5)
#   define BOOST_MPL_PP_EXT_PARAMS_7(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##7,p##8,p##9,p1,p2,p3,p4,p5,p6)
#   define BOOST_MPL_PP_EXT_PARAMS_8(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##8,p##9,p1,p2,p3,p4,p5,p6,p7)
#   define BOOST_MPL_PP_EXT_PARAMS_9(i,p) BOOST_MPL_PP_FILTER_PARAMS_##i(p##9,p1,p2,p3,p4,p5,p6,p7,p8)

#else

#   include <boost/preprocessor/arithmetic/add.hpp>
#   include <boost/preprocessor/arithmetic/sub.hpp>
#   include <boost/preprocessor/comma_if.hpp>
#   include <boost/preprocessor/repeat.hpp>
#   include <boost/preprocessor/tuple/elem.hpp>
#   include <boost/preprocessor/cat.hpp>

#   define BOOST_MPL_PP_AUX_EXT_PARAM_FUNC(unused, i, op) \
    BOOST_PP_COMMA_IF(i) \
    BOOST_PP_CAT( \
          BOOST_PP_TUPLE_ELEM(2,1,op) \
        , BOOST_PP_ADD_D(1, i, BOOST_PP_TUPLE_ELEM(2,0,op)) \
        ) \
    /**/

#   define BOOST_MPL_PP_EXT_PARAMS(i, j, param) \
    BOOST_PP_REPEAT( \
          BOOST_PP_SUB_D(1,j,i) \
        , BOOST_MPL_PP_AUX_EXT_PARAM_FUNC \
        , (i,param) \
        ) \
    /**/

#endif

#endif // BOOST_MPL_AUX_PREPROCESSOR_EXT_PARAMS_HPP_INCLUDED

/* ext_params.hpp
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
*/