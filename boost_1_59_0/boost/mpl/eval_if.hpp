
#ifndef BOOST_MPL_EVAL_IF_HPP_INCLUDED
#define BOOST_MPL_EVAL_IF_HPP_INCLUDED

// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/mpl for documentation.

// $Id$
// $Date$
// $Revision$

#include <boost/mpl/if.hpp>
#include <boost/mpl/aux_/na_spec.hpp>
#include <boost/mpl/aux_/lambda_support.hpp>
#include <boost/mpl/aux_/config/msvc.hpp>
#include <boost/mpl/aux_/config/gcc.hpp>
#include <boost/mpl/aux_/config/workaround.hpp>

namespace boost { namespace mpl {

template<
      typename BOOST_MPL_AUX_NA_PARAM(C)
    , typename BOOST_MPL_AUX_NA_PARAM(F1)
    , typename BOOST_MPL_AUX_NA_PARAM(F2)
    >
struct eval_if
#if BOOST_WORKAROUND(BOOST_MSVC, <= 1300) \
     || ( BOOST_WORKAROUND(BOOST_MPL_CFG_GCC, >= 0x0300) \
        && BOOST_WORKAROUND(BOOST_MPL_CFG_GCC, BOOST_TESTED_AT(0x0304)) \
        )
{
    typedef typename if_<C,F1,F2>::type f_;
    typedef typename f_::type type;
#else
    : if_<C,F1,F2>::type
{
#endif
    BOOST_MPL_AUX_LAMBDA_SUPPORT(3,eval_if,(C,F1,F2))
};

// (almost) copy & paste in order to save one more
// recursively nested template instantiation to user
template<
      bool C
    , typename F1
    , typename F2
    >
struct eval_if_c
#if BOOST_WORKAROUND(BOOST_MSVC, <= 1300) \
     || ( BOOST_WORKAROUND(BOOST_MPL_CFG_GCC, >= 0x0300) \
        && BOOST_WORKAROUND(BOOST_MPL_CFG_GCC, BOOST_TESTED_AT(0x0304)) \
        )
{
    typedef typename if_c<C,F1,F2>::type f_;
    typedef typename f_::type type;
#else
    : if_c<C,F1,F2>::type
{
#endif
};

BOOST_MPL_AUX_NA_SPEC(3, eval_if)

}}

#endif // BOOST_MPL_EVAL_IF_HPP_INCLUDED

/* eval_if.hpp
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
*/