#ifndef BOOST_ARCHIVE_BINARY_OARCHIVE_HPP
#define BOOST_ARCHIVE_BINARY_OARCHIVE_HPP

// MS compatible compilers support #pragma once
#if defined(_MSC_VER)
# pragma once
#endif

/////////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8
// binary_oarchive.hpp

// (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for updates, documentation, and revision history.

#include <ostream>
#include <boost/config.hpp>
#include <boost/archive/binary_oarchive_impl.hpp>
#include <boost/archive/detail/register_archive.hpp>

#ifdef BOOST_MSVC
#  pragma warning(push)
#  pragma warning(disable : 4511 4512)
#endif

namespace boost {
namespace archive {

// do not derive from this class.  If you want to extend this functionality
// via inhertance, derived from binary_oarchive_impl instead.  This will
// preserve correct static polymorphism.
class BOOST_SYMBOL_VISIBLE binary_oarchive :
    public binary_oarchive_impl<
        binary_oarchive, std::ostream::char_type, std::ostream::traits_type
    >
{
public:
    binary_oarchive(std::ostream & os, unsigned int flags = 0) :
        binary_oarchive_impl<
            binary_oarchive, std::ostream::char_type, std::ostream::traits_type
        >(os, flags)
    {
        init(flags);
    }
    binary_oarchive(std::streambuf & bsb, unsigned int flags = 0) :
        binary_oarchive_impl<
            binary_oarchive, std::ostream::char_type, std::ostream::traits_type
        >(bsb, flags)
    {
        init(flags);
    }
};

} // namespace archive
} // namespace boost

// required by export
BOOST_SERIALIZATION_REGISTER_ARCHIVE(boost::archive::binary_oarchive)
BOOST_SERIALIZATION_USE_ARRAY_OPTIMIZATION(boost::archive::binary_oarchive)

#ifdef BOOST_MSVC
#pragma warning(pop)
#endif

#endif // BOOST_ARCHIVE_BINARY_OARCHIVE_HPP

/* binary_oarchive.hpp
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
*/