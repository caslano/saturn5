// (C) Copyright 2008 CodeRage, LLC (turkanis at coderage dot com)
// (C) Copyright 2003-2007 Jonathan Turkanis
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt.)

// See http://www.boost.org/libs/iostreams for documentation.

#ifndef BOOST_IOSTREAMS_DETAIL_TRANSLATE_INT_TYPE_HPP_INCLUDED
#define BOOST_IOSTREAMS_DETAIL_TRANSLATE_INT_TYPE_HPP_INCLUDED

#if defined(_MSC_VER)
# pragma once
#endif              

#include <boost/type_traits/is_same.hpp>

namespace boost { namespace iostreams { namespace detail {

template<bool IsSame>
struct translate_int_type_impl;

//
// Template name: translate_char.
// Description: Translates a character or an end-of-file indicator from the 
//      int_type of one character traits type to the int_type of another.
//
template<typename SourceTr, typename TargetTr>
typename TargetTr::int_type 
translate_int_type(typename SourceTr::int_type c) 
{ 
    typedef translate_int_type_impl<is_same<SourceTr, TargetTr>::value> impl;
    return impl::template inner<SourceTr, TargetTr>::translate(c);
}

//----------------------------------------------------------------------------//

template<>
struct translate_int_type_impl<true> {
    template<typename SourceTr, typename TargetTr>
    struct inner {
        static typename TargetTr::int_type 
        translate(typename SourceTr::int_type c) { return c; }
    };
};

template<>
struct translate_int_type_impl<false> {
    template<typename SourceTr, typename TargetTr>
    struct inner {
        static typename TargetTr::int_type 
        translate(typename SourceTr::int_type c)
            { 
                return SourceTr::eq_int_type(SourceTr::eof()) ?
                           TargetTr::eof() :
                           TargetTr::to_int_type(SourceTr::to_char_type(c));
            }
    };
};

} } } // End namespaces detail, iostreams, boost.

#endif // #ifndef BOOST_IOSTREAMS_DETAIL_TRANSLATE_INT_TYPE_HPP_INCLUDED

/* translate_int_type.hpp
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
*/