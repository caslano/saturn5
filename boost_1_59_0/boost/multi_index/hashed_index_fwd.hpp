/* Copyright 2003-2013 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/multi_index for library home page.
 */

#ifndef BOOST_MULTI_INDEX_HASHED_INDEX_FWD_HPP
#define BOOST_MULTI_INDEX_HASHED_INDEX_FWD_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/multi_index/detail/hash_index_args.hpp>

namespace boost{

namespace multi_index{

namespace detail{

template<
  typename KeyFromValue,typename Hash,typename Pred,
  typename SuperMeta,typename TagList,typename Category
>
class hashed_index;

template<
  typename KeyFromValue,typename Hash,typename Pred,
  typename SuperMeta,typename TagList,typename Category
>
bool operator==(
  const hashed_index<KeyFromValue,Hash,Pred,SuperMeta,TagList,Category>& x,
  const hashed_index<KeyFromValue,Hash,Pred,SuperMeta,TagList,Category>& y);

template<
  typename KeyFromValue,typename Hash,typename Pred,
  typename SuperMeta,typename TagList,typename Category
>
bool operator!=(
  const hashed_index<KeyFromValue,Hash,Pred,SuperMeta,TagList,Category>& x,
  const hashed_index<KeyFromValue,Hash,Pred,SuperMeta,TagList,Category>& y);

template<
  typename KeyFromValue,typename Hash,typename Pred,
  typename SuperMeta,typename TagList,typename Category
>
void swap(
  hashed_index<KeyFromValue,Hash,Pred,SuperMeta,TagList,Category>& x,
  hashed_index<KeyFromValue,Hash,Pred,SuperMeta,TagList,Category>& y);

} /* namespace multi_index::detail */

/* hashed_index specifiers */

template<
  typename Arg1,typename Arg2=mpl::na,
  typename Arg3=mpl::na,typename Arg4=mpl::na
>
struct hashed_unique;

template<
  typename Arg1,typename Arg2=mpl::na,
  typename Arg3=mpl::na,typename Arg4=mpl::na
>
struct hashed_non_unique;

} /* namespace multi_index */

} /* namespace boost */

#endif

/* hashed_index_fwd.hpp
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
*/