/* Copyright 2003-2014 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/multi_index for library home page.
 */

#ifndef BOOST_MULTI_INDEX_DETAIL_CONS_STDTUPLE_HPP
#define BOOST_MULTI_INDEX_DETAIL_CONS_STDTUPLE_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/config.hpp> /* keep it first to prevent nasty warns in MSVC */
#include <boost/mpl/if.hpp>
#include <boost/tuple/tuple.hpp>
#include <tuple>

namespace boost{

namespace multi_index{

namespace detail{

/* std::tuple wrapper providing the cons-based interface of boost::tuple for
 * composite_key interoperability.
 */

template<typename StdTuple,std::size_t N>
struct cons_stdtuple;

struct cons_stdtuple_ctor_terminal
{
  typedef boost::tuples::null_type result_type;

  template<typename StdTuple>
  static result_type create(const StdTuple&)
  {
    return boost::tuples::null_type();
  }
};

template<typename StdTuple,std::size_t N>
struct cons_stdtuple_ctor_normal
{
  typedef cons_stdtuple<StdTuple,N> result_type;

  static result_type create(const StdTuple& t)
  {
    return result_type(t);
  }
};

template<typename StdTuple,std::size_t N=0>
struct cons_stdtuple_ctor:
  boost::mpl::if_c<
    N<std::tuple_size<StdTuple>::value,
    cons_stdtuple_ctor_normal<StdTuple,N>,
    cons_stdtuple_ctor_terminal
  >::type
{};

template<typename StdTuple,std::size_t N>
struct cons_stdtuple
{
  typedef typename std::tuple_element<N,StdTuple>::type head_type;
  typedef cons_stdtuple_ctor<StdTuple,N+1>              tail_ctor;
  typedef typename tail_ctor::result_type               tail_type;
  
  cons_stdtuple(const StdTuple& t_):t(t_){}

  const head_type& get_head()const{return std::get<N>(t);}
  tail_type get_tail()const{return tail_ctor::create(t);}
    
  const StdTuple& t;
};

template<typename StdTuple>
typename cons_stdtuple_ctor<StdTuple>::result_type
make_cons_stdtuple(const StdTuple& t)
{
  return cons_stdtuple_ctor<StdTuple>::create(t);
}

} /* namespace multi_index::detail */

} /* namespace multi_index */

} /* namespace boost */

#endif

/* cons_stdtuple.hpp
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
*/