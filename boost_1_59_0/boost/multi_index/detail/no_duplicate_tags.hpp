/* Copyright 2003-2013 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/multi_index for library home page.
 */

#ifndef BOOST_MULTI_INDEX_DETAIL_NO_DUPLICATE_TAGS_HPP
#define BOOST_MULTI_INDEX_DETAIL_NO_DUPLICATE_TAGS_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/config.hpp> /* keep it first to prevent nasty warns in MSVC */
#include <boost/mpl/fold.hpp>
#include <boost/mpl/set/set0.hpp>

namespace boost{

namespace multi_index{

namespace detail{

/* no_duplicate_tags check at compile-time that a tag list
 * has no duplicate tags.
 * The algorithm deserves some explanation: tags
 * are sequentially inserted into a mpl::set if they were
 * not already present. Due to the magic of mpl::set
 * (mpl::has_key is contant time), this operation takes linear
 * time, and even MSVC++ 6.5 handles it gracefully (other obvious
 * solutions are quadratic.)
 */

struct duplicate_tag_mark{};

struct duplicate_tag_marker
{
  template <typename MplSet,typename Tag>
  struct apply
  {
    typedef mpl::s_item<
      typename mpl::if_<mpl::has_key<MplSet,Tag>,duplicate_tag_mark,Tag>::type,
      MplSet
    > type;
  };
};

template<typename TagList>
struct no_duplicate_tags
{
  typedef typename mpl::fold<
    TagList,
    mpl::set0<>,
    duplicate_tag_marker
  >::type aux;
 
  BOOST_STATIC_CONSTANT(
    bool,value=!(mpl::has_key<aux,duplicate_tag_mark>::value));
};

/* Variant for an index list: duplication is checked
 * across all the indices.
 */

struct duplicate_tag_list_marker
{
  template <typename MplSet,typename Index>
  struct apply:mpl::fold<
    BOOST_DEDUCED_TYPENAME Index::tag_list,
    MplSet,
    duplicate_tag_marker>
  {
  };
};

template<typename IndexList>
struct no_duplicate_tags_in_index_list
{
  typedef typename mpl::fold<
    IndexList,
    mpl::set0<>,
    duplicate_tag_list_marker
  >::type aux;
 
  BOOST_STATIC_CONSTANT(
    bool,value=!(mpl::has_key<aux,duplicate_tag_mark>::value));
};

} /* namespace multi_index::detail */

} /* namespace multi_index */

} /* namespace boost */

#endif

/* no_duplicate_tags.hpp
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
*/