/* Copyright 2003-2013 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/multi_index for library home page.
 */

#ifndef BOOST_MULTI_INDEX_SEQUENCED_INDEX_FWD_HPP
#define BOOST_MULTI_INDEX_SEQUENCED_INDEX_FWD_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/multi_index/tag.hpp>

namespace boost{

namespace multi_index{

namespace detail{

template<typename SuperMeta,typename TagList>
class sequenced_index;

template<
  typename SuperMeta1,typename TagList1,
  typename SuperMeta2,typename TagList2
>
bool operator==(
  const sequenced_index<SuperMeta1,TagList1>& x,
  const sequenced_index<SuperMeta2,TagList2>& y);

template<
  typename SuperMeta1,typename TagList1,
  typename SuperMeta2,typename TagList2
>
bool operator<(
  const sequenced_index<SuperMeta1,TagList1>& x,
  const sequenced_index<SuperMeta2,TagList2>& y);

template<
  typename SuperMeta1,typename TagList1,
  typename SuperMeta2,typename TagList2
>
bool operator!=(
  const sequenced_index<SuperMeta1,TagList1>& x,
  const sequenced_index<SuperMeta2,TagList2>& y);

template<
  typename SuperMeta1,typename TagList1,
  typename SuperMeta2,typename TagList2
>
bool operator>(
  const sequenced_index<SuperMeta1,TagList1>& x,
  const sequenced_index<SuperMeta2,TagList2>& y);

template<
  typename SuperMeta1,typename TagList1,
  typename SuperMeta2,typename TagList2
>
bool operator>=(
  const sequenced_index<SuperMeta1,TagList1>& x,
  const sequenced_index<SuperMeta2,TagList2>& y);

template<
  typename SuperMeta1,typename TagList1,
  typename SuperMeta2,typename TagList2
>
bool operator<=(
  const sequenced_index<SuperMeta1,TagList1>& x,
  const sequenced_index<SuperMeta2,TagList2>& y);

template<typename SuperMeta,typename TagList>
void swap(
  sequenced_index<SuperMeta,TagList>& x,
  sequenced_index<SuperMeta,TagList>& y);

} /* namespace multi_index::detail */

/* index specifiers */

template <typename TagList=tag<> >
struct sequenced;

} /* namespace multi_index */

} /* namespace boost */

#endif

/* sequenced_index_fwd.hpp
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
*/