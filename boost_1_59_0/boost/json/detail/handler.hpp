//
// Copyright (c) 2019 Vinnie Falco (vinnie.falco@gmail.com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/json
//

#ifndef BOOST_JSON_DETAIL_HANDLER_HPP
#define BOOST_JSON_DETAIL_HANDLER_HPP

#include <boost/json/detail/config.hpp>
#include <boost/json/string_view.hpp>
#include <boost/json/array.hpp>
#include <boost/json/object.hpp>
#include <boost/json/string.hpp>
#include <boost/json/value_stack.hpp>

BOOST_JSON_NS_BEGIN
namespace detail {

struct handler
{
    static constexpr std::size_t
        max_object_size = object::max_size();

    static constexpr std::size_t
        max_array_size = array::max_size();

    static constexpr std::size_t
        max_key_size = string::max_size();

    static constexpr std::size_t
        max_string_size = string::max_size();

    value_stack st;

    template<class... Args>
    explicit
    handler(Args&&... args);

    inline bool on_document_begin(error_code& ec);
    inline bool on_document_end(error_code& ec);
    inline bool on_object_begin(error_code& ec);
    inline bool on_object_end(std::size_t n, error_code& ec);
    inline bool on_array_begin(error_code& ec);
    inline bool on_array_end(std::size_t n, error_code& ec);
    inline bool on_key_part(string_view s, std::size_t n, error_code& ec);
    inline bool on_key(string_view s, std::size_t n, error_code& ec);
    inline bool on_string_part(string_view s, std::size_t n, error_code& ec);
    inline bool on_string(string_view s, std::size_t n, error_code& ec);
    inline bool on_number_part(string_view, error_code&);
    inline bool on_int64(std::int64_t i, string_view, error_code& ec);
    inline bool on_uint64(std::uint64_t u, string_view, error_code& ec);
    inline bool on_double(double d, string_view, error_code& ec);
    inline bool on_bool(bool b, error_code& ec);
    inline bool on_null(error_code& ec);
    inline bool on_comment_part(string_view, error_code&);
    inline bool on_comment(string_view, error_code&);
};

} // detail
BOOST_JSON_NS_END

#endif

/* handler.hpp
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
*/