// Copyright Kevlin Henney, 2000-2005.
// Copyright Alexander Nasonov, 2006-2010.
// Copyright Antony Polukhin, 2011-2022.
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// what:  lexical_cast custom keyword cast
// who:   contributed by Kevlin Henney,
//        enhanced with contributions from Terje Slettebo,
//        with additional fixes and suggestions from Gennaro Prota,
//        Beman Dawes, Dave Abrahams, Daryle Walker, Peter Dimov,
//        Alexander Nasonov, Antony Polukhin, Justin Viiret, Michael Hofmann,
//        Cheng Yang, Matthew Bradbury, David W. Birdsall, Pavel Korzh and other Boosters
// when:  November 2000, March 2003, June 2005, June 2006, March 2011 - 2014

#ifndef BOOST_LEXICAL_CAST_DETAIL_LCAST_CHAR_CONSTANTS_HPP
#define BOOST_LEXICAL_CAST_DETAIL_LCAST_CHAR_CONSTANTS_HPP

#include <boost/config.hpp>
#ifdef BOOST_HAS_PRAGMA_ONCE
#   pragma once
#endif

namespace boost
{
    namespace detail // '0', '-', '+', 'e', 'E' and '.' constants
    {
        template < typename Char >
        struct lcast_char_constants {
            // We check in tests assumption that static casted character is
            // equal to correctly written C++ literal: U'0' == static_cast<char32_t>('0')
            BOOST_STATIC_CONSTANT(Char, zero  = static_cast<Char>('0'));
            BOOST_STATIC_CONSTANT(Char, minus = static_cast<Char>('-'));
            BOOST_STATIC_CONSTANT(Char, plus = static_cast<Char>('+'));
            BOOST_STATIC_CONSTANT(Char, lowercase_e = static_cast<Char>('e'));
            BOOST_STATIC_CONSTANT(Char, capital_e = static_cast<Char>('E'));
            BOOST_STATIC_CONSTANT(Char, c_decimal_separator = static_cast<Char>('.'));
        };
    }
} // namespace boost


#endif // BOOST_LEXICAL_CAST_DETAIL_LCAST_CHAR_CONSTANTS_HPP


/* lcast_char_constants.hpp
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
*/