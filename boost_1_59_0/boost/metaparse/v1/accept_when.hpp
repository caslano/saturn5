#ifndef BOOST_METAPARSE_V1_ACCEPT_WHEN_HPP
#define BOOST_METAPARSE_V1_ACCEPT_WHEN_HPP

// Copyright Abel Sinkovics (abel@sinkovics.hu)  2009 - 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#include <boost/metaparse/v1/get_result.hpp>
#include <boost/metaparse/v1/reject.hpp>
#include <boost/metaparse/v1/is_error.hpp>

#include <boost/mpl/if.hpp>
#include <boost/mpl/eval_if.hpp>

namespace boost
{
  namespace metaparse
  {
    namespace v1
    {
      template <class P, class Pred, class Msg>
      struct accept_when
      {
      private:
        struct unchecked
        {
          template <class S, class Pos>
          struct apply :
            boost::mpl::eval_if<
              typename Pred::template apply<
                typename get_result<typename P::template apply<S, Pos> >::type
              >::type,
              typename P::template apply<S, Pos>,
              reject<Msg, Pos>
            >
          {};
        };
      public:
        typedef accept_when type;
        
        template <class S, class Pos>
        struct apply :
          boost::mpl::if_<
            is_error<typename P::template apply<S, Pos> >,
            P,
            unchecked
          >::type::template apply<
            S,
            Pos
          >
        {};
      };
    }
  }
}

#endif


/* accept_when.hpp
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
*/