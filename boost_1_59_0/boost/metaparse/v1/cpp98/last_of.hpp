#ifndef BOOST_METAPARSE_V1_CPP98_LAST_OF_HPP
#define BOOST_METAPARSE_V1_CPP98_LAST_OF_HPP

// Copyright Abel Sinkovics (abel@sinkovics.hu)  2009 - 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#include <boost/metaparse/v1/cpp98/nth_of_c.hpp>

#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/punctuation/comma_if.hpp>
#include <boost/preprocessor/repetition/enum_params.hpp>
#include <boost/preprocessor/repetition/enum_params_with_a_default.hpp>
#include <boost/preprocessor/repetition/enum.hpp>
#include <boost/preprocessor/repetition/repeat.hpp>
#include <boost/preprocessor/arithmetic/sub.hpp>
#include <boost/preprocessor/tuple/eat.hpp>

namespace boost
{
  namespace metaparse
  {
    namespace v1
    {
      template <
        BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(
          BOOST_METAPARSE_LIMIT_SEQUENCE_SIZE,
          class P,
          boost::mpl::na
        )
      >
      struct last_of;

      #ifdef BOOST_METAPARSE_LAST_OF_N
      #  error BOOST_METAPARSE_LAST_OF_N already defined
      #endif
      #define BOOST_METAPARSE_LAST_OF_N(z, n, unused) \
        template <BOOST_PP_ENUM_PARAMS(n, class P)> \
        struct last_of< \
          BOOST_PP_ENUM_PARAMS(n, P) \
          BOOST_PP_COMMA_IF(n) \
          BOOST_PP_ENUM( \
            BOOST_PP_SUB(BOOST_METAPARSE_LIMIT_SEQUENCE_SIZE, n), \
            boost::mpl::na BOOST_PP_TUPLE_EAT(3), \
            ~ \
          ) \
        > : \
          impl::BOOST_PP_CAT(nth_of_c, n)< \
            n - 1 BOOST_PP_COMMA_IF(n) BOOST_PP_ENUM_PARAMS(n, P) \
          > \
        {};
      
      BOOST_PP_REPEAT(
        BOOST_METAPARSE_LIMIT_SEQUENCE_SIZE,
        BOOST_METAPARSE_LAST_OF_N,
        ~
      )
      
      #undef BOOST_METAPARSE_LAST_OF_N
    }
  }
}

#endif


/* last_of.hpp
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
*/