#ifndef BOOST_METAPARSE_V1_CPP98_ONE_OF_C_HPP
#define BOOST_METAPARSE_V1_CPP98_ONE_OF_C_HPP

// Copyright Abel Sinkovics (abel@sinkovics.hu)  2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#include <boost/metaparse/v1/one_of.hpp>
#include <boost/metaparse/v1/lit_c.hpp>
#include <boost/metaparse/limit_one_of_size.hpp>

#include <boost/preprocessor/arithmetic/sub.hpp>
#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/punctuation/comma_if.hpp>
#include <boost/preprocessor/repetition/enum.hpp>
#include <boost/preprocessor/repetition/enum_params.hpp>
#include <boost/preprocessor/repetition/enum_params_with_a_default.hpp>
#include <boost/preprocessor/repetition/repeat.hpp>
#include <boost/preprocessor/tuple/eat.hpp>

#include <climits>

namespace boost
{
  namespace metaparse
  {
    namespace v1
    {
      #ifdef BOOST_NO_SCALAR_VALUE
      #  error BOOST_NO_SCALAR_VALUE already defined
      #endif
      #define BOOST_NO_SCALAR_VALUE LONG_MAX

      template <
        BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(
          BOOST_METAPARSE_LIMIT_ONE_OF_SIZE,
          long C,
          BOOST_NO_SCALAR_VALUE
        )
      >
      struct one_of_c;

      #ifdef BOOST_METAPARSE_ONE_OF_C_LIT
      #  error BOOST_METAPARSE_ONE_OF_C_LIT already defined
      #endif
      #define BOOST_METAPARSE_ONE_OF_C_LIT(z, n, unused) lit_c<BOOST_PP_CAT(C, n)>

      #ifdef BOOST_METAPARSE_ONE_OF_C_CASE
      #  error BOOST_METAPARSE_ONE_OF_C_CASE already defined
      #endif
      #define BOOST_METAPARSE_ONE_OF_C_CASE(z, n, unused) \
        template <BOOST_PP_ENUM_PARAMS(n, long C)> \
        struct \
          one_of_c< \
            BOOST_PP_ENUM_PARAMS(n, C) \
            BOOST_PP_COMMA_IF(n) \
            BOOST_PP_ENUM( \
              BOOST_PP_SUB(BOOST_METAPARSE_LIMIT_ONE_OF_SIZE, n), \
              BOOST_NO_SCALAR_VALUE BOOST_PP_TUPLE_EAT(3), \
              ~ \
            ) \
          > : \
          one_of< BOOST_PP_ENUM(n, BOOST_METAPARSE_ONE_OF_C_LIT, ~) > \
        {};

      BOOST_PP_REPEAT(
        BOOST_METAPARSE_LIMIT_ONE_OF_SIZE,
        BOOST_METAPARSE_ONE_OF_C_CASE,
        ~
      )

      #undef BOOST_METAPARSE_ONE_OF_C_CASE
      #undef BOOST_METAPARSE_ONE_OF_C_LIT
      #undef BOOST_NO_SCALAR_VALUE
    }
  }
}

#endif


/* one_of_c.hpp
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
*/