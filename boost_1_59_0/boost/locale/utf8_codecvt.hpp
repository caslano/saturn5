//
//  Copyright (c) 2015 Artyom Beilis (Tonkikh)
//
//  Distributed under the Boost Software License, Version 1.0. (See
//  accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
#ifndef BOOST_LOCALE_UTF8_CODECVT_HPP
#define BOOST_LOCALE_UTF8_CODECVT_HPP

#include <boost/locale/utf.hpp>
#include <boost/locale/generic_codecvt.hpp>
#include <boost/cstdint.hpp>
#include <locale>

namespace boost {
namespace locale {

///
/// \brief Geneneric utf8 codecvt facet, it allows to convert UTF-8 strings to UTF-16 and UTF-32 using wchar_t, char32_t and char16_t
/// 
template<typename CharType>
class utf8_codecvt : public generic_codecvt<CharType,utf8_codecvt<CharType> > 
{
public:
   
    struct state_type {};

    utf8_codecvt(size_t refs = 0) : generic_codecvt<CharType,utf8_codecvt<CharType> >(refs)
    {
    }

    static int max_encoding_length()
    {
        return 4;
    }

    static state_type initial_state(generic_codecvt_base::initial_convertion_state /* unused */)
    {
        return state_type();
    }
    static utf::code_point to_unicode(state_type &,char const *&begin,char const *end) 
    {
        char const *p=begin;

        utf::code_point c = utf::utf_traits<char>::decode(p,end);
        if(c!=utf::illegal && c!=utf::incomplete)
            begin = p;
        return c;
    }

    static utf::code_point from_unicode(state_type &,utf::code_point u,char *begin,char const *end) 
    {
        if(!utf::is_valid_codepoint(u))
            return utf::illegal;
        int width;
        if((width=utf::utf_traits<char>::width(u)) > end - begin)
            return utf::incomplete;
        utf::utf_traits<char>::encode(u,begin);
        return width;
    }
};

} // locale
} // namespace boost

#endif
///
// vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4

/* utf8_codecvt.hpp
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
*/