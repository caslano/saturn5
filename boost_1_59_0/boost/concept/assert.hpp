// Copyright David Abrahams 2006. Distributed under the Boost
// Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#ifndef BOOST_CONCEPT_ASSERT_DWA2006430_HPP
# define BOOST_CONCEPT_ASSERT_DWA2006430_HPP

# include <boost/config.hpp>
# include <boost/config/workaround.hpp>

// The old protocol used a constraints() member function in concept
// checking classes.  If the compiler supports SFINAE, we can detect
// that function and seamlessly support the old concept checking
// classes.  In this release, backward compatibility with the old
// concept checking classes is enabled by default, where available.
// The old protocol is deprecated, though, and backward compatibility
// will no longer be the default in the next release.

# if !defined(BOOST_NO_OLD_CONCEPT_SUPPORT)                                         \
    && !defined(BOOST_NO_SFINAE)                                                    \
                                                                                    \
    && !(BOOST_WORKAROUND(__GNUC__, == 3) && BOOST_WORKAROUND(__GNUC_MINOR__, < 4))

// Note: gcc-2.96 through 3.3.x have some SFINAE, but no ability to
// check for the presence of particularmember functions.

#  define BOOST_OLD_CONCEPT_SUPPORT

# endif

# ifdef BOOST_MSVC
#  include <boost/concept/detail/msvc.hpp>
# elif BOOST_WORKAROUND(BOOST_BORLANDC, BOOST_TESTED_AT(0x564))
#  include <boost/concept/detail/borland.hpp>
# else 
#  include <boost/concept/detail/general.hpp>
# endif

  // Usage, in class or function context:
  //
  //     BOOST_CONCEPT_ASSERT((UnaryFunctionConcept<F,bool,int>));
  //
# define BOOST_CONCEPT_ASSERT(ModelInParens) \
    BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)

#endif // BOOST_CONCEPT_ASSERT_DWA2006430_HPP

/* assert.hpp
ywm9X79MmqTDY85EFzsOeqKNcr6WWKEZeeT+VdykxdNOVRle/syIdnNyccCVWfaPcbs4Ci09Eey2jBI3t3jKEFuZrE0+HPjLpIqEaxGta/wemc/kCv9yka2jph562yQLe4MZTldeETvXZAv2knlG0yrF37yM6jkFUstdvr1gtLNXJjwQYJvCvXaRDPZtti9FwDriiD3IQQJRsn8ItxkoDctwc1i8CgszREhguj/rUEEtqMZj3nn8neqwaGIswpjxQba9ifxVaC3fBLI5oKco4EZIyizi+/muA/Ewd5gmFSs+ELo9X/rV+GnM4byHDHsh4vDgYwCacRwz+aBp3GQ+z4jaSAWHFMdRRhEIaZih45jIItUhJxJy+VjMhHgZzOJqWrkgj9pkuXk66GDxDmsmr6LusOxYbbAcq6GAujtzovlmNJXLbMzSW6Lbd0LjeR/mqUTDBdIvCGBI3xTRkcoWYQLEMAzG1YPFossH4b+ZkqrESxat2+hzksMSkgAs6vazaNJUFhYpUwUe665pk73ZJlOkK0EerWO/7Vd+6++wZrl9h039qxEGUKhmOiv8e/KSLHMjpOaa3tqWY0QowU5MC98W5+s+qV9riB10dnE2MM+nQSskkPJHuzDTjSsd6+VGk4adxx2sWUtLytryR8UxNq324Qtqi/LHn7UNgBqLl2/UslfxxN1AkZObUAcnqKH4XV/VYbwhqEpojkVuAa8BLCFdZ6j9Q3bQthp4ZAOu0Py9TMMTy1iGr65YtjHGYdBRPBNpxxjnV8bBwkeMKl1BFUYhVWoNBfpUtin71S93mZlR5PKpeY6mNx8Z7iB94RrcIx4DrwGKISbKx6W0/KfSdOktg40MJXJHutOkxRk8jsDTnaRACU3N7HHmS67LC2sqaMHm/yBC2maxmrRidLIdxFm8QSrC//snOqwh+9XDBye1wSZiKosMkAT2nqAOOdINNwB4I50ELEj8FXyJlnWGH01HzQHcleGLUh1qKJA/MiMb1LaN2l9c8QQjlR9PH5DCQ4+OOhr5HuL6SAJi+FUeqtvF4HINt1ZNwQNdF51TugMSJex5tZZPT3d8L3vW9uxIxqOLURuQHpQ8K/AqeElm48zbCwEOsTak/kUIpfs7qGONQ32nE7TcjUclRo1KXnkjEfWBKfddjUS3NtvaaXm+k2Pt0g8gHZOd+Sp0Mm932RtzCZbCASD4esmHo+XNjpG2pUNPKKYRygS7OsjrBcZ2WeVKH7GpFQdv4w0QkL7gDSOqRJFlcoWk9N6juuj5oPn+2lIGdw8i1mx03qrvUq/j2vORlSrrf/BfxfaqqhiwrSfwQq5Ydx21ak3NNOdAaAhdLXYp49v0ng4btnvKpqzT7XDoul5BCUIAmOt/n3oSxqRSfK+I58oAACz/05vq7bWFTt3sO70dsZ5YvBdJPfio6HxwGic8k0ueuVAnb7HtYTvo8fI5E0leqmvJPjVOmEopn686mRDdtTPev/nhKG3fyb/166mfrb+j43iSN7nePMQPFnurwlyKfKB1j85cPeo04eeXDrZX15RVr8XWsU6zqG/zohVAW/gKD50yL79nKBee6eWPnW/br836pE/pcF8+g8RQulqhQlTopj9nSEgM26V9xkbfKQ/4TMQlLCMQqzBvmTPN4gPXcAgifS/+boI+qQEfB1BXNsotqICDqmCCwGUHSp6HtdTEL9oJzZ6HRoPtAH0Ip6r/eLq0kTSvsgJ5GAKp2wIoiQPaigODhgIwRwNBZ7rdmgNF24XddAPfeQKKV3lJ64SPVoWZfkLslMDLYzwrPIPMDTz/Ew4ybwqNMINQvNE2AOkDEQxO/m4BDQPTGHRbV7LkME675TDKKQ/y9EO2LUS8a1/EwgXq0Pp3Lzu4OkApwjDAvUxckgjxTqC4ejNo5nfeZCma0bOC6D9p12PsL2geULYShCf8NKa/by66lDhH8V8pIhKxyK4VTxU9ibQOSPOl4vOKFizmUfTG/DTefEXJPC7i/PLxPO/hPEnoPDADI0oRI/ECY0A+o1MJI3XkRWMt4+NafeRWPb9iv5kYQcosKw98cFeioS+u0rXhKK7DKK7laLbHULbZ0H8to//Vjm4PzA0kghAkDBGHDfFHAXtNF/TJEvkPKfybM99do2hZUIBKKGPUgLz1A0HA7vv0+FqkBozDAihEho+ThBmJGg2TGaoAyFMlKbAaOpQhSTAGgjBPuDNOGCMCRImXVEGVZMnx8w0hMUhMtwKgYRq3Esg0hsPt47evCjfmw/QDsIpAkI2AgBeYIhMlYhKNIFMEZJP0wTOl9te4VTBvjGd8ybk/CnMURhHqJHqe5FmeC1EEZZPdZV7mYX7WuCrdIYrSFcoojiLwATa84guSwwQxFOpQF++YFevY1fboA4O44Qvi9FPU5aDVCWFcYD58QuTsIBauB0gyxgd6oiQeYGaWIrMeZflWBxyC7+ud1ODBpBuaSgJFIWNSGR5AmEf9px/cEfysOc8zhWp8DousecK0Dp5RHp2+rmdJsR2/Piq6rnfGKWu7Xo29LhzPWYi+TovNqWzL+RbMacLSbp3DWcnUPljHKc3CSY27zh3f/ikwu6WZ0zUdngWc3RU/1QWa2bUdsxXe2uWY3pUZ03XausWf447N8o7P4m6L/N6K/r6Z8/5a117LA3rLAZoaD0pw+67f9h7PdtVyjUi5gVZZYW7eAYnRlDOhFOymmwOSHCyiiEeVBUgfCWmczP8pSVvWEDHmvK4wC43pzpukE0gTJbzO5eugEvLQ930wCIvq90mJokojpG0Ig0pVo10wqUrE/S7t0zj0bhvuYFK/5FmWYVVe4x5Wp055TD9xPKCUPq4EaQ57SBFMLNs3SZUV4BBUThMDYqaBFBvCw+1bxlU0wtsgxuvkyljwbaoZJDV/SWku5A2gJ5WUEUaGAOJ1AsmJY06TRf/v8nTY/zmnebz46gLQ/1397vNplDTduhOThz11jlkr2Dzd2h6gzVuIgMv9y4GIg6Ev/tuv8UgpAouoC0MM1lIQvGpffIqEZx7Di8Qx2dAeg07a3VfZ+AY/590nSElyE5yp76JiU790uYECQKtdSFiWAQMEKHydTj2hdRIjJ7XNBVFhmypqaYqmziGiZ1jzsFzpibtSyR/W/t6/HmeoGdzPTfIEhK3P0ezELnJS7Z/mcKgYwsz4ahOI3sMRjDuBV7A2PJk6Lom2nDsKPKzfoVkKwI8gnQGwXS5rnECbIBlUrusDZCBLmuVKVtAyQWY+Tvh99Q7xq98aUHj2hv8ehflBQfPt2MSrZt5k85I6zaticnLLVEdFwH+PbHqZd49DLdVDXRQIrESqFbS6NNZNbkqv0QjAM4+fAQxK0XszvR0Jwct7ywrXFZbAig11+3VXfW4X7xl5Fp0nlf2aVJJTgOp2tAKG7JHw7FrtUK29bWZkM9PibI2VPHsUy5GvROXf+naz17g10V2Rvd6ta0NnFx6hm0r3xixnEk0dXEX5E+LG2FA1NNVDoOfPXLK+LhIqzht2K5a6zlwKLgXzzu1fVzqD1rbRLVU3F1SbFxieZ2fFytYxNrgXF0+xN1dPNys61xkxN2pJZbmfDPjxl0VeSE8nl4LTFzdpD/qOqGsgG85J42z4Vs6vm+65OuU1xq9UIc6qMs9wj8+mfa/hQi7H48+MzU89F+XbLs6+d+UzPk//ebzCLTzjJz8JEj7Z+j4NLFAH2rwiazzB9sHrB78UblZ6/fesT1hG4Aq/N/mKfEJhdABP5PzqOwnbQwevcEqRP/K08P6kvf7MsE594EXW8E4x9wFTTwzz4AJv3+AKRUBhvwefWwwT7krNcPYq/S5S5wTP/KguowZLMQLDa+NccU899hZV5gvXrBLtpgVboRs7lQGfqTZ5eRabYQ2vvUgd5hy7MRTGtxbDsTCpfR8LWw//k4TP3IL/kJXCuotnqYwPnYa30noL15PieIcJDpA/GlM58jk2emh4ZHVPDtQ5qvREbvj2uVB6/NZJXiE08uBlTHxPTj2smAeeXCUc7gjU5xgWKsVn0hVRlj582QemP5hLLl1ZXidTdWgescFvgnWMayT2K9kg2CuzrC5/z0mM9iKvLivcNiRTmqKg3e0o40tUyGFAczAp1qCESy8LnI7IXhHaaliU4m3qP2DDBo0g/tH4vYqFWgOr/zsi2LzaqGjTiD6z8kspHD08NUw7K0DXZ/3TCWMiypurw6QeH0UJD5C4PUpym6snlJbZMaNfBNavoNu3lW67hgbEQJPnS4vALZOwQsNQTa9ANEHwLIMOhJbWJAjhzx1pywiNQCL9BiadVb8gAwPA5A/6kk1asyZaNkDqEWwiGCAKkWQSkXGsf+8+1mfiM4Sae1pM0gSqGMA0jSW5vEXKA6zwnY36GIcq6m/iuItqA+jncVNRPRAlNB1Q1h9B7J80P1URPpDxGVVEOpihNJsRuYm1NmAB0N/RBdBXYUq7pL8sp7/daPZdettxN53BeiAmut5kP2uYNBiiOEYjeOARcwvGcglFBdhE2V8ifwWWAJvmDphk1e/VLqxZD5hXgH+wytcGfZNCOJTxNETl06dW6l9U5F8YQ9/E+9LycpeytIrGA6yVf7fkRsN8ArQ6F/M0jrRi/HbwCCRleYXGwpA3ICdux+oRqrJ0n8Ykekli8G1qypwqx2v3IGLsAojYiOiv8GnAfksmWA14p+4XCmJfjZMr8OMj7eMzi4BDaprc1EaevOr0S2g3C3K69w+8FlZOM0Eff8tpks0gMiVoCsNrFte5tgHHbkJAIL9NurtS5NBVotNT4tdbQtJNZNRtqMxtiMZtyNpt6NB1qNNz6Nd7SNJtatSNpsyNhsaNxtqN5tCVptOT5tebRtKNaNStoMytgMatwNrNoWpP9Ae2r42XUTJp/XY9EHD7tmPn4ldovTU2NFOVyWk71CnGyl+UsQO07RbIZ3gYmzvHfTT7fSXnHSHnkzEHHCInFDNHHMDs9ctyVth0dtB2lthV3hCT/gD0eMZQ8gmE+KPNJQeJXhftpQqCvh4U/hZy5gUDiG8bC+9dPl/SBVeXhUYeycUUrguUPrIn3JW/kAIGUmsTztFmXK63RsLT9REnFgxVEgym1tOyFvO7Rtysltyl1jTOhsK2thTDFg3FNeXARg3FNsTM9sXClg1kPCauxjXOJnrKpgXDdtbUFh7F1jbu5gbHNheklt7G9mdkO2Frp2d6x5thx5twm//EsOtyFxgSrdQbAbtEuzviZlsHq+QdkXnn9YoK4G7JeE4koIfmk83+vi/9kzfUU+n3s2nQc4gbtu/1H/LAFRWv/H/g8Ys34yQIl5BqR+MHLggTR5A0Z+PuL+fCe5JzFNoaZ+vy9+uT95xUN+nLZ5o7v5qEv5rlt5qKZ6Ka56LLZ6SH2oeN71robm3rPw1Nn0yjb+K+tqaOp8Nno/iWv/wtfbiexEn4sb46L4bNanUbIGXWD79EqNvYeWBLT7/NwBZTkDxXiDw+8IqcyN1aUN1E4SvB5fNeJl+Mk6VyOZusih6Nb/ds+W/k3TfWZi+03D+0r6PGFQueJ7Gvhkf8wa62gxK37zK3qve3sM63zo63vra7lnH8Wml8HUl8XD5eazvda9jdrz+XCvBfZzG/OIQfOKYfVrO9oOLeQ4gfRMwfWi+/WtO/WrefGyAr07Q/bfJG3l/2b6SqdvA+mfXMr6zIj6ytzNb8zr4sr83GTxFgRUVf9r9Z8DDnwD3EwHmH+mPtp9GiQnmMFNObp7JDRHGUJNJt6DKkhnUcNLGb6FNFSGEkA2PuaNMmSmUsEwQ7SSWfff4nIeNcFimL61N9wScybNTvPICn0mHTpFTJTrqzKzP8ZWwWvaTS9ojqOSOfVMtTcWJ2/1IzG4ciUJV5Y4snK1WYW/HBhiibsbMT40FelK/VK5zkcEjJNi2iqaZw3Ajvm2tcGwMMITkd67CPxEUg2wb42v/JlUzZXz2UcGvIj3K2X9kc7WbOlEwuHUGYcmXWplAND3h7bmj7j14+a2k3Mu/otHqK8u/dIrzjC1IaHUe72lFbGkgeR5a1qdTVvCadSq9D4UJO5NSg+yx+RzO/uXWzXEyGpE8eP3pxbuuTQeKFGRcoJe3oZT6+/oLx0ftDA/PfXwT3CdwjI2ho/3crou8CZ/towDU2FCjpMJE9FLfRNQoC2jcG/6HIQIAEUDZrSCO02+oAgKhA+s7B17QuR/KTac20kLPYdbWZMxnWH1q/GXcKHj+K8dmO52DrrXLew2Cv9o9qFUEVs+Psosh+gq+HBHMDD1+VM6XkUtRnhNB+VfKixwadcwbsvQQzpR1FxX0H87lUs6Ycp1nzJtCgyR1xDHsVc54eJO8jgCNCIAKJWtBqAifXzdcAB8YXZAyJ/rfbDmL32qe/AGdT2i8jAUKsoqPLb2gyoUFF+jECKxUolCyBNDQkI3/opyelJAAEjAWq00ERwZVZQGOUabtbdZSLP1l5la1VjGNNIgIAOAevW5hmvv72BD5eeXZylpbPxdJA47PTRxl2FHOIzfsUMxDV+pH+mkVltyJVrwNQldqX3Zexq6ySsuGfHckdoysNPWWcd2Hl5Vi7ZVqBAvE355Ix89JcxKDGMN/KMfEWh0zC2wgfZD7TlI4sctlwS5Qi1SaHHHz1Pqc0w9hi/cR97zJntOrnon3OPkCxpSKGdLqzzsG78mtBHRF8madmDm+kZ/ymQ6azKoN+ued/Om/d7v/1CpSdxuWeoWouf24rQna+ZCwfp3lucjle+upGCji/uFWqr9iaYgcIkHrQH/BEPFduunuR7j0aBAGtD5nohHCUtXxHqmuFJGCTMRTgBMn2MTIHYOgYKtHkb3pnF8v9nj5B3xuo/eIqoZj0Nqfu3HqltqeV9hgNdK0McmkBzQY6GQtOIGPf/hfbuIYkXFtpmD9RX9nSG73zKSvko8subNbNF7putPvrofPfzuouX7nX7GO1ne9uayZn/u1haqfXL/os9696FxCC3eUOfdKnXyQVEQLPv304+2OCJiQjCbAL/webe/3HaO8xYmUC08Yu0MBqZZYmoNc+/RgHiux2yK7+SoqXMgcM7XDIgsBQjJ9yB47desgGMbCT7gBQ8uo2nKkJff1LagKVlS0U2lfVLC0lUqnqIZTCEeEABgu/HSi23RUMsaS3WHeI4TrKmahQEs90qarsdswduXaSQrIiI9thvrx+0mj3xC3ZkdGos0tVKQwpVsK0rawjYLGGQ6GAhajtrKg9WS0tJVbK9iMMYi5gZSFUsoWujSypPVkxThnW4rWcqKZCryh6QsLiia2AmT1ZNU+neKZsHvDMyJNeVbX65yKvNMOKr8DhXlU0E2UxLs/4CAo1BKqkoV8lzYE+ojERyi+mlxB20FKG5qxCU6QWrtTxKsuUqsPfMhp4ldEzTCdmLbys37KqfaUcjUUCK29LjEcPpnzfyqrTt+l9Q7Z6dwTNZx+Ntr8AdMW1GQPpmACBw6AuzbeSBksEZ50TUtAZAQYBO91XZcUcqjqUQ5bC9dRw44ifalJMhVKaKhP5qBUguFrqqsjw6lgYs9uvWuvms2H91SG/DLT6g5+qMqX5QGhXrf4cP7k5Ia9DuHpe+POWKeW5pZom90ZqskysupK7XK6i2vSUnyoyUIzQ
*/