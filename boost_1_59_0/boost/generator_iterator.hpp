// (C) Copyright Jens Maurer 2001.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// Revision History:

// 15 Nov 2001   Jens Maurer
//      created.

//  See http://www.boost.org/libs/utility/iterator_adaptors.htm for documentation.

#ifndef BOOST_ITERATOR_ADAPTOR_GENERATOR_ITERATOR_HPP
#define BOOST_ITERATOR_ADAPTOR_GENERATOR_ITERATOR_HPP

#include <boost/iterator/iterator_facade.hpp>
#include <boost/ref.hpp>

namespace boost {
namespace iterators {

template<class Generator>
class generator_iterator
  : public iterator_facade<
        generator_iterator<Generator>
      , typename Generator::result_type
      , single_pass_traversal_tag
      , typename Generator::result_type const&
    >
{
    typedef iterator_facade<
        generator_iterator<Generator>
      , typename Generator::result_type
      , single_pass_traversal_tag
      , typename Generator::result_type const&
    > super_t;

 public:
    generator_iterator() {}
    generator_iterator(Generator* g) : m_g(g), m_value((*m_g)()) {}

    void increment()
    {
        m_value = (*m_g)();
    }

    const typename Generator::result_type&
    dereference() const
    {
        return m_value;
    }

    bool equal(generator_iterator const& y) const
    {
        return this->m_g == y.m_g && this->m_value == y.m_value;
    }

 private:
    Generator* m_g;
    typename Generator::result_type m_value;
};

template<class Generator>
struct generator_iterator_generator
{
  typedef generator_iterator<Generator> type;
};

template <class Generator>
inline generator_iterator<Generator>
make_generator_iterator(Generator & gen)
{
  typedef generator_iterator<Generator> result_t;
  return result_t(&gen);
}

} // namespace iterators

using iterators::generator_iterator;
using iterators::generator_iterator_generator;
using iterators::make_generator_iterator;

} // namespace boost

#endif // BOOST_ITERATOR_ADAPTOR_GENERATOR_ITERATOR_HPP

/* generator_iterator.hpp
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
*/