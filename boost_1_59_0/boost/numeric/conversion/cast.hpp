//  (c) Copyright Fernando Luis Cacciola Carballal 2000-2004
//  Use, modification, and distribution is subject to the Boost Software
//  License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)

//  See library home page at http://www.boost.org/libs/numeric/conversion
//
// Contact the author at: fernando_cacciola@hotmail.com
//
//
//  Revision History
//
//    19 Nov 2001 Syntatic changes as suggested by Darin Adler (Fernando Cacciola)
//    08 Nov 2001 Fixes to accommodate MSVC (Fernando Cacciola)
//    04 Nov 2001 Fixes to accommodate gcc2.92 (Fernando Cacciola)
//    30 Oct 2001 Some fixes suggested by Daryle Walker (Fernando Cacciola)
//    25 Oct 2001 Initial boostification (Fernando Cacciola)
//    23 Jan 2004 Inital add to cvs (post review)s
//    22 Jun 2011 Added support for specializing cast policies via numeric_cast_traits (Brandon Kohn).
//
#ifndef BOOST_NUMERIC_CONVERSION_CAST_25OCT2001_HPP
#define BOOST_NUMERIC_CONVERSION_CAST_25OCT2001_HPP

#include <boost/detail/workaround.hpp>

#if BOOST_WORKAROUND(BOOST_BORLANDC, BOOST_TESTED_AT(0x582))

#  include<boost/numeric/conversion/detail/old_numeric_cast.hpp>

#else

#include <boost/type.hpp>
#include <boost/numeric/conversion/converter.hpp>
#include <boost/numeric/conversion/numeric_cast_traits.hpp>

namespace boost
{
    template <typename Target, typename Source> 
    inline Target numeric_cast( Source arg )
    {
        typedef numeric::conversion_traits<Target, Source>   conv_traits;
        typedef numeric::numeric_cast_traits<Target, Source> cast_traits;
        typedef boost::numeric::converter
            <
                Target,
                Source, 
                conv_traits,
                typename cast_traits::overflow_policy, 
                typename cast_traits::rounding_policy, 
                boost::numeric::raw_converter< conv_traits >,
                typename cast_traits::range_checking_policy
            > converter;
        return converter::convert(arg);
    }
    
    using numeric::bad_numeric_cast;
} // namespace boost

#endif

#endif

/* cast.hpp
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
*/