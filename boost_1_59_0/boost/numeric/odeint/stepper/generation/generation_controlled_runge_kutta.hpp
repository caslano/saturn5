/*
 [auto_generated]
 boost/numeric/odeint/stepper/generation/generation_controlled_runge_kutta.hpp

 [begin_description]
 Specialization of the controller factory for the controlled_runge_kutta class.
 [end_description]

 Copyright 2011-2012 Karsten Ahnert
 Copyright 2011-2012 Mario Mulansky

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */


#ifndef BOOST_NUMERIC_ODEINT_STEPPER_GENERATION_GENERATION_CONTROLLED_RUNGE_KUTTA_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_STEPPER_GENERATION_GENERATION_CONTROLLED_RUNGE_KUTTA_HPP_INCLUDED

#include <boost/numeric/odeint/stepper/controlled_runge_kutta.hpp>
#include <boost/numeric/odeint/stepper/generation/make_controlled.hpp>


namespace boost {
namespace numeric {
namespace odeint {


// controller factory for controlled_runge_kutta
template< class Stepper >
struct controller_factory< Stepper , controlled_runge_kutta< Stepper > >
{
    typedef Stepper stepper_type;
    typedef controlled_runge_kutta< stepper_type > controller_type;
    typedef typename controller_type::error_checker_type error_checker_type;
    typedef typename controller_type::step_adjuster_type step_adjuster_type;
    typedef typename stepper_type::value_type value_type;
    typedef typename stepper_type::value_type time_type;

    controller_type operator()( value_type abs_error , value_type rel_error , const stepper_type &stepper )
    {
        return controller_type( error_checker_type( abs_error , rel_error ) ,
                                step_adjuster_type() , stepper );
    }

    controller_type operator()( value_type abs_error , value_type rel_error ,
                                time_type max_dt, const stepper_type &stepper )
    {
        return controller_type( error_checker_type( abs_error , rel_error ) ,
                                step_adjuster_type(max_dt) , stepper );
    }
};


} // odeint
} // numeric
} // boost


#endif // BOOST_NUMERIC_ODEINT_STEPPER_GENERATION_GENERATION_CONTROLLED_RUNGE_KUTTA_HPP_INCLUDED

/* generation_controlled_runge_kutta.hpp
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
*/