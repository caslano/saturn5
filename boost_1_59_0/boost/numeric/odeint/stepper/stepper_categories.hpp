/*
 [auto_generated]
 boost/numeric/odeint/stepper/stepper_categories.hpp

 [begin_description]
 Definition of all stepper categories.
 [end_description]

 Copyright 2010-2011 Mario Mulansky
 Copyright 2010-2012 Karsten Ahnert

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */


#ifndef BOOST_NUMERIC_ODEINT_STEPPER_STEPPER_CATEGORIES_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_STEPPER_STEPPER_CATEGORIES_HPP_INCLUDED

#include <boost/type_traits/integral_constant.hpp>

namespace boost {
namespace numeric {
namespace odeint {


/*
 * Tags to specify stepper types
 *
 * These tags are used by integrate() to choose which integration method is used
 */

struct stepper_tag {};
// struct explicit_stepper_tag : stepper_tag {};
// struct implicit_stepper_tag : stepper_tag {};


struct error_stepper_tag : stepper_tag {};
struct explicit_error_stepper_tag : error_stepper_tag {};
struct explicit_error_stepper_fsal_tag : error_stepper_tag {};

struct controlled_stepper_tag {};
struct explicit_controlled_stepper_tag : controlled_stepper_tag {};
struct explicit_controlled_stepper_fsal_tag : controlled_stepper_tag {};

struct dense_output_stepper_tag {};


template< class tag > struct base_tag ;
template< > struct base_tag< stepper_tag > { typedef stepper_tag type; };
template< > struct base_tag< error_stepper_tag > { typedef stepper_tag type; };
template< > struct base_tag< explicit_error_stepper_tag > { typedef stepper_tag type; };
template< > struct base_tag< explicit_error_stepper_fsal_tag > { typedef stepper_tag type; };

template< > struct base_tag< controlled_stepper_tag > { typedef controlled_stepper_tag type; };
template< > struct base_tag< explicit_controlled_stepper_tag > { typedef controlled_stepper_tag type; };
template< > struct base_tag< explicit_controlled_stepper_fsal_tag > { typedef controlled_stepper_tag type; };

template< > struct base_tag< dense_output_stepper_tag > { typedef dense_output_stepper_tag type; };


} // odeint
} // numeric
} // boost


#endif // BOOST_NUMERIC_ODEINT_STEPPER_STEPPER_CATEGORIES_HPP_INCLUDED

/* stepper_categories.hpp
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
*/