/*
 *     [begin_description]
 *     Boost bind pull the placeholders, _1, _2, ... into global
 *     namespace. This can conflict with the C++03 TR1 and C++11 
 *     std::placeholders. This header provides a workaround for 
 *     this problem.
 *     [end_description]
 *        
 *     Copyright 2012 Christoph Koke
 *     Copyright 2012 Karsten Ahnert
 *           
 *     Distributed under the Boost Software License, Version 1.0.
 *     (See accompanying file LICENSE_1_0.txt or
 *     copy at http://www.boost.org/LICENSE_1_0.txt)
 * */

#ifndef BOOST_NUMERIC_ODEINT_UTIL_BIND_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_UTIL_BIND_HPP_INCLUDED


#include <boost/numeric/odeint/config.hpp>


#if BOOST_NUMERIC_ODEINT_CXX11 
    #include <functional>
#else
#define BOOST_BIND_NO_PLACEHOLDERS
#include <boost/bind.hpp>
#endif

namespace boost {
namespace numeric {
namespace odeint {
namespace detail {

#if BOOST_NUMERIC_ODEINT_CXX11 

using ::std::bind;
using namespace ::std::placeholders;


#else

// unnamed namespace to avoid multiple declarations (#138)
namespace {
using ::boost::bind;
boost::arg<1> _1;
boost::arg<2> _2;
}
// using ::boost::bind;
// using ::_1;
// using ::_2;

#endif

}
}
}
}





/*

// the following is the suggested way. Unfortunately it does not work with all compilers.

#ifdef BOOST_NO_CXX11_HDR_FUNCTIONAL
#include <boost/bind.hpp>
#else
#include <functional>
#endif


namespace boost {
namespace numeric {
namespace odeint {
namespace detail {

    
#ifdef BOOST_NO_CXX11_HDR_FUNCTIONAL

using ::boost::bind;
using ::_1;
using ::_2;

#else

using ::std::bind;
using namespace ::std::placeholders;

#endif


}
}
}
}*/

#endif // BOOST_NUMERIC_ODEINT_UTIL_BIND_HPP_INCLUDED

/* bind.hpp
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
*/