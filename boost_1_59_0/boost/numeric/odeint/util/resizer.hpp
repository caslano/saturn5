/*
 [auto_generated]
 boost/numeric/odeint/util/resizer.hpp

 [begin_description]
 Implementation of the resizers.
 [end_description]

 Copyright 2011-2012 Mario Mulansky
 Copyright 2011 Karsten Ahnert

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */


#ifndef BOOST_NUMERIC_ODEINT_UTIL_RESIZER_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_UTIL_RESIZER_HPP_INCLUDED


#include <boost/numeric/odeint/util/is_resizeable.hpp>
#include <boost/numeric/odeint/util/same_size.hpp>
#include <boost/numeric/odeint/util/resize.hpp>

namespace boost {
namespace numeric {
namespace odeint {

template< class ResizeWrappedState , class State >
bool adjust_size_by_resizeability( ResizeWrappedState &x , const State &y , boost::true_type )
{
    if ( !same_size( x.m_v , y ) )
    {
        resize( x.m_v , y );
        return true;
    }
    else
        return false;
}

template< class ResizeWrappedState , class State >
bool adjust_size_by_resizeability( ResizeWrappedState & /* x */ , const State & /* y */ , boost::false_type )
{
    return false;
}

struct always_resizer
{
    template< class State , class ResizeFunction >
    bool adjust_size( const State &x , ResizeFunction f )
    {
        return f( x );
    }
};


struct initially_resizer
{

    bool m_initialized;

    initially_resizer() : m_initialized( false )
    { }

    template< class State , class ResizeFunction >
    bool adjust_size( const State &x , ResizeFunction f )
    {
        if( !m_initialized )
        {
            m_initialized = true;
            return f( x );
        } else
            return false;
    }
};


struct never_resizer
{
    template< class State , class ResizeFunction >
    bool adjust_size( const State &/*x*/ , ResizeFunction /*f*/ )
    {
        return false;
    }
};


}
}
}

#endif // BOOST_NUMERIC_ODEINT_UTIL_RESIZER_HPP_INCLUDED

/* resizer.hpp
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
*/