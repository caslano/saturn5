/*
 [auto_generated]
 boost/numeric/odeint/util/detail/less_with_sign.hpp

 [begin_description]
 Helper function to compare times taking into account the sign of dt
 [end_description]

 Copyright 2012-2015 Mario Mulansky
 Copyright 2012 Karsten Ahnert

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_NUMERIC_ODEINT_INTEGRATE_DETAIL_LESS_WITH_SIGN_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_INTEGRATE_DETAIL_LESS_WITH_SIGN_HPP_INCLUDED

#include <limits>

#include <boost/numeric/odeint/util/unit_helper.hpp>

namespace boost {
namespace numeric {
namespace odeint {
namespace detail {

/**
 * return t1 < t2 if dt > 0 and t1 > t2 if dt < 0 with epsilon accuracy
 */
template< typename T >
bool less_with_sign( T t1 , T t2 , T dt )
{
    if( get_unit_value(dt) > 0 )
        //return t1 < t2;
        return t2-t1 > std::numeric_limits<T>::epsilon();
    else
        //return t1 > t2;
        return t1-t2 > std::numeric_limits<T>::epsilon();
}

/**
 * return t1 <= t2 if dt > 0 and t1 => t2 if dt < 0 with epsilon accuracy
 */
template< typename T >
bool less_eq_with_sign( T t1 , T t2 , T dt )
{
    if( get_unit_value(dt) > 0 )
        return t1-t2 <= std::numeric_limits<T>::epsilon();
    else
        return t2-t1 <= std::numeric_limits<T>::epsilon();
}

template< typename T >
T min_abs( T t1 , T t2 )
{
    BOOST_USING_STD_MIN();
    BOOST_USING_STD_MAX();
    if( get_unit_value(t1)>0 )
        return min BOOST_PREVENT_MACRO_SUBSTITUTION ( t1 , t2 );
    else
        return max BOOST_PREVENT_MACRO_SUBSTITUTION ( t1 , t2 );
}

template< typename T >
T max_abs( T t1 , T t2 )
{
    BOOST_USING_STD_MIN();
    BOOST_USING_STD_MAX();
    if( get_unit_value(t1)>0 )
        return max BOOST_PREVENT_MACRO_SUBSTITUTION ( t1 , t2 );
    else
        return min BOOST_PREVENT_MACRO_SUBSTITUTION ( t1 , t2 );
}
} } } }

#endif

/* less_with_sign.hpp
E02b8qq4UV5DYjU+lmpA1NVdT8umsaVtIwGYWgmCy2zTaLVJD1kvp4rpa12k+QvxLZTp06Xya8rZvHVcjHUFyWMU+HbPhAK1s5Q1YCgkuiOGqfI/k+TaRg2Ph93n6AXRyhjLJhA45qKQebP+K/yaXvknPUU/8aLKH933eYmPLCG4+W1/o5dY41ziCYiZlOXHwJNmwcYjmHtWbEq+2Md8BtQabCbVGSJp5akH4ZMOqX8vhHKW9RLTaGa9b/wpjj2Ysy5ZsNTU44oYRvmKvl4Rgvrq6YxA9PjVdYMf7e8K5W6V5wicuiZ1+NR0ilRe+c4hnO0wSaJ1S1eKXM1I6VrU624HD66XhTUdXzbE842RtGksZHMV4139q/3tXReAwQt3Qci7EcQF2cQ+Q0feUw0PZEpjiJP/+gTvP1yqbMAMmIQtB8WRIdztnX6YE1O9GBwzvZE56D0RUIN0wlHABMd4J94FLU0k5tPTu7vu5bnXOkRmjtRhJxtPeoWTnCnz8kXCfQjS3QyEMX60Kxz3Gp1xlxhtnmyt1ygky5cfcRtH8/HXfUujkiYvtdEYXF7iU7yJO11XDyJsgr8fNc8DyNb1bnmGVrdiTGusWsvWsJ3ZJ47vbnnbuzQdAOQFQwJ8iX9erxRxev65iodoTgH7wWfsdMTs63gmT1lea/AJn4MHqW/iOYcmtYJvhlfhFi8445jVCFmqnV/Yucgg4qYLwFb+wlbtHCkaphk2fbCoeX2WN3duhtembNlwXZTcAyhIymNr05Ac2HryvT7RlcohTbyF8JNSHj7kbjzMbDwIinsU2cPOCTfje8cMTxRVG2cLEVtZV4RYWE9CvCf5Ifz6S/cJYQzaSgfGYaE/f2UxM/0y9UDr5fptqcX4iQ5gvJs9VH1RdyK97niLHu4M9ONPd2fBkzvcDlQYbF1u8KnddHf70Gx93g0mtL3+DvT+NKpj+IX0rr61Ggz/cv4SabP81OC/zX9puzJE+Pk5OWL8NvxwqP34PF9ovKV1/Dp+Wa0+2mXm+kmWuzxqgjCfhNq+UpTprgwLQXxTMR44OXnt5TMw4kEl9J8pAh2NwXwwRTLmAgXVJJPWME7hrQfzJRR1iR9FVC3uq6ll+qu4aKIAStcg3VT2P6D/MkS+K6LLjTQW/oePvpIRWd3L2Xr58RlXtG62FxqeypXOsIXtJM+iyBeeZdI60CYIe7iiRdDZWbOyvHZgKbqxlMqu6GAPOIs9Tmgvk09+I5bU+Qx8VdAYcjX4j9UzwosYQV+6PnG1VooaRdn0O0QycFAvzmf7QNG9pvZZBsF1JdXOIRe1SgHjy8Y8LgDGu512fKp0eqH8ZLX8ZZ+Nd/nGutTnDFNSo0NoSkP4y+7M4Z1MHHTU7k39bFcs0Y4wg2yV7ERg6hcHhywNiI2Q88i6P9c1c4tXi5xbk7wevYciXAR/0+vcGQ9xQqNRAcDUDpvuPJa1JWU13vsSKHqf6rnOH8yilzRRjsnErYwnJFnLRA/+LSDcquCDDHVlgxJyo73VPSW2xrpgYDtdhC8f2wTq/rWvzxnOn9EPJwwPkXu/Z40SNl1dp2yfsZgz5gDkXLoRhUkafOrO/BjTLEyh71by8FXHCj6KPw0setnt0esh5is3LMaeWBxLoiIXjl1pTwxqa68EULkZ1jb9jTdK5kWBgkvVkvUkNzzdSf6IjXvwwPjAEvQ0EGjV1D8J6zhvV/yFc/Cr9KSrjiOrjR15lSwJUTZFViYSzfGrkdp+uWkDiuicZxIcb8j6CWoNmADd61wDaVMF/6pInQKVT59PVbvBOTyy0l7XrMS4V8nuitdFElre5PRUaqwMnUTkZ1hUznAAByloAOQAmwYOaehFVWlXSCexXykRe4q9EJW2s7C4T+yxEHkI7sXdYCjNE2XS1JzVFKlIAe8fhTcMK8S0T7vEN1iufxPia756zRfhnctb9zUic+8quwTaqfm45z/SKPPSXIf0irDdO7YV4cZn7/FbF1guJVjuTBgrO5fSTMbyS7AGKmjC1ryS9c9i5XNL34R4w0rmXcVFPA8ZrSwbBNPE4XVjQnG0DNmaM6rVd7DbeqiK8E9vOPyAsjNW7lfIE08jkjw7ivQWmI/0Y8J/gnEbG5svc+WUNAw5KFP5lDs+QVcFq8A9i6JYLGVoku2NGTQnxcojE5Fd8ekOZo0tMidRE8jLyF3CD6v1QSMLlk6Z6a6+gGZoSimSdodUxcewkXhJFQWjPC+mNGgZb2Al5PKrElHVE28cdPjjs45Hm2rbQlKN0hMIpnZHPAQPWNolOgndwSgmCV9XXPjqVoeG75qo9968C5jSOIAV8mizgOsPqmPT3rxHpv+J/Qc1BosQ1NYYZfWfookNv6yx+qqojmLcA4fOsUsE+whjwo6qAUfton2Cc52EFlYZYbnEaeIE6R2ObS9Rj1Z2KefCBU3RXaOGAVqAH3TDJc2Ilhv+/fM+UsWvV8eWdgpoUkjDtwlqwnF0avz5aXG4NgW6g8PRVMTgI9P6hUYmXV1IIYZ4YexQJc5xv7tPR7X04zsv32XI7L/Pt1Kjey3y8vfeg/e0vuFkXk330O34mOXalvHcgvJsUVOP+pTjHyDpYSL6FQXOvOLybHmA+c8jVnvwZJ3QeCpY48iKISviMI0NstQBSV3zYRjDotr4Cnd2T09+jo0vrdiCkuI8lHRpKUa8YBowmxZhul26Tleqsv6Joii8hqqdhIl+hBN2/YEFLj1emTyGT5alD6y7FAI5/8JMtpBKB/xKh/REvMZE4hli6n1h3rvRdVTKIwa6tD0uSFt/d374QwEYlijkbLOMF1lwH+9Uv54Mw+NFleCIkmoz3aXZeoZt5qIiRManNCQHctBzZwDsIPpK663QxQ9URc87ZpjcpPDnQUVPIrK2HPqo55lOCsTc7nAiihuC483mtmVTMfzemDbXgbGETLM9KhrOyju74VUp5yj2Wzu8YU+scZS3csp12+K3N84hE9phHTuLC4/nzXAvrHuTQe88VZiglSgvQgyLGY8U5PybcNWNPFp5oeBQhi7BxRm5wYEB2buVOXYc7sRdjr0DGGdkiva1KuHI8xPqKLiEmIP6doQ4m4LIUbZausYVXFWXheV8TwFQD0uf0+QeJ2fZcWnVxAdQw6b+r6w+c2huegbjnQIMm6fi1shuL9B0NtRbgOcnKNiqGC/hqJKaI+yH04FoIlNFBZAqwTezOuyTBRFNyvw2THeekZJoqwFm2snsGurSeDXxBJNhYxc+6OSN4Htdb0KVEHqVjAODdlSDockd6QJo1zn4YozgqjMP2nsjT3X8IW1EuT0neorJGMkwI6Untp4TUCwyQ/T2PWXKbqbuN21G1re5njEtyg8U/DewVsFeL1Y0aRDo3QbhawJvAt4fQIvpwAzvwcz2vxWvHfX1cY+07RzdNjhq678mUfVzXQDg/AJDulQE5uIoxgA335tV9XDA5ZAt+SFKP8xsv+IYzHBvXlHsPBi3MuHFShjScPyKrvm4qh7pAVUx1+9CT9xRYJHM/ixGJlBawmVRpNQ5b65YVujgTz8t6E89QKUOsHtoQ97vXzlKNu0urtZ1ZHJReltFab3T+sMvdVDo6A4zCCnK4YchpUS/WWcurMW3U+GvXKNic7n6MhGLbWz4cvw4wEssD+nltveDBiSTDe6INo85fhbbH8HorDgUwoMPWX12N8BHGMiT7ZgTIinHCEccCrR2TGyfwTvHjAhHq90C7nb+ADX879wHMgPRb/3v5xP4Fb1uuxhJP9k1tsQfw0HZSLpjYPrGIwb+glfx1vzmQIJiToz8OAMYs9hCJXdgWI9+sQS1PdN+/nkVdMCmGMUXRJvhiVvKzDhoPPr5sIMJt7RKDmqaDn4a0bTw1zTKw1YlEt/gvV44DnoZoBYodXY6RXgMlcoSRj7EIzTiej5cEf2kSsdo9NA06vV7oPJanbGRt8bxSQR5UEBdBJd91GtvIY5WTBWk5Vu1TIx+MDCkcHMsiwEVkr1K5Lzl9xp7P4BFbNR06JJyG1QN+UuwOCOtOAH2r6MRorIxLenizy9PGR1DlKe687ZzfO1WMja5Pf2eZo5e1N5lUpiQsqsSlPu7jvfDYLzmqfUjpn70+Zk4c3sy7P4Ywt/Q2oTAq2e9ambzUfXIeRhfuO2cg8T80XAgOxB0Sii6hcE2MwKt4m/OWO63PmSGmbMyEepps8pftBNlurpl2Qra1v5LfYsvGELpmRTPlNWLufE6rhuEhf5BoWrZCwNaEP7jgY62JFZMkQYODent1Ea/Er2QeRzGe6/BPVMP3gk9c9b0RdyqfggF9yMJ1iIj1tEMy35F/qRkE1C+E6sWi1jU/4gvOGJiU6a1HjH1HmF0Bi8vK/LA+VZqxvnURng1p/o7GJb6qVZwqikFxODJYrXxC2N464LY1J4LrqamOxAtrhvric4sNHuVIDmn1ieg7wOybw+Dj4F/Q8RUmRwwgQXTSxOYGCiqh383N55H2VX/uy+WzJoD0W2qWNI0dTgDd4Eppqo5r/uSoBzck5aK8vU/iNu3ZPvOJ1MA+xZ96OjR1fsGNNlLjvjC4ColCicYmLC3KYB4dkMstR68NhEFp6aOUWlwmvGRXFyI/Fzi133Y6XzN8bqJc7vhfN1+5DVENMjr6FgeXhPmODAui1Et5pT73HzrMN1SANL8PQtz6Ri2tw4oQo3dirtwhh/8fWRAWh3olcvTZ8LUL2TMQNonHzdmOkf63LZDwPIaf7MXF8xl5eJ2Nj/8gOV9y/IQI+VHgtgM0esGciMuSu6MXT3X8A81dlrWe+ZgGfAkbANQGvd9gjeijEVlG5DBiDUHCJ1YkGhQuL2CyNhvSMKTRSjOopxGrFOeoUeIJqLWjBfru54zk8gxGJnxEdNzTM6XP9syA/tU8Zqww9md40OvZZjnj45S81MqWiy06lVay8J3SFP5KVWHwNcfXLi83x/QzTo90IHVlIP+WplhUVeyA6/aD1DgazBxYJh5MLrTrpqVRAuEH9CcUSB0p/+ST6QljHRoCsykoM9JKRPV08kkxuxusjVVVNsTeMToMI2iya9x0EfRXAK3jyAeNEAIHESQnEfgqo6zq2bQQa1He27Ve0AQJuSl2sPtmMNnyApBxQD+Dy3V7NUwXBANTTOqbsEiAXpziV7/aBtMFbonmjMOoJaPh7KBOYjn2cfpDLCtcsvHB0hc4YU8qBv42CCYLhU/pnyCRhgqmmaVbrd+F6sjRKeoUFIpQBFCN6jVtDl9vQGN+u6r3o4Jn251BMsA3w5kfnrVNRmALZhjc1DJPuSzuNx3CXEVxLxZELlpLrFyOQbVzjtGnqM26Xi+AN6GMJRx5rrzgqK7rmhd+P3iiWsjvVLkEZSTL2VJQResZgiHqMiu0nEf8pl3a/eaC3BdnYvbOIxncM33ldOQB/i+MRETVlA8kr7E0Q2tv3q9kPdAWujgml3lBk8WEo3iw8dw3i2kAZs32lV2JJCbi40NjCGKr7GxoVr4NI/ARehEVM39vLisc15/2tEVBiEzuH0jnJomslckpYf4zXRO48ep1tGewdna2k+V0KSgfdxiWqu1wg7m8EQxVwNgN3FiaxXhe7hGrctaaL3xUiPHVlE7x5YaJ6/vfmyeaxuLY2O/j4WH7jcY366vHfkHeg9i4P6YnGcbSLw0tRUDThZPNQerJm4TMSbPWeCQV+oQ7QpEU0kwfWLC4auGP6DXS67fztVC672NHLOkwZt68klsa25GPafM9aedeNHM5DmdY/p+sskE/zFMA0pCt0YxmddsX25UrFQB8JmccdsGfd0YByhGCVzncim1NnznaoKpauZ2j8L9n22dMWxvnFaDjNBOemDXdBrs8Bxl241Y+8+DEot6nhKnD++m8Jf8YSaUcvi4G/m484E5anLZHeW5cTXAOsARYe+SAhUHyZRqgagYM0gmMUNzOJ55iEqMlWsZbmtve4HHXc8X10ip4qwDzd5lnZyQPcuT2y5ZgTdW1Hqt0TlflMxvQZ7AixaoMgqkEzj8WxLKDhBbtAjvsEZnXFiq5Li3Wazn17AuGL/er+jY8OdPlICLEEKRkKWGDyiMzAAIIUW+FWT/fImla9Vu5f5sCJf9Cv0sLrFEJ1jNrFhuYCVKkJYGc622zy3NqRlzRj7kD6Euc8oaH9ohR4GnE+7GzBGR9/BpG2wR9t/9Y4G6f0YRmW8UgVoA0sbWwA464MQBaSC2EGcumcE1q3ynBTA6xaHZg5N1hm4udk/X1XD1VgBQyoHEdRYIdGwAqpPHcoI53gaC1pjNyS87iyNoQdH8ghMHkUeMdA6jJLFSEXNC579y29ZqQC4RJAcD/4UZxrbMWWb42dKpYyDL68uVobODktOMNZO8bzosDhNWsMcqF811KqhtdVnEn8RiI12EC1hWFwrkAhkbYH1ZVjmimGUShGXR0zEwCarSfLazrGd2qAz1GIHERlGTUMX//HAAT03SOKvg7KCWTc4EG6AECZixj4SqSuNEyDNV1eCc4R7sK9erxQ3gsmVvU2vYeAImCR9w2Yw+JThssi2B7yHt5qlQUhq2t5z4oKd80jTX6qEmYThqTiQDwKgZ9jnezHmLsBpKxNbnOEj/m3WXGMR0ZdOhk7DKZtKCFwvkIQ1aRizBLGJJBOU3RrlWyGWKLRa3A5GNpgoQ66UXsEId/jnfjcB+bZa/UwVPr/ZWdp0ZxJudfDaz2uZTunyhtiA8G9ZbvPP8oIwmcWjjcHZj/zAXCGzLREoVQXbspMzFOYvjPDz40lSAxrKXzsR91spa2mOPsYOIEZQVaGr0sJgbA8UjK3X4TAnZjmz4tkrm2OwRK/j0R/pEuVpGvWdpvrDiG69dfOlor27LsUS+Zp9ELT7dK55YDqXSWw5sGTNr6zuYQUU1mVw9ug1gMS7TlP2Bp9ykq5IR5CQfhorPCVtCVAn1Q6rYVaulWyUWYhMVwiocGQ1gvgf58hOpuVBIHj/cJtFSdpd9YsgDLjp/YGjfmrlHShlAdvxGo/qX1b4U8PVpdf7+o6awHuoO0GiHLU/JzNQDuOoavJcSqvtyNKXDBmRym2VvAh2cBtlPh/Oxf/m9O0kHLn2iZ0+KKgsKmI3hgQ9qT0z6G/4atPrPt73LDaG0ac0sROSrWsEyVbrGsaJmtSzImXN3JHLhfrEfMQ+1F2BKJg7sSarMX/c8COc3blAmRS57BrV48ikoh5LPuOlBkIr6DOgY+fbxMLN8tVwLCryztAnEPAytKE45qRZDQv5ld1iylwsa+huuuN+ehlBV3pec9qwzXUBtA0fQ03TO6exGCwmJPY/8nXXW7AHLIhsm9gIof4OPHwHvuhYDp8B5ZueUQKErYudyfX+DrRmELnDUm2xLHpOohbj2AvRcxs2PgzjAvp4f9JNYcJqCQAt+YM2SHwMi7uAVtjJj1+3wexVoH9v7RuBNbBc34O66xwJQ39wRAAMrlH4ewQ6JVc6LASH3tDe6V72rWwheHAG1zZyILrwSuu10GvSqTegrM22KWTbuqd+D6BcsPRZ9wwycbq/0ufoFZGVYfj/HqIZm15QjfBWSoBHqWl/FwdkyTltldCG2qCnqEJ4e1+38jaia479cN6n/pD5a8NNa0iAXOJMhg6MX9ldMEzZEEyBE
*/