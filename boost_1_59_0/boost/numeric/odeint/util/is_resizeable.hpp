/*
 [auto_generated]
 boost/numeric/odeint/util/is_resizeable.hpp

 [begin_description]
 Metafunction to determine if a state type can resized. For usage in the steppers.
 [end_description]

 Copyright 2011-2012 Karsten Ahnert
 Copyright 2011 Mario Mulansky

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */


#ifndef BOOST_NUMERIC_ODEINT_UTIL_IS_RESIZEABLE_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_UTIL_IS_RESIZEABLE_HPP_INCLUDED


#include <vector>

#include <boost/type_traits/integral_constant.hpp>
#include <boost/type_traits/remove_reference.hpp>
#include <boost/fusion/include/front.hpp>
#include <boost/fusion/include/is_sequence.hpp>

#include <boost/mpl/find_if.hpp>
#include <boost/mpl/end.hpp>
#include <boost/mpl/placeholders.hpp>
#include <boost/mpl/if.hpp>
#include <boost/type_traits/is_same.hpp>

namespace boost {
namespace numeric {
namespace odeint {
   
/*
 * by default any type is not resizable
 */
template< typename Container , typename Enabler = void >
struct is_resizeable_sfinae : boost::false_type {};

template< typename Container >
struct is_resizeable : is_resizeable_sfinae< Container > {};



/*
 * specialization for std::vector
 */
template< class V, class A >
struct is_resizeable< std::vector< V , A  > > : boost::true_type {};


/*
 * sfinae specialization for fusion sequences
 */
template< typename FusionSequence >
struct is_resizeable_sfinae<
    FusionSequence ,
    typename boost::enable_if< typename boost::fusion::traits::is_sequence< FusionSequence >::type >::type >
{
    typedef typename boost::mpl::find_if< FusionSequence , is_resizeable< boost::mpl::_1 > >::type iter;
    typedef typename boost::mpl::end< FusionSequence >::type last;

    typedef typename boost::mpl::if_< boost::is_same< iter , last > , boost::false_type , boost::true_type >::type type;
    const static bool value = type::value;
};






} // namespace odeint
} // namespace numeric
} // namespace boost



#endif // BOOST_NUMERIC_ODEINT_UTIL_IS_RESIZEABLE_HPP_INCLUDED

/* is_resizeable.hpp
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
*/