/*
 [auto_generated]
 boost/numeric/odeint/external/mtl4/mtl4_algebra_dispatcher.hpp

 [begin_description]
 specialization of the algebra dispatcher for mtl4
 [end_description]

 Copyright 2013 Karsten Ahnert
 Copyright 2013 Mario Mulansky

 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or
 copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_NUMERIC_ODEINT_MTL4_MTL4_ALGEBRA_DISPATCHER_HPP_INCLUDED
#define BOOST_NUMERIC_ODEINT_MTL4_MTL4_ALGEBRA_DISPATCHER_HPP_INCLUDED

#include <boost/numeric/mtl/mtl.hpp>

#include <boost/numeric/odeint/algebra/vector_space_algebra.hpp>
#include <boost/numeric/odeint/algebra/algebra_dispatcher.hpp>

namespace boost {
namespace numeric {
namespace odeint {

template<typename Value, typename Parameters>
struct algebra_dispatcher< mtl::dense_vector< Value , Parameters > >
{
    typedef vector_space_algebra algebra_type;
};

template<typename Value, typename Parameters>
struct algebra_dispatcher< mtl::dense2D< Value , Parameters > >
{
    typedef vector_space_algebra algebra_type;
};

template<typename Value , size_t BitMask , typename Parameters>
struct algebra_dispatcher< mtl::morton_dense< Value , BitMask, Parameters > >
{
    typedef vector_space_algebra algebra_type;
};

template<typename Value, typename Parameters>
struct algebra_dispatcher< mtl::compressed2D< Value , Parameters > >
{
    typedef vector_space_algebra algebra_type;
};

// specialization of infinity norm calculation

template<typename Value, typename Parameters>
struct vector_space_norm_inf< mtl::dense_vector< Value , Parameters > >
{
    typedef Value result_type;
    Value operator()( const mtl::dense_vector< Value , Parameters > &x ) const
    {
        return mtl::infinity_norm(x);
    }
};

template<typename Value, typename Parameters>
struct vector_space_norm_inf< mtl::dense2D< Value , Parameters > >
{
    typedef Value result_type;
    Value operator()( const mtl::dense2D< Value , Parameters > &x ) const
    {
        return mtl::infinity_norm(x);
    }
};

template<typename Value , size_t BitMask , typename Parameters>
struct vector_space_norm_inf< mtl::morton_dense< Value , BitMask , Parameters > >
{
    typedef Value result_type;
    Value operator()( const mtl::morton_dense< Value , BitMask , Parameters > &x ) const
    {
        return mtl::infinity_norm(x);
    }
};

template<typename Value, typename Parameters>
struct vector_space_norm_inf< mtl::compressed2D< Value , Parameters > >
{
    typedef Value result_type;
    Value operator()( const mtl::compressed2D< Value , Parameters > &x ) const
    {
        return mtl::infinity_norm(x);
    }
};

}
}
}

#endif // BOOST_NUMERIC_ODEINT_MTL4_MTL4_ALGEBRA_DISPATCHER_INCLUDED

/* mtl4_algebra_dispatcher.hpp
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
*/