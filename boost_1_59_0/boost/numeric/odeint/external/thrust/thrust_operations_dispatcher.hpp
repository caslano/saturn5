/*
  [auto_generated]
  boost/numeric/odeint/external/thrust/thrust_operations_dispatcher.hpp

  [begin_description]
  operations_dispatcher specialization for thrust
  [end_description]

  Copyright 2013-2014 Karsten Ahnert
  Copyright 2013-2014 Mario Mulansky

  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or
  copy at http://www.boost.org/LICENSE_1_0.txt)
*/


#ifndef BOOST_NUMERIC_ODEINT_EXTERNAL_THRUST_THRUST_OPERATIONS_DISPATCHER_HPP_DEFINED
#define BOOST_NUMERIC_ODEINT_EXTERNAL_THRUST_THRUST_OPERATIONS_DISPATCHER_HPP_DEFINED

#include <thrust/host_vector.h>
#include <thrust/device_vector.h>

#include <boost/numeric/odeint/external/thrust/thrust_operations.hpp>
#include <boost/numeric/odeint/algebra/operations_dispatcher.hpp>

// support for the standard thrust containers

namespace boost {
namespace numeric {
namespace odeint {

// specialization for thrust host_vector
template< class T , class A >
struct operations_dispatcher< thrust::host_vector< T , A > >
{
    typedef thrust_operations operations_type;
};

// specialization for thrust device_vector
template< class T , class A >
struct operations_dispatcher< thrust::device_vector< T , A > >
{
    typedef thrust_operations operations_type;
};

} // namespace odeint
} // namespace numeric
} // namespace boost

// add support for thrust backend vectors, if available

#include <thrust/version.h>

#if THRUST_VERSION >= 100600

// specialization for thrust cpp vector
#include <thrust/system/cpp/vector.h>
namespace boost { namespace numeric { namespace odeint {
    template< class T , class A >
    struct operations_dispatcher< thrust::cpp::vector< T , A > >
    {
        typedef thrust_operations operations_type;
    };
} } }

// specialization for thrust omp vector
#ifdef _OPENMP
#include <thrust/system/omp/vector.h>
namespace boost { namespace numeric { namespace odeint {
    template< class T , class A >
    struct operations_dispatcher< thrust::omp::vector< T , A > >
    {
        typedef thrust_operations operations_type;
    };
} } }
#endif // _OPENMP

// specialization for thrust tbb vector
#ifdef TBB_VERSION_MAJOR
#include <thrust/system/tbb/vector.h>
namespace boost { namespace numeric { namespace odeint {
    template< class T , class A >
    struct operations_dispatcher< thrust::tbb::vector< T , A > >
    {
        typedef thrust_operations operations_type;
    };
} } }
#endif // TBB_VERSION_MAJOR

// specialization for thrust cuda vector
#ifdef __CUDACC__
#include <thrust/system/cuda/vector.h>
namespace boost { namespace numeric { namespace odeint {
    template< class T , class A >
    struct operations_dispatcher< thrust::cuda::vector< T , A > >
    {
        typedef thrust_operations operations_type;
    };
} } }
#endif // __CUDACC__

#endif // THRUST_VERSION >= 100600


#endif // BOOST_NUMERIC_ODEINT_EXTERNAL_THRUST_THRUST_OPERATIONS_DISPATCHER_HPP_DEFINED


/* thrust_operations_dispatcher.hpp
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
*/