/*
  [auto_generated]
  boost/numeric/odeint/external/vexcl/vexcl_norm_inf.hpp

  [begin_description]
  vector_space_norm_inf specialization for vexcl
  [end_description]

  Copyright 2009-2013 Karsten Ahnert
  Copyright 2009-2013 Mario Mulansky

  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or
  copy at http://www.boost.org/LICENSE_1_0.txt)
*/


#ifndef BOOST_NUMERIC_ODEINT_EXTERNAL_VEXCL_VEXCL_NORM_INF_HPP_DEFINED
#define BOOST_NUMERIC_ODEINT_EXTERNAL_VEXCL_VEXCL_NORM_INF_HPP_DEFINED

#include <map>
#include <algorithm>

#include <vexcl/vector.hpp>
#include <vexcl/multivector.hpp>
#include <vexcl/reductor.hpp>

#include <boost/numeric/odeint/algebra/vector_space_algebra.hpp>

namespace boost {
namespace numeric {
namespace odeint {

// specialization for vexcl vector
template <typename T>
struct vector_space_norm_inf< vex::vector<T> > {
    typedef T result_type;

    T operator()( const vex::vector<T> &x ) const {
        const auto &max = vex::get_reductor<T, vex::MAX>(x.queue_list());

        return max( fabs(x) );
    }
};

// specialization for vexcl multivector
template <typename T, size_t N>
struct vector_space_norm_inf< vex::multivector<T, N> > {
    typedef T result_type;

    T operator()( const vex::multivector<T, N> &x ) const {
        const auto &max = vex::get_reductor<T, vex::MAX>(x.queue_list());

        // Reducing a multivector results in std::array<T, N>:
        auto m = max( fabs(x) );

        // We will need to reduce it even further:
        return *std::max_element(m.begin(), m.end());
    }
};


} // namespace odeint
} // namespace numeric
} // namespace boost


#endif // BOOST_NUMERIC_ODEINT_EXTERNAL_VEXCL_VEXCL_NORM_INF_HPP_DEFINED

/* vexcl_norm_inf.hpp
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
*/