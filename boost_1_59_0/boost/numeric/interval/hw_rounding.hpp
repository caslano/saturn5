/* Boost interval/hw_rounding.hpp template implementation file
 *
 * Copyright 2002 Hervé Brönnimann, Guillaume Melquiond, Sylvain Pion
 * Copyright 2005 Guillaume Melquiond
 *
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or
 * copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_NUMERIC_INTERVAL_HW_ROUNDING_HPP
#define BOOST_NUMERIC_INTERVAL_HW_ROUNDING_HPP

#include <boost/config.hpp>
#include <boost/numeric/interval/rounding.hpp>
#include <boost/numeric/interval/rounded_arith.hpp>

#define BOOST_NUMERIC_INTERVAL_NO_HARDWARE

// define appropriate specialization of rounding_control for built-in types
#if defined(__x86_64__) && !defined(BOOST_NO_FENV_H)
#  include <boost/numeric/interval/detail/c99_rounding_control.hpp>
#elif defined(__i386__) || defined(_M_IX86) || defined(__BORLANDC__) && !defined(__clang__) || defined(_M_X64)
#  include <boost/numeric/interval/detail/x86_rounding_control.hpp>
#elif defined(__i386) && defined(__SUNPRO_CC)
#  include <boost/numeric/interval/detail/x86_rounding_control.hpp>
#elif defined(powerpc) || defined(__powerpc__) || defined(__ppc__)
#  include <boost/numeric/interval/detail/ppc_rounding_control.hpp>
#elif defined(sparc) || defined(__sparc__)
#  include <boost/numeric/interval/detail/sparc_rounding_control.hpp>
#elif defined(alpha) || defined(__alpha__)
#  include <boost/numeric/interval/detail/alpha_rounding_control.hpp>
#elif defined(ia64) || defined(__ia64) || defined(__ia64__)
#  include <boost/numeric/interval/detail/ia64_rounding_control.hpp>
#endif

#if defined(BOOST_NUMERIC_INTERVAL_NO_HARDWARE) && !defined(BOOST_NO_FENV_H)
#  include <boost/numeric/interval/detail/c99_rounding_control.hpp>
#endif

#if defined(BOOST_NUMERIC_INTERVAL_NO_HARDWARE)
#  undef BOOST_NUMERIC_INTERVAL_NO_HARDWARE
#  error Boost.Numeric.Interval: Please specify rounding control mechanism.
#endif

namespace boost {
namespace numeric {
namespace interval_lib {

/*
 * Three specializations of rounded_math<T>
 */

template<>
struct rounded_math<float>
  : save_state<rounded_arith_opp<float> >
{};

template<>
struct rounded_math<double>
  : save_state<rounded_arith_opp<double> >
{};

template<>
struct rounded_math<long double>
  : save_state<rounded_arith_opp<long double> >
{};

} // namespace interval_lib
} // namespace numeric
} // namespace boost

#endif // BOOST_NUMERIC_INTERVAL_HW_ROUNDING_HPP

/* hw_rounding.hpp
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
*/