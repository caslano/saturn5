/* Boost interval/limits.hpp template implementation file
 *
 * Copyright 2000 Jens Maurer
 * Copyright 2002-2003 Hervé Brönnimann, Guillaume Melquiond, Sylvain Pion
 *
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or
 * copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_NUMERIC_INTERVAL_LIMITS_HPP
#define BOOST_NUMERIC_INTERVAL_LIMITS_HPP


#include <boost/config.hpp>
#include <boost/limits.hpp>
#include <boost/numeric/interval/detail/interval_prototype.hpp>

namespace std {

template<class T, class Policies>
class numeric_limits<boost::numeric::interval<T, Policies> >
  : public numeric_limits<T>
{
private:
  typedef boost::numeric::interval<T, Policies> I;
  typedef numeric_limits<T> bl;
public:
  static I min BOOST_PREVENT_MACRO_SUBSTITUTION () BOOST_NOEXCEPT_OR_NOTHROW { return I((bl::min)(), (bl::min)()); }
  static I max BOOST_PREVENT_MACRO_SUBSTITUTION () BOOST_NOEXCEPT_OR_NOTHROW { return I((bl::max)(), (bl::max)()); }
  static I epsilon() BOOST_NOEXCEPT_OR_NOTHROW { return I(bl::epsilon(), bl::epsilon()); }

  BOOST_STATIC_CONSTANT(float_round_style, round_style = round_indeterminate);
  BOOST_STATIC_CONSTANT(bool, is_iec559 = false);

  static I infinity () BOOST_NOEXCEPT_OR_NOTHROW { return I::whole(); }
  static I quiet_NaN() BOOST_NOEXCEPT_OR_NOTHROW { return I::empty(); }
  static I signaling_NaN() BOOST_NOEXCEPT_OR_NOTHROW
  { return I(bl::signaling_NaN(), bl::signaling_Nan()); }
  static I denorm_min() BOOST_NOEXCEPT_OR_NOTHROW
  { return I(bl::denorm_min(), bl::denorm_min()); }
private:
  static I round_error();    // hide this on purpose, not yet implemented
};

} // namespace std


#endif // BOOST_NUMERIC_INTERVAL_LIMITS_HPP

/* limits.hpp
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
*/