/* Boost interval/policies.hpp template implementation file
 *
 * Copyright 2003 Guillaume Melquiond
 *
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or
 * copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_NUMERIC_INTERVAL_POLICIES_HPP
#define BOOST_NUMERIC_INTERVAL_POLICIES_HPP

#include <boost/numeric/interval/interval.hpp>

namespace boost {
namespace numeric {
namespace interval_lib {

/*
 * policies class
 */

template<class Rounding, class Checking>
struct policies
{
  typedef Rounding rounding;
  typedef Checking checking;
};

/*
 * policies switching classes
 */

template<class OldInterval, class NewRounding>
class change_rounding
{
  typedef typename OldInterval::base_type T;
  typedef typename OldInterval::traits_type p;
  typedef typename p::checking checking;
public:
  typedef interval<T, policies<NewRounding, checking> > type;
};

template<class OldInterval, class NewChecking>
class change_checking
{
  typedef typename OldInterval::base_type T;
  typedef typename OldInterval::traits_type p;
  typedef typename p::rounding rounding;
public:
  typedef interval<T, policies<rounding, NewChecking> > type;
};

/*
 * Protect / unprotect: control whether the rounding mode is set/reset
 * at each operation, rather than once and for all.
 */

template<class OldInterval>
class unprotect
{
  typedef typename OldInterval::base_type T;
  typedef typename OldInterval::traits_type p;
  typedef typename p::rounding r;
  typedef typename r::unprotected_rounding newRounding;
public:
  typedef typename change_rounding<OldInterval, newRounding>::type type;
};

} // namespace interval_lib
} // namespace numeric
} // namespace boost


#endif // BOOST_NUMERIC_INTERVAL_POLICIES_HPP

/* policies.hpp
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
*/