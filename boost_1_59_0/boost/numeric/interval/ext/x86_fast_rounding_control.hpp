/* Boost interval/detail/x86gcc_rounding_control.hpp file
 *
 * This header provides a rounding control policy
 * that avoids flushing results to memory. In
 * order for this optimization to be reliable, it
 * should be used only when no underflow or
 * overflow would happen without it. Indeed, only
 * values in range are correctly rounded.
 *
 * Copyright 2002 Hervé Brönnimann, Guillaume Melquiond, Sylvain Pion
 *
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or
 * copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_NUMERIC_INTERVAL_EXT_X86_FAST_ROUNDING_CONTROL_HPP
#define BOOST_NUMERIC_INTERVAL_EXT_X86_FAST_ROUNDING_CONTROL_HPP

namespace boost {
namespace numeric {
namespace interval_lib {

namespace detail {

// exceptions masked, expected precision (the mask is 0x0300)
static const fpu_rounding_modes rnd_mode_f = { 0x107f, 0x147f, 0x187f, 0x1c7f };
static const fpu_rounding_modes rnd_mode_d = { 0x127f, 0x167f, 0x1a7f, 0x1e7f };
static const fpu_rounding_modes rnd_mode_l = { 0x137f, 0x177f, 0x1b7f, 0x1f7f };

} // namespace detail

template<class T>
struct x86_fast_rounding_control;

template<>
struct x86_fast_rounding_control<float>: detail::x86_rounding
{
  static void to_nearest()  { set_rounding_mode(detail::rnd_mode_f.to_nearest);  }
  static void downward()    { set_rounding_mode(detail::rnd_mode_f.downward);    }
  static void upward()      { set_rounding_mode(detail::rnd_mode_f.upward);      }
  static void toward_zero() { set_rounding_mode(detail::rnd_mode_f.toward_zero); }
  static const float& force_rounding(const float& r) { return r; }
};

template<>
struct x86_fast_rounding_control<double>: detail::x86_rounding
{
  static void to_nearest()  { set_rounding_mode(detail::rnd_mode_d.to_nearest);  }
  static void downward()    { set_rounding_mode(detail::rnd_mode_d.downward);    }
  static void upward()      { set_rounding_mode(detail::rnd_mode_d.upward);      }
  static void toward_zero() { set_rounding_mode(detail::rnd_mode_d.toward_zero); }
  static const double& force_rounding(const double& r) { return r; }
};

template<>
struct x86_fast_rounding_control<long double>: detail::x86_rounding
{
  static void to_nearest()  { set_rounding_mode(detail::rnd_mode_l.to_nearest);  }
  static void downward()    { set_rounding_mode(detail::rnd_mode_l.downward);    }
  static void upward()      { set_rounding_mode(detail::rnd_mode_l.upward);      }
  static void toward_zero() { set_rounding_mode(detail::rnd_mode_l.toward_zero); }
  static const long double& force_rounding(const long double& r) { return r; }
};

} // namespace interval_lib
} // namespace numeric
} // namespace boost

#endif // BOOST_NUMERIC_INTERVAL_EXT_X86_FAST_ROUNDING_CONTROL_HPP

/* x86_fast_rounding_control.hpp
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
*/