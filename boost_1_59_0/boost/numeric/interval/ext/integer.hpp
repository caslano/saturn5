/* Boost interval/ext/integer.hpp template implementation file
 *
 * Copyright 2003 Guillaume Melquiond
 *
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or
 * copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_NUMERIC_INTERVAL_EXT_INTEGER_HPP
#define BOOST_NUMERIC_INTERVAL_EXT_INTEGER_HPP

#include <boost/numeric/interval/detail/interval_prototype.hpp>
#include <boost/numeric/interval/detail/test_input.hpp>

namespace boost {
namespace numeric {

template<class T, class Policies> inline
interval<T, Policies> operator+ (const interval<T, Policies>& x, int y)
{
  return x + static_cast<T>(y);
}

template<class T, class Policies> inline
interval<T, Policies> operator+ (int x, const interval<T, Policies>& y)
{
  return static_cast<T>(x) + y;
}

template<class T, class Policies> inline
interval<T, Policies> operator- (const interval<T, Policies>& x, int y)
{
  return x - static_cast<T>(y);
}

template<class T, class Policies> inline
interval<T, Policies> operator- (int x, const interval<T, Policies>& y)
{
  return static_cast<T>(x) - y;
}

template<class T, class Policies> inline
interval<T, Policies> operator* (const interval<T, Policies>& x, int y)
{
  return x * static_cast<T>(y);
}

template<class T, class Policies> inline
interval<T, Policies> operator* (int x, const interval<T, Policies>& y)
{
  return static_cast<T>(x) * y;
}

template<class T, class Policies> inline
interval<T, Policies> operator/ (const interval<T, Policies>& x, int y)
{
  return x / static_cast<T>(y);
}

template<class T, class Policies> inline
interval<T, Policies> operator/ (int x, const interval<T, Policies>& y)
{
  return static_cast<T>(x) / y;
}

} // namespace numeric
} // namespace boost

#endif // BOOST_NUMERIC_INTERVAL_EXT_INTEGER_HPP

/* integer.hpp
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
*/