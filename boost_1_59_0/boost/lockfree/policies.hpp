// boost lockfree
//
// Copyright (C) 2011 Tim Blechmann
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_LOCKFREE_POLICIES_HPP_INCLUDED
#define BOOST_LOCKFREE_POLICIES_HPP_INCLUDED

#include <boost/parameter/template_keyword.hpp>
#include <boost/mpl/bool.hpp>
#include <boost/mpl/size_t.hpp>

namespace boost {
namespace lockfree {

#ifndef BOOST_DOXYGEN_INVOKED
namespace tag { struct allocator ; }
namespace tag { struct fixed_sized; }
namespace tag { struct capacity; }

#endif

/** Configures a data structure as \b fixed-sized.
 *
 *  The internal nodes are stored inside an array and they are addressed by array indexing. This limits the possible size of the
 *  queue to the number of elements that can be addressed by the index type (usually 2**16-2), but on platforms that lack
 *  double-width compare-and-exchange instructions, this is the best way to achieve lock-freedom.
 *  This implies that a data structure is bounded.
 * */
template <bool IsFixedSized>
struct fixed_sized:
    boost::parameter::template_keyword<tag::fixed_sized, boost::mpl::bool_<IsFixedSized> >
{};

/** Sets the \b capacity of a data structure at compile-time.
 *
 * This implies that a data structure is bounded and fixed-sized.
 * */
template <size_t Size>
struct capacity:
    boost::parameter::template_keyword<tag::capacity, boost::mpl::size_t<Size> >
{};

/** Defines the \b allocator type of a data structure.
 * */
template <class Alloc>
struct allocator:
    boost::parameter::template_keyword<tag::allocator, Alloc>
{};

}
}

#endif /* BOOST_LOCKFREE_POLICIES_HPP_INCLUDED */

/* policies.hpp
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
*/