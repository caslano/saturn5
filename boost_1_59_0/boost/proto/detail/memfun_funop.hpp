#if !defined(BOOST_PROTO_DONT_USE_PREPROCESSED_FILES)

    #include <boost/proto/detail/preprocessed/memfun_funop.hpp>

#elif !defined(BOOST_PP_IS_ITERATING)

    #if defined(__WAVE__) && defined(BOOST_PROTO_CREATE_PREPROCESSED_FILES)
        #pragma wave option(preserve: 2, line: 0, output: "preprocessed/memfun_funop.hpp")
    #endif

    ///////////////////////////////////////////////////////////////////////////////
    // memfun_funop.hpp
    // Contains overloads of memfun::operator().
    //
    //  Copyright 2008 Eric Niebler. Distributed under the Boost
    //  Software License, Version 1.0. (See accompanying file
    //  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    #if defined(__WAVE__) && defined(BOOST_PROTO_CREATE_PREPROCESSED_FILES)
        #pragma wave option(preserve: 1)
    #endif

    #define BOOST_PP_ITERATION_PARAMS_1                                                             \
        (3, (1, BOOST_PROTO_MAX_ARITY, <boost/proto/detail/memfun_funop.hpp>))
    #include BOOST_PP_ITERATE()

    #if defined(__WAVE__) && defined(BOOST_PROTO_CREATE_PREPROCESSED_FILES)
        #pragma wave option(output: null)
    #endif

#else

    #define N BOOST_PP_ITERATION()

    template<BOOST_PP_ENUM_PARAMS(N, typename A)>
    BOOST_FORCEINLINE
    result_type operator()(BOOST_PP_ENUM_BINARY_PARAMS(N, A, const &a)) const
    {
        BOOST_PROTO_USE_GET_POINTER();
        return (BOOST_PROTO_GET_POINTER(V, obj) ->* pmf)(BOOST_PP_ENUM_PARAMS(N, a));
    }

    #undef N

#endif // BOOST_PROTO_DONT_USE_PREPROCESSED_FILES

/* memfun_funop.hpp
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
*/