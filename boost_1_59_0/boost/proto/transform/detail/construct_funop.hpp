#if !defined(BOOST_PROTO_DONT_USE_PREPROCESSED_FILES)

    #include <boost/proto/transform/detail/preprocessed/construct_funop.hpp>

#elif !defined(BOOST_PP_IS_ITERATING)

    #if defined(__WAVE__) && defined(BOOST_PROTO_CREATE_PREPROCESSED_FILES)
        #pragma wave option(preserve: 2, line: 0, output: "preprocessed/construct_funop.hpp")
    #endif

    ///////////////////////////////////////////////////////////////////////////////
    /// \file construct_funop.hpp
    /// Overloads of construct_\<\>::operator().
    //
    //  Copyright 2008 Eric Niebler. Distributed under the Boost
    //  Software License, Version 1.0. (See accompanying file
    //  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    #if defined(__WAVE__) && defined(BOOST_PROTO_CREATE_PREPROCESSED_FILES)
        #pragma wave option(preserve: 1)
    #endif

    #define BOOST_PP_ITERATION_PARAMS_1                                                         \
        (3, (1, BOOST_PROTO_MAX_ARITY, <boost/proto/transform/detail/construct_funop.hpp>))
    #include BOOST_PP_ITERATE()

    #if defined(__WAVE__) && defined(BOOST_PROTO_CREATE_PREPROCESSED_FILES)
        #pragma wave option(output: null)
    #endif

#else

    #define N BOOST_PP_ITERATION()

    template<BOOST_PP_ENUM_PARAMS(N, typename A)>
    BOOST_FORCEINLINE
    Type operator ()(BOOST_PP_ENUM_BINARY_PARAMS(N, A, &a)) const
    {
        return Type(BOOST_PP_ENUM_PARAMS(N, a));
    }

    #undef N

#endif

/* construct_funop.hpp
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
*/