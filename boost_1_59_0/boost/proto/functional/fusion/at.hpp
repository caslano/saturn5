///////////////////////////////////////////////////////////////////////////////
/// \file at.hpp
/// Proto callables Fusion at
//
//  Copyright 2010 Eric Niebler. Distributed under the Boost
//  Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PROTO_FUNCTIONAL_FUSION_AT_HPP_EAN_11_27_2010
#define BOOST_PROTO_FUNCTIONAL_FUSION_AT_HPP_EAN_11_27_2010

#include <boost/type_traits/add_const.hpp>
#include <boost/type_traits/remove_const.hpp>
#include <boost/type_traits/remove_reference.hpp>
#include <boost/fusion/include/at.hpp>
#include <boost/proto/proto_fwd.hpp>

namespace boost { namespace proto { namespace functional
{
    /// \brief A PolymorphicFunctionObject type that invokes the
    /// \c fusion::at() accessor on its argument.
    ///
    /// A PolymorphicFunctionObject type that invokes the
    /// \c fusion::at() accessor on its argument.
    struct at
    {
        BOOST_PROTO_CALLABLE()

        template<typename Sig>
        struct result;

        template<typename This, typename Seq, typename N>
        struct result<This(Seq, N)>
          : fusion::result_of::at<
                typename boost::remove_reference<Seq>::type
              , typename boost::remove_const<typename boost::remove_reference<N>::type>::type
            >
        {};

        template<typename Seq, typename N>
        typename fusion::result_of::at<Seq, N>::type
        operator ()(Seq &seq, N const & BOOST_PROTO_DISABLE_IF_IS_CONST(Seq)) const
        {
            return fusion::at<N>(seq);
        }

        template<typename Seq, typename N>
        typename fusion::result_of::at<Seq const, N>::type
        operator ()(Seq const &seq, N const &) const
        {
            return fusion::at<N>(seq);
        }
    };
}}}

#endif

/* at.hpp
XSbZy0O05LdX+dhsJHmrFUHuriNyF/Vjnn8+gOTuLjsGKioyojTOcqu7CSoTAmYuFclEOvJt4/SFtsjPBTHKaoGe2bNf9MzfaJE4iIYq3M9vCSP+jKOEIidfRzddHh9fbWU+ThbBUQzTE8VQJQ3D9VHYEeFk5JcLbPw1oHLsEJ91p2BxGnIPN1n2wXd0b5bunax5Mw3da9O9dt2brnsdTXnCnMaboXvH6d6cmO7yghn9GWyB40LZ/ZgX9+KmJMxykM3MOBjXJjgs6hStYpylWB2uVQKnbss9HrHmHs/nY19GGSJgFFNwQ5ydDpK4581fDDt7uqlKztD67cE8rT8teIPWf/GDV2v96Q9ervWPRQ3nuGCa1n+pelFgZGR4ICOSGrg8khxIWRi5GaZAZArIFLQph12RLAxkFbwIj5IczifCIdubFB5mpJmkK1ULD0sUuzkiJoQKpkA/pLZjP9jNlqNA7dfnZkhTjgSzN+JeQr+eQkgudULPYHaJ0JZSGLhwqbvAERyhK/2wCYeU/kgaKVHrir8B4S6LTWMLbSiQlUy2ngGRd5n1g6X6Qgd832+Lm8siH07GeFg6MuQTt51jg3deCuOZROtBVDIeZGu3ANtxsD7v55PMAxBYnnjHx+yimIhoGmaXsdmhU34+cQDBigpW5B7WC4JNqelvQM/MLW8qWEX6aBCFm5LwWfe/QULRlQIcp3f8AK7nskYsu7aZzPULViR0nU++mwvvhir1p0pOTcV1/HgBSC24q/GkZ863VixFocU7e4i1IlaHf505EBNdTm9NEF1W1O/AYusKTCQwn0v3bYTWKTvRmstXpftq3b5x6qVuX0Yw/XR+lsWSbAmOyH3ndvYWvl1Qqz3iRZ9ugWaFF2SiHrybT3sRpzf5ZgJtnU626tvhKzsontp09OhrZsp2VEafOdY/M+90RxHhP7b6Y2bVSrqaaqg7/BGb31C3C9GZMAwXbNSUkykhtVUgkOUervMcc1Y1o+6w0BZMYfnT0HFvqqfBuX43fRhW051+9sB83bdFV7ep17KKVkTCbSLMRbag7Vi/tQkDeB9ICa26JVlXdugL1usVJyP3MaUz+xBT27IPUcJWSHhIV9YzpSs0yz4cvbKVLpafE8JQ0AI580YopAwRUPUFO5i/Fx6XzvMbsCmp27DBndkN2Uob822h8tZDeeiJcRL6xfqVrmyC2qET7xZ9weaQukk0L5AcSA4p4To2A/vFb7zP8lfk9rl34eQNFrrVDGcV+k+71XHO6lo6P94Z8m3h++/vNwJGScDQ1YHAAnlqQFCpvi11PHd1vwSI2sJfgJS5fZG73Cu9wWl89X+JgdsSGzimbHOrW1Sb51DwUjluW2jc7jjW7y0SmJ3vw0zPoCt1J3AT91w+YLhXJowFK8wqQ9+1kpKStbBX2yxFzLexxM+UWquyHv5UWZUdmJeXbOkzIsU43+ZCO9211Mp8mIQCJVM27uPl2Dg0rj63aVL2quNFlfEWHobkuYdxJs+FktU0mslWSzCP5Wc9T3M6BZ8Pex5VlcE0/shO2JmTIsP4A3iRHDt0CYtDl52k5sG+xsObcc4qivKTn+Ne0eusepXGIiOYEkheGnGYX7Lm9hXQNaztwhVBl/ZquwPVS1f+Ydfbk1yRVEGSgK9RJ5qvhv2B46uL+KkXyPa6GMeDfFp8OwkBaor2yCoLCA7BdHySFLgotKBrnrGyt9jwl8EeEHEV8x+D1BFa4dLVjZSkyZblWoMBASHdg73QVcmExucvQ76s8jDwZVfkw9aZadoxTznPSsiFerJUnPUFNgoHDbK3g3XAWnVWo7he5ngBt/V2PvgXkEYUsaKBD/xJPW7k7cyCO7XC+UXwMTYq28eRfJE5gw/q0y8AD8YBa5afw8bSOkJ8qAS1ay8rsbEfsjPZFdHQrOThuHaOeE6vSmZHWXFQO2DzHFttZ+/Rk/dzw55B59awnr+qO0QHhra46YSvH79zG3zHUHov9CmoZSg/x6z/H17B+nOP11aB4d+ylR5PgW11A0slKMxe9qAtNB8JQn+2r4cNer6Ez59BT/qmyhSMXjhcV0/CQzSkaMoXuwX0o+8k7KryGEN3LeZfZeFBhsvyh6yFsCPV97wRcy2Y949vDSDmYeFaALsMXHW/8+G3xvnRq3GgEJetlH0tbMCNOmiKMAOHz5teK324YCHhSXS/eJu/OBYW7AVnLf/l8zT9zHM7cfRIKwB9qc2kabzgeVo0I7WKDEtwIr/l+SFLR55X8tjSiR3fDFyFrZZzDjbqHcQX3bQUvSGa0Rvid1FUqDbjdjgFY57FQj/DnEem3vBnyk3yPdzNfnkbbJKc7P6eOn+TxAgu/Kq8oZsk9CavOvFtbJN856lz2Am0YH5weVnOPbBHN4elhwQKKgopZsZoM3DILMHcQDLqR2+bMWhEJiUcjVwzLOYLq8vswQZIOHbSaZTVhUtCen3ac1D/P9+KBxOOakMdnhvm5bcRL8vHbSYZz8E/PSbUhoHJC+/Vlc+QZw75ug4pPI2X/6MPhtkh7kHAaD3ZZ/CPnpLC4Z+PRYWjS0/Z07eCYEuy8hjU56g9rKA3L5Ds5/mbhlm0xnR9dhbGW0KqUPZm1EBT4y5SN/wIviBD7N31JvLa3Yvx7Ak25h0rJ7i0XzgsmGcq5SmIHGZrUc0HjBZaeByELX0tGuo5n5En8cSV2tlaewrhVa8dsApbgNDaZso2syx75j0H69FeBzIUC8A75Ko3YFg5Q9uAo2yU5oYxRBMp/HTymgD+3dBrUI4L1eAH/fr+fjrKQGPUphp7kjiRaqrBIFKEhbcfhToBdafvJxyrDWEJe9cmYO+0DehRbOj7XZRyCv2m0y85nu4foLwWus6i38n0m0O/U+l3Gv32UMoMukZLhmVLFx9M5BYLYJxgt9qAOYOXwdQVTRORYqmBOmFtJUxPNIH5Eq1+53WaAbKk5n0pO8L9HxIeejH0IB6LlYb2NxJC57sYFVv4G5UKxyfIkA3DRF0Ee2JBuZoBP8GRsW5Av/W41+OyxecF/a4Mqmn8oxOknbPC1HZXlqu/wBNid+Xy4FI3nT6F9reRG0JW7JhOObcWU6HaT0MpkbGxNOfV1EW+IuTYI6ykElSiRdKgQ/bCg6zAi2eIv4TrAKvBEStmW3H4SrGQGVgiFIQSiZgxxvvwXK/BFPDcbP77HsqzTKcSFqspbmUA9qq4UcFctChKI9NuxFocGp7xcCf1yoQh43ORWbbZzImiEGwtS4JvQ1FzoKhIGqI38ZaPpAOTJPyuYiJN0qjtB/tOGbnHFy3yHAxejPldwl9r3opunJfurQOkR2K4yS5xqLZAJsiLLnZzojPNQrE/ApVgXlspm6ZX9Ou+Ac/X51ltPjIt/vADX/+JlHD1BFdnQ8dhrlwHBKwf3574IGI70dFx+APfwIcN/Af4vBmfnGhHYj4NiPkAEizt07LIcqyKnT3JBWj9k7i0Pe9WDI8pDQrZ3Kmet4MXu5/Gkakk4/b8j62WyA1sbg68eE8UMISKeFor3oB5vMTh3IQsqZ1/9r8GUaspojVLcTT3nXkImJU0L7Sgf57Aytqz+EvjcGxnKGWV5dVG0JUwkWzaveUWvviPid5wU9C0tLJ86Mn69+adMCTvtPPyatGcxM3cIbxB/TCdLwkpJ/3o5fG7qRQ+RLfq+TY9367nO9zKSTXNrXBn1ST0lqgcV6pXdMXNjS6m2Fxunyt4EVNOIg/fygoyj53NPhBJYcO08HAdXRvxeUnWsf7sVuIVim26L4rmsz7klqS8T1N3vQhZDU36F5iSX3UQdQGxvgxJxs9UnzRFkQHUmdqpHVp+ns8qq+hiajskGI+skP+ebD9wd/0YdPktYaEEvFSzXmhLLCw4Vqsss6gXaZU/s6gjWEEWdEC3w4wVuXGnSDSBzXZYZ9ukqMKliEmFdX9EnpzuGqTfzup/x5VQ8DMZpvAIn0RNgUEzCzjW3/0nsmwsswSvYbPt1mGy1JP08tgZKHVEQmqoj7CoSsS3Bn7RCstpbobEhK9Q3QVZlc6EWh47E7HB8yWytqKukbnugvnBHLfiUi9ll/jRkB49AVYwZ7bvJLOEZiXZYNgKsrIVrnGYB7bIFZh23PdW02pVTqKLcL7NqnCYNAm+wuWXIQ/miPnXyp3oQJe5m8iudTZRzxGmywIkornH9a34xL20zFl9O11Ad7ppSEqLQ75+CRRHMHUhHxe37qV3i5iF7qX3OKtfEGMiqRNKeWxGIkkKZC6Caej59nwSlB9/eCIlDyhg52FJhw50vMVfv3qYBYF8Ic2J4xH7iQ86Dne8Bf8f/vAtoEbPXJ1AjQiwGKOGjxKQxZ7m1aSGhg0MKu5e0g+kfslAMMtzMDJONth85nIv4eoI95KomirYAje9DzqalJ4UAvnpjVwRSFlY6g9tQJaEXzad8PjGBqyS1qL/QQ92zMb2JNpTY8ZM/AXYAptS50DLYmxATQIbUCPwgvfRb5h+G+m3mX5b6LeVfikCQE07/RJQak0XsUAo4BMyZw0CTOg1c+jXS78Il4Mw1xjemyBFaubT83vo9276xYBIfBn6iYBgUoY56m9ALrZoqtQpGSuniKhdYot6dC9sUX2LFunVXWgQfyh4P/OW6yEK8VVYrnvLMRTJl6HXd5kRfM7QaV4cmRY4WNVl7G0R7/VQO+ZEK8JV7HW6FuHCQlh8aK8sRp9ZXtdNdhkMZ5nniLPqXRwq1QGLXSOmjbJ5DsEoUmXgVWyDnDF0g6zupBgo9AG6ZugHoouQdtVYB8/g+XO1IP7wA0qasGOOBhFIp0h4mCi2a1LbYKr2Xomv8UZMV/fKcnFMEQqdRHHm0z/2oZYnocoLjd2Z1KhOipDVeuEKT6UgWidjEV2484U+o8TY204Jw5S1bdBMA1LM8j7D1OIEkkqASKSLV4Y5IvypR/tkVr+s3Pi7JBS5uL1kdZ/RTYGWrAHrMjxP2SgwWi6C7XfN7M+N5y2WPJA8A6OXMZo2MCTiRCjPVloiKyeqJdqFppuqC0juGhBrI6tZ4VTPkWC2+yViFq4ydlME6qRiMXmokjB/BOQfbioRHyvMgRwFTBmXrbiCtzIlI1tJD/4Qe9PONMmWUCDrEnTGALbqIuAqoBB/YqFU4rwc3nkjyGvjLGwmnlRb0eZ4DS5VbyA5eKl3IZCMmdPVbnbHdBRGtTNWNQXNVxaiDdU9uGxemmL6o0/QzxdeP0UHvntvjLtxjRPWoseB8d6KK7HyWs+3q+Z79uN1xRxG6xXdkx/MIRtq4Z6ML1e9TxT7rEmxv4wFXL6nOsxS1TEmsrDhv7v7Y6zPU38+ZZxP0HvM24RNYjTt43YdwSiAxeuuIzLCu3HiLej3vMuWDOgKdG71cWfVf9DuOh/24qfJtFJsEU0KF6QzKmjiEB7AhcUL6Y4MjuUNPA05ZjIijFo4hZ0BGp7M+odktWpNyRqZuFnwOhXdy59EGhqameRpheSt1goHsaahOcOTum9D/EeoXHB89Tuqrfp48JLQ7cmhwmSpriKKm0Kf7pEVmj6TbSB8mMOV6dZm6xmZz06lJFv7z70Xnv1uX2+lFbVIVKI1rFX0WkIZdjXZ2j7UikrcIcK/tV/bj0Iaor8I0WY0bs8aIb5bKlOt+1G2NduaRmwTtthsHzLWifKTfyE8XpbAHmvRrAvNLb+cW97/dm6hdx3hup83N8YwX1TOjR4yMeC37ZRQ/tQuVM2RhYHqgXmp/hA2SZhz4rCIpcY2SZhOvycr9QH31o3ENqCRs6YMpHbj1tfB3VcgzQ7aBc0Gohs26fDoJgW9Zi0wx1D0B5464qCtGIMOhYAVJYfL37XTHh9VV7mX9KgPiS1AsiOuRawBFYnEk6R2hDt4JLWDw9/DHeETn33UdaIDv3Mb8SYN+OnOkWv2TnQl0PurrkDOJEqcSQfQdOBMjis9xJbY6VUPPGw/QaOfa8TG/0oxy4inc28lGT0Npk1olT0JSFRFb3b/XXItLOgJOWZbqautsAjtjNQZIcedy5bCikwcZde5o3yj51vn+k5yn8J7Z6iV3Ke+f7SPEiV50SIpybOERAij1mNyN/FRS5zMjvigo9EiThhJW2D7Arm6wopDTtwO3MH6gDvRiulekbWNJgJr5Y+dxXjucgnabrcSo2RV+uX0D80ZlwTLvSGVJp5ebouM4Yefx/P475/+xZIDfqwFfZ9l18wprT5e7vPQTYUi+2T6ZuyTGJyBNmPc15Nc6DZCUQDuwV2A3EbydbJ8E7lX/YXCU9gsPO95032ruBQ/eYb/qMWgw0JilxbvjLmp+dg6zOrW8Fe9rSS3rzpceUt1X/mPPK9QjW5i68Qo7fLspgcT2eP4wJj6Mo5ZK7ncUdJVh5cuE59v2GF+Hv2uEIzsjPFQDvbu0MaYW4NsjFbhMIQNX+gx5A7VEWRkPfm1s0ZkBLAG0LX8AefZIUZqv11IUmtJ9TuV46vD5Vd6DlSMZy9RjafWsAe9HtUetCOcwt+1ZmGqza+K1a6U7Cqhqa+KppaEXsLveirt0MoCG8zMBOQKgRCxAb6PutXIMH78OQwJsizuxYEOg4KmQaG3SJp2Q2yWJ5QVo2kBI7TBT+4bvHgktuwgr3ou1nkxBdzkE4Yw1ivQSOlnUWeUxr52I3wtV34tm20QX3tVe9hrCY6k78F+u7EtcW2JDuSXiS8Nqfo1AomECrsqVnUTrsgs4YNl7MjS7q1vAePwt2cTqouTO/MwSe6eeAV/AGXeKMu8Nr7ohem0RQj0I8yi34UuFeP0yLkln2j+vyrZ9r0lT4yVLFGxoP360smy0ElQ6HWy0CsTuqDY2LgpoQ86zMX2bl2snqWxEQsepRiNosQcKPF6WeI1okRMGKspCkZmsW1ycCrqzq1jibHSjmE46s/GS/5v6jon6QJ1nVQn8B+eQbbw99fETOtRGJQnd/wGdPYn3bUF+OeafkFZhwEzHAVmWCMds4VdYYGbIEyRAfHeiups8Q6mXY0lKfZUzHA6O9jhwNB508WthR+GW+TiYV2NbIW59PE1JhNaXFIqxnxTG6qtA2ghIVTVpKQO7ccyEKckQUHPvxwFpS+1BSyRkSXC6NvjOmsUlAQyodtq7v7cYD3VfQ+flH0RuKf+APbCd1fHjPV3svxysrj6abnFtLLXlU3C7L4ON5PNeOzFrASIhOfl6mZgvtUtQfiIkWCGL+JD+rbI8IsPA3FLwvP4k7A14lF8lFnx+IqM+JPocLvO8K+KXOveTe4BE/ldG3pAVHeVmAdkO0XiuCeAlerXasIqmWZmFOcUZY1MeG9VzECrGHpADUtrgty+ghIMaKjskqYP7orJwQmBUcaYTQ9NcE1f8+Bo1tzQbV9zZs2DaQ0cHyTn9gHzM+Nc5ufDjiZlB2JCIg80MzgM7pKI+dnmZ4eECZDVT59Rd+gV26AVesV2XnbVN8bpDy/vw2TaJ99ph6wl4og/Ic0sSIORUJV2AoFFn5nWUnR0aI05OuyMOTq0nuvosEk6OiS/gDaBWUMcHZArKXVvxdltTm7PwdjkZjNwVru34jRGxmhAvIZZ/L58KKe2fAgTNwkRx9FS/AgfbEVL8ZM0IUlAXMfpmnAh19FhEX1Qp8+zdTbSddjo2k7Xdrre
*/