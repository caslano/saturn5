// Boost.Function library

//  Copyright Douglas Gregor 2001-2003. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)

// For more information, see http://www.boost.org/libs/function

// William Kempf, Jesse Jones and Karl Nelson were all very helpful in the
// design of this library.

#ifndef BOOST_FUNCTION_MAX_ARGS
#  define BOOST_FUNCTION_MAX_ARGS 10
#endif // BOOST_FUNCTION_MAX_ARGS

#if !defined(BOOST_FUNCTION_MAX_ARGS_DEFINED) || (BOOST_FUNCTION_MAX_ARGS_DEFINED != BOOST_FUNCTION_MAX_ARGS)

#if !defined(BOOST_FUNCTION_MAX_ARGS_DEFINED)
#define BOOST_FUNCTION_MAX_ARGS_DEFINED 0
#endif

#include <functional> // unary_function, binary_function

#include <boost/preprocessor/iterate.hpp>
#include <boost/config/workaround.hpp>

// Include the prologue here so that the use of file-level iteration
// in anything that may be included by function_template.hpp doesn't break
#include <boost/function/detail/prologue.hpp>

// Older Visual Age C++ version do not handle the file iteration well
#if BOOST_WORKAROUND(__IBMCPP__, >= 500) && BOOST_WORKAROUND(__IBMCPP__, < 800)
#  if BOOST_FUNCTION_MAX_ARGS >= 0
#    include <boost/function/function0.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 1
#    include <boost/function/function1.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 2
#    include <boost/function/function2.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 3
#    include <boost/function/function3.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 4
#    include <boost/function/function4.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 5
#    include <boost/function/function5.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 6
#    include <boost/function/function6.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 7
#    include <boost/function/function7.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 8
#    include <boost/function/function8.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 9
#    include <boost/function/function9.hpp>
#  endif
#  if BOOST_FUNCTION_MAX_ARGS >= 10
#    include <boost/function/function10.hpp>
#  endif
#else
// What is the '3' for?
#  define BOOST_PP_ITERATION_PARAMS_1 (3,(0,BOOST_FUNCTION_MAX_ARGS,<boost/function/detail/function_iterate.hpp>))
#  include BOOST_PP_ITERATE()
#  undef BOOST_PP_ITERATION_PARAMS_1
#endif

#endif // !defined(BOOST_FUNCTION_MAX_ARGS_DEFINED) || (BOOST_FUNCTION_MAX_ARGS_DEFINED != BOOST_FUNCTION_MAX_ARGS)

/* function.hpp
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
*/