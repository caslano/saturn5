/*
  Copyright 2008 Intel Corporation
 
  Use, modification and distribution are subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
*/
#ifndef BOOST_POLYGON_ITERATOR_POINTS_TO_COMPACT_HPP
#define BOOST_POLYGON_ITERATOR_POINTS_TO_COMPACT_HPP
namespace boost { namespace polygon{
template <typename iT, typename point_type>
class iterator_points_to_compact {
private:
  iT iter_, iterEnd_;
  orientation_2d orient_;
  mutable typename point_traits<point_type>::coordinate_type coord_;
public:
  typedef typename point_traits<point_type>::coordinate_type coordinate_type;
  typedef std::forward_iterator_tag iterator_category;
  typedef coordinate_type value_type;
  typedef std::ptrdiff_t difference_type;
  typedef const coordinate_type* pointer; //immutable
  typedef const coordinate_type& reference; //immutable

  inline iterator_points_to_compact() : iter_(), iterEnd_(), orient_(), coord_() {}
  inline iterator_points_to_compact(iT iter, iT iterEnd) : 
    iter_(iter), iterEnd_(iterEnd), orient_(HORIZONTAL), coord_() {}
  inline iterator_points_to_compact(const iterator_points_to_compact& that) : 
    iter_(that.iter_), iterEnd_(that.iterEnd_), orient_(that.orient_), coord_(that.coord_) {}
  //use bitwise copy and assign provided by the compiler
  inline iterator_points_to_compact& operator++() {
    //iT tmp = iter_;
    ++iter_;
    //iT tmp2 = iter_;
    orient_.turn_90();
    //while(tmp2 != iterEnd_ && get(*tmp2, orient_) == get(*tmp, orient_)) {
    //  iter_ = tmp2;
    //  ++tmp2;
    //}
    return *this;
  }
  inline const iterator_points_to_compact operator++(int) {
    iT tmp(*this);
    ++(*this);
    return tmp;
  }
  inline bool operator==(const iterator_points_to_compact& that) const {
    return (iter_ == that.iter_);
  }
  inline bool operator!=(const iterator_points_to_compact& that) const {
    return (iter_ != that.iter_);
  }
  inline reference operator*() const { coord_ = get(*iter_, orient_); 
    return coord_;
  }
};
}
}
#endif


/* iterator_points_to_compact.hpp
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
*/