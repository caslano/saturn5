//  (C) Copyright John Maddock 2007.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//  This file is machine generated, do not edit by hand

// Polynomial evaluation using second order Horners rule
#ifndef BOOST_MATH_TOOLS_POLY_EVAL_5_HPP
#define BOOST_MATH_TOOLS_POLY_EVAL_5_HPP

namespace boost{ namespace math{ namespace tools{ namespace detail{

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T*, const V&, const std::integral_constant<int, 0>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(0);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V&, const std::integral_constant<int, 1>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 2>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[1] * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 3>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((a[2] * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 4>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(((a[3] * x + a[2]) * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 5>*) BOOST_MATH_NOEXCEPT(V)
{
   V x2 = x * x;
   return static_cast<V>((a[4] * x2 + a[2]) * x2 + a[0] + (a[3] * x2 + a[1]) * x);
}


}}}} // namespaces

#endif // include guard


/* polynomial_horner2_5.hpp
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
*/