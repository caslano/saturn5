//  (C) Copyright John Maddock 2007.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//  This file is machine generated, do not edit by hand

// Polynomial evaluation using Horners rule
#ifndef BOOST_MATH_TOOLS_POLY_RAT_3_HPP
#define BOOST_MATH_TOOLS_POLY_RAT_3_HPP

namespace boost{ namespace math{ namespace tools{ namespace detail{

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T*, const U*, const V&, const std::integral_constant<int, 0>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(0);
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V&, const std::integral_constant<int, 1>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[0]) / static_cast<V>(b[0]);
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 2>*) BOOST_MATH_NOEXCEPT(V)
{
   if(x <= 1)
     return static_cast<V>((a[1] * x + a[0]) / (b[1] * x + b[0]));
   else
   {
      V z = 1 / x;
      return static_cast<V>((a[0] * z + a[1]) / (b[0] * z + b[1]));
   }
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 3>*) BOOST_MATH_NOEXCEPT(V)
{
   if(x <= 1)
     return static_cast<V>(((a[2] * x + a[1]) * x + a[0]) / ((b[2] * x + b[1]) * x + b[0]));
   else
   {
      V z = 1 / x;
      return static_cast<V>(((a[0] * z + a[1]) * z + a[2]) / ((b[0] * z + b[1]) * z + b[2]));
   }
}


}}}} // namespaces

#endif // include guard


/* rational_horner1_3.hpp
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
*/