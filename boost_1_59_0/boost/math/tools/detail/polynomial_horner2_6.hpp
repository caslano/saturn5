//  (C) Copyright John Maddock 2007.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//  This file is machine generated, do not edit by hand

// Polynomial evaluation using second order Horners rule
#ifndef BOOST_MATH_TOOLS_POLY_EVAL_6_HPP
#define BOOST_MATH_TOOLS_POLY_EVAL_6_HPP

namespace boost{ namespace math{ namespace tools{ namespace detail{

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T*, const V&, const std::integral_constant<int, 0>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(0);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V&, const std::integral_constant<int, 1>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 2>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[1] * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 3>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((a[2] * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 4>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(((a[3] * x + a[2]) * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 5>*) BOOST_MATH_NOEXCEPT(V)
{
   V x2 = x * x;
   return static_cast<V>((a[4] * x2 + a[2]) * x2 + a[0] + (a[3] * x2 + a[1]) * x);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 6>*) BOOST_MATH_NOEXCEPT(V)
{
   V x2 = x * x;
   return static_cast<V>(((a[5] * x2 + a[3]) * x2 + a[1]) * x + (a[4] * x2 + a[2]) * x2 + a[0]);
}


}}}} // namespaces

#endif // include guard


/* polynomial_horner2_6.hpp
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
*/