//  (C) Copyright John Maddock 2007.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//  This file is machine generated, do not edit by hand

// Polynomial evaluation using Horners rule
#ifndef BOOST_MATH_TOOLS_POLY_EVAL_6_HPP
#define BOOST_MATH_TOOLS_POLY_EVAL_6_HPP

namespace boost{ namespace math{ namespace tools{ namespace detail{

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T*, const V&, const std::integral_constant<int, 0>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(0);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V&, const std::integral_constant<int, 1>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 2>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[1] * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 3>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((a[2] * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 4>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(((a[3] * x + a[2]) * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 5>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((((a[4] * x + a[3]) * x + a[2]) * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 6>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(((((a[5] * x + a[4]) * x + a[3]) * x + a[2]) * x + a[1]) * x + a[0]);
}


}}}} // namespaces

#endif // include guard


/* polynomial_horner1_6.hpp
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
*/