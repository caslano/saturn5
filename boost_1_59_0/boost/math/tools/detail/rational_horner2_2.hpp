//  (C) Copyright John Maddock 2007.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//  This file is machine generated, do not edit by hand

// Polynomial evaluation using second order Horners rule
#ifndef BOOST_MATH_TOOLS_RAT_EVAL_2_HPP
#define BOOST_MATH_TOOLS_RAT_EVAL_2_HPP

namespace boost{ namespace math{ namespace tools{ namespace detail{

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T*, const U*, const V&, const std::integral_constant<int, 0>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(0);
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V&, const std::integral_constant<int, 1>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[0]) / static_cast<V>(b[0]);
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 2>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((a[1] * x + a[0]) / (b[1] * x + b[0]));
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 3>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(((a[2] * x + a[1]) * x + a[0]) / ((b[2] * x + b[1]) * x + b[0]));
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 4>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((((a[3] * x + a[2]) * x + a[1]) * x + a[0]) / (((b[3] * x + b[2]) * x + b[1]) * x + b[0]));
}


}}}} // namespaces

#endif // include guard


/* rational_horner2_2.hpp
kyQs9L0DCUJS6ibr/Z8sLO7gmhLH9EpHn7D7RPfEOPS9J54PDMaPNlQtz5J3QN+FzrfnuvGv3V/7vS1o2l+LfzvH0TbBG+QHM2SIOl8nu2i6tzN77awQKh1zv5Woo9zBQkY5/i3hzYXHB80RtMEhvks1iNWvubIZOlbplJLsm5ZXkzyRZpuaKvZyKvoo6PrzG1sWfdIgrnv73xoPFhWakTBrHj4ttEYqnQeESgBTvgYpr0hnPbGYHNo37wSObBdubr3I4YI3ZyC5PCq3ttyrlO3Ov5/Fs2ZyVRZFWuR2OmsjL/9j7al4UDhtASy2cvBqwXN4MNQsHviZFsxDXsfgHhxTrtVSt/gbTz9oDiYSM15rG0LadILgCUKqFusB5XFTnwlzMLVvMfh1csIAfBTr0nWH9WRXjP7HCcYJvAukC/+jrH/cQa6nbrRCACo3yFiEPODXWnWZV9jjn/JACkUGBscLWwZtfS218lN3Eq22RnHkugbwhsREz6RQjFE3aJEaVCEF8IAoLo67x8Gkh13IbxJUCXO3c38INpjchGY9RDooKvWYjHg5RJB+g14DZjV9NnrF0TF8+bE6scyzt6aa+w2UI6U8nixoy+A3v6RLN9nR5RV6Os2O4HrjINQhGIvh0hZwrBo25eKbqr6C721QzX3VdCqO7ifrc/SD4/tRJoO0I3HFwZgd06B1nS6M9sktlpqbJhQW1mxR9OAOfFdPzK/tfdjCQK8IKdZTBp1G9mn5JR5Di8Svs17pK8TuovBceRJs9is1MGxnd9ecnJhnlHxnXOtaPu5X/nuydzx5GtbdfA7SmTSHFoXYRADZcwv7Ja5xwpx2uTxj0+UDd65O7YpwtoTWaUdTmca/SfNRWLLHj6HfBYrTFoq2C/DMh3GKWPqwuga+zgGvEhcLfVIKyNlmr1EP9uOonM9L76ABMNle4AFd432xDjH0LlU+LJCPvDGmbwnXoKAbxZulbjgSHVJ4Zq9d4Y7BMfijZCQnd6Mttywylpp4yj2z/3tl5JzCrwp0pbsA8Pmgml6HJ9jJtpJ0nOL4mLK1rOZ7Z2L01ed0PCbzlYmSCKGm/ADm9kSF+EbLKTJisDl8TWquqGQ15MZRgxxcV+lG0ZHRRiVO51C1PgKxrqrkFhfzwLHWdFqPK31RiTGXBy9fNvIh97CqkqvCzuajni/AW/OlP+lyI21Miuzwxv2SKTJnra3FEA0ltHsBOWxwUyTyIHyqvuzQtlQUK+u6U3WVf/xxWRJdXSlEaOeODrqfvQA6bPkayT/0mP/c14F5S15BYsIG8AtHE7qUm6pofnLMvBVKdwPY/tzu7HIIx4KX5TL7M2PraiOucy+eNe0aMj96PPz6une+t/FG/trze2qJ5VY9EQMMxgfiJ2rGugSGONycTcPKY3eiPmPUO7u4OfAJZl4uyw/GPeunu5R+wZj2VWX0Za0Hsl4cVUbNnJWIS5Hanx8ADgcNTc5R6zUSBpkLZ+3Jbtec8LjROPORHyRFYxXW+6oNWJdaFZHhdyajq7KC3Aw41dJMON5xIlE7aJgepXF3mbV7Xnef96V9Lkhp2Pa6rCgrG5sQeC8ySTmzVScYMpetADeMa3now6iI3CuejQsn6jdP0wf7szWJ8SQdXWfbPMOYyjp7AXairNrtE74u94A50rYb5LdHi9MZiMipTRkI9wOhvxZ268Oxlzsrweor5BoShrOxOaSttDjGTnKy6HCDfOmiqomkfl6QRXTacNDJ+f7o1Y7XqKjyR+iaIkJQTi6fp72xozzsVLLbPrhJbiyTbuB0gwZNscLdGTDXpIFl9qAEWdz1WhTa4gEnACS0lXt6BxtNUCbqHFbr9N7UjrsJnTF7uLZd0zKxEyMVQOQxDTAe80daw7IXCN9kj8iP6LWmOBxvyeCTz5nJ4MPBrOj79S564W6VFFYQgyX5AmmYP5nqt59n565mISaZpTYrzA+F37vVbJ9Xkt3qjS60UPjPMOKuqlvcGxgzmrIJWTPIRLSYdJueo/UThW0AkWCkEHRRTeygTjrGXtn6T4Z0cKaRN9EnXP4NLtl7KTudw2Cj33cb5Bv3C5txxaxi0aMDR5gbxD6hVbNO+4kx4T+/dcsMonritV9fhd1AO6n2uL2xg13Yc/itfhzs/Vo1lAV341a/b3zAnNxlTmAB1M/T5pVzfQ/ylI1BRm8FVcOhQvoIVapdOhBA5bO/uJFdSpps9lZMeBCt8NrnD917e2dYVhWxxA3duyN9GL2FMeSbjdY2H5/Z4mznLTVBk+V5oOKkngrbiynvP8YlOTa/M6UrcR4yD7QkqDrVNjpBlTXrBY9ypVkdnIh0qxRyT6iPYTT7xp2zHN0onP/JkhP4fB7OPZ8VlZp8F9uW8OzzBS1ScYX6ktw/DoDdIY4KD7NeTMxt5jsHvQPPpptqDwMzqsZy/HZFlZjH/l0q14Ex43VEwbrO2i4F0Ls/uRl21qnuKOFw/0qZugGEnKLtRF2Ug/xfqPW8x6CJhXtp/LDBD0G7LEhDSroIOgUyRaJghvYoluWgaKFibi/Cp9w3sO8abqyLC9MJaKd0m7q0/eS0RFyHWLIZD57vVbLBvjGanEWQw3avnMxEum6eu2cPu9GWS5jYCX/oCmrih/2nEZ5cHLmm7ny+Zb4XruSiF6+82tcFZhjnNKJmPgn7y5usrstF82m3ZL9+xbnfA/sFzkMgAre1SxsUaRUuekyXQJFnVHpFGKGkruskGZEc93MFSTkD/BGBiY0IC8VdfPI9RTRCnh6vqQDKt9CfzEewVuY0opTjVVGqIibOX+5dMFF2+NyRKgrgPyhEjRHcuWFc0ZaQsBzRqcdOc6ZScG1OCxldnlnLtlLu1t54AdiNM1OcYGTWTPY4jcYnxBCaeGUBm3FUOHq3XIXCcvHtA1aZQfYQPn2pwHvvhrgdHuW6CcfdoIeNNavx5aX4CF3ZT5QhVzNat9/rR+yKuNPTcA4ikskvSPf5xEZuB4AAgENLAQCA/38hTTkmnC+uaApKh3R2f7nWooHJSbMuIz0tcaxkT466oWyFZqNdRQCgNqT3lm+CjmwoyRlGB7eKiYlLq8b871BX3tEIZLGNA9iuseAJ/ir+39Bw8sr9HlrLdzRl7dEo7RFWXtr7mzaEB/3tSOLBe9jvmaycqmeQev/+3VNIB+wnnnQ/kNK8tlvtfnDK6LrtZ7Ufhf5DsF0AF4vcPZdHLpr93wRKRySV08KjpER+c9vEzxXjQMLJzJpw2eJtMpb5bcD5iPdfjoRobZhSQWq1aVB9GJYZGky5+GeMk2rIPV8GGV9bWnzuKtP6rnC3c3xzA/f0Bt8eUnsWZKsV+/10RTbNFjxfl/wes91FO6z4fDmaESQr/80k6mv9IPY4H0Y/o983XhPiMNNgzaj6JieYHuL+Os3RwUfZcK5gIVPwo6ZK8Fm/jUpoa6Onrfbfsh2bGBh5rsS2Xu0sHMmGsuFlIW4hoJsf06djJlr5GgAYKQP6WJFcmbUESt39tlnj7Ex7B9mIYPhNlI8WsYlv8WyA2aN6wGKCMNNF0p5infGm+63VXIwllPnrs7CPk3vrsz8JHwS60XBccLoDE6izvEcKHhe7VIVnwX1k1OtLfTDQAZ5ni9MSrwA3PuLbO6dHNmV4bdzT9kapsJOzw/uIv+T5cv1ls6PHbj34iIfnvj56qQ2NdzQjlVQeYs1hoSuRMT3I1GtDvh8oJah9fEUlNovpbTiYoCtvFBIXU8ONHD+91c0Vrbun2DgVGjNaIiZISg30DRwpZlVi+tFq8jSQb3a5gjQnt/lhMI5Q08p5bVKEBIxlnITUE4HXfGbhZmfxcixjMBN3GcpS3HO+dbGIoK7I/5mLjoVALm4DCxV9U4ucBlKAT1oZXPvp6quV7GmIrS6+WrqgIGacbpKAWUwRWJ1W86EXspIS1wn5A04y22tdjeP+RUos8EWKLTvIAAohPiZtj2k6sk/uL0pyutaM6MpAPm3XA4d3SOyNaICo7J13HTvh1R/royVme/GrYEjCKWbPynyl2Gfu93CMBjCiEUOUnQu9H8nl1hWaQ/VQs+0dVrXiHIOtOLDMMHtFr6a+tSTaFMCAnw8cEXvwx9Nw9q3gWq51knobAIiaIjlRRzG9Z3uz9NLeX8Xv+tdfvlfZR/3D4Kre+lM0mAnpyxil31HzIZacTnh5fq9ZBeorLSd/WLQmSF8D6hVHN+VLXgxXKAWGSJQERi3JKeD3zO2XivGrShLzk+xLVRdSIzYCPnNP47d0KGP66CKcJPinru9mpllKopTvl3lElbPwLZX0KalnWLCFF4A4iK1tRe/4RnvEDzadpqEyto0ySo2kVU2+pwxLqtFH4LSszS5+z87DG9xiJkvWDdjzi9b8PGO8izlAgLAHuCHmDS1/ZJCurTcv846z4UGiP/trLxW/wlOx71r7i9e1xbpOqp4f71j+cQupN2p7b//xAjuWD+Z3iP0Yyk0n2e8qRNpf0ZT3/1CMkHV6c1o+p9sBRyaMk/HfzrAFcGsxxt1tcT7gqyi13YFirmf4wVDS1dBR4MNMUVjbfc5LN6zlmAqq4kLHAJzgCVYFLcC/ulwYkvzP+oW5jLp4uzC1QDU8CQvjukqC450yGx1Oh5ZWJrhzb1zw8AQNAFeHszfTlJSM5xw6aveuawdChrkIArzzFOnRiP/ivKi440gpRov7fImtAQK5J+9KJt7AqrdYzfdjGAkAdAGAfaeOCAFEsUs4e/fZvwC9VdS/Q7Ylp7JWPZBpLw8oCMONujO41KyW9az+5F3xmAAhTl5vPNuv3EBJldIQ35TzcaG/WYKnt0TnFcZJGflj3Cr6orBCa4wT0+6JkqEMZbR5EGA/GVNVz3tz4T8H+L1mOf3HFf3t3ySniWJoId5+0CcyPHIm/lt0nXO5pa+pt1L3VMuIj2yvtE0o4/EihisEVek9um5MY3peXSWcNXLFRTkfEWHW35h07ver+8Ha4JerGGAoTr7Qm+8YZbiHy7Jr6jinv7P/tgiyUymt/M7ng94R+++7Fz3qAp8Ed8j7vU0iAPbx48Ht3GazAfv/ZALI6mhftF8LGrUw3g+4SsJdX/JCRxK594THTS2poL+zkQu47ntfiP+UMbE8+do+30n+2rIU2I/+m9sU8s9wAv4O38v72mSgOHnBLvBv/6blL8LLa/nmLEB788UK+K/MYI/dDAoED+OFcjaRV+UklFxV7BQwFBN8Ouw8rJ4D/SgKaUNentf1O0Ob/NXJlarMTQsg95hD/inv84pFEDLm/n8rqdwP/QyZ9Dg1jrb5qFOkZdENYGfou6xc+r8bUn2XWRI7rb+nweuau2IUhSE6tcKnfe4W2JT2375+JRFD3dRLtUL9sI28+CyrP5YvlvFvDxyBkfABAG3ycv+kT5Hlf8XA1AxguNwCEHHMLBXtbYc4up8OFnFOJPArv3pCfFTfhzuTsvepub3hg4DlPQMXIBdL5neaz/yORo+XJZp5z5+FM5mJTuhmNbzFOJAHJapDOsKT0IeIIRILQIuyRlSUy2KGpuBrAuFk0/r11Wew6RTvRt9jrAE+8SOAkf/G8VXB7N95JsfG8OkNqPTp9Q0uYyCdxvQUbIDJYBI7zrXYEhQLz8Ucz2YAHJjZuuWpTTH5+Ljk9JsB7QrfcvtrL++n+oPwDr+wHn6WfaZyc8cKLvtxJOTgZD6+Lk4c4/175eRZF9cgsF1EWVsAbd+wgUv8ddotU77/TMFJ1E5Q7o8+8wpJZLlPk6L2CtxjxlbR0+WKzewvNZgg7TRgMRXrZhiFXMwMUYa4b8Oh8nJQddz6Y5WjJheB2L5zcGzmUpKmSRNPlz9jCjD/dz3gYlOfGQWOmruo1Ny3hYSsI8QOozZHS79PETWs7pqMqJc2WywHG0vQ0Gavvxp/bGEsm0yc6cJzroxPhXAyVzla3FzpF5AMGNp1blIokY2J0io87Nj3LDmmZtl+Pb65NgfAh5ODYmjKjXXTabNHldFSBeg4400BxxYtmOrUlHRbJJjtN6355afiAiQm5kg8WjgVZ76NohUpqbpYhGzV8vrlGzdvRHs/9CW41MPyU0/m1plgY2+OuTx6IUmXc+ZK44QAFepgra8+54zB6kxI2tWPUikB8qy673OpGnhRVDEbYoW61fzILCskzurJqNu0+UPE+jghXfkVXgZJyQY9GnLn96C4+6a9kWV9k8lqHjwMIYWfTqBzgANzHIbSdyLhkcUVSyjhF8b3COhx/L05GnPn/7yIdf9kD4GOYpYBfph7GJxL1TKSsWUUBb3x0b/RfJL6QmjTDjP0Vs/EAy0n29keGejm0oPQidzn64v8NnG59G5K7x5XDvrCIOXAB5Dl5eVvuosF+MieJ93fpv0FNQXYFvNcW++lQnAB744IaEXACjYuAOTdVUrX0ykPs8zzN4WwG4AO8u+TiW5N+cWAPXP/b5l37XDWrojsCLWpULjkJ5+CBbK/5wGvBMv7y/B8quEc043E5N/eAzuI+IoXxqOKmk/HEpJXqqyv+UT54rn8wFiE1CKhGho5dCE8/32JT+HCnopmzQTH/GugUw35h1/s9JZv6WfWoedANjZ5uyzXl9sTN/irrKSr9OV9+lKhp/Xw2ogOFUecFwyWWEZbNHkytR1rQ8ISKMdWXQ0lcRiOgxeTLF/sbK6xLRo/qy0XQI5sM+iZmcO+gVPsjOcm7eZAIzvNQOUogJKv21cfx4uCua9jt529wHC5wVdiV8BsxNI95SY9M8Go+VbVyWR8UoSakWbBsGLMuIL49a8GFB34V2iSZCF6G2nS74Xz2f+l/Ck2rMKMjjaz8HRxaQQ3akFhqp64y5aUymIc6UwZeJRltMcMPuH+KLqI8h7Fczgx/CSVEJnKtSnXhvPO3SEh2TbnGHtTBvGAOwwZkT8z9+jT6EJ/vi/0KybR5C4yNgrn6ap1KYTrtN2CkmNNoEycp3FhDdBN7GZUI+N2NL1t+riOSFVZmplRXnmC+I6gjT575vrXVqsbYBZM7MmtIGcTL13/3zn/AB1+G2CzNYuXH9t84P/Zoek+LtvjSCLmTvQvo9z/3pXsDf8XM6146K+8rVUt1vcDFnXQQoqC8JjIrtnIv4tVEoJtauqK6g6VGvQQk/eWj41rF42zZEpAtgDboYSPG875GceD/+FFT5f9EImUV35bNWobhfWgY+amSmNNiRZE2CAPH1uewufHJ8LEmuVSYctc7h2xLlMzVs8j3JnHzpH4qKkN9LRqNPm3Uz11ZlB7u5kO+CvSCS2lFoIOjdWHH8C4E51/brwT3x+Oyvq3X425S0Pexq3c110/nSWnUAUa7mDYjOcc+29b7DjqjW+YifQjTpkzCWw1PGG15Xknz/M95iC2CT6fUgWCgnLmYw0VY/IhwMcji3ORsboliYAvJ8z48/j7R1NdpHh9/ncgPtQr7mLpIh/fcG/q86Htp6Rz/Xnulkw7fLpxdVpukEdfF5eThYmQtCf0T/qsr9iiiftcspdyo9G2VCasPIoGaK5+eyNlQ40PhIPFybkyjthQPSyvI1VmjqvbluckXZoVwkheBTvJoTaHXeGh7VcZzJg92wpv7aFvFvkgM5RMy889IoLfJfjKf4npQocxmS0+Fh53BmJCfE+OcLIobEHE
*/