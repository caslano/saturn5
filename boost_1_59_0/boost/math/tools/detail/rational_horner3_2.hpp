//  (C) Copyright John Maddock 2007.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//  This file is machine generated, do not edit by hand

// Polynomial evaluation using second order Horners rule
#ifndef BOOST_MATH_TOOLS_RAT_EVAL_2_HPP
#define BOOST_MATH_TOOLS_RAT_EVAL_2_HPP

namespace boost{ namespace math{ namespace tools{ namespace detail{

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T*, const U*, const V&, const std::integral_constant<int, 0>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(0);
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V&, const std::integral_constant<int, 1>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[0]) / static_cast<V>(b[0]);
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 2>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((a[1] * x + a[0]) / (b[1] * x + b[0]));
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 3>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(((a[2] * x + a[1]) * x + a[0]) / ((b[2] * x + b[1]) * x + b[0]));
}

template <class T, class U, class V>
inline V evaluate_rational_c_imp(const T* a, const U* b, const V& x, const std::integral_constant<int, 4>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((((a[3] * x + a[2]) * x + a[1]) * x + a[0]) / (((b[3] * x + b[2]) * x + b[1]) * x + b[0]));
}


}}}} // namespaces

#endif // include guard


/* rational_horner3_2.hpp
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
*/