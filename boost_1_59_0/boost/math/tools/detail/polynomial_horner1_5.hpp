//  (C) Copyright John Maddock 2007.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
//  This file is machine generated, do not edit by hand

// Polynomial evaluation using Horners rule
#ifndef BOOST_MATH_TOOLS_POLY_EVAL_5_HPP
#define BOOST_MATH_TOOLS_POLY_EVAL_5_HPP

namespace boost{ namespace math{ namespace tools{ namespace detail{

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T*, const V&, const std::integral_constant<int, 0>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(0);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V&, const std::integral_constant<int, 1>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 2>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(a[1] * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 3>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((a[2] * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 4>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>(((a[3] * x + a[2]) * x + a[1]) * x + a[0]);
}

template <class T, class V>
inline V evaluate_polynomial_c_imp(const T* a, const V& x, const std::integral_constant<int, 5>*) BOOST_MATH_NOEXCEPT(V)
{
   return static_cast<V>((((a[4] * x + a[3]) * x + a[2]) * x + a[1]) * x + a[0]);
}


}}}} // namespaces

#endif // include guard


/* polynomial_horner1_5.hpp
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
*/