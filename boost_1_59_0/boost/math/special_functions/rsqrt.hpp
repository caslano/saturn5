//  (C) Copyright Nick Thompson 2020.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MATH_SPECIAL_FUNCTIONS_RSQRT_HPP
#define BOOST_MATH_SPECIAL_FUNCTIONS_RSQRT_HPP
#include <cmath>
#include <type_traits>
#include <limits>

namespace boost::math {

template<typename Real>
inline Real rsqrt(Real const & x)
{
    using std::sqrt;
    if constexpr (std::is_same_v<Real, float> || std::is_same_v<Real, double> || std::is_same_v<Real, long double>)
    {
        return 1/sqrt(x);
    }
    else
    {
        // if it's so tiny it rounds to 0 as long double,
        // no performance gains are possible:
        if (x < std::numeric_limits<long double>::denorm_min() || x > (std::numeric_limits<long double>::max)()) {
            return 1/sqrt(x);
        }
        Real x0 = 1/sqrt(static_cast<long double>(x));
        // Divide by 512 for leeway:
        Real s = sqrt(std::numeric_limits<Real>::epsilon())*x0/512;
        Real x1 = x0 + x0*(1-x*x0*x0)/2;
        while(abs(x1 - x0) > s) {
            x0 = x1;
            x1 = x0 + x0*(1-x*x0*x0)/2;
        }
        // Final iteration get ~2ULPs:
        return  x1 + x1*(1-x*x1*x1)/2;;
    }
}


}
#endif

/* rsqrt.hpp
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
*/