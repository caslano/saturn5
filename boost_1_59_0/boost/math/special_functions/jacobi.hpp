//  (C) Copyright Nick Thompson 2019.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MATH_SPECIAL_JACOBI_HPP
#define BOOST_MATH_SPECIAL_JACOBI_HPP

#include <limits>
#include <stdexcept>

namespace boost { namespace math {

template<typename Real>
Real jacobi(unsigned n, Real alpha, Real beta, Real x)
{
    static_assert(!std::is_integral<Real>::value, "Jacobi polynomials do not work with integer arguments.");

    if (n == 0) {
        return Real(1);
    }
    Real y0 = 1;
    Real y1 = (alpha+1) + (alpha+beta+2)*(x-1)/Real(2);

    Real yk = y1;
    Real k = 2;
    Real k_max = n*(1+std::numeric_limits<Real>::epsilon());
    while(k < k_max)
    {
        // Hoping for lots of common subexpression elimination by the compiler:
        Real denom = 2*k*(k+alpha+beta)*(2*k+alpha+beta-2);
        Real gamma1 = (2*k+alpha+beta-1)*( (2*k+alpha+beta)*(2*k+alpha+beta-2)*x + alpha*alpha -beta*beta);
        Real gamma0 = -2*(k+alpha-1)*(k+beta-1)*(2*k+alpha+beta);
        yk = (gamma1*y1 + gamma0*y0)/denom;
        y0 = y1;
        y1 = yk;
        k += 1;
    }
    return yk;
}

template<typename Real>
Real jacobi_derivative(unsigned n, Real alpha, Real beta, Real x, unsigned k)
{
    if (k > n) {
        return Real(0);
    }
    Real scale = 1;
    for(unsigned j = 1; j <= k; ++j) {
        scale *= (alpha + beta + n + j)/2;
    }

    return scale*jacobi<Real>(n-k, alpha + k, beta+k, x);
}

template<typename Real>
Real jacobi_prime(unsigned n, Real alpha, Real beta, Real x)
{
    return jacobi_derivative<Real>(n, alpha, beta, x, 1);
}

template<typename Real>
Real jacobi_double_prime(unsigned n, Real alpha, Real beta, Real x)
{
    return jacobi_derivative<Real>(n, alpha, beta, x, 2);
}

}}
#endif

/* jacobi.hpp
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
*/