//  (C) Copyright Matt Borland 2022.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#include <cmath>
#include <iterator>
#include <utility>
#include <algorithm>
#include <type_traits>
#include <initializer_list>
#include <boost/math/special_functions/logaddexp.hpp>

namespace boost { namespace math {

// https://nhigham.com/2021/01/05/what-is-the-log-sum-exp-function/
// See equation (#)
template <typename ForwardIterator, typename Real = typename std::iterator_traits<ForwardIterator>::value_type>
Real logsumexp(ForwardIterator first, ForwardIterator last)
{
    using std::exp;
    using std::log1p;
    
    const auto elem = std::max_element(first, last);
    const Real max_val = *elem;

    Real arg = 0;
    while (first != last)
    {
        if (first != elem) 
        {
            arg += exp(*first - max_val);
        }

        ++first;
    }

    return max_val + log1p(arg);
}

template <typename Container, typename Real = typename Container::value_type>
inline Real logsumexp(const Container& c)
{
    return logsumexp(std::begin(c), std::end(c));
}

template <typename... Args, typename Real = typename std::common_type<Args...>::type, 
          typename std::enable_if<std::is_floating_point<Real>::value, bool>::type = true>
inline Real logsumexp(Args&& ...args)
{
    std::initializer_list<Real> list {std::forward<Args>(args)...};
    
    if(list.size() == 2)
    {
        return logaddexp(*list.begin(), *std::next(list.begin()));
    }
    return logsumexp(list.begin(), list.end());
}

}} // Namespace boost::math

/* logsumexp.hpp
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
*/