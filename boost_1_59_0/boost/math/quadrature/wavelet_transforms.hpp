/*
 * Copyright Nick Thompson, 2020
 * Use, modification and distribution are subject to the
 * Boost Software License, Version 1.0. (See accompanying file
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 */
#ifndef BOOST_MATH_QUADRATURE_WAVELET_TRANSFORMS_HPP
#define BOOST_MATH_QUADRATURE_WAVELET_TRANSFORMS_HPP
#include <boost/math/special_functions/daubechies_wavelet.hpp>
#include <boost/math/quadrature/trapezoidal.hpp>

namespace boost::math::quadrature {

template<class F, typename Real, int p>
class daubechies_wavelet_transform
{
public:
    daubechies_wavelet_transform(F f, int grid_refinements = -1, Real tol = 100*std::numeric_limits<Real>::epsilon(),
    int max_refinements = 12) : f_{f}, psi_(grid_refinements), tol_{tol}, max_refinements_{max_refinements}
    {}

    daubechies_wavelet_transform(F f, boost::math::daubechies_wavelet<Real, p> wavelet, Real tol = 100*std::numeric_limits<Real>::epsilon(),
    int max_refinements = 12) : f_{f}, psi_{wavelet}, tol_{tol}, max_refinements_{max_refinements}
    {}

    auto operator()(Real s, Real t)->decltype(std::declval<F>()(std::declval<Real>())) const
    {
        using std::sqrt;
        using std::abs;
        using boost::math::quadrature::trapezoidal;
        auto g = [&] (Real u) {
            return f_(s*u+t)*psi_(u);
        };
        auto [a,b] = psi_.support();
        return sqrt(abs(s))*trapezoidal(g, a, b, tol_, max_refinements_);
    }

private:
    F f_;
    boost::math::daubechies_wavelet<Real, p> psi_;
    Real tol_;
    int max_refinements_;
};


}
#endif

/* wavelet_transforms.hpp
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
*/