//  Copyright John Maddock 2006, 2007, 2012, 2014.
//  Copyright Paul A. Bristow 2006, 2007, 2012

//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

// This file includes *all* the special functions.
// this may be useful if many are used
// - to avoid including each function individually.

#ifndef BOOST_MATH_SPECIAL_FUNCTIONS_HPP
#define BOOST_MATH_SPECIAL_FUNCTIONS_HPP

#include <boost/math/special_functions/airy.hpp>
#include <boost/math/special_functions/acosh.hpp>
#include <boost/math/special_functions/asinh.hpp>
#include <boost/math/special_functions/atanh.hpp>
#include <boost/math/special_functions/bernoulli.hpp>
#include <boost/math/special_functions/bessel.hpp>
#include <boost/math/special_functions/bessel_prime.hpp>
#include <boost/math/special_functions/beta.hpp>
#include <boost/math/special_functions/binomial.hpp>
#include <boost/math/special_functions/cbrt.hpp>
#include <boost/math/special_functions/cos_pi.hpp>
#include <boost/math/special_functions/chebyshev.hpp>
#include <boost/math/special_functions/digamma.hpp>
#include <boost/math/special_functions/ellint_1.hpp>
#include <boost/math/special_functions/ellint_2.hpp>
#include <boost/math/special_functions/ellint_3.hpp>
#include <boost/math/special_functions/ellint_d.hpp>
#include <boost/math/special_functions/jacobi_theta.hpp>
#include <boost/math/special_functions/jacobi_zeta.hpp>
#include <boost/math/special_functions/heuman_lambda.hpp>
#include <boost/math/special_functions/ellint_rc.hpp>
#include <boost/math/special_functions/ellint_rd.hpp>
#include <boost/math/special_functions/ellint_rf.hpp>
#include <boost/math/special_functions/ellint_rj.hpp>
#include <boost/math/special_functions/ellint_rg.hpp>
#include <boost/math/special_functions/erf.hpp>
#include <boost/math/special_functions/expint.hpp>
#include <boost/math/special_functions/expm1.hpp>
#include <boost/math/special_functions/factorials.hpp>
#include <boost/math/special_functions/fpclassify.hpp>
#include <boost/math/special_functions/gamma.hpp>
#include <boost/math/special_functions/hermite.hpp>
#include <boost/math/special_functions/hypot.hpp>
#include <boost/math/special_functions/hypergeometric_1F0.hpp>
#include <boost/math/special_functions/hypergeometric_0F1.hpp>
#include <boost/math/special_functions/hypergeometric_2F0.hpp>
#include <boost/math/special_functions/hypergeometric_1F1.hpp>
#include <boost/math/special_functions/hypergeometric_pFq.hpp>
#include <boost/math/special_functions/jacobi_elliptic.hpp>
#include <boost/math/special_functions/laguerre.hpp>
#include <boost/math/special_functions/lanczos.hpp>
#include <boost/math/special_functions/legendre.hpp>
#include <boost/math/special_functions/log1p.hpp>
#include <boost/math/special_functions/math_fwd.hpp>
#include <boost/math/special_functions/next.hpp>
#include <boost/math/special_functions/owens_t.hpp>
#include <boost/math/special_functions/polygamma.hpp>
#include <boost/math/special_functions/powm1.hpp>
#include <boost/math/special_functions/sign.hpp>
#include <boost/math/special_functions/sin_pi.hpp>
#include <boost/math/special_functions/sinc.hpp>
#include <boost/math/special_functions/sinhc.hpp>
#include <boost/math/special_functions/spherical_harmonic.hpp>
#include <boost/math/special_functions/sqrt1pm1.hpp>
#include <boost/math/special_functions/zeta.hpp>
#include <boost/math/special_functions/modf.hpp>
#include <boost/math/special_functions/round.hpp>
#include <boost/math/special_functions/trunc.hpp>
#include <boost/math/special_functions/pow.hpp>
#include <boost/math/special_functions/next.hpp>
#include <boost/math/special_functions/owens_t.hpp>
#include <boost/math/special_functions/hankel.hpp>
#include <boost/math/special_functions/ulp.hpp>
#include <boost/math/special_functions/relative_difference.hpp>
#include <boost/math/special_functions/lambert_w.hpp>
#include <boost/math/special_functions/gegenbauer.hpp>
#include <boost/math/special_functions/jacobi.hpp>
#include <boost/math/special_functions/legendre_stieltjes.hpp>
#endif // BOOST_MATH_SPECIAL_FUNCTIONS_HPP

/* special_functions.hpp
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
*/