//  (C) Copyright John Maddock 2005.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MATH_COMPLEX_DETAILS_INCLUDED
#define BOOST_MATH_COMPLEX_DETAILS_INCLUDED
//
// This header contains all the support code that is common to the
// inverse trig complex functions, it also contains all the includes
// that we need to implement all these functions.
//

#include <cmath>
#include <complex>
#include <limits>
#include <boost/math/special_functions/sign.hpp>
#include <boost/math/special_functions/fpclassify.hpp>
#include <boost/math/special_functions/sign.hpp>
#include <boost/math/constants/constants.hpp>

namespace boost{ namespace math{ namespace detail{

template <class T>
inline T mult_minus_one(const T& t)
{
   return (boost::math::isnan)(t) ? t : (boost::math::changesign)(t);
}

template <class T>
inline std::complex<T> mult_i(const std::complex<T>& t)
{
   return std::complex<T>(mult_minus_one(t.imag()), t.real());
}

template <class T>
inline std::complex<T> mult_minus_i(const std::complex<T>& t)
{
   return std::complex<T>(t.imag(), mult_minus_one(t.real()));
}

template <class T>
inline T safe_max(T t)
{
   return std::sqrt((std::numeric_limits<T>::max)()) / t;
}
inline long double safe_max(long double t)
{
   // long double sqrt often returns infinity due to
   // insufficient internal precision:
   return std::sqrt((std::numeric_limits<double>::max)()) / t;
}

template <class T>
inline T safe_min(T t)
{
   return std::sqrt((std::numeric_limits<T>::min)()) * t;
}
inline long double safe_min(long double t)
{
   // long double sqrt often returns zero due to
   // insufficient internal precision:
   return std::sqrt((std::numeric_limits<double>::min)()) * t;
}

} } } // namespaces

#endif // BOOST_MATH_COMPLEX_DETAILS_INCLUDED


/* details.hpp
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
*/