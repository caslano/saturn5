//  (C) Copyright Matt Borland 2021.
//  (C) Copyright John Maddock 2021.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MATH_CCMATH_LDEXP_HPP
#define BOOST_MATH_CCMATH_LDEXP_HPP

#include <cmath>
#include <limits>
#include <type_traits>
#include <stdexcept>
#include <boost/math/tools/is_constant_evaluated.hpp>
#include <boost/math/ccmath/abs.hpp>
#include <boost/math/ccmath/isinf.hpp>
#include <boost/math/ccmath/isnan.hpp>

namespace boost::math::ccmath {

namespace detail {

template <typename Real>
inline constexpr Real ldexp_impl(Real arg, int exp) noexcept
{
    while(exp > 0)
    {
        arg *= 2;
        --exp;
    }
    while(exp < 0)
    {
        arg /= 2;
        ++exp;
    }

    return arg;
}

} // Namespace detail

template <typename Real, std::enable_if_t<!std::is_integral_v<Real>, bool> = true>
inline constexpr Real ldexp(Real arg, int exp) noexcept
{
    if(BOOST_MATH_IS_CONSTANT_EVALUATED(arg))
    {
        return boost::math::ccmath::abs(arg) == Real(0) ? arg :
               boost::math::ccmath::isinf(arg) ? arg :
               boost::math::ccmath::isnan(arg) ? arg :
               boost::math::ccmath::detail::ldexp_impl(arg, exp);
    }
    else
    {
        using std::ldexp;
        return ldexp(arg, exp);
    }
}

template <typename Z, std::enable_if_t<std::is_integral_v<Z>, bool> = true>
inline constexpr double ldexp(Z arg, int exp) noexcept
{
    return boost::math::ccmath::ldexp(static_cast<double>(arg), exp);
}

inline constexpr float ldexpf(float arg, int exp) noexcept
{
    return boost::math::ccmath::ldexp(arg, exp);
}

#ifndef BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS
inline constexpr long double ldexpl(long double arg, int exp) noexcept
{
    return boost::math::ccmath::ldexp(arg, exp);
}
#endif

} // Namespaces

#endif // BOOST_MATH_CCMATH_LDEXP_HPP

/* ldexp.hpp
+Kung42oMKde6f0sHEbUIGTB9DhjByiKs+ZSySSbBeUqZnEYFrt7miwiRQvX817hq9338TpTWYlacLP0EwtIUHIVDhAoG43dqIyEVNlnmuLOnhHUaXo2o181KK1UowkO/FRngjIO5UH/JWCnd01FwYts0NIaoALED/rbqWXAVcsoH2Sk3EDtdYmoYUSsdhNnDES7dZEv7n9gbC/903kTgCVV3XHChzgHaZHZVaqTtQ/1JsnrbSYzfSuIhaDUM9MB1i6M6RzphbTRVELcZHhmSgWZmJCKyMt0DSA5LAbyY+yo/TGeNpfukk0YQZ96k1FZWetwA5hYsXcUowkpdo9+K431EFfPo3XovpzZc8jESGLrT0dZncqGj04RYoEQM8AxsAiYoD+KH3qaeJ3cExxvLUS9Im/zwsvIV4HMzozHeV1bjv4UeYI/11IcC1NgLsV9VHtHLN0ITdqbYLUozPTrPi4HJUwXxJ6fzXQJnxivLIpnQBxUVhWG3QLXwrYvwyE+UD6PEQrCP2GCq2NwturQNifJ1o20fZhYC5ynH94zcOZTzKlNTXnIVMgYXPc7t8Y/A3VXiFyfO3HYe4IHsarxSloseF6Iu0mcYguBnAZB6roX6NcQSC9xuhNYBykDVp6GLRRkjv2M+IwZYZaTk0fHMdruKD6Wzz/bmzycd8rqVknTjVqMV2rafU92SYH2BWawg10OoZabWVcXy+qqhSy0rZZJlm9/tzoxncyN8GHGulU+Ms9msktaxlNBOu+2LmUfpe1OPRZzK3QW9um8UM+2zMH70TfXvBqKhQm9IiHs/E8hCTAVxBDvZ2l4+XgWOolEYMaRGCN1/8JPLRq1U4z3E0Tf6XEMvBWMhD3XL/kMuR6GQMwpw4+VUY1NFcNOwnqFcJ3nd8JZpvXtNQ4VMvdg9oY7QMJHYkcK4bWsM248+MOdzkdkKDooMe6Wq7EvhLSR0UkGUPy+mJ01MmL/4QXDaEPjYB4TCaF3mtsZhOtl+n1HEELzw6gIy5bTjBSy3RHt5ZFejnTmuQLWn9GeKaesdiOEDnK7TC9WUdYDp3b6SKWXsbFBJiXWhNTo9Cu7+03LY5AZHcDjQD6DwsA/I8jRkklQMOWXfu7FiWy2QkYmfsGDw5etbbTcDTMRQpPUcLkPEWAW+9wre8a5LyMJntWfNYEmyL0WFmgbmVCr3jRl93XA8sei7C8WXHvtKFNd+8Ittryh83XyKds3dh/i1d9u6pv6KYjbbhJA3GUuIBAHInR/dMA6+F7wwi0jMQVC4ntuSdEs4e/WPFw2B5zTzoo0TkfTINLVMiFFAFOz0lFqVeKBCtqKtNztNHMsRnCWb6shQ1s+2tsa9HUpthxtHvnGcmgeXzk2fAzymi+pjVqhrsgm29t4gwPuMs+fC7Os2R7gANHb708tjjmA9Mc9MjGnsEG7+plHpFFGZQ3VkNmEx5yyj0yxIjryCmpUIzxsGFqP/UU6C8uEMi1fiirs69Wt+JSloNFAPlK/iJSa0Lq5Y5zLkfvYVY3Px2tUI9fcFbzH9UFtxOE8IHiKWKTCKN5yRZGr7NEhHnDAXMEbziF6KTntzbax+ZGtPyza1K+s3sOyyc6Ugdb1erGVPR0Bu9KPRySwHSVJVo0gFu78oR8YuHrCWYvRAHLNGW5EeWd9JCOmSBziSgc2ryCTxm6vFJDO3MXhP/go2DijwqZQMNtv4E4lqPPIXEieNhx34EXUfDNvN8HtHqvMfhvdzA5LHDXpTE5SIlPnj1CP1vAZDIKNv7o8zIf3EWLg3eC1H0TvpZGR1SYxMnAmY4QVo46J8z25KoZvdCgb1UZO6DYbYZylzHfnnoCefiftBMWAiYi/gfj4MfCQcIxsnpL3ssEX2QA9F5AUWShiSzZLDTnZ0IQ8Te6nGUF3vLd5rrxkIYwmDAlM86tzh58yoFkewxKatTheUM0vpQcCbFN7a2sXm6LvM7oV/cqg62YtjvGxIfDF301XSnNvomeIp8Nw0w7v88hKkHBEXF7ZEa6rPTliiUMLYBEkI3pcO6hKhc5j7eAY1FTidjZ4dH1xHuDAvJ04qwB6EPzM4oFIbSAb+KqbJ3nIyzsoKgUpA/mBe+Eltj1Sg6ItusXKKvQwWxRGvw7f05arcA0I23xADfdvE06KZhJnMeIWn7spbbWh7PA6oCPGpF6zY9turNcLA5bQm3GSYysGNChSk0laKExlm93DhaE8nzGFmquzGK7DfQExET+Gs3XwLqC6NQw4CNmrdBf2zNRMi/TE+OiD1bjrEhtmk0dEup4yHMz8WVPfiIDRXluEKDxj52mvQX/Akyo8V0g3rNYvc+C33BVqRFQeKi5aOHIzIUfzh1Smo7UCUlmCJnRxYFu/9hubDQxcs6Ra/hXOVwZ40o0aiT8OHocMLXZ656zxQq0r4OYLwHm3h2gHvNBiN6Rz98knyMUJC53mlBFTl66ugu6a1ZJulu+nwD+mceat9Si9phzxxAsiE6nsq8YfQjvLM9+Tc3HT/uq+1A9S07U/qpwt0HiDp11R/Nd00KtFVTJ0fhW+WLQIQblzptufnukytyCAXv+k1zywm8OEGlK8O7B+G0Kyk/r2LUcGp5Msd2WZ05O2BraMDUvkfmuJu00BhyAyeWomTLDoLD2fARl6NEWkf5Wi3x9hvvBK2oWy8Gr8kttjaqizyGg/H/l2bICztUI1Rcwd3DTr1J37owkgEwwHOfl4JNAYZ0s7GOKfjojJei6dTzztxsvRRp8935ib6L/TTCUSByR+JHj+9AYYrPc08yZeOwDAvN5/Z3YjfrAL7vP6PZvnNu289iu7uORT4G3/j7G/53bbLFmwIKcE47SbwN3Hp752iS+urGCADC0nZJpwbec1dYERL0fF71DGIYwUaADTAU6ecMtckYVDae2RNPuC2E9NWvRqnHEqMD/xsTvfvNEBtUb2aY0nrOcxUWKiv4yuiakfoWNrFTKHOIV2i9qkzkCRPmHAVCNMPi851T4MRlzP+aR2IIOGj5bTWTqlXp0CccimpYaN+nlWUXcX9hrEXjo3CJ1Gt6/iP3IxnYL+9OHZhCihCVKveqS3JUfxg4fmvCqPCYjcZSYa3r1/6ghQuAD+FzvfLC16Pd3hv/+cxvRGNrceNCxRWMVpy9xrdvQTNaZ2+dfCrmkfn75xF1pjS5p3K3RTugEHrq5Rp47sLeFke2hAFqtqMNOZ+66IJNxRL6AtcnWyn1iaI0r1tm28Nwi003R+0aIymKwQ+gpS4IaT01VWxQNdOyqBq/PZ021zAvZ6ctrAWvvZ9kytPF88gGDwWK3VI/9duPVdaIRLd9mdW6AdRl5DOXmTrfj7Ik1mIFTbGmnmZFLX4xgOfwZXHum+3U741cSzr254SIydLBDon9RueJRcNpBg3HuvNeQTsfiwcd1xQmcAAcQ8y7rZnpvXX5Odk9Sr+V/Z9oHnTV9gqweDiHND9m2X5HeQ+0/c8mNORrLZCsWqa+2yw0yQO1Bwt3JN+SfPuIXL89B1Ux4PgiobPT0lHcn7z75yKo3BOyAykuUkRXwBN6pZkCOnWZwS8Ohx3YO1QeCI+UVVraJs+XUiu0aQWrR1BkxJywgpFfBwGd5GaC5M47u9CCopDF4FUKektMbpFV4WvVfcHQXtHe7rzauExC4S6ojLKQ62FG0e/4fNkFe8RDwMJRkVCqVqWWo3wKgbMK4oxDNh2s/gfGXeDK0EHrnDu0taMFYx1AVObQpS0fTOfKMXjI4atu9EbQbHj3JY4MM27FJU3524RNbzMOXW1Jky91+umsRdbNEyHBLx49l/VeiEFHvggn2N2YG27P8DE4Dsf6bHOLlE3pv6b7DIFmAMLltRU8boMYBq/G0olJwOVyIPLoe5qskjKkQV3F23yC7Y17K8c26GlKLs0Ow3s40tm0NXh0BXEm/TKC8a3btGh3iQgaIUN6/QI+uZv1UIhf202qqA9Xd6MKH3+r82G+cVDZzpVJDqJEBPj7fpJtfUJxL4UTiW26k4MxjrLGw4C/DTslFK0QUwvTEYWsqt0ufrzZVIwdSC82p8hvBOJElxlGwvUqoOzaAq+8bpZHLRwQHotHlJucS2C8IXsj+D3ptsIBHW2FsXQ+zBmwAJcafS65oy8OC1OoOIF5h2CUAG5qJVUHIP30AnLri00MwJkz7CiVWzm/iK4c/7uQUxaIcoAEM6t5tUtr1GVdiduVwMUYmLDAWYcc0zOj9BWeUvLFdm7l+atzZ0pCrS/UyGwyGSrg4g6pWgYWN8Mdk211Gh/UsT8VCXh0nfZEGwUVYPp5e85z71q3peBsG6f/XBkdiDR9oqWanhe2gOskOsLGHVNOrblFpl2hHbcnzDYtlZF5TRKvmXFbIjo2RlkF2PEBlgQGKAhqg5t1VLQgnDfaYJckD//nyK4V0mDDXT5IayU/u4ymdHl38QyAiuZZRFEbjcaUQo58rSpaEBSd2iQBnIMAGnTslrZR8aIGFvFKib/w8OgEhxx1tcSna80Z/olEiG/MqfGZJQ9ysKlNjrUVZGvHsgSNTj6R16yIk8qDKrrEiyFZ5PHcfxXpPkliG0VXGBO30qkfYhGC7qxVuclXgPgWZV8uFUC4uyJF4QXyc9ggSjXJ4pXWFNuFiZiyrPRxHXqkzEqe9AMUd2LpvvV6Xtlp0CcyM642xCPkUzrhFcojbxCLm88yFNmZ2mqdJ9kcirNKmSIc9q0BN9Irkz/SuvVMQGqITW2rTTh2V9VKqe9TL6tGtEdzKGqVm5byG6oec60YsbK2jQgqkRDQFX/o7JZho1q5kUW6drJhRyIYi+TZtdnbIrJH94UhliMR62Z8ilZXlZFqkOQXKIlOZRC+ER2nBBh4XesYsoN96aC6SWIrEJ3B7B3pCeH46k48BYWO3Bfnw+YOZhKmkTaVTf1pqJYT6wDCKAgFYJ6bQ4JbW2TsYT7TqRztb2jIGstTNpOq6WnuXJz0myduLlJaj6u1ueXcJ9X6LPYdXQCLGqD5jVIOHq+m9mmWU1rIhtILdsEEN8izoDd6o9FI+NGVEXqJ3cpG4DzbEh3Fkgh+BiOZKiGusxuL7naJirU6+FkUSakTGgqytLicQGkghxJGaF58eETWTDHdqtGAs1/PUlLbjpFyxDoD69LUuenGDXc6u22VtlAbbIhZyFPVUjYNfbSRoxI+RXGa/Qb+PqdtjGvTYap8FKvZy8Xmx+TLr3q0O2eU9/UNLtVQ9sPOCfeojrTqxT6/j5aBgLSUj7GJmAXvhC8aS6oKQTZC7TjVoVlcXPTAYyi9Inl9gD8qfJuEeKooBZkuQacwwjxeQT52/ATuRccLVoCHrBrtPOKeJwEIOHuGCAAMXp3bkzNweMcKf/JS6yHLXySuFqu6VV3AMJPOCbaUQ+JojeAX5DBnSua9da3tBFL66RdeUgjB1KkLHwbJgR8PKeSKau97wOcENd9dzqPg8nP6b+iN3wtoj6RP3+GwNE3a6SGTSDHhoUqxEzCFF9n+tKrYaSccLy8WvTquxLr7uKSWr9CNOzQ6JvHHd9CDN1ZtkobqPj23Fdy9531vwa/ctFMSsTSKDZo1G1m+4P+fs1E456+iiKF3j8PVEgR8emmUV3fWhBuMPaf/CnahTmNhbrXY5Q5a4eFbl1dX3Tbx7CddVFa0XYpX5YxWQzROZ2MtrdeDqvIJZJQzy2LQ7MrZqWdvgWEttNMkY3YHYQ68H4vUK+uFwtv1MyGmmrvm6OXEvQl1j6Ce2MM6y/kyOnxphFSe43j9lPDDkvPxHto1nQOMmNQ4giQ7xhWPExTi7TaUPa1LDBz8ocaI2bV6q0T5y0G8J+UJcsKpnYpWi/PPN99TH9UZIPl4RZdumfvFoHt2M9ldHSsctKafn2fju8TG/ejU0zlZ7pa80xvffpQ3jrqOznqVHzoCDgdor6ZNDg/c0ezqMveMIUs7CJAmxSHgrjdD1/j5kIEnb6s5oot/9Pd3hA2IvMnsUgUAjI6zf8G/E148hJmwjYQJQ3B6amm8IbUDLE3eHI2xjn2EoSwSukQ3WSGESv7eXAEFl0Y5BAUMLo+FtRokYBQ2NV4GnDfgHwo5z07ClXxcBNPyknpXLv+f0SSuVG+ghvMl65XwyxMTy9J2E6aI5TJHk/UFbm8n+6nI4fbz+CpSPzThGRYMkZNYnveIjzDhh2gIrga+/A4cMoyPwpc+myMc+wckl+39RiwuXQPJxExyWKu3opQhQuHWQ2spyHk86lvPEav5AewOCbOu8EX4dHsxmQrnL1USguBn+kGrQkdOTSS68axZ6UEwlgTjLiLUc1MgP2PctOz7Pm7cU4cCd8HQ6LJcadX06ZVQbbU5fF0W9MxIp4lvNg8crZ1m9n5M1m0da2pJEaINCguM4sMzDeU4nzcnfqKpCw+vyfVYxP3pVb1LhOjX5XBAoz+SHl1oDaqkvm/4rYceAgViJaq4l0AxYy+yDywUPgOD203E/NvhG+RJz9iCSRRj/djRRszOhZXby4UU+Nhrq6CzQEyHrhC0jrMUHEx5HGeP48tJVzGMxx+ueiZ9/ezuofBbBzp1aw/AD9225ngl1eKIJM845apA2lDpQECmLqLDj7wJYJODcLd4kNMnp7aGaRVYRK0UGvYsT9Eis2whdJUCtmnsBAJMVrM3TeJlDZd11j/eH6tS/EFDnxgts+48lYfab2QHFC1qCTR2EWikQCDkPMit2BaqPkA0gfQOAOAOJ+Ko81j90xzkUhWi4QoHTnvvvPBy3RoYCJ06kkQwz1O/GE4nIZdkiL5D3eAOTTllZ9XMZvDiRJBx189x17YuFQuPHwWx4juoGBnL5fLeS+zU9Ns/MPu2rSxsxevMJ4cp6IzCArKin3zWUv3c8ub8yBzjvkhFIQk26yXFItQSJ8RbrIgt0Ja0gbYq+GBUwRTssf8tgZcFgDKE29LACwAZYHTvPKPaT3msKnyMjczGPSpIgsiYLzoIPiHNhiRaiw/QkBBPmBoKWgh58k1leoaCgXV5m031qD7wyekwPKDn0E8oSz11jWoZ7z4qvy/jT/cggjGskEpzgZq3qvUqwyS9frujojC+vE2wFldveTj+IAYwqyQk4sSYA/Z9YMKGwE7uqukeUAeTmIyvSsxnuoOyygNHDskgJ69KkS2iX8VCUHxNcWFagFLLwx+KEKCpt7vVSO7SQo50DFV6BSwYaPYC1MP0YAALNGBgAXfuJlVTOQRMbTWBOBhzX9yBmOaQMJAtw9CKxf6BpeJIhI7C3igRQuO1US5V8rMghajTU5ug88kNYHFBuoxxsO+0J+4vu2gCPEw+NNDdiuZ8fpRaPmXj1iqgxGrSE7AbFCUnv8MmBAij90U1T/EMZfH3iIMYU8DzunUPQBKnFSo3afkDuhej7hkX1lTPjil2OYkNfSe82f1HglXLuiKLb6lf8/WmF2QCf28T5MSGHNd6h4xRx/qcuuZR1bRzYWG+iqA8sIxsOZJrEyZWgUD/sbiooi8qwxd6jI0HEBYvVHbRwxsRZ35TETx+hkmQsh41LoxKxeighm6g9GdPBK7G8mgTb2x57EgpdferzphuASIIDJdTHWL9PGxBdgGVED3Mz1BnhgUNYo7W1qBukg8y68uC8Tf09SXUSApgD40JA90NSpizLY
*/