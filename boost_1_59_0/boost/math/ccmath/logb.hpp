//  (C) Copyright Matt Borland 2021.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_MATH_CCMATH_LOGB_HPP
#define BOOST_MATH_CCMATH_LOGB_HPP

#include <cmath>
#include <limits>
#include <type_traits>
#include <boost/math/tools/is_constant_evaluated.hpp>
#include <boost/math/ccmath/frexp.hpp>
#include <boost/math/ccmath/isinf.hpp>
#include <boost/math/ccmath/isnan.hpp>
#include <boost/math/ccmath/abs.hpp>

namespace boost::math::ccmath {

namespace detail {

// The value of the exponent returned by std::logb is always 1 less than the exponent returned by 
// std::frexp because of the different normalization requirements: for the exponent e returned by std::logb, 
// |arg*r^-e| is between 1 and r (typically between 1 and 2), but for the exponent e returned by std::frexp, 
// |arg*2^-e| is between 0.5 and 1. 
template <typename T>
inline constexpr T logb_impl(T arg) noexcept
{
    int exp = 0;
    boost::math::ccmath::frexp(arg, &exp);

    return exp - 1;
}

} // Namespace detail

template <typename Real, std::enable_if_t<!std::is_integral_v<Real>, bool> = true>
inline constexpr Real logb(Real arg) noexcept
{
    if(BOOST_MATH_IS_CONSTANT_EVALUATED(arg))
    {
        return boost::math::ccmath::abs(arg) == Real(0) ? -std::numeric_limits<Real>::infinity() :
               boost::math::ccmath::isinf(arg) ? std::numeric_limits<Real>::infinity() :
               boost::math::ccmath::isnan(arg) ? std::numeric_limits<Real>::quiet_NaN() :
               boost::math::ccmath::detail::logb_impl(arg);
    }
    else
    {
        using std::logb;
        return logb(arg);
    }
}

template <typename Z, std::enable_if_t<std::is_integral_v<Z>, bool> = true>
inline constexpr double logb(Z arg) noexcept
{
    return boost::math::ccmath::logb(static_cast<double>(arg));
}

inline constexpr float logbf(float arg) noexcept
{
    return boost::math::ccmath::logb(arg);
}

#ifndef BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS
inline constexpr long double logbl(long double arg) noexcept
{
    return boost::math::ccmath::logb(arg);
}
#endif

} // Namespaces

#endif // BOOST_MATH_CCMATH_LOGB_HPP

/* logb.hpp
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
*/