#ifndef  BOOST_SERIALIZATION_QUEUE_HPP
#define BOOST_SERIALIZATION_QUEUE_HPP

// MS compatible compilers support #pragma once
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
# pragma once
#endif

/////////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8
// queue.hpp

// (C) Copyright 2014 Robert Ramey - http://www.rrsd.com .
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for updates, documentation, and revision history.

#include <queue>
#include <boost/config.hpp>
#include <boost/mpl/eval_if.hpp>
#include <boost/mpl/identity.hpp>

// function specializations must be defined in the appropriate
// namespace - boost::serialization
#if defined(__SGI_STL_PORT) || defined(_STLPORT_VERSION)
#define STD _STLP_STD
#else
#define STD std
#endif

namespace boost {
namespace serialization {
namespace detail {

template <typename U, typename C>
struct queue_save : public STD::queue<U, C> {
    template<class Archive>
    void operator()(Archive & ar, const unsigned int file_version) const {
        save(ar, STD::queue<U, C>::c, file_version);
    }
};
template <typename U, typename C>
struct queue_load : public STD::queue<U, C> {
    template<class Archive>
    void operator()(Archive & ar, const unsigned int file_version) {
        load(ar, STD::queue<U, C>::c, file_version);
    }
};

} // detail

template<class Archive, class T, class C>
inline void serialize(
    Archive & ar,
    std::queue< T, C> & t,
    const unsigned int file_version
){
    typedef typename mpl::eval_if<
        typename Archive::is_saving,
        mpl::identity<detail::queue_save<T, C> >,
        mpl::identity<detail::queue_load<T, C> >
    >::type typex;
    static_cast<typex &>(t)(ar, file_version);
}

} // namespace serialization
} // namespace boost

#include <boost/serialization/collection_traits.hpp>

BOOST_SERIALIZATION_COLLECTION_TRAITS(STD::queue)

#undef STD

#endif // BOOST_SERIALIZATION_QUEUE_HPP

/* queue.hpp
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
*/