#ifndef  BOOST_SERIALIZATION_COMPLEX_HPP
#define BOOST_SERIALIZATION_COMPLEX_HPP

// MS compatible compilers support #pragma once
#if defined(_MSC_VER)
# pragma once
#endif

/////////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8
// serialization/utility.hpp:
// serialization for stl utility templates

// (C) Copyright 2007 Matthias Troyer .
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for updates, documentation, and revision history.

#include <complex>
#include <boost/config.hpp>

#include <boost/serialization/nvp.hpp>
#include <boost/serialization/is_bitwise_serializable.hpp>
#include <boost/serialization/split_free.hpp>

namespace boost {
namespace serialization {

template<class Archive, class T>
inline void serialize(
    Archive & ar,
    std::complex< T > & t,
    const unsigned int file_version
){
    boost::serialization::split_free(ar, t, file_version);
}

template<class Archive, class T>
inline void save(
    Archive & ar,
    std::complex< T > const & t,
    const unsigned int /* file_version */
){
    const T re = t.real();
    const T im = t.imag();
    ar << boost::serialization::make_nvp("real", re);
    ar << boost::serialization::make_nvp("imag", im);
}

template<class Archive, class T>
inline void load(
    Archive & ar,
    std::complex< T >& t,
    const unsigned int /* file_version */
){
    T re;
    T im;
    ar >> boost::serialization::make_nvp("real", re);
    ar >> boost::serialization::make_nvp("imag", im);
    t = std::complex< T >(re,im);
}

// specialization of serialization traits for complex
template <class T>
struct is_bitwise_serializable<std::complex< T > >
    : public is_bitwise_serializable< T > {};

template <class T>
struct implementation_level<std::complex< T > >
    : mpl::int_<object_serializable> {} ;

// treat complex just like builtin arithmetic types for tracking
template <class T>
struct tracking_level<std::complex< T > >
    : mpl::int_<track_never> {} ;

} // serialization
} // namespace boost

#endif // BOOST_SERIALIZATION_COMPLEX_HPP

/* complex.hpp
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
*/