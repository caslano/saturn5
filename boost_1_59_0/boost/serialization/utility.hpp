#ifndef  BOOST_SERIALIZATION_UTILITY_HPP
#define BOOST_SERIALIZATION_UTILITY_HPP

// MS compatible compilers support #pragma once
#if defined(_MSC_VER)
# pragma once
#endif

/////////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8
// serialization/utility.hpp:
// serialization for stl utility templates

// (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for updates, documentation, and revision history.

#include <utility>
#include <boost/config.hpp>

#include <boost/type_traits/remove_const.hpp>
#include <boost/serialization/nvp.hpp>
#include <boost/serialization/is_bitwise_serializable.hpp>
#include <boost/mpl/and.hpp>

namespace boost {
namespace serialization {

// pair
template<class Archive, class F, class S>
inline void serialize(
    Archive & ar,
    std::pair<F, S> & p,
    const unsigned int /* file_version */
){
    // note: we remove any const-ness on the first argument.  The reason is that
    // for stl maps, the type saved is pair<const key, T).  We remove
    // the const-ness in order to be able to load it.
    typedef typename boost::remove_const<F>::type typef;
    ar & boost::serialization::make_nvp("first", const_cast<typef &>(p.first));
    ar & boost::serialization::make_nvp("second", p.second);
}

/// specialization of is_bitwise_serializable for pairs
template <class T, class U>
struct is_bitwise_serializable<std::pair<T,U> >
 : public mpl::and_<is_bitwise_serializable< T >,is_bitwise_serializable<U> >
{
};

} // serialization
} // namespace boost

#endif // BOOST_SERIALIZATION_UTILITY_HPP

/* utility.hpp
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
*/