#ifndef BOOST_SERIALIZATION_ITEM_VERSION_TYPE_HPP
#define BOOST_SERIALIZATION_ITEM_VERSION_TYPE_HPP

// (C) Copyright 2010 Robert Ramey
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#include <boost/cstdint.hpp> // uint_least8_t
#include <boost/integer_traits.hpp>
#include <boost/serialization/level.hpp>
#include <boost/serialization/is_bitwise_serializable.hpp>

// fixes broken example build on x86_64-linux-gnu-gcc-4.6.0
#include <boost/assert.hpp>

namespace boost {
namespace serialization {

#if defined(_MSC_VER)
#pragma warning( push )
#pragma warning( disable : 4244 4267 )
#endif

class item_version_type {
private:
    typedef unsigned int base_type;
    base_type t;
public:
    // should be private - but MPI fails if it's not!!!
    item_version_type(): t(0) {}
    explicit item_version_type(const unsigned int t_) : t(t_){
        BOOST_ASSERT(t_ <= boost::integer_traits<base_type>::const_max);
    }
    item_version_type(const item_version_type & t_) :
        t(t_.t)
    {}
    item_version_type & operator=(item_version_type rhs){
        t = rhs.t;
        return *this;
    }
    // used for text output
    operator base_type () const {
        return t;
    }
    // used for text input
    operator base_type & () {
        return t;
    }
    bool operator==(const item_version_type & rhs) const {
        return t == rhs.t;
    }
    bool operator<(const item_version_type & rhs) const {
        return t < rhs.t;
    }
};

#if defined(_MSC_VER)
#pragma warning( pop )
#endif

} } // end namespace boost::serialization

BOOST_IS_BITWISE_SERIALIZABLE(item_version_type)

BOOST_CLASS_IMPLEMENTATION(item_version_type, primitive_type)

#endif //BOOST_SERIALIZATION_ITEM_VERSION_TYPE_HPP

/* item_version_type.hpp
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
*/