#ifndef  BOOST_SERIALIZATION_UNIQUE_PTR_HPP
#define BOOST_SERIALIZATION_UNIQUE_PTR_HPP

// MS compatible compilers support #pragma once
#if defined(_MSC_VER)
# pragma once
#endif

/////////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8
// unique_ptr.hpp:

// (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for updates, documentation, and revision history.
#include <memory>
#include <boost/serialization/split_free.hpp>
#include <boost/serialization/nvp.hpp>

namespace boost {
namespace serialization {

/////////////////////////////////////////////////////////////
// implement serialization for unique_ptr< T >
// note: this must be added to the boost namespace in order to
// be called by the library
template<class Archive, class T>
inline void save(
    Archive & ar,
    const std::unique_ptr< T > &t,
    const unsigned int /*file_version*/
){
    // only the raw pointer has to be saved
    // the ref count is rebuilt automatically on load
    const T * const tx = t.get();
    ar << BOOST_SERIALIZATION_NVP(tx);
}

template<class Archive, class T>
inline void load(
    Archive & ar,
    std::unique_ptr< T > &t,
    const unsigned int /*file_version*/
){
    T *tx;
    ar >> BOOST_SERIALIZATION_NVP(tx);
    // note that the reset automagically maintains the reference count
    t.reset(tx);
}

// split non-intrusive serialization function member into separate
// non intrusive save/load member functions
template<class Archive, class T>
inline void serialize(
    Archive & ar,
    std::unique_ptr< T > &t,
    const unsigned int file_version
){
    boost::serialization::split_free(ar, t, file_version);
}

} // namespace serialization
} // namespace boost


#endif // BOOST_SERIALIZATION_UNIQUE_PTR_HPP

/* unique_ptr.hpp
tznQo46B6vhO0f5nqrikgMGLer4+OV8LutakKcNAm3hN2uQrY/ExbHyqNHVr5u76rq05IV9niqDvEQajB27CHY7T++tvUlWTd3FIQre7fAGX8sNolctQbkOAwYffTz1QiSBkVufH76dLznCogN65PWFuwvMwLp8j3v2A3v7pTjQWXNo+0UjiV7A/BlNacz4/zJfoXjY/mIHpM81vpJau9L8Naq/q9mjVEZopZUiF+N5ahu85i2/nQzzuhjMxR4W0POIoiTSP+PvWjpTO8EmGaeKzhgclYpPnjYh0G9LrXkoIQP2wXuqt8C1voK8v8OhPbgOMDWUvcBYZcUeRMVEvztY4EwJcZIpb/tyHy/05PdYaajY19QJmdhM6tmgk4x9nUB+nhXb5V2hFkpla5baVc5jD/epAVggEPlNMrxd63pyYH/a8qXobP6f9kNUlvt5Bn1Zzw8lxR1AKxO+C18iE9+AUTgl7jlwCqrzoAD5CxGyG9lQPAEiGsQJRMzT2Esa2J+dpc5x9+c2seSv57ZKcdElmajxDslqpvQ464HeHRDWMLhJaKsxzCFmaKlK9SPNA/2iiM8qKLTb1nD4VO/XMuEOf6NSWsOJ0sAfugsGtmvtkH26VFYIAzWcV290seBXOl6Wag3JHudQf2COOXwZlBdO5yqTaA7eppVbcCyzokzQP8avZLZ5d1qOAQDZz7yfyOJ7L7oVOcSO00i4txRKsdbmLZ0OOGT1pKNdFT3YqY2JLYH01DhDmgUGLt+Oh8T9OuvmKzo0Bi0/CHOu+9M3n0aM4pxn7KRx3i0HN3wEGkuulrAxeR/TDPv6up3Y4CJnNOCyVoZKDpw6sENPXs4i8Fr7oeEuUa5uBcWhLGPNazpvDRLAK1vKC1odjQTOBvLIR8OVb48OQyFwLDoUW7CY4MFoyw39/Ka/ui2kpUOlADxXXv6UtwKcCvbLvT5BhFFb1HPvsHGOiaY54W9VAS8WasZWf0At3yhXQJWFUhc4lYVNoYemmaJoF9u9Jxeduuc37uhLLowIfbf+OoYPOTIrGDGuTnJ2YaGMMhtHIWUlD0XEJOLi6iugO6cJ3osdYTJszDccvtKQrEPX4aiPnKT5v/vNygrB6dUTCv9klegbc3JQ42VVNt5TLSNXwHmqt2h2xiX9+Yxirx+ZCGOupedkmvfj8HhO1inFFPQeZktD6FaaLC2tLl1m30Xoe0gX36utYxWYpfqF5w1+TYOkWbh5L0bwjTK7TEAJNjUGiqAagFn+jMor2Md8br/HQ200GEqeFxQ+3mQ3lscSwa+PwKEfUUpIuOuCb5VIKfMMxkOpdBNJHUwPKK+/vcXoR7WoFjewLyIv/YDX+EAgaHyasoxkKUmwBpPGr2nBu1TfKBRV6tct/QsmH+c/rL7ElDiKlbKbm6Ff7v1HbLUdxT37bYxoQh/k82gy+Jq2FSeyDRHL8dotfl5xM8bCyuBNE1ym8ZCmABj/ZU/MnQIOMcsvbLpuupLgjiRfS7tvr3+OpmY5smLH4P1bOhr6WOsC3GV7olHTCkewTtYdya3eoe1POirfWJCSiv7wYk4KdVQOzEAB08dO7Mmz6OKxZpuNaK+G2gEl6PVija2shrr2zhtCTRVpwaVNg2SgJlwpigaUhQ62pHJ4oXpLvC6xRsoxAjR6o8QcW3demBxZF1WVeX6DGE/0Tg3/sLhwAEVsstgCG2nwQmN6gALKh1XyK6IEPBKnWTQP7p6WELyCSVLc9sAjil8ARey2qKmrw8d+FGRr/9QUWLXRQs1lNQAus1QOLB6TZfkVXlK4aumrpWkLXw3QtpUuj69cDsFTTbMvoitG1nK5H6FpB16N0PUbX43StpOsJup6k6zd0PUXX03T9lq7f0fUMXc/S9Rxdz9O1iq7VdP2erhfoepGuOrr+QNcf6VpD10t0vUzXn+haS9crdP2ZrlfpWkfXa3T9ha7X6VpP1wa63qDrTbrq6dpI11t0vU3XJrreoWszXe/S1UBXI11b6NpK1za63qNrO11NdDXTtYOu9+naSdcuuv5K12669tDVQtdeuj6g60O69tH1N7o+outjulrp2k/XJ3QdoKuNroN0fUrXZ3S10/V3uv5B1z/pOkTXv+j6nK4v6BJ0ddD1b7ridHXS9SVd/6HrK7q66DpM19d0fUPXEbr+S9dRuo7R1U3Xt3Qdp+sEXT109dJ1ki6DLvvANNsiOC3ltaEFdlnrN8Nav3QSvn2Mo0gvgxcEXqoJZlsffGrObaag5qYVCUGNjJuZz14L6TQmynFMxC4qHiHCmt6TqG5nIy1dOk72iOe28OF7GkplxXA24wfofCjV7pg/wc++zav8ps6VeVrBrOeqxhTVPnqesOW7kHrp5Re4u4lDsJAsrJZT04m8nAQ8YmJYvP9bw4Cm0lhfOoe5H7345ILvE3wZufhkFf4WLD65CH/zwuI8wSBvcFj2728N6ThTHakhZvn4g6k0dcfzZnOjkP7UulnNINidPKcy2G2viV+11h54EJpgl1XENkNRgIbsIqJjoBi64veMobt1b0VCe0CGrE6oK+Jb0WqvrUItjHiNebmxkuyQ+Avcwk7O1fc6PrgpdmPLkfkePezVQi6txBsV3psePKxXw84yXbzxX1oEc1yIrF4hOn6bxRHcSrxwHlPC3kq3uY0St5Zphpb4n755/f/2m99P/ab6Xd/Ubad+tYwZbAhIiuAD8HolYu9zENB0PdDDASkwKpG8+v9C5jT03Sx2fjyLJqGVBm3xTput2KZ/6wtkVxGozPYFcvE3Nxagxn/wK1qtw/StFxlGMcwMtIfBtTAeg6PQxVUFNkHodGb0ESS6Fv8TmhRFR4sajm5NU+zFetAd3TE5a79/u+qI/rM34hUXH+hhf1R9nVEBsleGDoK93haS7hduaYUvs3DYUAtiwXYDHnZ6ysqhfLLh5XSYTOqtxw6cfQCRn0YOOEFQ/+RWz8oGsXlzlm1LvkViuZPuPCJ2bQm4GeWwThuG/faA04yK8Pjl0hVRUUNHDqiFTMISciJ2CAyBkYj7Zf7l8U99w/PBiL0wtgQZIfP9Iw54iymgHCu2AmIoTgS9M0RWw3EURnI1ytP6RKAhw2QOR0sYzDmeml9Cm2qiO5nLARSOjJS5szg3O5kLj1jiIzP3Bs7NTeZyGId6MxcKVr45ecpZlGc8kGvm/tbMhddkWgYd5rBIraYqM/NzeI63EpfDcmTJiixzlPhTUvVpMhdXL+t4g8qb4zR8M7LC8tXdadYo0e6taccI5RYdLcFYh6kS1prqZ37zPuh68QByHutRfVko88Kcl2flsWbVXjPvOs7zWnmsa7XBzDv3pDW4nMfaV0+beWnIW5hNeB/lVUh9rCoz73Pqsr7dlNpW7oOW5kVR2H+9TZvosNSbFGnPgQIsOkA1/FKfONI3/Yhq2XasAiBLUc0sP0Uzs99rqZqZ+n09cByvXpxqqSEDHIK1xYdQig5miuql8lK6TbxLjUr1gz8SjdwvpZBi1rMW74lVlUtcRUQhne4GX6t2adXuPl7wZ5ocHVO3tLyvF/yJ69JTveA335vqBZ+w0TM5wd++hkhcv3iX/uglI6Pzj9howORHeMDMNI9lQwuX/dSqJANR7HuLtUzhINj081/1jMlrD+L1u9y2cijGznaZtUtH/t9d+2x3qjt+SHZ4yG+bYzp4Yd851rcG8bdowr/x1DyG0WR+lX+n4obyaNjD/KqrZIzofKnWd2IbQ+Sz+JTTd2uzncaKTfSqGXYg7qAW+J4HMa328812J8LdYNxS2p5oIz5U9AqlNIsn/pxcGpYKUFInQ/r86dkI51Sed4NufZvmIsjc2OH1vAtXl6ZHAKaEH0xYLUOtYh4w7Yt/Z3I3vjTZGXdQ1/4ONshuMCvu+L0dbhkn5kufL2/bvrLbpOOXB7Ji60zeg+ObCuZ1Clue5QhCnzt38X8QfI+za49WZxJ5evGRlM0WGVs/DTvt5JtZbF55ahifo8daYfH4em4WBFkgfjw1n9mYk1vzsQ3KicF6Te0Se8fDB2I9ZD9qj3jisaQkPnCIxfA7v6Rjl00T/duVn8AssZNuhO7S57tMJ1haEEl/8z2Qq0zABp+LDS7VHjArMGu6JsbCRnErfSCE77F+4R4jLC0gi45qwV2+QBeIkS6f2qk+DfNtKn/ZY1Dn7DLUQ9SsuU7P842aji5R68W4Gy3hWb2YPR4+KoBTiW1vWhrWZaZOaKyO+RhYM7dhVo7XSesYxrJcISzE2CNrwYhc9xcm3D4iqlVU06eptGXeskfvEvM+oA06Bs/wRZ6MSr9H5P3XMOawqno3DW59FFOz6w2JSRyO/iGP2QfTnVqtDUo7Bzw1QMmkhvV7wBigYc2uj8WJs7AItFo3a/d4ahaj4GZBFcSL4EnDU7PSfOEG+cL7Z5mrJtvYgJdMZpiN+1xCqNMOnSuraFqCZtj57Xxaux8/iS/Mv1AfCmbgYxCf+zZPBZnslW/IYnUvc4trJ6Nubr++HM2J1vXQycC+E+6lSuNZYlWclkoMzsZ0OL//Co3sx43UOFWcR00tOoDeuegRyAa7/JGVznfGv6c30SHxZkrnvsw1w7wP02N4Rx8Usvrmqf0H1vMJ9X2dq9NjaE+yk/r8fNPchDvjb1yQocX47oSaYw4Vb24YIHZAdBXlTxgxri5UISHTDxucNuMNJ6+5RQRCNiCzQhy9L91mVoLhg7nqYzdSRXJBLhIbZ6XbfM/xaF5vvh6Dl71kDeuTNewONQV60Gbx7EuGeT6gsLifajFq0S/fsxhBT+0zOI3lgJW6/cvhyFy9U64PWl/xqVhR96MML5WfAD9Jjubzw6A5Zi01jf3CiV9Topy16Db2YVWL4E3JcVYyaA2tifdPGVm+E79YnwVvcZUwFKt/Ayv+k9ezOHbqSmZrY347qLhver4MrhHPNZYvBU32Bn715SgWFkZzGo0UUqraNf4rY414loMdDXKm8QkA2ehCuJrUMUqvDkZs1Fgn1NxP0KmJA5bNWmK1XZQG5p54sYNoPDiWk0mxWpQOia8pWc+U75YZb6AJ+h5CO1as5c6qQ2WzYhPsoWjT1IoIHeFKU5pN5xeMJWge5geo9V77CWOCaZO3DM4LxazXLdBzNOBKg1L30EhaOLZExgyady4HRN51EghlUv28rGw1RwxqkAq4dCAByHbjGda2mD4XszOJFBQHc6SdX+0B5efQAbz8KebC/Uh/GxCaLecNZSp73Jlledy5+mhJgV0dGa122ZSLiUi/ODZ5pBj9IGLHzh8asUe3T5U6EtAtMdchzfjb0aqeVBFptKrb5qn9sSElNVvF619YLD52gWyoRJvTXbEOKVwfhUrWpqy0uXASuOrE41+jCrApK2GPXd+BlbPqNUsXg4ezhgg0m+9+WjeN0CU55XSznPYe+0yr2nYGz70BUR5jl4haYKXouq4X3of9JxVvjL0M41h5RYcDVWlGziVF1zhYkq8qavCpq9ivIx19LZ/TWqFj8KSSoQfbx8cd7FRmk35YC6yQyJZ0BNBgquTxQ40OjwNLwaN7Sgs844uyR6CaP2Lf9NHFfgJbQwqUa+HwRToIWNwINS2xo43mmV/Vl0IoFF2FX5sWbKCZJQSlszB4iJZJcCk9EhlbA7kPNNkrYk+AdzMl9gT3P7hI1krP7HSZGTvw9W56HtCCT+lwafSM/JbG35KnffTOZXTtYjT/B1BIytDVZj2whrqLpM8AY6RbgjVa1SIAG0hjDHUb7a5gTZkcVvoD55xl+p6mwIt88oTyogtzpU270i9atc2m0GJfyk4JzvGrmxRPtGoZ4XhNgWWM9xHdWbTj/MCLKKltQMQeZWgs+ypNXaurKxzb7cFd2rT12rTmuFef1u5437Fdm7ZWC67XpDMG2Sl1He2Qhf5uoj5SvTP8TA4+QU8uFq2HpopNV5/Spz2z8Bw9uIZgYbZvvEv1ROvhDt+mZiDWFB3naLVbD64s3O0Lrl/ojl+I+XjfF6yvPkuPoY3RO1+kqWquiC3lyfxFGzwSvEhogl2jzKapMXWtVA1YJCWuoxDc5kWln15SEG23a4FlvslewnODazy1DwP2B7d5aoAN64GVhYFd+s7CwKanC7cQYunYe1JTFyXWVM0i7N2j1QuibwPjsyn302IENGmGPKgB8qDDKHYByDbCbYvhVKJoByUB39uFozyTslhn3UmQYzSrMbTU1YGJv6iO/ZcaOfdgj1Xt0oO7dDt3pgWdoV7ANYT6mB7YpAdXYOnAqUVgaexGezptmGjVGoIf9fgyjzfaAUOzmNoeq+LhoN2/DnOw0OVbhwFXfthnvspNxdSbfeo2wlACK0u1wPrCwFPFWmBtfIAeqKfn+sLAM2Bgmr42Yg9aQ02tk4lwqaXcGP1hsS1ij4+2CtJ6SjgwP8NLhOj5xhcrA7TxxREWxkBSYairTNix3tcLpe9v4L17p/j8A+sI58xtV/ca4sZXJD0Wew1WjZBVmeJ1F+7XsrW8ljHbl54Ph+Fn+9IL6C8CenCP+7+A5I7d3xrGVj7m6ifWEMy8Zy17V+LoY+8AR9AYRyAMCmpf5Y3taaEK0buRVfjSheMfBMxY7V57FugDkWOFCFVAFNJ/B9JxWtmwlTCEKg87F5hhvMED0ywRVmNKtkSVQg6c4rHlh3D+/7y1F4aSKZE9nmN0pJ1acIXOjBCJ6FFrCBdYDhN2rbabGho/T88wgm4pSAT65ZvlXtjZcTWIS+6JfkOUsR5nZK74bAZbeR5BB2chJJqnvLw8YlRQw+/9CRHKpneYkNmqtP29wPAGWUJNxu4+B6yd5fXU/BoTdzo2N4Iq0ocW7RjfjxGhCEHOHkaKgdLRMenZXuuhdLvpxSpTPjImcJSxKDsBrjrcnATyt6k83bboHS6iDDHxyL/8hzrHCKbmMnhY4uV9Mc1jG5gGHndmdLG2Ek2M0PG1mw5pqKSlIJwSWwzQZ40YBthTi2hd+js80SeUIRiMpPWq9Kw7m05X5hvzzC4D+bwEcbX8W9VhKaKx5x/pYUwdBkHlxhtwpGGMucOSPbJ6Sa4ZnmLWR6ctCDPUCzudpYZU0GwdAJLvqfkpIMF0YCgHlLEy6stO0e5mCfZI3vhYmre6sR7LUxaisQE35hdzPu6FjsefEHam/aU+KlsQJ4MnQUvf9VmPIfpfSjXNdXveDLgqD1NfQmEjRxnNSjBgbr5jl0nzRyOayRFqxL9DRs4CemKuyUHPmyUE/iPOW4/9w7Oi8dj+rOYyEahgh0VwCPs7WPh43pzsLPe8OTstNiEDvobGZ9AyIlSIDuyHN2UlggPQF3+k5yA0wH4hAwPUfnB6IDE/Eg/uh5vsA4HOVst+Fn7qRzyfZTsADOsQxw87ix7h5SvYqfPnZBQxNjkaErGVlRtqFyTcneLVWlp0wyXHcc6vWCzhMdQeFEB2dg1v1aIDE6LznXTaISJ3qTP6Lqbcpg6GioZ0mDWaN4UyX3+Y9zi90lB04C5/Scb9Y2MlcNiJb+uBHs+bNniVcz6tDoOQOySX+UtxGxRojYBbc2FUo7SaJ/hbF7wPT4sPcwS3NydnwJNQGcQde4wViGAFcYeacT7nU7JwhGnsDfWIkbOuiOZo620mSokVXP97gMdhfwQxAqxQ
*/