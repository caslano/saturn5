#ifndef BOOST_SERIALIZATION_COLLECTION_SIZE_TYPE_HPP
#define BOOST_SERIALIZATION_COLLECTION_SIZE_TYPE_HPP

// (C) Copyright 2005 Matthias Troyer
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#include <cstddef> // size_t
#include <boost/serialization/strong_typedef.hpp>
#include <boost/serialization/level.hpp>
#include <boost/serialization/split_free.hpp>
#include <boost/serialization/is_bitwise_serializable.hpp>

namespace boost {
namespace serialization {

//BOOST_STRONG_TYPEDEF(std::size_t, collection_size_type)

class collection_size_type {
private:
    typedef std::size_t base_type;
    base_type t;
public:
    collection_size_type(): t(0) {}
    explicit collection_size_type(const std::size_t & t_) :
        t(t_)
    {}
    collection_size_type(const collection_size_type & t_) :
        t(t_.t)
    {}
    collection_size_type & operator=(const collection_size_type & rhs){
        t = rhs.t;
        return *this;
    }
    collection_size_type & operator=(const unsigned int & rhs){
        t = rhs;
        return *this;
    }
    // used for text output
    operator base_type () const {
        return t;
    }
    // used for text input
    operator base_type & () {
        return t;
    }
    bool operator==(const collection_size_type & rhs) const {
        return t == rhs.t;
    }
    bool operator<(const collection_size_type & rhs) const {
        return t < rhs.t;
    }
};


} } // end namespace boost::serialization

BOOST_CLASS_IMPLEMENTATION(collection_size_type, primitive_type)
BOOST_IS_BITWISE_SERIALIZABLE(collection_size_type)

#endif //BOOST_SERIALIZATION_COLLECTION_SIZE_TYPE_HPP

/* collection_size_type.hpp
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
*/