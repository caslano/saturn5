#ifndef  BOOST_SERIALIZATION_STACK_HPP
#define BOOST_SERIALIZATION_STACK_HPP

// MS compatible compilers support #pragma once
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
# pragma once
#endif

/////////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8
// stack.hpp

// (C) Copyright 2014 Robert Ramey - http://www.rrsd.com .
// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for updates, documentation, and revision history.

#include <stack>
#include <boost/config.hpp>
#include <boost/mpl/eval_if.hpp>
#include <boost/mpl/identity.hpp>

// function specializations must be defined in the appropriate
// namespace - boost::serialization
#if defined(__SGI_STL_PORT) || defined(_STLPORT_VERSION)
#define STD _STLP_STD
#else
#define STD std
#endif

namespace boost {
namespace serialization {
namespace detail{

template <typename U, typename C>
struct stack_save : public STD::stack<U, C> {
    template<class Archive>
    void operator()(Archive & ar, const unsigned int file_version) const {
        save(ar, STD::stack<U, C>::c, file_version);
    }
};
template <typename U, typename C>
struct stack_load : public STD::stack<U, C> {
    template<class Archive>
    void operator()(Archive & ar, const unsigned int file_version) {
        load(ar, STD::stack<U, C>::c, file_version);
    }
};

} // detail

template<class Archive, class T, class C>
inline void serialize(
    Archive & ar,
    std::stack< T, C> & t,
    const unsigned int file_version
){
    typedef typename mpl::eval_if<
        typename Archive::is_saving,
        mpl::identity<detail::stack_save<T, C> >,
        mpl::identity<detail::stack_load<T, C> >
    >::type typex;
    static_cast<typex &>(t)(ar, file_version);
}

} // namespace serialization
} // namespace boost

#include <boost/serialization/collection_traits.hpp>

BOOST_SERIALIZATION_COLLECTION_TRAITS(STD::stack)

#undef STD

#endif // BOOST_SERIALIZATION_DEQUE_HPP

/* stack.hpp
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
*/