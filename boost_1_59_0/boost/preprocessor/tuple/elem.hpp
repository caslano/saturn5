# /* Copyright (C) 2001
#  * Housemarque Oy
#  * http://www.housemarque.com
#  *
#  * Distributed under the Boost Software License, Version 1.0. (See
#  * accompanying file LICENSE_1_0.txt or copy at
#  * http://www.boost.org/LICENSE_1_0.txt)
#  */
#
# /* Revised by Paul Mensonides (2002-2011) */
# /* Revised by Edward Diener (2011,2014,2020) */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PREPROCESSOR_TUPLE_ELEM_HPP
# define BOOST_PREPROCESSOR_TUPLE_ELEM_HPP
#
# include <boost/preprocessor/cat.hpp>
# include <boost/preprocessor/config/config.hpp>
# include <boost/preprocessor/facilities/expand.hpp>
# include <boost/preprocessor/facilities/overload.hpp>
# include <boost/preprocessor/tuple/rem.hpp>
# include <boost/preprocessor/variadic/elem.hpp>
# include <boost/preprocessor/tuple/detail/is_single_return.hpp>
#
# if BOOST_PP_VARIADICS_MSVC
#     define BOOST_PP_TUPLE_ELEM(...) BOOST_PP_TUPLE_ELEM_I(BOOST_PP_OVERLOAD(BOOST_PP_TUPLE_ELEM_O_, __VA_ARGS__), (__VA_ARGS__))
#     define BOOST_PP_TUPLE_ELEM_I(m, args) BOOST_PP_TUPLE_ELEM_II(m, args)
#     define BOOST_PP_TUPLE_ELEM_II(m, args) BOOST_PP_CAT(m ## args,)
/*
  Use BOOST_PP_REM_CAT if it is a single element tuple ( which might be empty )
  else use BOOST_PP_REM. This fixes a VC++ problem with an empty tuple and BOOST_PP_TUPLE_ELEM
  functionality. See tuple_elem_bug_test.cxx.
*/
#     define BOOST_PP_TUPLE_ELEM_O_2(n, tuple) \
         BOOST_PP_VARIADIC_ELEM(n, BOOST_PP_EXPAND(BOOST_PP_TUPLE_IS_SINGLE_RETURN(BOOST_PP_REM_CAT,BOOST_PP_REM,tuple) tuple)) \
         /**/
# else
#     define BOOST_PP_TUPLE_ELEM(...) BOOST_PP_OVERLOAD(BOOST_PP_TUPLE_ELEM_O_, __VA_ARGS__)(__VA_ARGS__)
#     define BOOST_PP_TUPLE_ELEM_O_2(n, tuple) BOOST_PP_VARIADIC_ELEM(n, BOOST_PP_REM tuple)
# endif
# define BOOST_PP_TUPLE_ELEM_O_3(size, n, tuple) BOOST_PP_TUPLE_ELEM_O_2(n, tuple)
#
# /* directly used elsewhere in Boost... */
#
# define BOOST_PP_TUPLE_ELEM_1_0(a) a
#
# define BOOST_PP_TUPLE_ELEM_2_0(a, b) a
# define BOOST_PP_TUPLE_ELEM_2_1(a, b) b
#
# define BOOST_PP_TUPLE_ELEM_3_0(a, b, c) a
# define BOOST_PP_TUPLE_ELEM_3_1(a, b, c) b
# define BOOST_PP_TUPLE_ELEM_3_2(a, b, c) c
#
# endif

/* elem.hpp
WI+REITMQZ/4HPBHQM2fQ/Kx6mXJsg9wFPAVYDAGByeeS1+mbVHxN+lZybJgbei3b3leAT3pqkkFYOF2wFb0X+lRaalULGVLS6R7yRyV9JC0WHJLj0j3SGUIlzhsFmC65JBytN8OaYo0Q8qXpiF0lhY2iWNzQOcBLV0W01gUQWua9CCoF+P3YoTex6GZSFMKn84L/U0BHw/g10PAL+Y0KQi7h9Pej9AypCmWyjXcbOQ/TaLPPk1CmqWafyowiK5bo5mLdPnwP4DnMi0sk2kRH5ExhcirFM/JTEfislEFjkJploIDSfM/gHLo/sVcs+R3g7vFQf/9oCX85SjJPZx6FHK9R+N/FCiWo550/4NB+iVheS0Blw9p/vvD6Bdzat0f4uc+yYM8hP9erku+PbHb/aFs25D51s5YwxFDz95BCFv/qmRZC6gCrAHQVxLowxX0ZQX6qMUEwGiAAdD1G8lyHNAEeAewHVANqAIsB5QCWrZDIXoKbe+nkiUjCXFJ4nkNwtIAowBjAbcCMgCZ9ARuNp75gJmA+YBFgBLAUsAywHLAU4DVgJ8D1gJeBFQDXgW8DvgDoAawD3AA8EdAM+AY4Djgb0/R4UbJ8g3gJOAs8emTLH0AJsBgQBLgSkAq4AbAaMDNgAmAyYAsQC5gOmA2YKGPvseBsgPKABWAlYBVPlFu79WoA8Cz+F0FeAGwAfAK0R4iWbbi+XvAdsAeQC2gAXAIcATQAvgc0Ab4CtAFOAXoAaRcI1lioZcaAQMBVkAGaA7DMwXgtEqW6/AcA5j725A8iP6bihZVjjZSilb5KJmuKL7/7qXFD95V/Oj0snseLL/nPnfxoiLuX4vQQ+4B5hLJJo1B21qENKVMA2mmlBXf4y6OSoXwqcWlxRcNd1QUSfQRUdpkcr/GWyFeL56kO6zBMw7PtXga8KzGk/SH1/GMx7NGS3dcSyf9TqRL+51Il/E7ka70dyLd6t+JdFnSXZAd+Zqsuotlmu7P1mQd+WdoTydLAuGfGuafgn/d74A8XMASaRLkBUnKAvzOl+7G//QoHJKg+fiVi5gF+EXY+RE42Ug1BZSy4c/BcwripgHfEZWfnrYgKtzJoZmgks/pc0HBgfCp8E8HhONOhZt7gbhoXqeAYi7oTpPuYPlLcpnk5UOQTJMhdR6CNCxnKS+xDKX4+zCLmsLyfBnHuDkuaadkeZrabJpkaf1pSFZQXBHTuVkayy2NpPcipJwbJu/nSo9LNyF+jHQLYJw0Gv4bweUY5OmAb6yUjpib4ZsE/y1IeSPcSYhzIN0tgJsQdjOwRksrQC0bedzHJSlgHgWnlHvkOPM/my9Zq/sZMO7FGHjNRerzRk3W36fV7UM8mj7I/p8hD5FaCo5CS3hkXMRPGgVp/KjQxsVFeC9XyiFw2iTLNsDo8ZBLu/Aci/cEgC5qScnAu7sBchD+BMyU+6FM9BRuqG/Rr8cRG61jiDSPa89+wC3lsbFcG+ELNH6nIU0BSl3MEscBXt08apeHSaHwMkyvAZ+3ge+J4G9iqAxOhC3/vWhjMVFyUP9dKx6ZpndQzlyUEYAmaNl2Lfw3Imw45s9vgz7CLAAn4dgRjzxbczAmAbYBFtJzJnBmIQ2gKw9j4xuhvEeG+Se8wXKK/W7MzY298BcfNX5LhtgIflVr5O/BUfFSVPliouKpj9+BmiZ9L1/T7XK453lYlyJZdg/eXHS49C/oEY+jRVMvmIrnaGk83Bs5ZDyA+sxNiKGekg7/WPhv5B4wBT4Ha5yZ8E0G7ji0LF23KmWtVUIfmsY6TinrQMWalrnoglrjXG45D4P7JdwGF/1L+uVc/j24NbLOZjyIkWxJubu4bPqjS4uzl9yb+VDZjPJiFn53I60DZZ6B+hTj5VSEZOvjZa+pUtDmuh6A3gPwAlLuQZ3i6QRMgkx3avptZkzku3yc6+gW1N1kliyifm2o33SuX5I398E3GWGTWTqNBkejua7FMxMUJuPXCk2nD/W7lLCel6L1ParlctTTQ5qMie7Xc3k2cB+PB+Va3FxI9SXAX6SNESTNSU8t095ZIcsynercS+RK6YXGX6Zp7ov+hXYY3YcMUb+jdeRR3F4kaTi4qND6zyhpFD9vwPMGMreC91uAskznVuMOtk/dfymeLhVf9zRk1l7oxc9cGvdS8eP3SZbNzwi5QwdQ6GBKW5TciG/tXW7of9fGRbY9y6yf7UwrPjzoBUwouq9MSGidmJ3+0IQjg558XKq9+9HHdv3xt7XzXvmFYXJVXNsHCwad2PrZOujfgEEvSJa7APcCvgL4ALn/KVmex/PXgFcAB9YLXrP+H9YU6RSAF+W+nPpdwdSCTz77/bAJbyTc+a7092/+8pt//om60tRb507PLJibPm5uwYP33D/NzY8l7qIlFdMeLHffU1paXLbgpptGjR01esFkqLH3ueZOXvLgPWVLisvnFi150DZmbj602XvKi1McuTM0EgWu4tJSR4V71NJF90bwU9oqWTq3h/Rx2tjswW/rDowpgKWA1wFtOwQO4Rs0XDrpRE/6gjHRWN3Keu55cdk7QvQp7dwL0K5uZX35vPRrwtIT/Q29pN3eKo4tRadtCktLtFui0jW3huLD00k7Q+FE17IzlCb8T0X6kTsj85iA31lh+OoFeAtPx+3qBOZsO0PjML2L1fhdDXgHcBKQBp1n2y6tHZ7o/V0QjdITvefZEsWrGkabwlaf6L0+LLsi6yNlVyhNtZaXISrN1F2ReU3H74WA5bsi00m9pGu7AB/ro/jYGkZPT2O4SBr6M/0NutGuyDbVRb+hMyXXhMpFeL21R0o78m+98z6+JrLMWVE0w/+yQcNVE3rfZH6mAr/X1lz4nVOa+F7yddVE0t8KvANhtGmP8Ch+m3aDHmA14DigG5C1B78BBwA9gCTok6WA1YDjbwsaRM/US76URwviBvT2HneLtMQvpZ3+f5l3t1bXpij6W3ZH1vV2/K7dHWoP3Rd4R5RObyumXtpKxn+LOEtUnHVPZNtLxe+RWpieRuolzfr/7l0uLtoTKRfdeyLrQ28zo9t6b4db9kS24e29pHW29V4HrXsi664rKl1vcmCyJgdcbb3397FvR9Kcit/Ot0M0XRfghdKt7qXv6vmt0tIZo8sfld92/K4Ny2/VBfLbEpafsZf8dD6i+5GxlzD97x3kNfadyHF0Kn7PBVQAagAnASP3ChzC7012E43Wtt7by9p3ItvLlgvQTv6i9/Zy9J3I9tLWS9qZX/ReZ5a9kXWdsjcyXcUXvcverL2RfWYmfi+MSiNdJA39tQCvam8k79X4vQ1wCGDYJ+JaLlBuSttzgXKpUeXqjqKZ/GXvPKbsiyzX6H2hNBHrmUifHYU7F78XaWFTL0Cf0hx8Hjz9SpKuB8wEvAhoAsS+iPwAMwEvAI7RbcSXJMkGcAI2AJoBfTZgPAL4AHsA7YAbNkrSvYAtgI8BPYC0l3vXVYmfLk3nPYPnNfG//AnX77u9r9/GaGlSfiVw6ffYS+A6w3AXXgLX+ysRL/9KvMvntbTUHtZcIm1tWD5Nl8Dt0vI586tQmU9eJA39rYFMOIS0S24XePS7Gb8H3C5o0Ni+tla0z9LaSFoxUX6C8bVCBsRpfYrC0mrFTZfwtsL1/WKo3Yc/014U+M4XQ2U/UHvpcjR9HggcmhQqB32F3TslVI65dSK/sXXnl0OHWJ1mnZBzBk0mUliXVg7lxfN54ff8Ykj+hcvBWg3/Ty+G3suaukuXR0Xao9nn110037V1IbrNdaKNtdb1/q6IbgvonL07pGPpZU7aH8qL/lJeisx7xEsiH6qTCftFPmn7L5xPJ9K8lH9p/r37Q/xXaXSre6FL6Ze+JMIff0ngPf2SeKfPh/HWsv/SdUu8TZ19ad6S60O8jawXeU6ov3CZyara/DmCp1itHfB6ZL3Iq0vj/4eXQnJdf+r8r9fyWVXfex2M3hDqF8frLy4TlmwQ8Qs3hMphPHDxNNVh9CdcArc1DNd14OL1vh5jWRvdaHo0NObqfWvtgVA/PX5AlH/Lgd7Lr/+2bBR4SRtFfV+t/aZn+Ht1ar9nbQzVgem9S8jsjZoc0Z7rN4ZkdsYl0jZvDNXJ8kvgngzD3frexeuvBvXXijSfV57fd4++F9l3L3s5sg5SXg71j+73RD21vdd7Oz6npTukPen3E6sly9bVAl+PPxoIBP43EkSWyXkzAIBDS+w9C5RTRZaVdKPgjoILuqjsGHpAUIfmffN976XTSTdEu5u2003wt+F1Ut0dO8kLLy/9QXDYXWVBZcTPqjOHdYRRZGY8u4rOyuJn8Bw94m/9MAoyrLrCsPg5io7jyBnUvVXvpfOS7mZh9nN2zvAO1am6devWrVu3btWrd6uwpyesrcx/tSp/WVX+S1X5M288dvn71pn5efi9HkIJvseGd+3taMr3bx+fzj2wHthqrQ2QtYcivFCWwTTif7UJ1iPPl2EPAWzJRuj3nWVY5y5Y790L86sNr/GXsC4BPJcN7wmAzQW8L58rw7qJLwrADtjKPgiwj6Dsly+VYXOJH8v9YN9teBzAdm486fd30u/vpN/fSb+/k35/x+v3l+1JsgxTrE9lMih8ymCyUDB0sAgTsmomoyURumlCj44xzBUTsjibzA8nCjAeCV7OTPgdiUR4aKhZV7N4oZpLZbDOI7SLYBewAfalJpEv6jgJ5NCBmoQZA8ICoWHRm0/jqkHir5OSWW0AQ6I1tjjcAdxR5pDTETSwnk3nVAM3NFweWrLkCrSuNlHMAbl+dCXwAWhaDg+lDfSdmgSFPl+TsCBCTcJsUiKpG+gcZwLnkloKpxK5IhB/yJlI59IGoY8eLscTGD3rSKjZQm+CEkEsaW0+vySZN5rTGUBBv3cQgokU7i729mI90adp/SBpFEwYw3kMlHq0RMrQdIgBek7NJLLY6NNSDSPZDQ2XhZpIY9BM4GooifNGos+UpJBIaiCMHIpBvckMVnM2qjmQeGGELFg0Z5TESbtxqmkoCTR6MTpzQjydwuE+Ve/UWosZI904bGDUNiED/ZzBuThCD9d0qOkCbqI1p6Ey5HQuwEaLWjCadF0DbdgPlNNGWs2kl+OwDjHowxhOEuRQLhXLp3NhrZgz0GvIdLuqwkEfOIAeyAuHDENPdxcNXIB6m0gt7bqWDKVSOi5A308nkFYtVcxYqkSwKKfJbD4dR5eY8fxwLoQuHYnH0bRyOVJLGwgGSgZrWjQ11ZLu1lV9GNKf2OUTzSV1nMXANPrQDo/gEfjHqInAqxuDfDUtWB0Y1UjU7WiGkWLVh3prRqTdqZW6AD1cGwMZaj0duKAV9SSMqxDlspxuczSncyPpOFLsrSDObOiu2hg2Ovt0DGANGMDoZtL+CsgmAlmM9QLl7FAtRNM9wxYgCtoDdA4QKJAKa7lUmjShVS30o/tsJUl1O0jfhYu6DjIhnUU6qp7yGM5oBYx8NN6c1gu0h4FuB6I5Zg+iW5DpumdmBs1eUw3AW1jqQYjfTluQTvabioT+2ioVSYPBgNFDcN60tMukdAMtgbP5dtXoI3pC+WjDQxYbjSW9gbxnnQsyWrea6TJNBXrKSrfQ1MIaKjTSeShixkOm7fsANIAYiXaNjjL0AnBgT2+tjWUwzqP37RoU1rJ5VccjAxDtqO0sma2SANGu2q6cOcZTI+POMijoftK/42fXRAsRy9i0w7AhqvpAzWVFrA+3Y71H07NqLompGAH7WVvvmQoSTSH09Og+BfAwkWhsuGDgbGc6i0MFIkgSQ7VQp4Wn6c3QL2DQS3Vf2tTR1tTCc6aNZhFRc9ILcbQHpKd2Q19Av2iDCP0TiqQLedVI9rUCIbWX6MpRJ/XbzIBsLCBCvLMd4/4yzr1OkEcrzhWjwFlj2siqeZDgdkc0V8A6zYijfktf2rV8MU9AiK8ZLOR16KeeOMJO6wN6JAxryAgGxdCGo0kYGjtRRFcHSbRpCCyEg4y1aNas9wsEAsh0gP6BZSYSg9JdsaaOUlv3W/oIYPQizccDaRA9YY8r6W84jg5aeIu6r6G0LrTyzKbACttKU8Ux0iAxQnEQWp0B/FKpBZGoVbHqLPvQkhHqc9r9Ywkk4rR7wMbRwnJ6sZopQuMYWoYMU0BAOZKiKkSzqZW5jsBA8GVI3wgWMSCUMFpEYE25YtaqORRZHGovMYrqHJabAk6CzY+jf0exhUTH8jgJk0mzlkmBDtPhez7pB5O4ZUViC5taSmrVi8JaJxinVpy1Rma6DOnA1kqlrwyjY3nYEYPZJtfbrGvZBV3RCAcvtWHNFBT1u8gRe7vEYelGzOhtxal0MYuQlsFWzYtamkJdnaX2/KtzIVbzlv6gF2nKZOgVGqfVotdpvAObOb+kKWL1EbqkNOOBbhPoWO+qpfMUh9809x1Ke607Ib0HwiEIU7rhfQbsel6DdzSgUrMboakQZkPw7DZ3LJyoBlW5ipA2RDKZsJojhlBNtcGohDSxBRm1ULA0LUJ03vQfi2F9AIwIQLpyeiXsj/K56gE0ZUoCTXn3UjSFSZT3eO6diaaQUPIPbge8CAQvhO9CcEGYBmEiBJJ3lJxXgHAAwh4IL0HYAeFRCFsgbICQesSkVR8MLQ6Hia5lIpneBuqKUpEXgaGgmRkV8HguRYCVdLKpTlXvxcYYdMzuG0UnOCsc0nV1uIHEzAHR2ZCIQwoSYHzTRmtzOBFpaTGB4T4KK4Q7CFZDqLOlgTz0N9S4mOUgUcWTlqXq06zSidpEreChK1qB0FCZ15Xrz2mDueq2AitA2WxUh6YZTUMNtC66qjKnMljx4YzFolUrGsVbmUIjDPJx8IhBNcU3Vn5X1BwQsAKjNEaVt/MaVpN9ONUwjlzGoN8O9Y9M8semDVRb1XSuNKBHyFW0pRIDHYueXa4xUAyY7scX7Jh0wJ6SNo5ibBYbDLfEopFEpQlqaOC7EsQWNzQ02ihX0o2WlgnRbD7T0BWtJgG0o0A5Oj5pwGiJNo6qHRbRBIsHBIaZxYTMhhMnWTKhLaTTUUWrK3SgurpqHSlxPaqcVYK8QlXnwdLbgLUSWbAQgku3oinkfwZ0jGG7Kvq4khfzzadKD8i4N8DkZMzczobxSo2hQ2bZ4yxYzdtIybHHUgKgidZFka6WJg9TXTcZC2T+H288kHyY3jXyJmTDsNefCDUvIebMqiMR6wx1NlW1j6BUZVe2oU0DK5jst5lURO6XevicX0TseLZX+JFvmuQh59/Jkfi+g5W+CCef/x9PLe0PJ1rqQKsYhFbp8NsOv1PMe89WkYtUV1n7yWXfISc9jXA3wMlJyIdG5Tvoem3nOPB3x4BT/5Qx4PQbnqOS3xLcNQ6cGQfeMAZ8EkTaAX79p+SyY7ITYPlRfoaoM2IpPeN3CD16Sjn96lcITawtp/c4HCjhLKcnoupTHqfSc7zktFgLQIk/1sJLwx2nn3bt6adNatM6MNnoc4Xy+WgEAAQ4ac7sUHt7NDJ7jkt2FVxzKk3PHIpRtayFwU7htPikATVjEjTLl6iRvJXwBwL8aw9FRvhwwWNSrLfPYfWsnQEXBbsAjnNkZ2SOWc4qTh463ZlFrg03e4RGH8PP43mvb57g9iXnNfKN7nkMxwgRCM3hxshKi8TKcTn4v6mfli3q
*/