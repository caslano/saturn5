# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Edward Diener 2011.                                    *
#  *     (C) Copyright Paul Mensonides 2011.                                  *
#  *     Distributed under the Boost Software License, Version 1.0. (See      *
#  *     accompanying file LICENSE_1_0.txt or copy at                         *
#  *     http://www.boost.org/LICENSE_1_0.txt)                                *
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PREPROCESSOR_TUPLE_TO_ARRAY_HPP
# define BOOST_PREPROCESSOR_TUPLE_TO_ARRAY_HPP
#
# include <boost/preprocessor/cat.hpp>
# include <boost/preprocessor/config/config.hpp>
# include <boost/preprocessor/control/if.hpp>
# include <boost/preprocessor/facilities/overload.hpp>
# include <boost/preprocessor/tuple/size.hpp>
# include <boost/preprocessor/variadic/size.hpp>
# include <boost/preprocessor/variadic/has_opt.hpp>
#
# /* BOOST_PP_TUPLE_TO_ARRAY */
#
# if BOOST_PP_VARIADICS_MSVC
#     define BOOST_PP_TUPLE_TO_ARRAY(...) BOOST_PP_TUPLE_TO_ARRAY_I(BOOST_PP_OVERLOAD(BOOST_PP_TUPLE_TO_ARRAY_, __VA_ARGS__), (__VA_ARGS__))
#     define BOOST_PP_TUPLE_TO_ARRAY_I(m, args) BOOST_PP_TUPLE_TO_ARRAY_II(m, args)
#     define BOOST_PP_TUPLE_TO_ARRAY_II(m, args) BOOST_PP_CAT(m ## args,)
#     define BOOST_PP_TUPLE_TO_ARRAY_1(tuple) (BOOST_PP_TUPLE_SIZE(tuple), tuple)
# else
#     define BOOST_PP_TUPLE_TO_ARRAY(...) BOOST_PP_OVERLOAD(BOOST_PP_TUPLE_TO_ARRAY_, __VA_ARGS__)(__VA_ARGS__)
#     if BOOST_PP_VARIADIC_HAS_OPT()
#         define BOOST_PP_TUPLE_TO_ARRAY_1(tuple) BOOST_PP_TUPLE_TO_ARRAY_1_SIZE(BOOST_PP_VARIADIC_SIZE tuple, tuple)
#         define BOOST_PP_TUPLE_TO_ARRAY_1_SIZE(size,tuple) (BOOST_PP_IF(size,size,1), tuple)
#     else
#         define BOOST_PP_TUPLE_TO_ARRAY_1(tuple) (BOOST_PP_VARIADIC_SIZE tuple, tuple)
#     endif
# endif
# define BOOST_PP_TUPLE_TO_ARRAY_2(size, tuple) (size, tuple)
#
# endif

/* to_array.hpp
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
*/