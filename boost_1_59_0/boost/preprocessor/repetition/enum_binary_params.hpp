# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PREPROCESSOR_REPETITION_ENUM_BINARY_PARAMS_HPP
# define BOOST_PREPROCESSOR_REPETITION_ENUM_BINARY_PARAMS_HPP
#
# include <boost/preprocessor/cat.hpp>
# include <boost/preprocessor/config/config.hpp>
# include <boost/preprocessor/punctuation/comma_if.hpp>
# include <boost/preprocessor/repetition/repeat.hpp>
# include <boost/preprocessor/tuple/elem.hpp>
# include <boost/preprocessor/tuple/rem.hpp>
#
# /* BOOST_PP_ENUM_BINARY_PARAMS */
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_EDG()
#    define BOOST_PP_ENUM_BINARY_PARAMS(count, p1, p2) BOOST_PP_REPEAT(count, BOOST_PP_ENUM_BINARY_PARAMS_M, (p1, p2))
# else
#    define BOOST_PP_ENUM_BINARY_PARAMS(count, p1, p2) BOOST_PP_ENUM_BINARY_PARAMS_I(count, p1, p2)
#    define BOOST_PP_ENUM_BINARY_PARAMS_I(count, p1, p2) BOOST_PP_REPEAT(count, BOOST_PP_ENUM_BINARY_PARAMS_M, (p1, p2))
# endif
#
# if BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_STRICT()
#    define BOOST_PP_ENUM_BINARY_PARAMS_M(z, n, pp) BOOST_PP_ENUM_BINARY_PARAMS_M_IM(z, n, BOOST_PP_TUPLE_REM_2 pp)
#    define BOOST_PP_ENUM_BINARY_PARAMS_M_IM(z, n, im) BOOST_PP_ENUM_BINARY_PARAMS_M_I(z, n, im)
# else
#    define BOOST_PP_ENUM_BINARY_PARAMS_M(z, n, pp) BOOST_PP_ENUM_BINARY_PARAMS_M_I(z, n, BOOST_PP_TUPLE_ELEM(2, 0, pp), BOOST_PP_TUPLE_ELEM(2, 1, pp))
# endif
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_MSVC()
#    define BOOST_PP_ENUM_BINARY_PARAMS_M_I(z, n, p1, p2) BOOST_PP_ENUM_BINARY_PARAMS_M_II(z, n, p1, p2)
#    define BOOST_PP_ENUM_BINARY_PARAMS_M_II(z, n, p1, p2) BOOST_PP_COMMA_IF(n) p1 ## n p2 ## n
# else
#    define BOOST_PP_ENUM_BINARY_PARAMS_M_I(z, n, p1, p2) BOOST_PP_COMMA_IF(n) BOOST_PP_CAT(p1, n) BOOST_PP_CAT(p2, n)
# endif
#
# /* BOOST_PP_ENUM_BINARY_PARAMS_Z */
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_EDG()
#    define BOOST_PP_ENUM_BINARY_PARAMS_Z(z, count, p1, p2) BOOST_PP_REPEAT_ ## z(count, BOOST_PP_ENUM_BINARY_PARAMS_M, (p1, p2))
# else
#    define BOOST_PP_ENUM_BINARY_PARAMS_Z(z, count, p1, p2) BOOST_PP_ENUM_BINARY_PARAMS_Z_I(z, count, p1, p2)
#    define BOOST_PP_ENUM_BINARY_PARAMS_Z_I(z, count, p1, p2) BOOST_PP_REPEAT_ ## z(count, BOOST_PP_ENUM_BINARY_PARAMS_M, (p1, p2))
# endif
#
# endif

/* enum_binary_params.hpp
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
*/