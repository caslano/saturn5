# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2005.                                  *
#  *     Distributed under the Boost Software License, Version 1.0. (See      *
#  *     accompanying file LICENSE_1_0.txt or copy at                         *
#  *     http://www.boost.org/LICENSE_1_0.txt)                                *
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# define BOOST_PP_VALUE BOOST_PP_COUNTER + 1
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_COUNTER
#
# undef BOOST_PP_COUNTER_DIGIT_1
# undef BOOST_PP_COUNTER_DIGIT_2
# undef BOOST_PP_COUNTER_DIGIT_3
# undef BOOST_PP_COUNTER_DIGIT_4
# undef BOOST_PP_COUNTER_DIGIT_5
# undef BOOST_PP_COUNTER_DIGIT_6
# undef BOOST_PP_COUNTER_DIGIT_7
# undef BOOST_PP_COUNTER_DIGIT_8
# undef BOOST_PP_COUNTER_DIGIT_9
# undef BOOST_PP_COUNTER_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_10 == 0
#    define BOOST_PP_COUNTER_DIGIT_10 0
# elif BOOST_PP_SLOT_TEMP_10 == 1
#    define BOOST_PP_COUNTER_DIGIT_10 1
# elif BOOST_PP_SLOT_TEMP_10 == 2
#    define BOOST_PP_COUNTER_DIGIT_10 2
# elif BOOST_PP_SLOT_TEMP_10 == 3
#    define BOOST_PP_COUNTER_DIGIT_10 3
# elif BOOST_PP_SLOT_TEMP_10 == 4
#    define BOOST_PP_COUNTER_DIGIT_10 4
# elif BOOST_PP_SLOT_TEMP_10 == 5
#    define BOOST_PP_COUNTER_DIGIT_10 5
# elif BOOST_PP_SLOT_TEMP_10 == 6
#    define BOOST_PP_COUNTER_DIGIT_10 6
# elif BOOST_PP_SLOT_TEMP_10 == 7
#    define BOOST_PP_COUNTER_DIGIT_10 7
# elif BOOST_PP_SLOT_TEMP_10 == 8
#    define BOOST_PP_COUNTER_DIGIT_10 8
# elif BOOST_PP_SLOT_TEMP_10 == 9
#    define BOOST_PP_COUNTER_DIGIT_10 9
# endif
#
# if BOOST_PP_SLOT_TEMP_9 == 0
#    define BOOST_PP_COUNTER_DIGIT_9 0
# elif BOOST_PP_SLOT_TEMP_9 == 1
#    define BOOST_PP_COUNTER_DIGIT_9 1
# elif BOOST_PP_SLOT_TEMP_9 == 2
#    define BOOST_PP_COUNTER_DIGIT_9 2
# elif BOOST_PP_SLOT_TEMP_9 == 3
#    define BOOST_PP_COUNTER_DIGIT_9 3
# elif BOOST_PP_SLOT_TEMP_9 == 4
#    define BOOST_PP_COUNTER_DIGIT_9 4
# elif BOOST_PP_SLOT_TEMP_9 == 5
#    define BOOST_PP_COUNTER_DIGIT_9 5
# elif BOOST_PP_SLOT_TEMP_9 == 6
#    define BOOST_PP_COUNTER_DIGIT_9 6
# elif BOOST_PP_SLOT_TEMP_9 == 7
#    define BOOST_PP_COUNTER_DIGIT_9 7
# elif BOOST_PP_SLOT_TEMP_9 == 8
#    define BOOST_PP_COUNTER_DIGIT_9 8
# elif BOOST_PP_SLOT_TEMP_9 == 9
#    define BOOST_PP_COUNTER_DIGIT_9 9
# endif
#
# if BOOST_PP_SLOT_TEMP_8 == 0
#    define BOOST_PP_COUNTER_DIGIT_8 0
# elif BOOST_PP_SLOT_TEMP_8 == 1
#    define BOOST_PP_COUNTER_DIGIT_8 1
# elif BOOST_PP_SLOT_TEMP_8 == 2
#    define BOOST_PP_COUNTER_DIGIT_8 2
# elif BOOST_PP_SLOT_TEMP_8 == 3
#    define BOOST_PP_COUNTER_DIGIT_8 3
# elif BOOST_PP_SLOT_TEMP_8 == 4
#    define BOOST_PP_COUNTER_DIGIT_8 4
# elif BOOST_PP_SLOT_TEMP_8 == 5
#    define BOOST_PP_COUNTER_DIGIT_8 5
# elif BOOST_PP_SLOT_TEMP_8 == 6
#    define BOOST_PP_COUNTER_DIGIT_8 6
# elif BOOST_PP_SLOT_TEMP_8 == 7
#    define BOOST_PP_COUNTER_DIGIT_8 7
# elif BOOST_PP_SLOT_TEMP_8 == 8
#    define BOOST_PP_COUNTER_DIGIT_8 8
# elif BOOST_PP_SLOT_TEMP_8 == 9
#    define BOOST_PP_COUNTER_DIGIT_8 9
# endif
#
# if BOOST_PP_SLOT_TEMP_7 == 0
#    define BOOST_PP_COUNTER_DIGIT_7 0
# elif BOOST_PP_SLOT_TEMP_7 == 1
#    define BOOST_PP_COUNTER_DIGIT_7 1
# elif BOOST_PP_SLOT_TEMP_7 == 2
#    define BOOST_PP_COUNTER_DIGIT_7 2
# elif BOOST_PP_SLOT_TEMP_7 == 3
#    define BOOST_PP_COUNTER_DIGIT_7 3
# elif BOOST_PP_SLOT_TEMP_7 == 4
#    define BOOST_PP_COUNTER_DIGIT_7 4
# elif BOOST_PP_SLOT_TEMP_7 == 5
#    define BOOST_PP_COUNTER_DIGIT_7 5
# elif BOOST_PP_SLOT_TEMP_7 == 6
#    define BOOST_PP_COUNTER_DIGIT_7 6
# elif BOOST_PP_SLOT_TEMP_7 == 7
#    define BOOST_PP_COUNTER_DIGIT_7 7
# elif BOOST_PP_SLOT_TEMP_7 == 8
#    define BOOST_PP_COUNTER_DIGIT_7 8
# elif BOOST_PP_SLOT_TEMP_7 == 9
#    define BOOST_PP_COUNTER_DIGIT_7 9
# endif
#
# if BOOST_PP_SLOT_TEMP_6 == 0
#    define BOOST_PP_COUNTER_DIGIT_6 0
# elif BOOST_PP_SLOT_TEMP_6 == 1
#    define BOOST_PP_COUNTER_DIGIT_6 1
# elif BOOST_PP_SLOT_TEMP_6 == 2
#    define BOOST_PP_COUNTER_DIGIT_6 2
# elif BOOST_PP_SLOT_TEMP_6 == 3
#    define BOOST_PP_COUNTER_DIGIT_6 3
# elif BOOST_PP_SLOT_TEMP_6 == 4
#    define BOOST_PP_COUNTER_DIGIT_6 4
# elif BOOST_PP_SLOT_TEMP_6 == 5
#    define BOOST_PP_COUNTER_DIGIT_6 5
# elif BOOST_PP_SLOT_TEMP_6 == 6
#    define BOOST_PP_COUNTER_DIGIT_6 6
# elif BOOST_PP_SLOT_TEMP_6 == 7
#    define BOOST_PP_COUNTER_DIGIT_6 7
# elif BOOST_PP_SLOT_TEMP_6 == 8
#    define BOOST_PP_COUNTER_DIGIT_6 8
# elif BOOST_PP_SLOT_TEMP_6 == 9
#    define BOOST_PP_COUNTER_DIGIT_6 9
# endif
#
# if BOOST_PP_SLOT_TEMP_5 == 0
#    define BOOST_PP_COUNTER_DIGIT_5 0
# elif BOOST_PP_SLOT_TEMP_5 == 1
#    define BOOST_PP_COUNTER_DIGIT_5 1
# elif BOOST_PP_SLOT_TEMP_5 == 2
#    define BOOST_PP_COUNTER_DIGIT_5 2
# elif BOOST_PP_SLOT_TEMP_5 == 3
#    define BOOST_PP_COUNTER_DIGIT_5 3
# elif BOOST_PP_SLOT_TEMP_5 == 4
#    define BOOST_PP_COUNTER_DIGIT_5 4
# elif BOOST_PP_SLOT_TEMP_5 == 5
#    define BOOST_PP_COUNTER_DIGIT_5 5
# elif BOOST_PP_SLOT_TEMP_5 == 6
#    define BOOST_PP_COUNTER_DIGIT_5 6
# elif BOOST_PP_SLOT_TEMP_5 == 7
#    define BOOST_PP_COUNTER_DIGIT_5 7
# elif BOOST_PP_SLOT_TEMP_5 == 8
#    define BOOST_PP_COUNTER_DIGIT_5 8
# elif BOOST_PP_SLOT_TEMP_5 == 9
#    define BOOST_PP_COUNTER_DIGIT_5 9
# endif
#
# if BOOST_PP_SLOT_TEMP_4 == 0
#    define BOOST_PP_COUNTER_DIGIT_4 0
# elif BOOST_PP_SLOT_TEMP_4 == 1
#    define BOOST_PP_COUNTER_DIGIT_4 1
# elif BOOST_PP_SLOT_TEMP_4 == 2
#    define BOOST_PP_COUNTER_DIGIT_4 2
# elif BOOST_PP_SLOT_TEMP_4 == 3
#    define BOOST_PP_COUNTER_DIGIT_4 3
# elif BOOST_PP_SLOT_TEMP_4 == 4
#    define BOOST_PP_COUNTER_DIGIT_4 4
# elif BOOST_PP_SLOT_TEMP_4 == 5
#    define BOOST_PP_COUNTER_DIGIT_4 5
# elif BOOST_PP_SLOT_TEMP_4 == 6
#    define BOOST_PP_COUNTER_DIGIT_4 6
# elif BOOST_PP_SLOT_TEMP_4 == 7
#    define BOOST_PP_COUNTER_DIGIT_4 7
# elif BOOST_PP_SLOT_TEMP_4 == 8
#    define BOOST_PP_COUNTER_DIGIT_4 8
# elif BOOST_PP_SLOT_TEMP_4 == 9
#    define BOOST_PP_COUNTER_DIGIT_4 9
# endif
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_COUNTER_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_COUNTER_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_COUNTER_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_COUNTER_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_COUNTER_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_COUNTER_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_COUNTER_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_COUNTER_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_COUNTER_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_COUNTER_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_COUNTER_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_COUNTER_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_COUNTER_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_COUNTER_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_COUNTER_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_COUNTER_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_COUNTER_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_COUNTER_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_COUNTER_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_COUNTER_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_COUNTER_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_COUNTER_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_COUNTER_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_COUNTER_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_COUNTER_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_COUNTER_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_COUNTER_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_COUNTER_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_COUNTER_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_COUNTER_DIGIT_1 9
# endif
#
# if BOOST_PP_COUNTER_DIGIT_10
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_10(BOOST_PP_COUNTER_DIGIT_10, BOOST_PP_COUNTER_DIGIT_9, BOOST_PP_COUNTER_DIGIT_8, BOOST_PP_COUNTER_DIGIT_7, BOOST_PP_COUNTER_DIGIT_6, BOOST_PP_COUNTER_DIGIT_5, BOOST_PP_COUNTER_DIGIT_4, BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_9
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_9(BOOST_PP_COUNTER_DIGIT_9, BOOST_PP_COUNTER_DIGIT_8, BOOST_PP_COUNTER_DIGIT_7, BOOST_PP_COUNTER_DIGIT_6, BOOST_PP_COUNTER_DIGIT_5, BOOST_PP_COUNTER_DIGIT_4, BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_8
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_8(BOOST_PP_COUNTER_DIGIT_8, BOOST_PP_COUNTER_DIGIT_7, BOOST_PP_COUNTER_DIGIT_6, BOOST_PP_COUNTER_DIGIT_5, BOOST_PP_COUNTER_DIGIT_4, BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_7
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_7(BOOST_PP_COUNTER_DIGIT_7, BOOST_PP_COUNTER_DIGIT_6, BOOST_PP_COUNTER_DIGIT_5, BOOST_PP_COUNTER_DIGIT_4, BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_6
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_6(BOOST_PP_COUNTER_DIGIT_6, BOOST_PP_COUNTER_DIGIT_5, BOOST_PP_COUNTER_DIGIT_4, BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_5
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_5(BOOST_PP_COUNTER_DIGIT_5, BOOST_PP_COUNTER_DIGIT_4, BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_4
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_4(BOOST_PP_COUNTER_DIGIT_4, BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_3
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_3(BOOST_PP_COUNTER_DIGIT_3, BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# elif BOOST_PP_COUNTER_DIGIT_2
#    define BOOST_PP_COUNTER BOOST_PP_SLOT_CC_2(BOOST_PP_COUNTER_DIGIT_2, BOOST_PP_COUNTER_DIGIT_1)
# else
#    define BOOST_PP_COUNTER BOOST_PP_COUNTER_DIGIT_1
# endif

/* counter.hpp
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
*/