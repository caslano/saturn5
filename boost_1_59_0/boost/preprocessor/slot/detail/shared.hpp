# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PP_VALUE
#    error BOOST_PP_ERROR:  BOOST_PP_VALUE is not defined
# endif
#
# undef BOOST_PP_SLOT_TEMP_1
# undef BOOST_PP_SLOT_TEMP_2
# undef BOOST_PP_SLOT_TEMP_3
# undef BOOST_PP_SLOT_TEMP_4
# undef BOOST_PP_SLOT_TEMP_5
# undef BOOST_PP_SLOT_TEMP_6
# undef BOOST_PP_SLOT_TEMP_7
# undef BOOST_PP_SLOT_TEMP_8
# undef BOOST_PP_SLOT_TEMP_9
# undef BOOST_PP_SLOT_TEMP_10
#
# if (BOOST_PP_VALUE) / 1000000000UL == 0
#    define BOOST_PP_SLOT_TEMP_10 0
# elif (BOOST_PP_VALUE) / 1000000000UL == 1
#    define BOOST_PP_SLOT_TEMP_10 1
# elif (BOOST_PP_VALUE) / 1000000000UL == 2
#    define BOOST_PP_SLOT_TEMP_10 2
# elif (BOOST_PP_VALUE) / 1000000000UL == 3
#    define BOOST_PP_SLOT_TEMP_10 3
# elif (BOOST_PP_VALUE) / 1000000000UL == 4
#    define BOOST_PP_SLOT_TEMP_10 4
# elif (BOOST_PP_VALUE) / 1000000000UL == 5
#    define BOOST_PP_SLOT_TEMP_10 5
# elif (BOOST_PP_VALUE) / 1000000000UL == 6
#    define BOOST_PP_SLOT_TEMP_10 6
# elif (BOOST_PP_VALUE) / 1000000000UL == 7
#    define BOOST_PP_SLOT_TEMP_10 7
# elif (BOOST_PP_VALUE) / 1000000000UL == 8
#    define BOOST_PP_SLOT_TEMP_10 8
# elif (BOOST_PP_VALUE) / 1000000000UL == 9
#    define BOOST_PP_SLOT_TEMP_10 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 0
#    define BOOST_PP_SLOT_TEMP_9 0
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 1
#    define BOOST_PP_SLOT_TEMP_9 1
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 2
#    define BOOST_PP_SLOT_TEMP_9 2
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 3
#    define BOOST_PP_SLOT_TEMP_9 3
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 4
#    define BOOST_PP_SLOT_TEMP_9 4
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 5
#    define BOOST_PP_SLOT_TEMP_9 5
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 6
#    define BOOST_PP_SLOT_TEMP_9 6
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 7
#    define BOOST_PP_SLOT_TEMP_9 7
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 8
#    define BOOST_PP_SLOT_TEMP_9 8
# elif BOOST_PP_SLOT_OFFSET_10(BOOST_PP_VALUE) / 100000000UL == 9
#    define BOOST_PP_SLOT_TEMP_9 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 0
#    define BOOST_PP_SLOT_TEMP_8 0
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 1
#    define BOOST_PP_SLOT_TEMP_8 1
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 2
#    define BOOST_PP_SLOT_TEMP_8 2
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 3
#    define BOOST_PP_SLOT_TEMP_8 3
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 4
#    define BOOST_PP_SLOT_TEMP_8 4
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 5
#    define BOOST_PP_SLOT_TEMP_8 5
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 6
#    define BOOST_PP_SLOT_TEMP_8 6
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 7
#    define BOOST_PP_SLOT_TEMP_8 7
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 8
#    define BOOST_PP_SLOT_TEMP_8 8
# elif BOOST_PP_SLOT_OFFSET_9(BOOST_PP_VALUE) / 10000000UL == 9
#    define BOOST_PP_SLOT_TEMP_8 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 0
#    define BOOST_PP_SLOT_TEMP_7 0
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 1
#    define BOOST_PP_SLOT_TEMP_7 1
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 2
#    define BOOST_PP_SLOT_TEMP_7 2
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 3
#    define BOOST_PP_SLOT_TEMP_7 3
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 4
#    define BOOST_PP_SLOT_TEMP_7 4
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 5
#    define BOOST_PP_SLOT_TEMP_7 5
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 6
#    define BOOST_PP_SLOT_TEMP_7 6
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 7
#    define BOOST_PP_SLOT_TEMP_7 7
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 8
#    define BOOST_PP_SLOT_TEMP_7 8
# elif BOOST_PP_SLOT_OFFSET_8(BOOST_PP_VALUE) / 1000000UL == 9
#    define BOOST_PP_SLOT_TEMP_7 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 0
#    define BOOST_PP_SLOT_TEMP_6 0
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 1
#    define BOOST_PP_SLOT_TEMP_6 1
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 2
#    define BOOST_PP_SLOT_TEMP_6 2
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 3
#    define BOOST_PP_SLOT_TEMP_6 3
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 4
#    define BOOST_PP_SLOT_TEMP_6 4
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 5
#    define BOOST_PP_SLOT_TEMP_6 5
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 6
#    define BOOST_PP_SLOT_TEMP_6 6
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 7
#    define BOOST_PP_SLOT_TEMP_6 7
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 8
#    define BOOST_PP_SLOT_TEMP_6 8
# elif BOOST_PP_SLOT_OFFSET_7(BOOST_PP_VALUE) / 100000UL == 9
#    define BOOST_PP_SLOT_TEMP_6 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 0
#    define BOOST_PP_SLOT_TEMP_5 0
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 1
#    define BOOST_PP_SLOT_TEMP_5 1
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 2
#    define BOOST_PP_SLOT_TEMP_5 2
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 3
#    define BOOST_PP_SLOT_TEMP_5 3
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 4
#    define BOOST_PP_SLOT_TEMP_5 4
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 5
#    define BOOST_PP_SLOT_TEMP_5 5
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 6
#    define BOOST_PP_SLOT_TEMP_5 6
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 7
#    define BOOST_PP_SLOT_TEMP_5 7
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 8
#    define BOOST_PP_SLOT_TEMP_5 8
# elif BOOST_PP_SLOT_OFFSET_6(BOOST_PP_VALUE) / 10000UL == 9
#    define BOOST_PP_SLOT_TEMP_5 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 0
#    define BOOST_PP_SLOT_TEMP_4 0
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 1
#    define BOOST_PP_SLOT_TEMP_4 1
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 2
#    define BOOST_PP_SLOT_TEMP_4 2
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 3
#    define BOOST_PP_SLOT_TEMP_4 3
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 4
#    define BOOST_PP_SLOT_TEMP_4 4
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 5
#    define BOOST_PP_SLOT_TEMP_4 5
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 6
#    define BOOST_PP_SLOT_TEMP_4 6
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 7
#    define BOOST_PP_SLOT_TEMP_4 7
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 8
#    define BOOST_PP_SLOT_TEMP_4 8
# elif BOOST_PP_SLOT_OFFSET_5(BOOST_PP_VALUE) / 1000UL == 9
#    define BOOST_PP_SLOT_TEMP_4 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 0
#    define BOOST_PP_SLOT_TEMP_3 0
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 1
#    define BOOST_PP_SLOT_TEMP_3 1
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 2
#    define BOOST_PP_SLOT_TEMP_3 2
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 3
#    define BOOST_PP_SLOT_TEMP_3 3
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 4
#    define BOOST_PP_SLOT_TEMP_3 4
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 5
#    define BOOST_PP_SLOT_TEMP_3 5
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 6
#    define BOOST_PP_SLOT_TEMP_3 6
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 7
#    define BOOST_PP_SLOT_TEMP_3 7
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 8
#    define BOOST_PP_SLOT_TEMP_3 8
# elif BOOST_PP_SLOT_OFFSET_4(BOOST_PP_VALUE) / 100UL == 9
#    define BOOST_PP_SLOT_TEMP_3 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 0
#    define BOOST_PP_SLOT_TEMP_2 0
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 1
#    define BOOST_PP_SLOT_TEMP_2 1
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 2
#    define BOOST_PP_SLOT_TEMP_2 2
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 3
#    define BOOST_PP_SLOT_TEMP_2 3
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 4
#    define BOOST_PP_SLOT_TEMP_2 4
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 5
#    define BOOST_PP_SLOT_TEMP_2 5
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 6
#    define BOOST_PP_SLOT_TEMP_2 6
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 7
#    define BOOST_PP_SLOT_TEMP_2 7
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 8
#    define BOOST_PP_SLOT_TEMP_2 8
# elif BOOST_PP_SLOT_OFFSET_3(BOOST_PP_VALUE) / 10UL == 9
#    define BOOST_PP_SLOT_TEMP_2 9
# endif
#
# if BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 0
#    define BOOST_PP_SLOT_TEMP_1 0
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 1
#    define BOOST_PP_SLOT_TEMP_1 1
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 2
#    define BOOST_PP_SLOT_TEMP_1 2
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 3
#    define BOOST_PP_SLOT_TEMP_1 3
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 4
#    define BOOST_PP_SLOT_TEMP_1 4
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 5
#    define BOOST_PP_SLOT_TEMP_1 5
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 6
#    define BOOST_PP_SLOT_TEMP_1 6
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 7
#    define BOOST_PP_SLOT_TEMP_1 7
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 8
#    define BOOST_PP_SLOT_TEMP_1 8
# elif BOOST_PP_SLOT_OFFSET_2(BOOST_PP_VALUE) == 9
#    define BOOST_PP_SLOT_TEMP_1 9
# endif
#
# undef BOOST_PP_VALUE

/* shared.hpp
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
*/