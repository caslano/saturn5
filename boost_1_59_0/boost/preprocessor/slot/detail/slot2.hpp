# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_SLOT_2
#
# undef BOOST_PP_SLOT_2_DIGIT_1
# undef BOOST_PP_SLOT_2_DIGIT_2
# undef BOOST_PP_SLOT_2_DIGIT_3
# undef BOOST_PP_SLOT_2_DIGIT_4
# undef BOOST_PP_SLOT_2_DIGIT_5
# undef BOOST_PP_SLOT_2_DIGIT_6
# undef BOOST_PP_SLOT_2_DIGIT_7
# undef BOOST_PP_SLOT_2_DIGIT_8
# undef BOOST_PP_SLOT_2_DIGIT_9
# undef BOOST_PP_SLOT_2_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_10 == 0
#    define BOOST_PP_SLOT_2_DIGIT_10 0
# elif BOOST_PP_SLOT_TEMP_10 == 1
#    define BOOST_PP_SLOT_2_DIGIT_10 1
# elif BOOST_PP_SLOT_TEMP_10 == 2
#    define BOOST_PP_SLOT_2_DIGIT_10 2
# elif BOOST_PP_SLOT_TEMP_10 == 3
#    define BOOST_PP_SLOT_2_DIGIT_10 3
# elif BOOST_PP_SLOT_TEMP_10 == 4
#    define BOOST_PP_SLOT_2_DIGIT_10 4
# elif BOOST_PP_SLOT_TEMP_10 == 5
#    define BOOST_PP_SLOT_2_DIGIT_10 5
# elif BOOST_PP_SLOT_TEMP_10 == 6
#    define BOOST_PP_SLOT_2_DIGIT_10 6
# elif BOOST_PP_SLOT_TEMP_10 == 7
#    define BOOST_PP_SLOT_2_DIGIT_10 7
# elif BOOST_PP_SLOT_TEMP_10 == 8
#    define BOOST_PP_SLOT_2_DIGIT_10 8
# elif BOOST_PP_SLOT_TEMP_10 == 9
#    define BOOST_PP_SLOT_2_DIGIT_10 9
# endif
#
# if BOOST_PP_SLOT_TEMP_9 == 0
#    define BOOST_PP_SLOT_2_DIGIT_9 0
# elif BOOST_PP_SLOT_TEMP_9 == 1
#    define BOOST_PP_SLOT_2_DIGIT_9 1
# elif BOOST_PP_SLOT_TEMP_9 == 2
#    define BOOST_PP_SLOT_2_DIGIT_9 2
# elif BOOST_PP_SLOT_TEMP_9 == 3
#    define BOOST_PP_SLOT_2_DIGIT_9 3
# elif BOOST_PP_SLOT_TEMP_9 == 4
#    define BOOST_PP_SLOT_2_DIGIT_9 4
# elif BOOST_PP_SLOT_TEMP_9 == 5
#    define BOOST_PP_SLOT_2_DIGIT_9 5
# elif BOOST_PP_SLOT_TEMP_9 == 6
#    define BOOST_PP_SLOT_2_DIGIT_9 6
# elif BOOST_PP_SLOT_TEMP_9 == 7
#    define BOOST_PP_SLOT_2_DIGIT_9 7
# elif BOOST_PP_SLOT_TEMP_9 == 8
#    define BOOST_PP_SLOT_2_DIGIT_9 8
# elif BOOST_PP_SLOT_TEMP_9 == 9
#    define BOOST_PP_SLOT_2_DIGIT_9 9
# endif
#
# if BOOST_PP_SLOT_TEMP_8 == 0
#    define BOOST_PP_SLOT_2_DIGIT_8 0
# elif BOOST_PP_SLOT_TEMP_8 == 1
#    define BOOST_PP_SLOT_2_DIGIT_8 1
# elif BOOST_PP_SLOT_TEMP_8 == 2
#    define BOOST_PP_SLOT_2_DIGIT_8 2
# elif BOOST_PP_SLOT_TEMP_8 == 3
#    define BOOST_PP_SLOT_2_DIGIT_8 3
# elif BOOST_PP_SLOT_TEMP_8 == 4
#    define BOOST_PP_SLOT_2_DIGIT_8 4
# elif BOOST_PP_SLOT_TEMP_8 == 5
#    define BOOST_PP_SLOT_2_DIGIT_8 5
# elif BOOST_PP_SLOT_TEMP_8 == 6
#    define BOOST_PP_SLOT_2_DIGIT_8 6
# elif BOOST_PP_SLOT_TEMP_8 == 7
#    define BOOST_PP_SLOT_2_DIGIT_8 7
# elif BOOST_PP_SLOT_TEMP_8 == 8
#    define BOOST_PP_SLOT_2_DIGIT_8 8
# elif BOOST_PP_SLOT_TEMP_8 == 9
#    define BOOST_PP_SLOT_2_DIGIT_8 9
# endif
#
# if BOOST_PP_SLOT_TEMP_7 == 0
#    define BOOST_PP_SLOT_2_DIGIT_7 0
# elif BOOST_PP_SLOT_TEMP_7 == 1
#    define BOOST_PP_SLOT_2_DIGIT_7 1
# elif BOOST_PP_SLOT_TEMP_7 == 2
#    define BOOST_PP_SLOT_2_DIGIT_7 2
# elif BOOST_PP_SLOT_TEMP_7 == 3
#    define BOOST_PP_SLOT_2_DIGIT_7 3
# elif BOOST_PP_SLOT_TEMP_7 == 4
#    define BOOST_PP_SLOT_2_DIGIT_7 4
# elif BOOST_PP_SLOT_TEMP_7 == 5
#    define BOOST_PP_SLOT_2_DIGIT_7 5
# elif BOOST_PP_SLOT_TEMP_7 == 6
#    define BOOST_PP_SLOT_2_DIGIT_7 6
# elif BOOST_PP_SLOT_TEMP_7 == 7
#    define BOOST_PP_SLOT_2_DIGIT_7 7
# elif BOOST_PP_SLOT_TEMP_7 == 8
#    define BOOST_PP_SLOT_2_DIGIT_7 8
# elif BOOST_PP_SLOT_TEMP_7 == 9
#    define BOOST_PP_SLOT_2_DIGIT_7 9
# endif
#
# if BOOST_PP_SLOT_TEMP_6 == 0
#    define BOOST_PP_SLOT_2_DIGIT_6 0
# elif BOOST_PP_SLOT_TEMP_6 == 1
#    define BOOST_PP_SLOT_2_DIGIT_6 1
# elif BOOST_PP_SLOT_TEMP_6 == 2
#    define BOOST_PP_SLOT_2_DIGIT_6 2
# elif BOOST_PP_SLOT_TEMP_6 == 3
#    define BOOST_PP_SLOT_2_DIGIT_6 3
# elif BOOST_PP_SLOT_TEMP_6 == 4
#    define BOOST_PP_SLOT_2_DIGIT_6 4
# elif BOOST_PP_SLOT_TEMP_6 == 5
#    define BOOST_PP_SLOT_2_DIGIT_6 5
# elif BOOST_PP_SLOT_TEMP_6 == 6
#    define BOOST_PP_SLOT_2_DIGIT_6 6
# elif BOOST_PP_SLOT_TEMP_6 == 7
#    define BOOST_PP_SLOT_2_DIGIT_6 7
# elif BOOST_PP_SLOT_TEMP_6 == 8
#    define BOOST_PP_SLOT_2_DIGIT_6 8
# elif BOOST_PP_SLOT_TEMP_6 == 9
#    define BOOST_PP_SLOT_2_DIGIT_6 9
# endif
#
# if BOOST_PP_SLOT_TEMP_5 == 0
#    define BOOST_PP_SLOT_2_DIGIT_5 0
# elif BOOST_PP_SLOT_TEMP_5 == 1
#    define BOOST_PP_SLOT_2_DIGIT_5 1
# elif BOOST_PP_SLOT_TEMP_5 == 2
#    define BOOST_PP_SLOT_2_DIGIT_5 2
# elif BOOST_PP_SLOT_TEMP_5 == 3
#    define BOOST_PP_SLOT_2_DIGIT_5 3
# elif BOOST_PP_SLOT_TEMP_5 == 4
#    define BOOST_PP_SLOT_2_DIGIT_5 4
# elif BOOST_PP_SLOT_TEMP_5 == 5
#    define BOOST_PP_SLOT_2_DIGIT_5 5
# elif BOOST_PP_SLOT_TEMP_5 == 6
#    define BOOST_PP_SLOT_2_DIGIT_5 6
# elif BOOST_PP_SLOT_TEMP_5 == 7
#    define BOOST_PP_SLOT_2_DIGIT_5 7
# elif BOOST_PP_SLOT_TEMP_5 == 8
#    define BOOST_PP_SLOT_2_DIGIT_5 8
# elif BOOST_PP_SLOT_TEMP_5 == 9
#    define BOOST_PP_SLOT_2_DIGIT_5 9
# endif
#
# if BOOST_PP_SLOT_TEMP_4 == 0
#    define BOOST_PP_SLOT_2_DIGIT_4 0
# elif BOOST_PP_SLOT_TEMP_4 == 1
#    define BOOST_PP_SLOT_2_DIGIT_4 1
# elif BOOST_PP_SLOT_TEMP_4 == 2
#    define BOOST_PP_SLOT_2_DIGIT_4 2
# elif BOOST_PP_SLOT_TEMP_4 == 3
#    define BOOST_PP_SLOT_2_DIGIT_4 3
# elif BOOST_PP_SLOT_TEMP_4 == 4
#    define BOOST_PP_SLOT_2_DIGIT_4 4
# elif BOOST_PP_SLOT_TEMP_4 == 5
#    define BOOST_PP_SLOT_2_DIGIT_4 5
# elif BOOST_PP_SLOT_TEMP_4 == 6
#    define BOOST_PP_SLOT_2_DIGIT_4 6
# elif BOOST_PP_SLOT_TEMP_4 == 7
#    define BOOST_PP_SLOT_2_DIGIT_4 7
# elif BOOST_PP_SLOT_TEMP_4 == 8
#    define BOOST_PP_SLOT_2_DIGIT_4 8
# elif BOOST_PP_SLOT_TEMP_4 == 9
#    define BOOST_PP_SLOT_2_DIGIT_4 9
# endif
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_SLOT_2_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_SLOT_2_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_SLOT_2_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_SLOT_2_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_SLOT_2_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_SLOT_2_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_SLOT_2_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_SLOT_2_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_SLOT_2_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_SLOT_2_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_SLOT_2_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_SLOT_2_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_SLOT_2_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_SLOT_2_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_SLOT_2_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_SLOT_2_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_SLOT_2_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_SLOT_2_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_SLOT_2_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_SLOT_2_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_SLOT_2_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_SLOT_2_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_SLOT_2_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_SLOT_2_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_SLOT_2_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_SLOT_2_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_SLOT_2_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_SLOT_2_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_SLOT_2_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_SLOT_2_DIGIT_1 9
# endif
#
# if BOOST_PP_SLOT_2_DIGIT_10
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_10(BOOST_PP_SLOT_2_DIGIT_10, BOOST_PP_SLOT_2_DIGIT_9, BOOST_PP_SLOT_2_DIGIT_8, BOOST_PP_SLOT_2_DIGIT_7, BOOST_PP_SLOT_2_DIGIT_6, BOOST_PP_SLOT_2_DIGIT_5, BOOST_PP_SLOT_2_DIGIT_4, BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_9
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_9(BOOST_PP_SLOT_2_DIGIT_9, BOOST_PP_SLOT_2_DIGIT_8, BOOST_PP_SLOT_2_DIGIT_7, BOOST_PP_SLOT_2_DIGIT_6, BOOST_PP_SLOT_2_DIGIT_5, BOOST_PP_SLOT_2_DIGIT_4, BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_8
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_8(BOOST_PP_SLOT_2_DIGIT_8, BOOST_PP_SLOT_2_DIGIT_7, BOOST_PP_SLOT_2_DIGIT_6, BOOST_PP_SLOT_2_DIGIT_5, BOOST_PP_SLOT_2_DIGIT_4, BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_7
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_7(BOOST_PP_SLOT_2_DIGIT_7, BOOST_PP_SLOT_2_DIGIT_6, BOOST_PP_SLOT_2_DIGIT_5, BOOST_PP_SLOT_2_DIGIT_4, BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_6
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_6(BOOST_PP_SLOT_2_DIGIT_6, BOOST_PP_SLOT_2_DIGIT_5, BOOST_PP_SLOT_2_DIGIT_4, BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_5
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_5(BOOST_PP_SLOT_2_DIGIT_5, BOOST_PP_SLOT_2_DIGIT_4, BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_4
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_4(BOOST_PP_SLOT_2_DIGIT_4, BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_3
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_3(BOOST_PP_SLOT_2_DIGIT_3, BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# elif BOOST_PP_SLOT_2_DIGIT_2
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_CC_2(BOOST_PP_SLOT_2_DIGIT_2, BOOST_PP_SLOT_2_DIGIT_1)
# else
#    define BOOST_PP_SLOT_2() BOOST_PP_SLOT_2_DIGIT_1
# endif

/* slot2.hpp
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
*/