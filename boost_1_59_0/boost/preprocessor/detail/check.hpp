# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PREPROCESSOR_DETAIL_CHECK_HPP
# define BOOST_PREPROCESSOR_DETAIL_CHECK_HPP
#
# include <boost/preprocessor/cat.hpp>
# include <boost/preprocessor/config/config.hpp>
#
# /* BOOST_PP_CHECK */
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_MWCC()
#    define BOOST_PP_CHECK(x, type) BOOST_PP_CHECK_D(x, type)
# else
#    define BOOST_PP_CHECK(x, type) BOOST_PP_CHECK_OO((x, type))
#    define BOOST_PP_CHECK_OO(par) BOOST_PP_CHECK_D ## par
# endif
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_MSVC() && ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_DMC()
#    define BOOST_PP_CHECK_D(x, type) BOOST_PP_CHECK_1(BOOST_PP_CAT(BOOST_PP_CHECK_RESULT_, type x))
#    define BOOST_PP_CHECK_1(chk) BOOST_PP_CHECK_2(chk)
#    define BOOST_PP_CHECK_2(res, _) res
# elif BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_MSVC()
#    define BOOST_PP_CHECK_D(x, type) BOOST_PP_CHECK_1(type x)
#    define BOOST_PP_CHECK_1(chk) BOOST_PP_CHECK_2(chk)
#    define BOOST_PP_CHECK_2(chk) BOOST_PP_CHECK_3((BOOST_PP_CHECK_RESULT_ ## chk))
#    define BOOST_PP_CHECK_3(im) BOOST_PP_CHECK_5(BOOST_PP_CHECK_4 im)
#    define BOOST_PP_CHECK_4(res, _) res
#    define BOOST_PP_CHECK_5(res) res
# else /* DMC */
#    define BOOST_PP_CHECK_D(x, type) BOOST_PP_CHECK_OO((type x))
#    define BOOST_PP_CHECK_OO(par) BOOST_PP_CHECK_0 ## par
#    define BOOST_PP_CHECK_0(chk) BOOST_PP_CHECK_1(BOOST_PP_CAT(BOOST_PP_CHECK_RESULT_, chk))
#    define BOOST_PP_CHECK_1(chk) BOOST_PP_CHECK_2(chk)
#    define BOOST_PP_CHECK_2(res, _) res
# endif
#
# define BOOST_PP_CHECK_RESULT_1 1, BOOST_PP_NIL
#
# endif

/* check.hpp
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
*/