# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* Revised by Edward Diener (2020) */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PREPROCESSOR_CONTROL_DEDUCE_D_HPP
# define BOOST_PREPROCESSOR_CONTROL_DEDUCE_D_HPP
#
# include <boost/preprocessor/config/config.hpp>
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_STRICT()
#
# include <boost/preprocessor/control/while.hpp>
# include <boost/preprocessor/detail/auto_rec.hpp>
#
# /* BOOST_PP_DEDUCE_D */
#
# define BOOST_PP_DEDUCE_D() BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256)
#
# else
#
# include <boost/preprocessor/arithmetic/dec.hpp>
# include <boost/preprocessor/control/while.hpp>
# include <boost/preprocessor/detail/auto_rec.hpp>
# include <boost/preprocessor/config/limits.hpp>
#
# /* BOOST_PP_DEDUCE_D */
#
# if BOOST_PP_LIMIT_WHILE == 256
# define BOOST_PP_DEDUCE_D() BOOST_PP_DEC(BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256))
# elif BOOST_PP_LIMIT_WHILE == 512
# define BOOST_PP_DEDUCE_D() BOOST_PP_DEC(BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 512))
# elif BOOST_PP_LIMIT_WHILE == 1024
# define BOOST_PP_DEDUCE_D() BOOST_PP_DEC(BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 1024))
# else
# error Incorrect value for the BOOST_PP_LIMIT_WHILE limit
# endif
#
# endif
#
# endif

/* deduce_d.hpp
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
*/