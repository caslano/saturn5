# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_LOCAL_SE
#
# undef BOOST_PP_LOCAL_SE_DIGIT_1
# undef BOOST_PP_LOCAL_SE_DIGIT_2
# undef BOOST_PP_LOCAL_SE_DIGIT_3
# undef BOOST_PP_LOCAL_SE_DIGIT_4
# undef BOOST_PP_LOCAL_SE_DIGIT_5
# undef BOOST_PP_LOCAL_SE_DIGIT_6
# undef BOOST_PP_LOCAL_SE_DIGIT_7
# undef BOOST_PP_LOCAL_SE_DIGIT_8
# undef BOOST_PP_LOCAL_SE_DIGIT_9
# undef BOOST_PP_LOCAL_SE_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_LOCAL_SE_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_LOCAL_SE_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_LOCAL_SE_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_LOCAL_SE_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_LOCAL_SE_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_LOCAL_SE_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_LOCAL_SE_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_LOCAL_SE_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_LOCAL_SE_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_LOCAL_SE_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_LOCAL_SE_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_LOCAL_SE_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_LOCAL_SE_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_LOCAL_SE_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_LOCAL_SE_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_LOCAL_SE_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_LOCAL_SE_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_LOCAL_SE_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_LOCAL_SE_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_LOCAL_SE_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_LOCAL_SE_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_LOCAL_SE_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_LOCAL_SE_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_LOCAL_SE_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_LOCAL_SE_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_LOCAL_SE_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_LOCAL_SE_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_LOCAL_SE_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_LOCAL_SE_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_LOCAL_SE_DIGIT_1 9
# endif
#
# if BOOST_PP_LOCAL_SE_DIGIT_3
#    define BOOST_PP_LOCAL_SE() BOOST_PP_SLOT_CC_3(BOOST_PP_LOCAL_SE_DIGIT_3, BOOST_PP_LOCAL_SE_DIGIT_2, BOOST_PP_LOCAL_SE_DIGIT_1)
# elif BOOST_PP_LOCAL_SE_DIGIT_2
#    define BOOST_PP_LOCAL_SE() BOOST_PP_SLOT_CC_2(BOOST_PP_LOCAL_SE_DIGIT_2, BOOST_PP_LOCAL_SE_DIGIT_1)
# else
#    define BOOST_PP_LOCAL_SE() BOOST_PP_LOCAL_SE_DIGIT_1
# endif

/* start.hpp
K5v1pNPj3GjwTPvUcWcf6XQKamDXHyG876kRC0R2ZGFmYZUcYsq7KDrAboqRpxV7CZp1A8Bq9jqVPNxs+zK9lmFvBB9hCFrHcXwDt9QieTd3E+4NIL6Rc+1KwjrGlp22wfeFaqVhILHGBcp2id2rFJk9lA06Bme481qNfNnRJJxPzGTFGVxn8uJuXLKyMXBAg2x9BPiROTVZC+0ufw0C2ddsIEtVb3ey13dHcpT1YGDy/P1QgAPGitu8QBck5PnZ+Cztu9D7Di35PMSdO3CHnFF0y+5/QM4uueUKPiHnkt1zP//Blv2CS1KVrfKm+M+Gi6suYzks3Y7rLSBguOtrHC4xu9BdGTtAiGuZWAiaPmY+u5RdDCa3ACStABBXxMw0xjfej0X2jvNM1xu4m9ATb8vi8oxrzyc6y2udpuWbc0vpl5+YJ+Tne1+3qjV+2NflNMGtEjhTVkEBLh3/yTyxhUUmDdqHuH0mPnrjgWjpiackVR9PK6hL3QCF/sfts4TiIAZkcM/EKpkSlorlwy4uB43lKHOamMsaOOl8dY2l+rvkDnGp3r4Bw+qN85579E4M7TwcNIWNySLv46okIOYmHgyJ6JvsVrSs1pv4vnzEKCGL4TN9QNg/8k6OOHRgfHBs/hoIy2e9Hn6srCHeZ5IsKIsF0lsOOkJV7apluLGC6kRioEZBVGSRlvPa0UMv+05rg5PDYCiVYAgQDezRrFXjTa3Xht+LG2pF8/Co6KMoXxAqRC+Gk42yLez0ap3ons6egqY6U1EXGTjB1RllSsl9UpqpjJkKLNhVP6Dk3xs3nAHxS/NneW1AByFQ2WFVtJiKQgNzofhfreGNehJ48E1giS+Npjh2gGKxSNnVkn/uckH8QlpHMOSAnhftP9YMYDMti1CXB3ZcKxxiZztRwvuF6fD6YJSJpUrvKpQfLwVPs0UbJscJyvRkp+RNYFjcAsOeG4n6OIUYJkJX22kDkXS5tP5wkQ5FGkRfZ4hJIOZfPCcddQtybaLnDM4jqfwg+/rOr8/shAfkGCQ+BT0EfbW3CBT+K6aIHIb0WSsxG4oLpdOikqRDMSsidtZQ0ZOt7rLz+z6To2w3XFnB1XTCKspuSKXJw2gF1OJjTdxFV/lJtwAQACe5pMdQ70Cu/DtN/tRhwYrrjSwetetV5aGH44y3NRwxHs0kNLDgvcHBnVPnKrr0RBiaaPA2q1B0ZR8L+zDLfWaTSiYQeORK2xd8u9tfmuswQqHhR5+8F2cnceDl7J3hA36mY1CpwDdOJKCxpWItkF20P5x+J8bZ9jw1czeRgZVzKdQSn8HFX4KCSA+OwYbthgeiKKEheuAzfEo+JMv1CSEEmAO2MXPr5P0X+RsLdx58xlmWomYBpljOq1fws/LLIus4vm4/i+IhA7S/PjPyybVF/JHTfZn34d7zc/icfmhgSZTAg2G5rWXHUsK1tN2bBGVVZ1+Yawz+RsBTklnBz+4G+drRjZK8tj85KWjrvsqvhjcIp4tzr9yEV7pJfZHuHYPe9EXrMp5YdprMm4k1mj4PI0cTi40R8JLB2nFuhR4Alo7erwxyepDSdeFt7amr9MRfDg1CqxE3E802mK8hgLUC8++9NMfPUHpr6vJIbCaAbZJ/lvHPF8UPnI1Hr8dXb4gmMLULxqukn+4cq5ozXuvO69Qs9M55eeWpwXxQOx2LRSW9DmwKrFYc0+O/4Z2X2ZGSNjIoJnI95D2x5zHULW5O9I/K+i3eP4j91+SfSxSutXTBSUZvjbQFD+Q4O7ZKK/uBXRE2Vxvn/uGu8TvaYXGHB3WjsxVUYhgaWtKp0H9Dd8jmfHtUkyqWMd2zXyqemudOXjZGk+3zb1sYTskM0qtqUto5TxWLoY1v5CEv973KqpFC4VdRPyOBa62y4VQBzXNBmMbItpYXhkK2GECLPP5QKMw3dyAcb8IieIQ6NAcGAqHqgRtpaWtTh0CIKYFtleitU59co1hajZE0K/lUGDu6dFhatGmomiPIMy5zldgKHsqKJ6R6kvGBAeLz5l3TmvsycarW2W5RO4HNKzAnzFt/PfrCXut8LPyUXFeQmksIG44QMy8+QgAseXQaEjcxhI/hoVLl6wSDnyGU/U7TtFfxHFgXKIhgnNvi0hZ/+UlmdBABeU1Mj7x8JqfqgqNdCjVPXq+hlZSVu9THVxHbK2zUOz6MvepyjUmblOOZ9vfo0A2TvWOrpI1jeM4NL9DNjnibeb9+fn4C+v8ABP4K+hX8K+RX6K9/v8J+hf+K+BX5K+pX9K+YX7G/4n7F/0r4lfgr6Vfyr5Rfqb/SfqX/yviV+SvrV/avnF+5v/J+5f8q+FX4q+hX8a+SX6W/yn6V/6r4Vfmr6lf1r5pftb/qftX/avjV+KvpV/Ovll+tv9p+tf/q+NX5q+tX96+eX72/+n71/xr4Nfhr6Nfwr5Ffo7/Gfo3/mvg1+Wvq1/SvmV+zv+Z+zf9a+LX4a+nX8q+VX6u/1n6t/9r4tflr69f2r51fu7/2fu3/Ovh1+Ovo1/Gvk1+nv85+nf+6+HX56+rX9a+bX7e/7n7d/3r49fjr6dfzr5dfr7/efr3/+vj1+evr1/cvgIHf8993byTrxTCOURPelbVjzFr7pW/yQpkCPCgWYXHpjJdXO7PWzjSbhWkuB8lgm1JZWhnJaum8ZmZWmw0+CCxXS+YlQ/pgTGQQZEnBaqFzdtECL8EDdkOTQgrCqKIVnZ50F54RYNPpJN5lIdIAHoJaRtaOOo/JjLMte4O7wMz7gBJlb7eFaY3hfbDjvwvYBfXQVsAsgcCx5uUULUYQPhzN+hbofLr9uRcYe9yScXf5+K6ZQ3qhOHKX/CD5VJnBk+V7WVw0M5eJmkzujq2r3F4z/S0tCMuwCrB30Dp0NL167xWF3kjLxfWZ4FkjFfjNpd99YRxnQEL6jJen0EH20xElFB497IKhY7+jrOAd8hUxVqC0dEMctwE1mKN1dDsssKyh3bLPD5wrlrWwdSerXiYAAiRdrRmYQ0qUC9eGV3j5nSGQyT1jmBV3SYbuEvDIICPBjj0Mz/1lm1dzzJtd84Nk/bc21yu/YgzgK4RxcxqFgTQSN28kngUdKzTWwEoNgCA1KyPhxf93QPgyEhYczfeQV5VV82Szs7P3QbaM5iLfeax2dW0Ge9iFoWJJ/iCfy4L7qHTefURVu3X6Aqlcl49Q+HBdJBx3g9sltZ17KuQm/3gWAnlLNYwuO/N+IZ6gFEOTXPTbjmHeHL/vncJKCQ2gkUptKJRj0aaDXpNwg9oZmvVlY1u1W0qZ9wch2GrmZ/e6bJ47P7Nib67VDkc25Jg4npokm3eOOY/OujSlGZKw0sbKRN2f1aSE9XpwnbvHuEGeq1vVJp86rL1acHNychp9ZfFE1Vv+OfKhN109ec8wCw2r9uNW3kK4zMw2XqIDUS6TVHvi/9ZTi5krca5+Q+jHcF4Euzk39a5Fmujcklzgd/Xtke2081I2ODiv3fSqpAwmHF/6spNvOAq2q3eBziz7kmMRfNwTWuQAcwup74AE07L2pDPY9j2kVrG9uy4+910WEAiPGihR3cN+GIEZqfdmMhzukD8N5lIIOTGDtOT7KIG92+VzxtApT2OteZDtcjMzDwYHFHkRhiafv4myFEdVa7rhEsKz/bfBWwVDe3hjXg4zrJb9oUWtAZZmYbZ4n2NHV3DMRsPqSiMt24Fu1WWuPk1ASPqi8tM/g87LR2RyPtPX5O/NBENS3dkapWSl+hfv6qg3KsWmVyFFTDxL6W84MFoPRqRSJ1LGt142apkcDicTzhQ4ppHM5tHlu/Rlj6yNdmReN/GAyDabCBqVH0ZqGoh1dWMbIysIBEBUVBSyTHOzhCcPErvB7MnI0CGAfPL1qM5zprrNdP2WFBSDtIzf6jspB5ZJdo0y7dFR2us1rOlmFNbNsd83qCdzhJm4r9SlDGy9qlMyh2JkQbT0B8FV+J2sNXc+8REEufetGxgrUkJC0w3oWFbM7wp4rQoLC6d8wQnvsBha+VVxyUuleoyCJwZfIb9AweZ1tyEudevU9kEOLwWZXelv8Yq87ce4XCavXbjNeCjm0yOaOWxQ2cJiW4ljGuakP1kWIPwXtCBjS2wktAhfvfrTdmEK16V+QriJkaBEMFvWKPIJ4wPiMGUjkvAnctTJy5GI8/MrzQ1SDQ3yY5vXHGCyifrUzrOi51ERO0rl5eU4kdCkhnJlORmAN94LpTuRigXcVUQRNypRrnEwbH1vwmEcOi0frhdqvjgi9VhkP2KTYv0WU1EY5GZYl23V9noDiu69HVBhvnOVTjApbIldniiSO6oaKUcSIqMrboULuLQ4EwzvCCG121i0FGvd9MDMzwGS5ALS7WtrendHh+fJZqL+1sWfz5OZnIheDuEraTXMSYvO9p2c412z7YGciLD7u1e/cqOdr8rUf3gLSFd2fCqPDze04o7+54gauI2jjpbSvp9TCAIArOgUvbR4dvOdXpXtifXt9QZSU1oPZ8xNP2mLN4zkucJMibbiJ1/M1+eh0jSCIammPlUxb1FzOOpW3AwCXfHrm/rY358QoE6Vn6EXZnkLVgvljVr1IVrhjWZ/jXvNk3HCMOoU3K0GGZokivLTDhOcted1xqwV5O9CG3hsO6fdS1D7TgICShi/0tPTT1SQLaq7KW3o109PQH11HtoZrKSz8stqnzWnhyMfSX3kzNIQyIfDVo4M+lV3R0R2xLIwPboSEDA/grOiqE2LBl7uLXr4zMMh545gguscV/wV2iadLDEFm+pi13Ad/x70rybBzcUvKc4tzhLxxzBiigTVxv7dkEp2QKbykCtTTQyvqxAmhYwQovjXvt6pUhgheUdeTipBkTHGF7OSljD8QLSwLfZpUqqWq8L2l8D7YRZpG6N5Ft04GDya/mt9sKhpfD2AM5BTgPUj0dIQQmScmnZEMZnwhfBjLci8JLKnVJNqaBXY2/HyJXYpvmtndrq1HpE7Ll+va7IUNX17l96B+rzBajty86zoznYrDgoF6x15JPPRzZf6tHWxVdZj81F8ENPBzrG7qJY8U3+W5dnoHu9wMEbCKUByYVB5B2LjsrQmUsiD9zVyJyx0A28mPYPay7EK1/YZYngA40RgU1STYH67fSvE/1PlOXkBL05OlfjNS3/ugEpWSge/vsoIIaMFdEpALFg0RQ2mX/Dbqg455Fs7TygjR7Vdb6tQEb63lHUBV05Tcn/PIeb0HY3ffeJBQyhcKHaFvW8wFAxsyuXywxm2Nq48I4WqGZjl8gvY3zdbx1WHes13LUrkDxvJm4U4A4H5Osrhq3Rp/VupX9A2+bWg2qEMtOzUomcmUzZmXDyQuh9NPAW2Z6mlLLGEfuNCrzci+f0pwqEAIF/hZrwsTlIIZDU+1ntiu99EJ3/ISJlHh5thySDSGZ5A79+Dgx0gkpDmFQdCsSXFMA1Xb9WAb/ywkxNXs7zVB9EcSHa0lXwSoXvOlbT+q9U45P7NyiUyJ7XOqYFl7VvjcKWzNrCrxlBX9e9Ko31FtJO/9qFvhl0ncS8/veezyCFC6m10xF46aNLooBvNQqS6zuOb3HCQUWY62sKXYRwbeA8Us6PVPCIcDcDtB3hrNaZDWgLdXcrLbSRAHUG3p1PmrOSFAQoUdfuCDPsVjV9EDKLK0vB1RqWXCQ1Xf1KqfKPBLxiI+Xwn7VFasXyqeGpy15pp03jW/fShiBNEUKgczFvnsWIajLY4Rox0xTOtc8Jp/W5lrcJ017maIAncQgQPcvBpPQ/yKQCuiy8S3fkBYHtPdDwZyN//Ul2tzaVp9aSqPK9JS62rGQjdg4TDlMskXYtn15XIuim1WS80ouN+yU4uH/0rsZ6Cra5aa+9bUxeBmLoDYhehAnY1KHakjBqY8PKG3J9J7+phRM/jlmSPfH9PNO5px4Ir1Vo8dCOUUNbQu0kRUEc/agcfuPiugqAu+c7beaR+b93vVkXWM4G3CEF7b2DTLLh3Ul4Lx8Y1yK/PRO9jiE4M778ZPEr+hkggiiScZpEH073TNRC1dYMQ3qZwiCXilNDZ6O/9Xnqs1Tx6fsY0R3dEKQKo+IuO+wB2SCHXbvycSoYj8qq5IxLjcoQtnfThRFMB5htlUIXGWVNIb5M6UlAIw/1dLGnGaLjCvCLKAkpPWGpwyK/pPNJyKk+a1pTpQdpCS2wuFfAKP45Cy0lv94IE/LiXJzIWVSTyyfvDAj8Is1H8OVLjsTykDfRSseuDslkT8KFs1wN5rdr3RdGqC/Kf4lJPjC4IwQ9cj0WwaFUMJvgKUc1FE94bS6sMQvz4yoMhgDwxJhEt0cwcJ7iQGnT5KD3J2KLldnjU6GSyK9piJ5VJOqPQZZ53H1Q+PRh8rPlknx48xRhvxQ+KWy3WOTRXA54956VTkZlcc6fcU7eOR2rotO4c+nWTFuzQTSrHhaauMaTzO0fW5x2MhpZ+T/tBDEmdktFX0ZN013iFCNXOfEvPzvZhjrGp4/NdGgqlofm4sF5oXedBJP+iV6i1cs8XRo/OLIAnWbST88ILqOl+O3Ofqk/GyLi0NxpMNw/1w9y1TUwUD7OnjpkAVNuMst+PluzqOS9gAv50LZZA3j+AKDfM5Mpbr0Pfvo/bE5UBd9zpD7vt0AeezJe9TrgTb7abAfefnaQXCMCfE8eKnba/XxLB1SKZkzZdUoyShcf2zv/Ueu17TXG8fJFpwn6aa+Ic/kzso1BcuFZFeh01bsWbpqdGKdHC54zQekg5xifkoWF7Wx+qQQ8ciqvfqE7gOKXrtPYJ96GJF8i8LwR3vROL3RnUpG+BRzgk2EY4Ta4HOdR9PL77bH4cumTOXThdmVswCswo6sHSuRnQQJPduNv+OcDLK7kQ24WYtX1PpdxjCTUql+Zm1mLYa2Bdc6Lxifv0k/XZh5xPVgUvouyWILcnyd+9pXnOQDfLvgBI+JSR5L6Z0T8MZYXd1Y5XdccTx5gvVQDid9YEySk0BByiHNuXCJP4J6YWeg7Vvq4uPqRmRM3CgxWbDhgPYzecXl81Np8vl48X3t1eox3yl/M872W0CQL7YmYpFwQYQYPck8vfrhdIH24wKpAvCbfojihGLB4nElYO0FJ2WoQDj+YJFqFmGhtkZ+Uw6NhJwsSuos2I7osHKBAAEQPj6aEGpCodRSAdYIV8/h4/aoR7rWawbQPzHJulhjuo6QCN8H3EkUYZn1B/PbkPAXB3XgQAXi0mtv1U302f36mRhtJN43SN/Lu+w0Q4MgdqnMoVXRS/a39QzkvvY84AvE/OOPWgFGeNCRp9VVDQkjI8UUZh962Ib8hj+O3uMIHkpyubW/jJ+LkjNSM31tFZxA+ejd8eAQgKoERfz3uCpBeiDlVVAdgKtQ/Z1nQm85qt8uIncp9EK5zGNQchS3SqaN8RKSIBltMnTQYifhewROy73raE18gkMXeDRug8vy75hdS1e0z1ADfI+4jr6MoRmpapZcz43pchi57qZ9yXot8mIPWj+bA4yqvRbI8Zpn+BJ3YVOsVSpJ9yyz2fSL5LvATZemFbAAapUhUGJsyZPw2TUuRLbjt78/mB3+FzNSfVvVBvsZOUe6LVhTkwEM+3XsqGX+9PVyg4tm4LNAN3oVSp7pu5Aq1YdoMSddoo
*/