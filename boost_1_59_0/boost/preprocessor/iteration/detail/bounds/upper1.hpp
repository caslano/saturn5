# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_1
#
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_1_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_1 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_1_DIGIT_3, BOOST_PP_ITERATION_FINISH_1_DIGIT_2, BOOST_PP_ITERATION_FINISH_1_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_1_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_1 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_1_DIGIT_2, BOOST_PP_ITERATION_FINISH_1_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_1 BOOST_PP_ITERATION_FINISH_1_DIGIT_1
# endif

/* upper1.hpp
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
*/