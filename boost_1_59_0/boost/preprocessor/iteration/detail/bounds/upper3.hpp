# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_3
#
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_3_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_3 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_3_DIGIT_3, BOOST_PP_ITERATION_FINISH_3_DIGIT_2, BOOST_PP_ITERATION_FINISH_3_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_3_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_3 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_3_DIGIT_2, BOOST_PP_ITERATION_FINISH_3_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_3 BOOST_PP_ITERATION_FINISH_3_DIGIT_1
# endif

/* upper3.hpp
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
*/