# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_5
#
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_5_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_5 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_5_DIGIT_3, BOOST_PP_ITERATION_FINISH_5_DIGIT_2, BOOST_PP_ITERATION_FINISH_5_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_5_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_5 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_5_DIGIT_2, BOOST_PP_ITERATION_FINISH_5_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_5 BOOST_PP_ITERATION_FINISH_5_DIGIT_1
# endif

/* upper5.hpp
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
*/