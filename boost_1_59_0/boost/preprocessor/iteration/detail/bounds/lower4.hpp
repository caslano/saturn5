# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_START_4
#
# undef BOOST_PP_ITERATION_START_4_DIGIT_1
# undef BOOST_PP_ITERATION_START_4_DIGIT_2
# undef BOOST_PP_ITERATION_START_4_DIGIT_3
# undef BOOST_PP_ITERATION_START_4_DIGIT_4
# undef BOOST_PP_ITERATION_START_4_DIGIT_5
# undef BOOST_PP_ITERATION_START_4_DIGIT_6
# undef BOOST_PP_ITERATION_START_4_DIGIT_7
# undef BOOST_PP_ITERATION_START_4_DIGIT_8
# undef BOOST_PP_ITERATION_START_4_DIGIT_9
# undef BOOST_PP_ITERATION_START_4_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_START_4_DIGIT_3
#    define BOOST_PP_ITERATION_START_4 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_START_4_DIGIT_3, BOOST_PP_ITERATION_START_4_DIGIT_2, BOOST_PP_ITERATION_START_4_DIGIT_1)
# elif BOOST_PP_ITERATION_START_4_DIGIT_2
#    define BOOST_PP_ITERATION_START_4 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_START_4_DIGIT_2, BOOST_PP_ITERATION_START_4_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_START_4 BOOST_PP_ITERATION_START_4_DIGIT_1
# endif

/* lower4.hpp
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
*/