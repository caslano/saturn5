# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_START_5
#
# undef BOOST_PP_ITERATION_START_5_DIGIT_1
# undef BOOST_PP_ITERATION_START_5_DIGIT_2
# undef BOOST_PP_ITERATION_START_5_DIGIT_3
# undef BOOST_PP_ITERATION_START_5_DIGIT_4
# undef BOOST_PP_ITERATION_START_5_DIGIT_5
# undef BOOST_PP_ITERATION_START_5_DIGIT_6
# undef BOOST_PP_ITERATION_START_5_DIGIT_7
# undef BOOST_PP_ITERATION_START_5_DIGIT_8
# undef BOOST_PP_ITERATION_START_5_DIGIT_9
# undef BOOST_PP_ITERATION_START_5_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_START_5_DIGIT_3
#    define BOOST_PP_ITERATION_START_5 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_START_5_DIGIT_3, BOOST_PP_ITERATION_START_5_DIGIT_2, BOOST_PP_ITERATION_START_5_DIGIT_1)
# elif BOOST_PP_ITERATION_START_5_DIGIT_2
#    define BOOST_PP_ITERATION_START_5 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_START_5_DIGIT_2, BOOST_PP_ITERATION_START_5_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_START_5 BOOST_PP_ITERATION_START_5_DIGIT_1
# endif

/* lower5.hpp
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
*/