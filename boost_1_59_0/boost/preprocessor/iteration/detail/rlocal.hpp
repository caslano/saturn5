# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* Revised by Edward Diener (2020) */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/config/config.hpp>
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_STRICT()
#
# if BOOST_PP_LOCAL_R(256)
    BOOST_PP_LOCAL_MACRO(256)
# endif
# if BOOST_PP_LOCAL_R(255)
    BOOST_PP_LOCAL_MACRO(255)
# endif
# if BOOST_PP_LOCAL_R(254)
    BOOST_PP_LOCAL_MACRO(254)
# endif
# if BOOST_PP_LOCAL_R(253)
    BOOST_PP_LOCAL_MACRO(253)
# endif
# if BOOST_PP_LOCAL_R(252)
    BOOST_PP_LOCAL_MACRO(252)
# endif
# if BOOST_PP_LOCAL_R(251)
    BOOST_PP_LOCAL_MACRO(251)
# endif
# if BOOST_PP_LOCAL_R(250)
    BOOST_PP_LOCAL_MACRO(250)
# endif
# if BOOST_PP_LOCAL_R(249)
    BOOST_PP_LOCAL_MACRO(249)
# endif
# if BOOST_PP_LOCAL_R(248)
    BOOST_PP_LOCAL_MACRO(248)
# endif
# if BOOST_PP_LOCAL_R(247)
    BOOST_PP_LOCAL_MACRO(247)
# endif
# if BOOST_PP_LOCAL_R(246)
    BOOST_PP_LOCAL_MACRO(246)
# endif
# if BOOST_PP_LOCAL_R(245)
    BOOST_PP_LOCAL_MACRO(245)
# endif
# if BOOST_PP_LOCAL_R(244)
    BOOST_PP_LOCAL_MACRO(244)
# endif
# if BOOST_PP_LOCAL_R(243)
    BOOST_PP_LOCAL_MACRO(243)
# endif
# if BOOST_PP_LOCAL_R(242)
    BOOST_PP_LOCAL_MACRO(242)
# endif
# if BOOST_PP_LOCAL_R(241)
    BOOST_PP_LOCAL_MACRO(241)
# endif
# if BOOST_PP_LOCAL_R(240)
    BOOST_PP_LOCAL_MACRO(240)
# endif
# if BOOST_PP_LOCAL_R(239)
    BOOST_PP_LOCAL_MACRO(239)
# endif
# if BOOST_PP_LOCAL_R(238)
    BOOST_PP_LOCAL_MACRO(238)
# endif
# if BOOST_PP_LOCAL_R(237)
    BOOST_PP_LOCAL_MACRO(237)
# endif
# if BOOST_PP_LOCAL_R(236)
    BOOST_PP_LOCAL_MACRO(236)
# endif
# if BOOST_PP_LOCAL_R(235)
    BOOST_PP_LOCAL_MACRO(235)
# endif
# if BOOST_PP_LOCAL_R(234)
    BOOST_PP_LOCAL_MACRO(234)
# endif
# if BOOST_PP_LOCAL_R(233)
    BOOST_PP_LOCAL_MACRO(233)
# endif
# if BOOST_PP_LOCAL_R(232)
    BOOST_PP_LOCAL_MACRO(232)
# endif
# if BOOST_PP_LOCAL_R(231)
    BOOST_PP_LOCAL_MACRO(231)
# endif
# if BOOST_PP_LOCAL_R(230)
    BOOST_PP_LOCAL_MACRO(230)
# endif
# if BOOST_PP_LOCAL_R(229)
    BOOST_PP_LOCAL_MACRO(229)
# endif
# if BOOST_PP_LOCAL_R(228)
    BOOST_PP_LOCAL_MACRO(228)
# endif
# if BOOST_PP_LOCAL_R(227)
    BOOST_PP_LOCAL_MACRO(227)
# endif
# if BOOST_PP_LOCAL_R(226)
    BOOST_PP_LOCAL_MACRO(226)
# endif
# if BOOST_PP_LOCAL_R(225)
    BOOST_PP_LOCAL_MACRO(225)
# endif
# if BOOST_PP_LOCAL_R(224)
    BOOST_PP_LOCAL_MACRO(224)
# endif
# if BOOST_PP_LOCAL_R(223)
    BOOST_PP_LOCAL_MACRO(223)
# endif
# if BOOST_PP_LOCAL_R(222)
    BOOST_PP_LOCAL_MACRO(222)
# endif
# if BOOST_PP_LOCAL_R(221)
    BOOST_PP_LOCAL_MACRO(221)
# endif
# if BOOST_PP_LOCAL_R(220)
    BOOST_PP_LOCAL_MACRO(220)
# endif
# if BOOST_PP_LOCAL_R(219)
    BOOST_PP_LOCAL_MACRO(219)
# endif
# if BOOST_PP_LOCAL_R(218)
    BOOST_PP_LOCAL_MACRO(218)
# endif
# if BOOST_PP_LOCAL_R(217)
    BOOST_PP_LOCAL_MACRO(217)
# endif
# if BOOST_PP_LOCAL_R(216)
    BOOST_PP_LOCAL_MACRO(216)
# endif
# if BOOST_PP_LOCAL_R(215)
    BOOST_PP_LOCAL_MACRO(215)
# endif
# if BOOST_PP_LOCAL_R(214)
    BOOST_PP_LOCAL_MACRO(214)
# endif
# if BOOST_PP_LOCAL_R(213)
    BOOST_PP_LOCAL_MACRO(213)
# endif
# if BOOST_PP_LOCAL_R(212)
    BOOST_PP_LOCAL_MACRO(212)
# endif
# if BOOST_PP_LOCAL_R(211)
    BOOST_PP_LOCAL_MACRO(211)
# endif
# if BOOST_PP_LOCAL_R(210)
    BOOST_PP_LOCAL_MACRO(210)
# endif
# if BOOST_PP_LOCAL_R(209)
    BOOST_PP_LOCAL_MACRO(209)
# endif
# if BOOST_PP_LOCAL_R(208)
    BOOST_PP_LOCAL_MACRO(208)
# endif
# if BOOST_PP_LOCAL_R(207)
    BOOST_PP_LOCAL_MACRO(207)
# endif
# if BOOST_PP_LOCAL_R(206)
    BOOST_PP_LOCAL_MACRO(206)
# endif
# if BOOST_PP_LOCAL_R(205)
    BOOST_PP_LOCAL_MACRO(205)
# endif
# if BOOST_PP_LOCAL_R(204)
    BOOST_PP_LOCAL_MACRO(204)
# endif
# if BOOST_PP_LOCAL_R(203)
    BOOST_PP_LOCAL_MACRO(203)
# endif
# if BOOST_PP_LOCAL_R(202)
    BOOST_PP_LOCAL_MACRO(202)
# endif
# if BOOST_PP_LOCAL_R(201)
    BOOST_PP_LOCAL_MACRO(201)
# endif
# if BOOST_PP_LOCAL_R(200)
    BOOST_PP_LOCAL_MACRO(200)
# endif
# if BOOST_PP_LOCAL_R(199)
    BOOST_PP_LOCAL_MACRO(199)
# endif
# if BOOST_PP_LOCAL_R(198)
    BOOST_PP_LOCAL_MACRO(198)
# endif
# if BOOST_PP_LOCAL_R(197)
    BOOST_PP_LOCAL_MACRO(197)
# endif
# if BOOST_PP_LOCAL_R(196)
    BOOST_PP_LOCAL_MACRO(196)
# endif
# if BOOST_PP_LOCAL_R(195)
    BOOST_PP_LOCAL_MACRO(195)
# endif
# if BOOST_PP_LOCAL_R(194)
    BOOST_PP_LOCAL_MACRO(194)
# endif
# if BOOST_PP_LOCAL_R(193)
    BOOST_PP_LOCAL_MACRO(193)
# endif
# if BOOST_PP_LOCAL_R(192)
    BOOST_PP_LOCAL_MACRO(192)
# endif
# if BOOST_PP_LOCAL_R(191)
    BOOST_PP_LOCAL_MACRO(191)
# endif
# if BOOST_PP_LOCAL_R(190)
    BOOST_PP_LOCAL_MACRO(190)
# endif
# if BOOST_PP_LOCAL_R(189)
    BOOST_PP_LOCAL_MACRO(189)
# endif
# if BOOST_PP_LOCAL_R(188)
    BOOST_PP_LOCAL_MACRO(188)
# endif
# if BOOST_PP_LOCAL_R(187)
    BOOST_PP_LOCAL_MACRO(187)
# endif
# if BOOST_PP_LOCAL_R(186)
    BOOST_PP_LOCAL_MACRO(186)
# endif
# if BOOST_PP_LOCAL_R(185)
    BOOST_PP_LOCAL_MACRO(185)
# endif
# if BOOST_PP_LOCAL_R(184)
    BOOST_PP_LOCAL_MACRO(184)
# endif
# if BOOST_PP_LOCAL_R(183)
    BOOST_PP_LOCAL_MACRO(183)
# endif
# if BOOST_PP_LOCAL_R(182)
    BOOST_PP_LOCAL_MACRO(182)
# endif
# if BOOST_PP_LOCAL_R(181)
    BOOST_PP_LOCAL_MACRO(181)
# endif
# if BOOST_PP_LOCAL_R(180)
    BOOST_PP_LOCAL_MACRO(180)
# endif
# if BOOST_PP_LOCAL_R(179)
    BOOST_PP_LOCAL_MACRO(179)
# endif
# if BOOST_PP_LOCAL_R(178)
    BOOST_PP_LOCAL_MACRO(178)
# endif
# if BOOST_PP_LOCAL_R(177)
    BOOST_PP_LOCAL_MACRO(177)
# endif
# if BOOST_PP_LOCAL_R(176)
    BOOST_PP_LOCAL_MACRO(176)
# endif
# if BOOST_PP_LOCAL_R(175)
    BOOST_PP_LOCAL_MACRO(175)
# endif
# if BOOST_PP_LOCAL_R(174)
    BOOST_PP_LOCAL_MACRO(174)
# endif
# if BOOST_PP_LOCAL_R(173)
    BOOST_PP_LOCAL_MACRO(173)
# endif
# if BOOST_PP_LOCAL_R(172)
    BOOST_PP_LOCAL_MACRO(172)
# endif
# if BOOST_PP_LOCAL_R(171)
    BOOST_PP_LOCAL_MACRO(171)
# endif
# if BOOST_PP_LOCAL_R(170)
    BOOST_PP_LOCAL_MACRO(170)
# endif
# if BOOST_PP_LOCAL_R(169)
    BOOST_PP_LOCAL_MACRO(169)
# endif
# if BOOST_PP_LOCAL_R(168)
    BOOST_PP_LOCAL_MACRO(168)
# endif
# if BOOST_PP_LOCAL_R(167)
    BOOST_PP_LOCAL_MACRO(167)
# endif
# if BOOST_PP_LOCAL_R(166)
    BOOST_PP_LOCAL_MACRO(166)
# endif
# if BOOST_PP_LOCAL_R(165)
    BOOST_PP_LOCAL_MACRO(165)
# endif
# if BOOST_PP_LOCAL_R(164)
    BOOST_PP_LOCAL_MACRO(164)
# endif
# if BOOST_PP_LOCAL_R(163)
    BOOST_PP_LOCAL_MACRO(163)
# endif
# if BOOST_PP_LOCAL_R(162)
    BOOST_PP_LOCAL_MACRO(162)
# endif
# if BOOST_PP_LOCAL_R(161)
    BOOST_PP_LOCAL_MACRO(161)
# endif
# if BOOST_PP_LOCAL_R(160)
    BOOST_PP_LOCAL_MACRO(160)
# endif
# if BOOST_PP_LOCAL_R(159)
    BOOST_PP_LOCAL_MACRO(159)
# endif
# if BOOST_PP_LOCAL_R(158)
    BOOST_PP_LOCAL_MACRO(158)
# endif
# if BOOST_PP_LOCAL_R(157)
    BOOST_PP_LOCAL_MACRO(157)
# endif
# if BOOST_PP_LOCAL_R(156)
    BOOST_PP_LOCAL_MACRO(156)
# endif
# if BOOST_PP_LOCAL_R(155)
    BOOST_PP_LOCAL_MACRO(155)
# endif
# if BOOST_PP_LOCAL_R(154)
    BOOST_PP_LOCAL_MACRO(154)
# endif
# if BOOST_PP_LOCAL_R(153)
    BOOST_PP_LOCAL_MACRO(153)
# endif
# if BOOST_PP_LOCAL_R(152)
    BOOST_PP_LOCAL_MACRO(152)
# endif
# if BOOST_PP_LOCAL_R(151)
    BOOST_PP_LOCAL_MACRO(151)
# endif
# if BOOST_PP_LOCAL_R(150)
    BOOST_PP_LOCAL_MACRO(150)
# endif
# if BOOST_PP_LOCAL_R(149)
    BOOST_PP_LOCAL_MACRO(149)
# endif
# if BOOST_PP_LOCAL_R(148)
    BOOST_PP_LOCAL_MACRO(148)
# endif
# if BOOST_PP_LOCAL_R(147)
    BOOST_PP_LOCAL_MACRO(147)
# endif
# if BOOST_PP_LOCAL_R(146)
    BOOST_PP_LOCAL_MACRO(146)
# endif
# if BOOST_PP_LOCAL_R(145)
    BOOST_PP_LOCAL_MACRO(145)
# endif
# if BOOST_PP_LOCAL_R(144)
    BOOST_PP_LOCAL_MACRO(144)
# endif
# if BOOST_PP_LOCAL_R(143)
    BOOST_PP_LOCAL_MACRO(143)
# endif
# if BOOST_PP_LOCAL_R(142)
    BOOST_PP_LOCAL_MACRO(142)
# endif
# if BOOST_PP_LOCAL_R(141)
    BOOST_PP_LOCAL_MACRO(141)
# endif
# if BOOST_PP_LOCAL_R(140)
    BOOST_PP_LOCAL_MACRO(140)
# endif
# if BOOST_PP_LOCAL_R(139)
    BOOST_PP_LOCAL_MACRO(139)
# endif
# if BOOST_PP_LOCAL_R(138)
    BOOST_PP_LOCAL_MACRO(138)
# endif
# if BOOST_PP_LOCAL_R(137)
    BOOST_PP_LOCAL_MACRO(137)
# endif
# if BOOST_PP_LOCAL_R(136)
    BOOST_PP_LOCAL_MACRO(136)
# endif
# if BOOST_PP_LOCAL_R(135)
    BOOST_PP_LOCAL_MACRO(135)
# endif
# if BOOST_PP_LOCAL_R(134)
    BOOST_PP_LOCAL_MACRO(134)
# endif
# if BOOST_PP_LOCAL_R(133)
    BOOST_PP_LOCAL_MACRO(133)
# endif
# if BOOST_PP_LOCAL_R(132)
    BOOST_PP_LOCAL_MACRO(132)
# endif
# if BOOST_PP_LOCAL_R(131)
    BOOST_PP_LOCAL_MACRO(131)
# endif
# if BOOST_PP_LOCAL_R(130)
    BOOST_PP_LOCAL_MACRO(130)
# endif
# if BOOST_PP_LOCAL_R(129)
    BOOST_PP_LOCAL_MACRO(129)
# endif
# if BOOST_PP_LOCAL_R(128)
    BOOST_PP_LOCAL_MACRO(128)
# endif
# if BOOST_PP_LOCAL_R(127)
    BOOST_PP_LOCAL_MACRO(127)
# endif
# if BOOST_PP_LOCAL_R(126)
    BOOST_PP_LOCAL_MACRO(126)
# endif
# if BOOST_PP_LOCAL_R(125)
    BOOST_PP_LOCAL_MACRO(125)
# endif
# if BOOST_PP_LOCAL_R(124)
    BOOST_PP_LOCAL_MACRO(124)
# endif
# if BOOST_PP_LOCAL_R(123)
    BOOST_PP_LOCAL_MACRO(123)
# endif
# if BOOST_PP_LOCAL_R(122)
    BOOST_PP_LOCAL_MACRO(122)
# endif
# if BOOST_PP_LOCAL_R(121)
    BOOST_PP_LOCAL_MACRO(121)
# endif
# if BOOST_PP_LOCAL_R(120)
    BOOST_PP_LOCAL_MACRO(120)
# endif
# if BOOST_PP_LOCAL_R(119)
    BOOST_PP_LOCAL_MACRO(119)
# endif
# if BOOST_PP_LOCAL_R(118)
    BOOST_PP_LOCAL_MACRO(118)
# endif
# if BOOST_PP_LOCAL_R(117)
    BOOST_PP_LOCAL_MACRO(117)
# endif
# if BOOST_PP_LOCAL_R(116)
    BOOST_PP_LOCAL_MACRO(116)
# endif
# if BOOST_PP_LOCAL_R(115)
    BOOST_PP_LOCAL_MACRO(115)
# endif
# if BOOST_PP_LOCAL_R(114)
    BOOST_PP_LOCAL_MACRO(114)
# endif
# if BOOST_PP_LOCAL_R(113)
    BOOST_PP_LOCAL_MACRO(113)
# endif
# if BOOST_PP_LOCAL_R(112)
    BOOST_PP_LOCAL_MACRO(112)
# endif
# if BOOST_PP_LOCAL_R(111)
    BOOST_PP_LOCAL_MACRO(111)
# endif
# if BOOST_PP_LOCAL_R(110)
    BOOST_PP_LOCAL_MACRO(110)
# endif
# if BOOST_PP_LOCAL_R(109)
    BOOST_PP_LOCAL_MACRO(109)
# endif
# if BOOST_PP_LOCAL_R(108)
    BOOST_PP_LOCAL_MACRO(108)
# endif
# if BOOST_PP_LOCAL_R(107)
    BOOST_PP_LOCAL_MACRO(107)
# endif
# if BOOST_PP_LOCAL_R(106)
    BOOST_PP_LOCAL_MACRO(106)
# endif
# if BOOST_PP_LOCAL_R(105)
    BOOST_PP_LOCAL_MACRO(105)
# endif
# if BOOST_PP_LOCAL_R(104)
    BOOST_PP_LOCAL_MACRO(104)
# endif
# if BOOST_PP_LOCAL_R(103)
    BOOST_PP_LOCAL_MACRO(103)
# endif
# if BOOST_PP_LOCAL_R(102)
    BOOST_PP_LOCAL_MACRO(102)
# endif
# if BOOST_PP_LOCAL_R(101)
    BOOST_PP_LOCAL_MACRO(101)
# endif
# if BOOST_PP_LOCAL_R(100)
    BOOST_PP_LOCAL_MACRO(100)
# endif
# if BOOST_PP_LOCAL_R(99)
    BOOST_PP_LOCAL_MACRO(99)
# endif
# if BOOST_PP_LOCAL_R(98)
    BOOST_PP_LOCAL_MACRO(98)
# endif
# if BOOST_PP_LOCAL_R(97)
    BOOST_PP_LOCAL_MACRO(97)
# endif
# if BOOST_PP_LOCAL_R(96)
    BOOST_PP_LOCAL_MACRO(96)
# endif
# if BOOST_PP_LOCAL_R(95)
    BOOST_PP_LOCAL_MACRO(95)
# endif
# if BOOST_PP_LOCAL_R(94)
    BOOST_PP_LOCAL_MACRO(94)
# endif
# if BOOST_PP_LOCAL_R(93)
    BOOST_PP_LOCAL_MACRO(93)
# endif
# if BOOST_PP_LOCAL_R(92)
    BOOST_PP_LOCAL_MACRO(92)
# endif
# if BOOST_PP_LOCAL_R(91)
    BOOST_PP_LOCAL_MACRO(91)
# endif
# if BOOST_PP_LOCAL_R(90)
    BOOST_PP_LOCAL_MACRO(90)
# endif
# if BOOST_PP_LOCAL_R(89)
    BOOST_PP_LOCAL_MACRO(89)
# endif
# if BOOST_PP_LOCAL_R(88)
    BOOST_PP_LOCAL_MACRO(88)
# endif
# if BOOST_PP_LOCAL_R(87)
    BOOST_PP_LOCAL_MACRO(87)
# endif
# if BOOST_PP_LOCAL_R(86)
    BOOST_PP_LOCAL_MACRO(86)
# endif
# if BOOST_PP_LOCAL_R(85)
    BOOST_PP_LOCAL_MACRO(85)
# endif
# if BOOST_PP_LOCAL_R(84)
    BOOST_PP_LOCAL_MACRO(84)
# endif
# if BOOST_PP_LOCAL_R(83)
    BOOST_PP_LOCAL_MACRO(83)
# endif
# if BOOST_PP_LOCAL_R(82)
    BOOST_PP_LOCAL_MACRO(82)
# endif
# if BOOST_PP_LOCAL_R(81)
    BOOST_PP_LOCAL_MACRO(81)
# endif
# if BOOST_PP_LOCAL_R(80)
    BOOST_PP_LOCAL_MACRO(80)
# endif
# if BOOST_PP_LOCAL_R(79)
    BOOST_PP_LOCAL_MACRO(79)
# endif
# if BOOST_PP_LOCAL_R(78)
    BOOST_PP_LOCAL_MACRO(78)
# endif
# if BOOST_PP_LOCAL_R(77)
    BOOST_PP_LOCAL_MACRO(77)
# endif
# if BOOST_PP_LOCAL_R(76)
    BOOST_PP_LOCAL_MACRO(76)
# endif
# if BOOST_PP_LOCAL_R(75)
    BOOST_PP_LOCAL_MACRO(75)
# endif
# if BOOST_PP_LOCAL_R(74)
    BOOST_PP_LOCAL_MACRO(74)
# endif
# if BOOST_PP_LOCAL_R(73)
    BOOST_PP_LOCAL_MACRO(73)
# endif
# if BOOST_PP_LOCAL_R(72)
    BOOST_PP_LOCAL_MACRO(72)
# endif
# if BOOST_PP_LOCAL_R(71)
    BOOST_PP_LOCAL_MACRO(71)
# endif
# if BOOST_PP_LOCAL_R(70)
    BOOST_PP_LOCAL_MACRO(70)
# endif
# if BOOST_PP_LOCAL_R(69)
    BOOST_PP_LOCAL_MACRO(69)
# endif
# if BOOST_PP_LOCAL_R(68)
    BOOST_PP_LOCAL_MACRO(68)
# endif
# if BOOST_PP_LOCAL_R(67)
    BOOST_PP_LOCAL_MACRO(67)
# endif
# if BOOST_PP_LOCAL_R(66)
    BOOST_PP_LOCAL_MACRO(66)
# endif
# if BOOST_PP_LOCAL_R(65)
    BOOST_PP_LOCAL_MACRO(65)
# endif
# if BOOST_PP_LOCAL_R(64)
    BOOST_PP_LOCAL_MACRO(64)
# endif
# if BOOST_PP_LOCAL_R(63)
    BOOST_PP_LOCAL_MACRO(63)
# endif
# if BOOST_PP_LOCAL_R(62)
    BOOST_PP_LOCAL_MACRO(62)
# endif
# if BOOST_PP_LOCAL_R(61)
    BOOST_PP_LOCAL_MACRO(61)
# endif
# if BOOST_PP_LOCAL_R(60)
    BOOST_PP_LOCAL_MACRO(60)
# endif
# if BOOST_PP_LOCAL_R(59)
    BOOST_PP_LOCAL_MACRO(59)
# endif
# if BOOST_PP_LOCAL_R(58)
    BOOST_PP_LOCAL_MACRO(58)
# endif
# if BOOST_PP_LOCAL_R(57)
    BOOST_PP_LOCAL_MACRO(57)
# endif
# if BOOST_PP_LOCAL_R(56)
    BOOST_PP_LOCAL_MACRO(56)
# endif
# if BOOST_PP_LOCAL_R(55)
    BOOST_PP_LOCAL_MACRO(55)
# endif
# if BOOST_PP_LOCAL_R(54)
    BOOST_PP_LOCAL_MACRO(54)
# endif
# if BOOST_PP_LOCAL_R(53)
    BOOST_PP_LOCAL_MACRO(53)
# endif
# if BOOST_PP_LOCAL_R(52)
    BOOST_PP_LOCAL_MACRO(52)
# endif
# if BOOST_PP_LOCAL_R(51)
    BOOST_PP_LOCAL_MACRO(51)
# endif
# if BOOST_PP_LOCAL_R(50)
    BOOST_PP_LOCAL_MACRO(50)
# endif
# if BOOST_PP_LOCAL_R(49)
    BOOST_PP_LOCAL_MACRO(49)
# endif
# if BOOST_PP_LOCAL_R(48)
    BOOST_PP_LOCAL_MACRO(48)
# endif
# if BOOST_PP_LOCAL_R(47)
    BOOST_PP_LOCAL_MACRO(47)
# endif
# if BOOST_PP_LOCAL_R(46)
    BOOST_PP_LOCAL_MACRO(46)
# endif
# if BOOST_PP_LOCAL_R(45)
    BOOST_PP_LOCAL_MACRO(45)
# endif
# if BOOST_PP_LOCAL_R(44)
    BOOST_PP_LOCAL_MACRO(44)
# endif
# if BOOST_PP_LOCAL_R(43)
    BOOST_PP_LOCAL_MACRO(43)
# endif
# if BOOST_PP_LOCAL_R(42)
    BOOST_PP_LOCAL_MACRO(42)
# endif
# if BOOST_PP_LOCAL_R(41)
    BOOST_PP_LOCAL_MACRO(41)
# endif
# if BOOST_PP_LOCAL_R(40)
    BOOST_PP_LOCAL_MACRO(40)
# endif
# if BOOST_PP_LOCAL_R(39)
    BOOST_PP_LOCAL_MACRO(39)
# endif
# if BOOST_PP_LOCAL_R(38)
    BOOST_PP_LOCAL_MACRO(38)
# endif
# if BOOST_PP_LOCAL_R(37)
    BOOST_PP_LOCAL_MACRO(37)
# endif
# if BOOST_PP_LOCAL_R(36)
    BOOST_PP_LOCAL_MACRO(36)
# endif
# if BOOST_PP_LOCAL_R(35)
    BOOST_PP_LOCAL_MACRO(35)
# endif
# if BOOST_PP_LOCAL_R(34)
    BOOST_PP_LOCAL_MACRO(34)
# endif
# if BOOST_PP_LOCAL_R(33)
    BOOST_PP_LOCAL_MACRO(33)
# endif
# if BOOST_PP_LOCAL_R(32)
    BOOST_PP_LOCAL_MACRO(32)
# endif
# if BOOST_PP_LOCAL_R(31)
    BOOST_PP_LOCAL_MACRO(31)
# endif
# if BOOST_PP_LOCAL_R(30)
    BOOST_PP_LOCAL_MACRO(30)
# endif
# if BOOST_PP_LOCAL_R(29)
    BOOST_PP_LOCAL_MACRO(29)
# endif
# if BOOST_PP_LOCAL_R(28)
    BOOST_PP_LOCAL_MACRO(28)
# endif
# if BOOST_PP_LOCAL_R(27)
    BOOST_PP_LOCAL_MACRO(27)
# endif
# if BOOST_PP_LOCAL_R(26)
    BOOST_PP_LOCAL_MACRO(26)
# endif
# if BOOST_PP_LOCAL_R(25)
    BOOST_PP_LOCAL_MACRO(25)
# endif
# if BOOST_PP_LOCAL_R(24)
    BOOST_PP_LOCAL_MACRO(24)
# endif
# if BOOST_PP_LOCAL_R(23)
    BOOST_PP_LOCAL_MACRO(23)
# endif
# if BOOST_PP_LOCAL_R(22)
    BOOST_PP_LOCAL_MACRO(22)
# endif
# if BOOST_PP_LOCAL_R(21)
    BOOST_PP_LOCAL_MACRO(21)
# endif
# if BOOST_PP_LOCAL_R(20)
    BOOST_PP_LOCAL_MACRO(20)
# endif
# if BOOST_PP_LOCAL_R(19)
    BOOST_PP_LOCAL_MACRO(19)
# endif
# if BOOST_PP_LOCAL_R(18)
    BOOST_PP_LOCAL_MACRO(18)
# endif
# if BOOST_PP_LOCAL_R(17)
    BOOST_PP_LOCAL_MACRO(17)
# endif
# if BOOST_PP_LOCAL_R(16)
    BOOST_PP_LOCAL_MACRO(16)
# endif
# if BOOST_PP_LOCAL_R(15)
    BOOST_PP_LOCAL_MACRO(15)
# endif
# if BOOST_PP_LOCAL_R(14)
    BOOST_PP_LOCAL_MACRO(14)
# endif
# if BOOST_PP_LOCAL_R(13)
    BOOST_PP_LOCAL_MACRO(13)
# endif
# if BOOST_PP_LOCAL_R(12)
    BOOST_PP_LOCAL_MACRO(12)
# endif
# if BOOST_PP_LOCAL_R(11)
    BOOST_PP_LOCAL_MACRO(11)
# endif
# if BOOST_PP_LOCAL_R(10)
    BOOST_PP_LOCAL_MACRO(10)
# endif
# if BOOST_PP_LOCAL_R(9)
    BOOST_PP_LOCAL_MACRO(9)
# endif
# if BOOST_PP_LOCAL_R(8)
    BOOST_PP_LOCAL_MACRO(8)
# endif
# if BOOST_PP_LOCAL_R(7)
    BOOST_PP_LOCAL_MACRO(7)
# endif
# if BOOST_PP_LOCAL_R(6)
    BOOST_PP_LOCAL_MACRO(6)
# endif
# if BOOST_PP_LOCAL_R(5)
    BOOST_PP_LOCAL_MACRO(5)
# endif
# if BOOST_PP_LOCAL_R(4)
    BOOST_PP_LOCAL_MACRO(4)
# endif
# if BOOST_PP_LOCAL_R(3)
    BOOST_PP_LOCAL_MACRO(3)
# endif
# if BOOST_PP_LOCAL_R(2)
    BOOST_PP_LOCAL_MACRO(2)
# endif
# if BOOST_PP_LOCAL_R(1)
    BOOST_PP_LOCAL_MACRO(1)
# endif
# if BOOST_PP_LOCAL_R(0)
    BOOST_PP_LOCAL_MACRO(0)
# endif
#
# else
#
# include <boost/preprocessor/config/limits.hpp>
#
# if BOOST_PP_LIMIT_ITERATION == 256
# include <boost/preprocessor/iteration/detail/limits/rlocal_256.hpp>
# elif BOOST_PP_LIMIT_ITERATION == 512
# include <boost/preprocessor/iteration/detail/limits/rlocal_512.hpp>
# include <boost/preprocessor/iteration/detail/limits/rlocal_256.hpp>
# elif BOOST_PP_LIMIT_ITERATION == 1024
# include <boost/preprocessor/iteration/detail/limits/rlocal_1024.hpp>
# include <boost/preprocessor/iteration/detail/limits/rlocal_512.hpp>
# include <boost/preprocessor/iteration/detail/limits/rlocal_256.hpp>
# else
# error Incorrect value for the BOOST_PP_LIMIT_ITERATION limit
# endif
#
# endif

/* rlocal.hpp
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
*/