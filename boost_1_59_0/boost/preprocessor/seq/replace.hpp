# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PREPROCESSOR_SEQ_REPLACE_HPP
# define BOOST_PREPROCESSOR_SEQ_REPLACE_HPP
#
# include <boost/preprocessor/arithmetic/dec.hpp>
# include <boost/preprocessor/arithmetic/inc.hpp>
# include <boost/preprocessor/config/config.hpp>
# include <boost/preprocessor/comparison/equal.hpp>
# include <boost/preprocessor/control/iif.hpp>
# include <boost/preprocessor/seq/first_n.hpp>
# include <boost/preprocessor/seq/rest_n.hpp>
# include <boost/preprocessor/seq/size.hpp>
#
# /* BOOST_PP_SEQ_REPLACE */
#
# if ~BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_EDG()
#    define BOOST_PP_SEQ_REPLACE(seq, i, elem) BOOST_PP_SEQ_FIRST_N(i, seq) (elem) BOOST_PP_SEQ_REPLACE_DETAIL_REST(seq, i)
# else
#    define BOOST_PP_SEQ_REPLACE(seq, i, elem) BOOST_PP_SEQ_REPLACE_I(seq, i, elem)
#    define BOOST_PP_SEQ_REPLACE_I(seq, i, elem) BOOST_PP_SEQ_FIRST_N(i, seq) (elem) BOOST_PP_SEQ_REPLACE_DETAIL_REST(seq, i)
# endif
#
#    define BOOST_PP_SEQ_REPLACE_DETAIL_REST_EMPTY(seq, i)
#    define BOOST_PP_SEQ_REPLACE_DETAIL_REST_VALID(seq, i) BOOST_PP_SEQ_REST_N(BOOST_PP_INC(i), seq)
#    define BOOST_PP_SEQ_REPLACE_DETAIL_REST(seq, i) \
        BOOST_PP_IIF \
            ( \
            BOOST_PP_EQUAL(i,BOOST_PP_DEC(BOOST_PP_SEQ_SIZE(seq))), \
            BOOST_PP_SEQ_REPLACE_DETAIL_REST_EMPTY, \
            BOOST_PP_SEQ_REPLACE_DETAIL_REST_VALID \
            ) \
        (seq, i) \
/**/
#
# endif

/* replace.hpp
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
*/