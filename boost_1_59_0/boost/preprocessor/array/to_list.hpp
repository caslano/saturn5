# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Edward Diener 2011.                                    *
#  *     (C) Copyright Paul Mensonides 2011.                                  *
#  *     Distributed under the Boost Software License, Version 1.0. (See      *
#  *     accompanying file LICENSE_1_0.txt or copy at                         *
#  *     http://www.boost.org/LICENSE_1_0.txt)                                *
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# ifndef BOOST_PREPROCESSOR_ARRAY_TO_LIST_HPP
# define BOOST_PREPROCESSOR_ARRAY_TO_LIST_HPP
#
# include <boost/preprocessor/cat.hpp>
# include <boost/preprocessor/config/config.hpp>
# include <boost/preprocessor/array/size.hpp>
# include <boost/preprocessor/control/if.hpp>
# include <boost/preprocessor/tuple/to_list.hpp>
#
# /* BOOST_PP_ARRAY_TO_LIST */
#
#    define BOOST_PP_ARRAY_TO_LIST(array) \
        BOOST_PP_IF \
            ( \
            BOOST_PP_ARRAY_SIZE(array), \
            BOOST_PP_ARRAY_TO_LIST_DO, \
            BOOST_PP_ARRAY_TO_LIST_EMPTY \
            ) \
        (array) \
/**/
#
#    define BOOST_PP_ARRAY_TO_LIST_EMPTY(array) BOOST_PP_NIL
#
# if BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_MSVC()
#    define BOOST_PP_ARRAY_TO_LIST_DO(array) BOOST_PP_ARRAY_TO_LIST_I(BOOST_PP_TUPLE_TO_LIST, array)
#    define BOOST_PP_ARRAY_TO_LIST_I(m, args) BOOST_PP_ARRAY_TO_LIST_II(m, args)
#    define BOOST_PP_ARRAY_TO_LIST_II(m, args) BOOST_PP_CAT(m ## args,)
# elif BOOST_PP_CONFIG_FLAGS() & BOOST_PP_CONFIG_MWCC()
#    define BOOST_PP_ARRAY_TO_LIST_DO(array) BOOST_PP_ARRAY_TO_LIST_I(array)
#    define BOOST_PP_ARRAY_TO_LIST_I(array) BOOST_PP_TUPLE_TO_LIST ## array
# else
#    define BOOST_PP_ARRAY_TO_LIST_DO(array) BOOST_PP_TUPLE_TO_LIST array
# endif
#
# endif

/* to_list.hpp
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
*/