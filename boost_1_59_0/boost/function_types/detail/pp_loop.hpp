
// (C) Copyright Tobias Schwinger
//
// Use modification and distribution are subject to the boost Software License,
// Version 1.0. (See http://www.boost.org/LICENSE_1_0.txt).

//------------------------------------------------------------------------------

// no include guards, this file is intended for multiple inclusions

#ifndef BOOST_FT_DETAIL_PP_LOOP_HPP_INCLUDED
#define BOOST_FT_DETAIL_PP_LOOP_HPP_INCLUDED
#   include <boost/preprocessor/facilities/expand.hpp>
#   include <boost/preprocessor/facilities/empty.hpp>
#   include <boost/preprocessor/punctuation/paren.hpp>
#endif

#include <boost/function_types/detail/encoding/def.hpp>
#include <boost/function_types/detail/encoding/aliases_def.hpp>

#if defined(BOOST_FT_PREPROCESSING_MODE)
#   define BOOST_FT_loop <boost/function_types/detail/pp_cc_loop/master.hpp>
#else
#   define BOOST_FT_loop \
        <boost/function_types/detail/pp_cc_loop/preprocessed.hpp>
#endif

#if defined(BOOST_FT_al_path)

#   define BOOST_FT_cc_file \
        <boost/function_types/detail/pp_variate_loop/preprocessed.hpp>
#   define BOOST_FT_variate_file \
        <boost/function_types/detail/pp_arity_loop.hpp>

#   ifndef BOOST_FT_type_function
#   define BOOST_FT_type_function(cc,name) BOOST_FT_SYNTAX( \
      R BOOST_PP_EMPTY,BOOST_PP_EMPTY,cc,BOOST_PP_EMPTY,name,BOOST_PP_EMPTY)
#   endif
#   ifndef BOOST_FT_type_function_pointer
#   define BOOST_FT_type_function_pointer(cc,name) BOOST_FT_SYNTAX( \
      R BOOST_PP_EMPTY,BOOST_PP_LPAREN,cc,* BOOST_PP_EMPTY,name,BOOST_PP_RPAREN)
#   endif
#   ifndef BOOST_FT_type_function_reference
#   define BOOST_FT_type_function_reference(cc,name) BOOST_FT_SYNTAX( \
      R BOOST_PP_EMPTY,BOOST_PP_LPAREN,cc,& BOOST_PP_EMPTY,name,BOOST_PP_RPAREN)
#   endif
#   ifndef BOOST_FT_type_member_function_pointer
#   define BOOST_FT_type_member_function_pointer(cc,name) BOOST_FT_SYNTAX( \
      R BOOST_PP_EMPTY,BOOST_PP_LPAREN,cc,T0::* BOOST_PP_EMPTY,name,BOOST_PP_RPAREN)
#   endif

#   include BOOST_FT_loop

#   undef BOOST_FT_type_function
#   undef BOOST_FT_type_function_pointer
#   undef BOOST_FT_type_function_reference
#   undef BOOST_FT_type_member_function_pointer

#   undef BOOST_FT_variations
#   undef BOOST_FT_variate_file
#   undef BOOST_FT_cc_file
#   undef BOOST_FT_al_path

#elif defined(BOOST_FT_cc_file)

#   include BOOST_FT_loop
#   undef BOOST_FT_cc_file

#else

#   error "argument missing"

#endif

#undef BOOST_FT_loop

#include <boost/function_types/detail/encoding/aliases_undef.hpp>
#include <boost/function_types/detail/encoding/undef.hpp>



/* pp_loop.hpp
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
*/