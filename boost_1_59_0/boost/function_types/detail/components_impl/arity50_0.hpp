
// (C) Copyright Tobias Schwinger
//
// Use modification and distribution are subject to the boost Software License,
// Version 1.0. (See http://www.boost.org/LICENSE_1_0.txt).

//------------------------------------------------------------------------------

// no include guards, this file is intended for multiple inclusion

// input:  BOOST_FT_syntax     type macro to use
// input:  BOOST_FT_cc         empty or cc specifier 
// input:  BOOST_FT_ell        empty or "..."
// input:  BOOST_FT_cv         empty or cv qualifiers
// input:  BOOST_FT_flags      single decimal integer encoding the flags
// output: BOOST_FT_n          number of component types (arity+1)
// output: BOOST_FT_arity      current arity
// output: BOOST_FT_type       macro that expands to the type
// output: BOOST_FT_tplargs(p) template arguments with given prefix
// output: BOOST_FT_params(p)  parameters with given prefix

# include <boost/function_types/detail/components_impl/arity40_0.hpp>
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,41> function_arity;
typedef mpl::vector42< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,42> function_arity;
typedef mpl::vector43< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,43> function_arity;
typedef mpl::vector44< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,44> function_arity;
typedef mpl::vector45< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,45> function_arity;
typedef mpl::vector46< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,46> function_arity;
typedef mpl::vector47< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,47> function_arity;
typedef mpl::vector48< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,48> function_arity;
typedef mpl::vector49< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 , T48 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 , T48 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,49> function_arity;
typedef mpl::vector50< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 , T48 > types;
};
template< typename R , typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 , typename T49, typename L>
struct components_impl<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 , T48 , T49 BOOST_FT_ell) BOOST_FT_cv, L>
{
typedef encode_bits<BOOST_FT_flags,BOOST_FT_cc_id> bits;
typedef constant<BOOST_FT_full_mask> mask;
typedef function_types::components<BOOST_FT_syntax(BOOST_FT_cc, BOOST_PP_EMPTY) (T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 , T48 , T49 BOOST_FT_ell) BOOST_FT_cv, L> type;
typedef components_mpl_sequence_tag tag;
typedef mpl::integral_c<std::size_t,50> function_arity;
typedef mpl::vector51< R , T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 , T20 , T21 , T22 , T23 , T24 , T25 , T26 , T27 , T28 , T29 , T30 , T31 , T32 , T33 , T34 , T35 , T36 , T37 , T38 , T39 , T40 , T41 , T42 , T43 , T44 , T45 , T46 , T47 , T48 , T49 > types;
};


/* arity50_0.hpp
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
*/