// Copyright (c) 2009-2020 Vladimir Batov.
// Use, modification and distribution are subject to the Boost Software License,
// Version 1.0. See http://www.boost.org/LICENSE_1_0.txt.

#ifndef BOOST_CONVERT_LEXICAL_CAST_HPP
#define BOOST_CONVERT_LEXICAL_CAST_HPP

#include <boost/lexical_cast.hpp>

namespace boost { namespace cnv
{
    struct lexical_cast;
}}

/// @brief boost::lexical_cast-based converter
/// @details The purpose of the converter is to
/// * Make use of the boost::lexical_cast functionality and performance that many people have become
/// accustomed to and comfortable with;
/// * Demonstrate how existing independent conversion/transformation-related facilities might be
//  incorporated in to the Boost.Convert framework.
///
/// The converter can easily replace boost::lexical_cast, adding flexibility and convenience.

struct boost::cnv::lexical_cast
{
    template<typename TypeOut, typename TypeIn>
    void
    operator()(TypeIn const& value_in, boost::optional<TypeOut>& result_out) const
    {
        try
        {
            result_out = boost::lexical_cast<TypeOut>(value_in);
        }
        catch (boost::bad_lexical_cast const&)
        {
        }
    }
};

#endif // BOOST_CONVERT_LEXICAL_CAST_HPP

/* lexical_cast.hpp
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
*/