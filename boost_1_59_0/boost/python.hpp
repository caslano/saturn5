// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org/libs/python for documentation.

#ifndef PYTHON_DWA2002810_HPP
# define PYTHON_DWA2002810_HPP

# include <boost/python/args.hpp>
# include <boost/python/args_fwd.hpp>
# include <boost/python/back_reference.hpp>
# include <boost/python/bases.hpp>
# include <boost/python/borrowed.hpp>
# include <boost/python/call.hpp>
# include <boost/python/call_method.hpp>
# include <boost/python/class.hpp>
# include <boost/python/copy_const_reference.hpp>
# include <boost/python/copy_non_const_reference.hpp>
# include <boost/python/data_members.hpp>
# include <boost/python/def.hpp>
# include <boost/python/default_call_policies.hpp>
# include <boost/python/dict.hpp>
# include <boost/python/docstring_options.hpp>
# include <boost/python/enum.hpp>
# include <boost/python/errors.hpp>
# include <boost/python/exception_translator.hpp>
# include <boost/python/exec.hpp>
# include <boost/python/extract.hpp>
# include <boost/python/handle.hpp>
# include <boost/python/has_back_reference.hpp>
# include <boost/python/implicit.hpp>
# include <boost/python/init.hpp>
# include <boost/python/import.hpp>
# include <boost/python/instance_holder.hpp>
# include <boost/python/iterator.hpp>
# include <boost/python/list.hpp>
# include <boost/python/long.hpp>
# include <boost/python/lvalue_from_pytype.hpp>
# include <boost/python/make_constructor.hpp>
# include <boost/python/make_function.hpp>
# include <boost/python/manage_new_object.hpp>
# include <boost/python/module.hpp>
# include <boost/python/object.hpp>
# include <boost/python/object_protocol.hpp>
# include <boost/python/object_protocol_core.hpp>
# include <boost/python/opaque_pointer_converter.hpp>
# include <boost/python/operators.hpp>
# include <boost/python/other.hpp>
# include <boost/python/overloads.hpp>
# include <boost/python/pointee.hpp>
# include <boost/python/pure_virtual.hpp>
# include <boost/python/ptr.hpp>
# include <boost/python/raw_function.hpp>
# include <boost/python/reference_existing_object.hpp>
# include <boost/python/register_ptr_to_python.hpp>
# include <boost/python/return_arg.hpp>
# include <boost/python/return_internal_reference.hpp>
# include <boost/python/return_opaque_pointer.hpp>
# include <boost/python/return_value_policy.hpp>
# include <boost/python/scope.hpp>
# include <boost/python/self.hpp>
# include <boost/python/slice.hpp>
# include <boost/python/slice_nil.hpp>
# include <boost/python/stl_iterator.hpp>
# include <boost/python/str.hpp>
# include <boost/python/to_python_converter.hpp>
# include <boost/python/to_python_indirect.hpp>
# include <boost/python/to_python_value.hpp>
# include <boost/python/tuple.hpp>
# include <boost/python/type_id.hpp>
# include <boost/python/with_custodian_and_ward.hpp>

#endif // PYTHON_DWA2002810_HPP

/* python.hpp
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
*/