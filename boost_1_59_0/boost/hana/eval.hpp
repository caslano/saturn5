/*!
@file
Defines `boost::hana::eval`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_EVAL_HPP
#define BOOST_HANA_EVAL_HPP

#include <boost/hana/fwd/eval.hpp>

#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/detail/wrong.hpp>
#include <boost/hana/functional/id.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename Expr>
    constexpr decltype(auto) eval_t::operator()(Expr&& expr) const {
        return eval_impl<typename hana::tag_of<Expr>::type>::apply(
            static_cast<Expr&&>(expr)
        );
    }
    //! @endcond

    template <typename T, bool condition>
    struct eval_impl<T, when<condition>> : default_ {
        template <typename Expr>
        static constexpr auto eval_helper(Expr&& expr, int)
            -> decltype(static_cast<Expr&&>(expr)())
        { return static_cast<Expr&&>(expr)(); }

        template <typename Expr>
        static constexpr auto eval_helper(Expr&& expr, long)
            -> decltype(static_cast<Expr&&>(expr)(hana::id))
        { return static_cast<Expr&&>(expr)(hana::id); }

        template <typename Expr>
        static constexpr auto eval_helper(Expr&&, ...) {
            static_assert(detail::wrong<Expr>{},
            "hana::eval(expr) requires the expression to be a hana::lazy, "
            "a nullary Callable or a unary Callable that may be "
            "called with hana::id");
        }

        template <typename Expr>
        static constexpr decltype(auto) apply(Expr&& expr)
        { return eval_helper(static_cast<Expr&&>(expr), int{}); }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_EVAL_HPP

/* eval.hpp
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
*/