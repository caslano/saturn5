/*!
@file
Defines `boost::hana::detail::first_unsatisfied_index`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_DETAIL_FIRST_UNSATISFIED_INDEX_HPP
#define BOOST_HANA_DETAIL_FIRST_UNSATISFIED_INDEX_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/integral_constant.hpp>
#include <boost/hana/value.hpp>

#include <utility>


namespace boost { namespace hana { namespace detail {
    template <bool, typename Pred, typename ...Xs>
    struct find_tail_size;

    template <typename Pred, typename X, typename ...Xs>
    struct find_tail_size<true, Pred, X, Xs...> {
        static constexpr int value = find_tail_size<
            static_cast<bool>(hana::value<decltype(std::declval<Pred>()(std::declval<X>()))>()),
            Pred, Xs...
        >::value;
    };

    template <typename Pred>
    struct find_tail_size<true, Pred> {
        static constexpr int value = -1;
    };

    template <typename Pred, typename ...Xs>
    struct find_tail_size<false, Pred, Xs...> {
        static constexpr int value = sizeof...(Xs);
    };

    //! @ingroup group-details
    //! Returns the index of the first element which does not satisfy `Pred`,
    //! or `sizeof...(Xs)` if no such element exists.
    template <typename Pred>
    struct first_unsatisfied_index {
        template <typename ...Xs>
        constexpr auto operator()(Xs&& ...) const {
            return hana::size_c<
                sizeof...(Xs) - 1 - find_tail_size<true, Pred, Xs&&...>::value
            >;
        }
    };
} }} // end namespace boost::hana

#endif // !BOOST_HANA_DETAIL_FIRST_UNSATISFIED_INDEX_HPP

/* first_unsatisfied_index.hpp
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
*/