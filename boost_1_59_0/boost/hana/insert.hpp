/*!
@file
Defines `boost::hana::insert`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_INSERT_HPP
#define BOOST_HANA_INSERT_HPP

#include <boost/hana/fwd/insert.hpp>

#include <boost/hana/append.hpp>
#include <boost/hana/concat.hpp>
#include <boost/hana/concept/sequence.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/drop_front.hpp>
#include <boost/hana/take_front.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename Set, typename ...Args>
    constexpr decltype(auto) insert_t::operator()(Set&& set, Args&& ...args) const {
        return insert_impl<typename hana::tag_of<Set>::type>::apply(
            static_cast<Set&&>(set),
            static_cast<Args&&>(args)...
        );
    }
    //! @endcond

    template <typename T, bool condition>
    struct insert_impl<T, when<condition>> : default_ {
        template <typename ...Args>
        static constexpr auto apply(Args&& ...) = delete;
    };

    template <typename S>
    struct insert_impl<S, when<Sequence<S>::value>> {
        template <typename Xs, typename N, typename Element>
        static constexpr auto apply(Xs&& xs, N const& n, Element&& e) {
            return hana::concat(hana::append(hana::take_front(xs, n),
                                             static_cast<Element&&>(e)),
                                hana::drop_front(xs, n));
        }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_INSERT_HPP

/* insert.hpp
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
*/