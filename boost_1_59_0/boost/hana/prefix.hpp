/*!
@file
Defines `boost::hana::prefix`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_PREFIX_HPP
#define BOOST_HANA_PREFIX_HPP

#include <boost/hana/fwd/prefix.hpp>

#include <boost/hana/append.hpp>
#include <boost/hana/chain.hpp>
#include <boost/hana/concept/monad_plus.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/functional/partial.hpp>
#include <boost/hana/lift.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename Xs, typename Pref>
    constexpr auto prefix_t::operator()(Xs&& xs, Pref&& pref) const {
        using M = typename hana::tag_of<Xs>::type;
        using Prefix = BOOST_HANA_DISPATCH_IF(prefix_impl<M>,
            hana::MonadPlus<M>::value
        );

    #ifndef BOOST_HANA_CONFIG_DISABLE_CONCEPT_CHECKS
        static_assert(hana::MonadPlus<M>::value,
        "hana::prefix(xs, pref) requires 'xs' to be a MonadPlus");
    #endif

        return Prefix::apply(static_cast<Xs&&>(xs), static_cast<Pref&&>(pref));
    }
    //! @endcond

    template <typename M, bool condition>
    struct prefix_impl<M, when<condition>> : default_ {
        template <typename Xs, typename Z>
        static constexpr decltype(auto) apply(Xs&& xs, Z&& z) {
            return hana::chain(static_cast<Xs&&>(xs),
                hana::partial(hana::append, hana::lift<M>(static_cast<Z&&>(z))));
        }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_PREFIX_HPP

/* prefix.hpp
XyttxBrPRI8l+wWvl32GAb9WuM5z84dk8EX5VBI1bZUFDjvVy7kQz/KuJFStlwVi1y3womi0L5TOvcSNpZ74TJEZMSGE6PtqPiWMsyy9wI0QgvmBBNVe+ILMojnDQkW922pb0n1Vh4cN+ghcgJHX9VAhV0mv+AweS1jFHDk4kMX8lu8j6hE+EWbIfwb6pPEkYOPlK0AOkzEEgmOZo4MJvDpxzt0ERgdVCTLEjRH9UkTX7yPmg/gB02bCEdkGIieSa58/oT5Hmmd5nvt4PBorDXN/mBuVFw0PQOeUcD3nAySGW6gTuFmuJxCH87rlbQUpMXh6baujlV9ovyYxOi9mLb9bnYOznGQI/UQ97U13Upor5lqizhezNRnmSwzzYJkjxnBTmSuyVeCDyEDCv2kLJKESGCKm1MROUO5hwydrF5fb4QhY+GIvEoBoe1+aNpu5RzWHYF74MTbdVp108DnxfPQzYRzLmz4/DS5EkKlJTdysHSikte7Qo4F8r+s0Uewjj1y8okcuvZQHsrUpFJk156slPEsGB4dIzqKnIg0IaSMPOUq+WlkR0JYzzB0U/QBWnpnrGDJ6LinBKENCWCtleXfj6jGhDzXCJnpOPOBH100pZkr/awEUjVYPXkulJyckItWB7zhkM9BRaczsnUpU5XbFVsVB56Y8gFxhCbyToHe/r0VGHXlWSdMXmqwM5eVHEfvc0kcDBm3TGTbAwmhv5k8RayeWXrJbZd9FImQKhES6Hk3IvXSxvgdHI0EhBZjDgid7N6J+xXmExajki70KBrAVvhBPZMHngNMkBtUO9M+Hj+cFCTEPCUYhTNni1hlhFLbkpKCSsX8ffDYtb3D8Q85JOid+9x6UuDfhxoxOWX1n5Kh+eX0Ws8j/C6GPesAFWPMWS91/LOkBzSCoiZtfZ/YUXA89814EHzymLJ462RZJxaMus6T72bnzy0TgY0B02v+VHM0bztFvY2lXt7lHMhe9nnZ8/ZAexZEMZl/eFC1jPlLwbD0o/OXqmnAiLS4wxey66W+othor8TzSjA9txYvRhTO75sxkgbEofzVXRbYg57+UTggVbP5VGykhDIoSVBohgiLZVT0rOYk/PDQIrQZnapYJxfAkRFUytQY1sSZMJ0iHrRZzwOWHUfdEZ8E/WhgHhWEmsm9DGmgH6vloLmDsnJ8EPhfcGxkCF7+xURMz6wszzf3x7aJ0heEhoy4Eai7ss/Tcrn7/fDwttXZYODvMhqV027HdmO30Yu1wclHssLoZ73QNrjpaI3Tr4jR0VNti0LnN5DJ0RHMcO5ZdYKjaNsHO93AhSxaAdGRB45i+S2/CnoQui84VgGVzy8cGLXJMX0JIEsJq38oox051Hp46GNQ4oTehdXRX+2WZMoifPLgyvWai+YX3YA7khiyX2qeiK7R8BBF4cHVh5ZDeEsld+4e77CMpesYfFj2LwJ6Dzl3+drkvYCP/63yPX73jfJ8/j4HBDY7D6B5fmBYIdkP4MQ2MKyxVsC9Am/imfI9/RMboDs8J7i4f+1wTANaCQDqHwG1e4Cq7L3BW6g+2wNgL6y7/u/6fmMQGjkCwFyEbsiBQBXaIxiUta6IUQaJPLaJbi3TEVgbONZale2F9wTfif0iWJAtmoEic/CCHWP1i+pSdaOGBEDJZ/sbGBZqKGR0EUBm/YPEhv7aQjfNzZkKohSkxQqiQ8IPbCSGHZ7H7Mk5iqJ8gAqiXUfhQPv7jgnxZGBrkvelVRFATNZkoGuajHf89sMnB0Th/xUgIOceOdGIZhGwxOyLAMuQauQ/RJcuLcDeczoLRPFcHNC8onZgX5Mu2OpsFp0nOAtcEX+VNBllPfNknItCdf0tJKJWG05IdghcC7zwR/vpne6ErP7pDMANKqixF3Tsnd1V4vUzJXLzXc0NqXJ5iigRGwxyRBqHgr1vkpg0cSG6GCYyAiZZGEL4ceN7hGRrbqEEQ8qsZiiyZF/j7dCw4WDcRzm/p/Sa8FWMtCo+vrwZmkPY81rT/ryC/xWxixBuNqJWONBABw2iO2ksR6hHQ6wbYzUAz2XNwuqM77WN0hkEE+CD00bi9YIUykBiYyddwuCDLeLhgalK9G0MgzLBKmPtxfk2X5hAh/PjFgBW40Ks2kP95Ji3+jwC4EM9aCpgPmal3L7civBzpRRRd5SaK0Eg6BPNSeWOdFaWJ3EE2R+3QybIrEZ/ssVbQ2iAWACfBWaAZTtpx+KkKOpp6sUMHa7DkOAzY24T3Qf9yX1Qwneh+4UwIYb8om6JcLKKSgwy5GKV8mS98DVq5IxVv5vgp6Jzq/X1VWqpp57ZeVKKsN0jvm8GVq6WoGRHonK3+6sJN6dhJBNGCGFFCq2Tz+gW5XfJe7Le0YlttFLlbjT44D4bxfSNfEnwf5qdXUOpTwdCrvL1++nydLBzhyf7pG6+QgPhT0ge+QZ5QT7jmgCYj1thPLj6bDkLg27a3nnnHge5UHnuKACQuaNwM6RfOpEsq3rFNdvZRxLEkSI8HGfqD6Y6oTSIEtadvzEHJAONo/YyKKZEZFPfO0RgvdcZ2gO2mOCakBH0jNoHtk0Z0sn7o/eTIH6dw64O2g2RbbVJcCHtDkF8TfWI6AVYAFhTICx/+8dVMEnriR8oPbq+jxvDxykqNZy/3gXe0dC52d8ya9HbdZ5r2sOyNYcuie9idgAR+vZhl0JL1hrc085Thy0caduY7a2fseEl63CdaIe+nzwnPiS+2G9x7HBD7bKb4nMLIwYGmRhtZ6rjDoiEwCw8qLKuug4+oH83syJ9O0246F9j7gNAX0ntBZnu97EmN3LHpPz4g84p0PxoBuOw/7wC6GoaODeT3wpRmyyNII9vXP7t9qGDdXKh7EMqH9U+68WuePywgPXmCrEaILTc55fHDBvpHiKQzutmpmdzgEIGLNbsYpBqpLf47ODkOvgMaaaMKB6GP0sD6Jk2g3kBdMxaguRYh26ImzbnCn7zkmcwkVCJNVgzHqvUr/0ENFkr8AoakzzYi5OhnwojiiHh0fB45celgY2BETNEDHE9ciVvfmfsuENXQK7ZdWxNwiZsUCungR1v5UnNCZDd5miRlhsTUeMc90Mj2i2X19t0h0qKL8K8X8xZB18IFyI0IVirjskqSMBlCm5UnCbEIH1w2L7IPxKiehnRvjEo6Ry7bAVF6SwuKTJHAQTL2uskJ8SeTO5SdLUXwouNoI1rLRClZhobloAk7YoM8cQ3H7zn2OtHFCdyIJ0bZ0HUtSbc3K6j0Tt9mbGcuocoUJfWkIAMW0ldSWy9ZPmowQExZRFYsiXfXac+vV1+CDHibRZxulrCrP2Aq85mBESCjryPDp9WbhPubX2NEc6Q0r7FB8w9DoRRAGU4T81sdZRhsTM0hdA0WtyVgdnTn6AChoFgD+/L5B4+enGDvYaoO/858t44ynJvYeqqaa0TDauK6W87/aJicZuiq5GJ81SzxRPivwXNRR2JACZR7iZayQ8DxCS6zQoq1izGNDj7NfpIj12J4QiLypXBQi0QICod1Y/0o6Ta+xY+VtblEjOb94GfWYKz0p2jkN68w5Qf9prBMnLawqjU53fmJ0PYH1mprfsM/1p7ewXFM1vATHSMDLjffdP3DgHtq9EZ0luoGSaLaUgIjAWCsmjf0ywVQ4GDGUM9smkp0BijDe9QiHkJRrAr0HZERcqjj/bhggF7lOy1gyqhWqFVXZvKPeOMYxQU/KphE1RElN7qECilShRM7qJI/0BilnbINzv/dJbzxgfJWXml5k2CUCIVPBwgkhT/4BySaO5B/QkIcHAD8hC6ODwxhIE5qfGhMmsNBJl1ubs/Y7y7tg6xl1bO6ZSllZ3PVo1bdwguojmupMt+KPx+oyHWUX4oiBB738Wt1x0QHzuv59YXbNwfh9+p107LmW9Mzx/tVfpqANNbEjacN+Q3wfS2+7PKd61S+5nIdQFMHNsOr8PE8Pubctd2wcJkD+4zSelSxMIVzV/gGue51pw7QkGWxyJbnBfTSajHvYNT2SOF3Rq8uYSfp6hQiUtSNIz3NVey1un7EUfB0vcb2Hs0zt+AV5vRqh8lloSYm05Z8eJOQ8DFwehubyaR4earYqVX4o/+UQfgR/BZfDGJTP6eXjocjLG0nV1Nss/iltyHl2KbdXj6O5hltHiskT6yAuU786TcayPtOXDe11STa1nPVCnQd4/hpP0X/anils/Z5pvwc8gphdAGQ7YfZFEfwxRMeVltnIQmrGxQQoNMQfrnKTAKqdH5aWVqc4uU85+ohS0zq8qBKdOpCcdHndTVq/Za96FzBu7fktYODR3RGm/eQ3Az6csv0idJp8+p8zALS6T1kxl2ELuK6Ux2wQ4mQ6OT9CJH3EOg3d1c+l0P/IRfhc33ZTMvhAtKFUPLJ3rUrsvB9i3OM9i3AXvDnS1wAypNNq8wQKT4cd3RPpO0Iq/njYNT5yXueEPdxlX9x3ahjoxTIF6fDY1C+ccRGfQVVoczULv7NxI+VUFVl9Q41TqngjsNkyl+XZsc/V+jmMdTmZaot+4vjahR00I/7d5cqOm5Wdfx3P+nxy/seMB5jf8PANkjDvI2QOCJrRNo1VpuoNwUWEf22jPVIl0Gev1Qupu9ZpiCMrHQmKFQ6kecV+2It6QQ0pYOUOkJsl+bMI47LZqpLCsdjxL5zzGbvG0Qk/atGL3i9hM4+VcgXxpCloVOTjH477rXDZyj2fFnoyzEHoBb9JDYbxtGHYcOQ58j3wPs483ItJ7j8TRpgKBqZiEQTWcKmmMyCdhTJiCEiMIxd+VB/z0RHNTUZldA432ZAaDLxULcrZIJAZELxZVFMLZVWuINblmFGT8n+kfgZMZLU+Spvvk/7fCh1zWncaYVCOf4ub0nOHEJ4oWuaQ3g3fypzcd0shFnjxrgxU7FNNdxjvqLWBHb8UdPvfNEW3YvyXR8w6zkuNLQmR0bEyJlD6k5fVxVKB9vAekw1ttwtBIBZ/AjLnM0CK1rZeQ9SPdEk2bLoWC2cV9Yg2kOGLQ08IEF/lE/yU53AfOba+UXIc5Av0lU8xq5O5zNfv8H4njSfraMoOXS6OCDIpbXeODBXt5vH7kuRqndwcrvlvHf6ONDFu2ztG4fruRD+ThARwNmj28PGuLPElbnLJxmvxG36oDiDK3dnb5FbxiaUeXLRk3obhU0hY1UGZcTgCG2D2Swp+wzz8AybpPRKcq8TNrBNpoPbQ2eAzxPYlSqCB46JLEF1Dw3FjIKuxlj12MmZdpnSm3d0RoGKlKyRO09fwn/tHU27vWizM3ZbV3wjNkemWbH4JJHI3KadqUu7I08L8+BdOPCYtzPhmTiD6nxgEVC+XaqW6B0hWUBKHw62OOPobGV1X+zpRUWIcolCcK9D4FhA1R3t2Zlr7YCgY83RI54pr0wcQ57oLMJJRzOUQuP8SL2eb22wNlWj0MotdAppAmWDDTaVTFPMCYZGoXXO2rrPbQKlE43anaFniZZ98UEs1JgsNSITYUWqk3j6T2my5NpxA2GMXw0zs7Zw4pkEVE0YSPtzX30eo50tXsYIbyNQgjyd8IrHa8nVJ1+guFgupZfsASo2kixdHHiJycdiclA6xi4gtAL92lJHmL7mZiMn31fvt0fhxifo48bRGX98qQ07s8WWyqaStcRTF+rkxf2T0kqnicenydltbxgXftp2xfPzFFQ2wV26VMIv+VabkIUmIZUmgSm5JCO3d3gVILc3ebWTwy8xyZuGNJWo8ILznLORBNlrBzEn7dU95VB6rmN4VSDXiaKmlsPuEW6SKKKuhNHefzDNdPZjKTTNeY73fa0p4zb+oOCIXh1XokaO8BgCL3kU71EdjmjVjHtVDLmKHQm4bfHnuNPMZ6IHed4jAcx9lqTF1282C6ta/FZLA4O5aRxLleDQHtcBHlpuD/LMUE5vJRREsjdic/yYUII68Vnk0bkE36s7iPe0cQ+8BTNWYjoBfnrdejYX3Mue/oOVYc9bT4B1uE8Momcl6SIXFDU4GLgTkyXg+hgM7EkicAsXSfa1uGnBXhEeuXMHiTLfzK2uzE495XDV2XdPdA3XzicL5WVA4ywdulGfvK+gjset9bwiBPg3ayVN9yGhLG6nVjMf4hvrg5GORO9OSj9LtOu3VIITbztsvP6j9Uq2aR5aLywWOU+/6QxJQFOXloY2zTRFKmmyQkAqaOpEK2LQdFXvMSPFJSMrPeUlM2J6knPW3NTEhyxIQ+MNo79a7slO0viT1e3h6+0cfyOpHIFmknioGkQywAuAjv4Ze4KchYGCgYKFRaVIQlZCRkJmsfh+pHBMj3yGqhBX9/YhSjlEKIp4Jga9iuHxBinSvY/kirDxVEBs5irTZFmI4kqbnPqRBPi/g/4L/jtPfG2E6JR4lkajrP/TWRDm79SB66hnOP+BpDxN9yqXpI3Vwsla3Nf7+rkYGNJCcF2S5biiatGjEo9TTidlNrZqcWMBLgdHreRpWOWC+78h2WdB0GT/eKH14lVuD2ud2MZOcmV3J1V841Re83lrG5///JjB5oJ4ydHr9EaTgcP4vs8dtyY9kpZ96+DWWAykHSMSym7k6KNVegPrCYx1+eCWduZgloGh7lp7G4/PRCPslcBO3Sspjaw6qG5gY5kc0dVEUIkYvmWH6faW0+6ufGBvkjsAB999MyYjcM0RQOrPXgqY+ivAyX8jif8RhP8Rgf+R/+PRapbFIcTLAUKExQy8XclXWwUs9L/0M+9j9XvrM+wD9UJxg34Dv5PcU98j1qPhc1CyxB/Wo6ikTTSkTjngpR31cnylY4/pfqeNP8gRN1k5z6kSx2+7jknW2m7n0f9LOkbV/l6TpM3WEgRMZqDto1SWpanHtf+H5d/lX9Pv04+7T7NPbw94D7TDT4ev/U123Ha62CfrO2S4pa1oABjcxkrYzUX3U5WF4+h/nNhxTB/uC3fyR3CvtK/WXxeQFuDTn+X/DxYUYCjgyv+hH3mfdB/1MJb2Eu1wNPSc/16aD2iASQ1HHrfv0v/Rnc8Zt48yR6xO8mzB95x7Ew6nuEo+1mDGvRLrKvVk8gYTzyf/xXmpZDS7M+F2NO4W57T2zy3Ab7DU8MmCE2FqVW4ppsf54qcBRUUdyWXtL73wndq3hB6nMsvuTHpxjOvqwY/8Lv6uAFbdG64lnrdWJZLptJsSRh3z08hF/+1fvXLxg4skMvMPBwLST/stxw7nnRy5MVNWTY+ThqUnbN9Nwdd477eg7lxhz26Xvtz61Q440BI7ztKLi21Q0Y8IJEIxzBux9dPi2iNkO98N1DPrNouA5sFFDr7O0UVOpEfNmymElL+HYmXZ1QKHF5vx3YsiKsTAGc/vyyJf6fu5siC858M4YSdMAAIs7yiTDLhHhf7Al3KZHdkDOvQ1k25+YFufeDJwzpvOJlsS3TunTTTHoTgZjAqToivrYkyOG1lhN9D5rWXMWTDsB83je1LxRr3003tSiYOIombC96dUBlu0M5iT3mS3b3HXj4iqvQU1moz9sFTGEQL7dck0NjqZ3iRzv7gvhdOgeJtj/F7o72p2mzPczSpPFxZk41lxrOxveGfNc49nSZK5syUkp5n1A0NscnLahXmpW152rSNmPhHj9RHIDsTgqdNgBLBA7sDdvqrH
*/