/*!
@file
Defines `boost::hana::remove_if`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_REMOVE_IF_HPP
#define BOOST_HANA_REMOVE_IF_HPP

#include <boost/hana/fwd/remove_if.hpp>

#include <boost/hana/concept/monad_plus.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/filter.hpp>
#include <boost/hana/functional/compose.hpp>
#include <boost/hana/not.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename Xs, typename Pred>
    constexpr auto remove_if_t::operator()(Xs&& xs, Pred&& pred) const {
        using M = typename hana::tag_of<Xs>::type;
        using RemoveIf = BOOST_HANA_DISPATCH_IF(remove_if_impl<M>,
            hana::MonadPlus<M>::value
        );

        #ifndef BOOST_HANA_CONFIG_DISABLE_CONCEPT_CHECKS
            static_assert(hana::MonadPlus<M>::value,
            "hana::remove_if(xs, predicate) requires 'xs' to be a MonadPlus");
        #endif

        return RemoveIf::apply(static_cast<Xs&&>(xs),
                               static_cast<Pred&&>(pred));
    }
    //! @endcond

    template <typename M, bool condition>
    struct remove_if_impl<M, when<condition>> : default_ {
        template <typename Xs, typename Pred>
        static constexpr auto apply(Xs&& xs, Pred&& pred) {
            return hana::filter(static_cast<Xs&&>(xs),
                        hana::compose(hana::not_, static_cast<Pred&&>(pred)));
        }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_REMOVE_IF_HPP

/* remove_if.hpp
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
*/