/*!
@file
Defines `boost::hana::remove`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_REMOVE_HPP
#define BOOST_HANA_REMOVE_HPP

#include <boost/hana/fwd/remove.hpp>

#include <boost/hana/concept/monad_plus.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/equal.hpp>
#include <boost/hana/filter.hpp>
#include <boost/hana/functional/compose.hpp>
#include <boost/hana/not.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename Xs, typename Value>
    constexpr auto remove_t::operator()(Xs&& xs, Value&& value) const {
        using M = typename hana::tag_of<Xs>::type;
        using Remove = BOOST_HANA_DISPATCH_IF(remove_impl<M>,
            hana::MonadPlus<M>::value
        );

        #ifndef BOOST_HANA_CONFIG_DISABLE_CONCEPT_CHECKS
            static_assert(hana::MonadPlus<M>::value,
            "hana::remove(xs, value) requires 'xs' to be a MonadPlus");
        #endif

        return Remove::apply(static_cast<Xs&&>(xs),
                             static_cast<Value&&>(value));
    }
    //! @endcond

    template <typename M, bool condition>
    struct remove_impl<M, when<condition>> : default_ {
        template <typename Xs, typename Value>
        static constexpr auto apply(Xs&& xs, Value&& value) {
            return hana::filter(static_cast<Xs&&>(xs),
                    hana::compose(hana::not_,
                                  hana::equal.to(static_cast<Value&&>(value))));
        }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_REMOVE_HPP

/* remove.hpp
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
*/