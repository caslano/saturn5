/*!
@file
Defines `boost::hana::suffix`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_SUFFIX_HPP
#define BOOST_HANA_SUFFIX_HPP

#include <boost/hana/fwd/suffix.hpp>

#include <boost/hana/chain.hpp>
#include <boost/hana/concept/monad_plus.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/functional/partial.hpp>
#include <boost/hana/lift.hpp>
#include <boost/hana/prepend.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename Xs, typename Sfx>
    constexpr auto suffix_t::operator()(Xs&& xs, Sfx&& sfx) const {
        using M = typename hana::tag_of<Xs>::type;
        using Suffix = BOOST_HANA_DISPATCH_IF(suffix_impl<M>,
            hana::MonadPlus<M>::value
        );

    #ifndef BOOST_HANA_CONFIG_DISABLE_CONCEPT_CHECKS
        static_assert(hana::MonadPlus<M>::value,
        "hana::suffix(xs, sfx) requires 'xs' to be a MonadPlus");
    #endif

        return Suffix::apply(static_cast<Xs&&>(xs), static_cast<Sfx&&>(sfx));
    }
    //! @endcond

    template <typename M, bool condition>
    struct suffix_impl<M, when<condition>> : default_ {
        template <typename Xs, typename Z>
        static constexpr auto apply(Xs&& xs, Z&& z) {
            return hana::chain(static_cast<Xs&&>(xs),
                hana::partial(hana::prepend, hana::lift<M>(static_cast<Z&&>(z))));
        }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_SUFFIX_HPP

/* suffix.hpp
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
*/