/*!
@file
Defines `boost::hana::chain`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_CHAIN_HPP
#define BOOST_HANA_CHAIN_HPP

#include <boost/hana/fwd/chain.hpp>

#include <boost/hana/concept/monad.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/flatten.hpp>
#include <boost/hana/transform.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename Xs, typename F>
    constexpr decltype(auto) chain_t::operator()(Xs&& xs, F&& f) const {
        using M = typename hana::tag_of<Xs>::type;
        using Chain = BOOST_HANA_DISPATCH_IF(chain_impl<M>,
            hana::Monad<M>::value
        );

    #ifndef BOOST_HANA_CONFIG_DISABLE_CONCEPT_CHECKS
        static_assert(hana::Monad<M>::value,
        "hana::chain(xs, f) requires 'xs' to be a Monad");
    #endif

        return Chain::apply(static_cast<Xs&&>(xs), static_cast<F&&>(f));
    }
    //! @endcond

    template <typename M, bool condition>
    struct chain_impl<M, when<condition>> : default_ {
        template <typename Xs, typename F>
        static constexpr auto apply(Xs&& xs, F&& f) {
            return hana::flatten(hana::transform(static_cast<Xs&&>(xs),
                                                 static_cast<F&&>(f)));
        }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_CHAIN_HPP

/* chain.hpp
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
*/