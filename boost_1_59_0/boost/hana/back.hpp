/*!
@file
Defines `boost::hana::back`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_BACK_HPP
#define BOOST_HANA_BACK_HPP

#include <boost/hana/fwd/back.hpp>

#include <boost/hana/at.hpp>
#include <boost/hana/concept/iterable.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/length.hpp>

#include <cstddef>


namespace boost { namespace hana {
    //! @cond
    template <typename Xs>
    constexpr decltype(auto) back_t::operator()(Xs&& xs) const {
        using It = typename hana::tag_of<Xs>::type;
        using Back = BOOST_HANA_DISPATCH_IF(back_impl<It>,
            hana::Iterable<It>::value
        );

    #ifndef BOOST_HANA_CONFIG_DISABLE_CONCEPT_CHECKS
        static_assert(hana::Iterable<It>::value,
        "hana::back(xs) requires 'xs' to be an Iterable");
    #endif

        return Back::apply(static_cast<Xs&&>(xs));
    }
    //! @endcond

    template <typename It, bool condition>
    struct back_impl<It, when<condition>> : default_ {
        template <typename Xs>
        static constexpr decltype(auto) apply(Xs&& xs) {
            constexpr std::size_t len = decltype(hana::length(xs))::value;
            static_assert(len > 0, "hana::back(xs) requires 'xs' to be non-empty");
            return hana::at_c<len - 1>(static_cast<Xs&&>(xs));
        }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_BACK_HPP

/* back.hpp
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
*/