/*!
@file
Defines `boost::hana::tap`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_TAP_HPP
#define BOOST_HANA_TAP_HPP

#include <boost/hana/fwd/tap.hpp>

#include <boost/hana/concept/monad.hpp>
#include <boost/hana/config.hpp>
#include <boost/hana/core/dispatch.hpp>
#include <boost/hana/functional/partial.hpp>
#include <boost/hana/lift.hpp>


namespace boost { namespace hana {
    //! @cond
    template <typename M>
    template <typename F>
    constexpr auto tap_t<M>::operator()(F&& f) const {
    #ifndef BOOST_HANA_CONFIG_DISABLE_CONCEPT_CHECKS
        static_assert(hana::Monad<M>::value,
        "hana::tap<M> requires 'M' to be a Monad");
    #endif

        using Tap = BOOST_HANA_DISPATCH_IF(tap_impl<M>,
            hana::Monad<M>::value
        );

        return Tap::apply(static_cast<F&&>(f));
    }
    //! @endcond

    namespace detail {
        template <typename M>
        struct tap_helper {
            template <typename F, typename X>
            constexpr auto operator()(F&& f, X&& x) const {
                (void)static_cast<F&&>(f)(x);
                return hana::lift<M>(static_cast<X&&>(x));
            }
        };
    }

    template <typename M, bool condition>
    struct tap_impl<M, when<condition>> : default_ {
        template <typename F>
        static constexpr auto apply(F&& f)
        { return hana::partial(detail::tap_helper<M>{}, static_cast<F&&>(f)); }
    };
}} // end namespace boost::hana

#endif // !BOOST_HANA_TAP_HPP

/* tap.hpp
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
*/