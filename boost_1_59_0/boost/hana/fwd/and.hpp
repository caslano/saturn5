/*!
@file
Forward declares `boost::hana::and_`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_AND_HPP
#define BOOST_HANA_FWD_AND_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Return whether all the arguments are true-valued.
    //! @ingroup group-Logical
    //!
    //! `and_` can be called with one argument or more. When called with
    //! two arguments, `and_` uses tag-dispatching to find the right
    //! implementation. Otherwise,
    //! @code
    //!     and_(x) == x
    //!     and_(x, y, ...z) == and_(and_(x, y), z...)
    //! @endcode
    //!
    //!
    //! Example
    //! -------
    //! @include example/and.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto and_ = [](auto&& x, auto&& ...y) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename L, typename = void>
    struct and_impl : and_impl<L, when<true>> { };

    struct and_t {
        template <typename X, typename Y>
        constexpr decltype(auto) operator()(X&& x, Y&& y) const;

        template <typename X, typename ...Y>
        constexpr decltype(auto) operator()(X&& x, Y&& ...y) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr and_t and_{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_AND_HPP

/* and.hpp
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
*/