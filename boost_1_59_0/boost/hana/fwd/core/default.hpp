/*!
@file
Forward declares `boost::hana::default_` and `boost::hana::is_default`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_CORE_DEFAULT_HPP
#define BOOST_HANA_FWD_CORE_DEFAULT_HPP

#include <boost/hana/config.hpp>


namespace boost { namespace hana {
    //! @ingroup group-core
    //! Mark a tag-dispatched method implementation as a default implementation.
    //!
    //! When defining a new concept with tag-dispatched methods, it is
    //! sometimes possible to provide a default implementation for some
    //! method(s). Making `default_` a base class of such a default
    //! implementation makes it possible to detect whether the method
    //! was dispatched to the default implementation afterwards.
    //!
    //!
    //! Example
    //! -------
    //! @include example/core/default.cpp
    struct default_ { };

    //! @ingroup group-core
    //! Returns whether a tag-dispatched method implementation is a default
    //! implementation.
    //!
    //! Given a tag-dispatched method implementation `method_impl<T...>`,
    //! `is_default<method_impl<T...>>` returns whether `method_impl<T...>`
    //! is a default implementation. Note that if there is no default
    //! implementation for the method, then `is_default` should not be
    //! used unless a static assertion saying that "the method is not
    //! implemented" is acceptable.
    //!
    //!
    //! Example
    //! -------
    //! @include example/core/default.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    template <typename Method>
    struct is_default { see documentation };
#else
    template <typename T, typename = void>
    struct is_default;
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_CORE_DEFAULT_HPP

/* default.hpp
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
*/