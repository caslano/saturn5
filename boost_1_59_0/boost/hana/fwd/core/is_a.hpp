/*!
@file
Forward declares `boost::hana::is_a` and `boost::hana::is_an`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_CORE_IS_A_HPP
#define BOOST_HANA_FWD_CORE_IS_A_HPP

#include <boost/hana/config.hpp>


namespace boost { namespace hana {
    //! @ingroup group-core
    //! Returns whether the tag of an object matches a given tag.
    //!
    //! Given a tag `Tag` and a C++ type `T`, `is_a<Tag, T>` is a compile-time
    //! Logical representing whether the tag of `T` is exactly `Tag`. In other
    //! words, it is equivalent to
    //! @code
    //!     std::is_same<Tag, tag_of<T>::type>
    //! @endcode
    //!
    //! For convenience, an alternate syntax is provided for using `is_a`.
    //! Specifically, `is_a<Tag>` is a function object returning whether the
    //! argument it is passed has the given tag. In other words,
    //! @code
    //!     is_a<Tag>(x) == is_a<Tag, decltype(x)>
    //! @endcode
    //!
    //!
    //! Example
    //! -------
    //! @include example/core/is_a.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    template <typename Tag, typename optional_T>
    constexpr auto is_a = see-documentation;
#else
    template <typename Tag, typename ...T>
    struct is_a_t;

    template <typename Tag, typename ...T>
    BOOST_HANA_INLINE_VARIABLE constexpr is_a_t<Tag, T...> is_a{};
#endif

    //! @ingroup group-core
    //! Equivalent to `is_a`; provided for consistency with the rules of the
    //! English language.
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    template <typename Tag, typename ...T>
    constexpr auto is_an = is_a<Tag, T...>;
#else
    template <typename Tag, typename ...T>
    BOOST_HANA_INLINE_VARIABLE constexpr is_a_t<Tag, T...> is_an{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_CORE_IS_A_HPP

/* is_a.hpp
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
*/