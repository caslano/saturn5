/*!
@file
Forward declares `boost::hana::back`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_BACK_HPP
#define BOOST_HANA_FWD_BACK_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Returns the last element of a non-empty and finite iterable.
    //! @ingroup group-Iterable
    //!
    //! Given a non-empty and finite iterable `xs` with a linearization of
    //! `[x1, ..., xN]`, `back(xs)` is equal to `xN`. Equivalently, `back(xs)`
    //! must be equivalent to `at_c<N-1>(xs)`, and that regardless of the
    //! value category of `xs` (`back` must respect the reference semantics
    //! of `at`).
    //!
    //!
    //! Example
    //! -------
    //! @include example/back.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto back = [](auto&& xs) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename It, typename = void>
    struct back_impl : back_impl<It, when<true>> { };

    struct back_t {
        template <typename Xs>
        constexpr decltype(auto) operator()(Xs&& xs) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr back_t back{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_BACK_HPP

/* back.hpp
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
*/