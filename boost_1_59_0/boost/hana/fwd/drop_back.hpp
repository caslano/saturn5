/*!
@file
Forward declares `boost::hana::drop_back`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_DROP_BACK_HPP
#define BOOST_HANA_FWD_DROP_BACK_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Drop the last `n` elements of a finite sequence, and return the rest.
    //! @ingroup group-Sequence
    //!
    //! Given a finite `Sequence` `xs` with a linearization of `[x1, ..., xm]`
    //! and a non-negative `IntegralConstant` `n`, `drop_back(xs, n)` is a
    //! sequence with the same tag as `xs` whose linearization is
    //! `[x1, ..., xm-n]`. If `n` is not given, it defaults to an
    //! `IntegralConstant` with a value equal to `1`.
    //!
    //! In case `length(xs) <= n`, `drop_back` will simply drop the whole
    //! sequence without failing, thus returning an empty sequence.
    //!
    //!
    //! @param xs
    //! The sequence from which elements are dropped.
    //!
    //! @param n
    //! A non-negative `IntegralConstant` representing the number of elements
    //! to be dropped from the end of the sequence. If `n` is not given, it
    //! defaults to an `IntegralConstant` with a value equal to `1`.
    //!
    //!
    //! Example
    //! -------
    //! @include example/drop_back.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto drop_back = [](auto&& xs[, auto const& n]) {
        return tag-dispatched;
    };
#else
    template <typename S, typename = void>
    struct drop_back_impl : drop_back_impl<S, when<true>> { };

    struct drop_back_t {
        template <typename Xs, typename N>
        constexpr auto operator()(Xs&& xs, N const& n) const;

        template <typename Xs>
        constexpr auto operator()(Xs&& xs) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr drop_back_t drop_back{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_DROP_BACK_HPP

/* drop_back.hpp
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
*/