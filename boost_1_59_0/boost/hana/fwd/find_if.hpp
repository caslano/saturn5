/*!
@file
Forward declares `boost::hana::find_if`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_FIND_IF_HPP
#define BOOST_HANA_FWD_FIND_IF_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Finds the value associated to the first key satisfying a predicate.
    //! @ingroup group-Searchable
    //!
    //! Given a `Searchable` structure `xs` and a predicate `pred`,
    //! `find_if(xs, pred)` returns `just` the first element whose key
    //! satisfies the predicate, or `nothing` if there is no such element.
    //!
    //!
    //! @param xs
    //! The structure to be searched.
    //!
    //! @param predicate
    //! A function called as `predicate(k)`, where `k` is a key of the
    //! structure, and returning whether `k` is the key of the element
    //! being searched for. In the current version of the library, the
    //! predicate has to return an `IntegralConstant` holding a value
    //! that can be converted to `bool`.
    //!
    //!
    //! Example
    //! -------
    //! @include example/find_if.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto find_if = [](auto&& xs, auto&& predicate) {
        return tag-dispatched;
    };
#else
    template <typename S, typename = void>
    struct find_if_impl : find_if_impl<S, when<true>> { };

    struct find_if_t {
        template <typename Xs, typename Pred>
        constexpr auto operator()(Xs&& xs, Pred&& pred) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr find_if_t find_if{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_FIND_IF_HPP

/* find_if.hpp
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
*/