/*!
@file
Forward declares `boost::hana::duplicate`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_DUPLICATE_HPP
#define BOOST_HANA_FWD_DUPLICATE_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Add an extra layer of comonadic context to a comonadic value.
    //! @ingroup group-Comonad
    //!
    //! Given a value already in a comonadic context, `duplicate` wraps this
    //! value with an additional layer of comonadic context. This can be seen
    //! as the dual operation to `flatten` from the Monad concept.
    //!
    //!
    //! Signature
    //! ---------
    //! Given a Comonad `W`, the signature is
    //! \f$
    //!     \mathtt{duplicate} : W(T) \to W(W(T))
    //! \f$
    //!
    //! @param w
    //! The value to wrap in an additional level of comonadic context.
    //!
    //!
    //! Example
    //! -------
    //! @include example/duplicate.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto duplicate = [](auto&& w) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename W, typename = void>
    struct duplicate_impl : duplicate_impl<W, when<true>> { };

    struct duplicate_t {
        template <typename W_>
        constexpr decltype(auto) operator()(W_&& w) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr duplicate_t duplicate{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_DUPLICATE_HPP

/* duplicate.hpp
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
*/