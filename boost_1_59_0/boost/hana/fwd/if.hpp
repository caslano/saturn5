/*!
@file
Forward declares `boost::hana::if_`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_IF_HPP
#define BOOST_HANA_FWD_IF_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Conditionally return one of two values based on a condition.
    //! @ingroup group-Logical
    //!
    //! Specifically, `then` is returned iff `cond` is true-valued, and
    //! `else_` is returned otherwise. Note that some `Logical` models may
    //! allow `then` and `else_` to have different types, while others may
    //! require both values to have the same type.
    //!
    //!
    //! @param cond
    //! The condition determining which of the two values is returned.
    //!
    //! @param then
    //! The value returned when `cond` is true-valued.
    //!
    //! @param else_
    //! The value returned when `cond` is false-valued.
    //!
    //!
    //! Example
    //! -------
    //! @include example/if.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto if_ = [](auto&& cond, auto&& then, auto&& else_) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename L, typename = void>
    struct if_impl : if_impl<L, when<true>> { };

    struct if_t {
        template <typename Cond, typename Then, typename Else>
        constexpr decltype(auto) operator()(Cond&& cond, Then&& then, Else&& else_) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr if_t if_{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_IF_HPP

/* if.hpp
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
*/