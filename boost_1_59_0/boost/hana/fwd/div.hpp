/*!
@file
Forward declares `boost::hana::div`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_DIV_HPP
#define BOOST_HANA_FWD_DIV_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Generalized integer division.
    //! @ingroup group-EuclideanRing
    //!
    //!
    //! Cross-type version of the method
    //! --------------------------------
    //! The `div` method is "overloaded" to handle distinct data types
    //! with certain properties. Specifically, `div` is defined for
    //! _distinct_ data types `A` and `B` such that
    //! 1. `A` and `B` share a common data type `C`, as determined by the
    //!    `common` metafunction
    //! 2. `A`, `B` and `C` are all `EuclideanRing`s when taken individually
    //! 3. `to<C> : A -> B` and `to<C> : B -> C` are `Ring`-embeddings, as
    //!    determined by the `is_embedding` metafunction.
    //!
    //! In that case, the `div` method is defined as
    //! @code
    //!     div(x, y) = div(to<C>(x), to<C>(y))
    //! @endcode
    //!
    //!
    //! Example
    //! -------
    //! @include example/div.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto div = [](auto&& x, auto&& y) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename T, typename U, typename = void>
    struct div_impl : div_impl<T, U, when<true>> { };

    struct div_t {
        template <typename X, typename Y>
        constexpr decltype(auto) operator()(X&& x, Y&& y) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr div_t div{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_DIV_HPP

/* div.hpp
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
*/