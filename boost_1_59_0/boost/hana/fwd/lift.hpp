/*!
@file
Forward declares `boost::hana::lift`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_LIFT_HPP
#define BOOST_HANA_FWD_LIFT_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Lift a value into an `Applicative` structure.
    //! @ingroup group-Applicative
    //!
    //! `lift<A>` takes a normal value and embeds it into a structure whose
    //! shape is represented by the `A` `Applicative`. Note that the value
    //! may be a function, in which case the created structure may be
    //! `ap`plied to another `Applicative` structure containing values.
    //!
    //!
    //! Signature
    //! ---------
    //! Given an Applicative `A`, the signature is
    //! @f$ \mathtt{lift}_A : T \to A(T) @f$.
    //!
    //! @tparam A
    //! A tag representing the `Applicative` into which the value is lifted.
    //!
    //! @param x
    //! The value to lift into the applicative.
    //!
    //!
    //! Example
    //! -------
    //! @include example/lift.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    template <typename A>
    constexpr auto lift = [](auto&& x) {
        return tag-dispatched;
    };
#else
    template <typename A, typename = void>
    struct lift_impl : lift_impl<A, when<true>> { };

    template <typename A>
    struct lift_t {
        template <typename X>
        constexpr auto operator()(X&& x) const;
    };

    template <typename A>
    BOOST_HANA_INLINE_VARIABLE constexpr lift_t<A> lift{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_LIFT_HPP

/* lift.hpp
8aPyEBEzyG8vkLJ8c4X9ziX/kyV/bzGjJK+DTXbZT3TmrcSOHwJQhxPBKHzTL8azeZ4w/8a2PJLtvTs1B3r7lny0fbhzo+jWKQenXu0glCPq7NOwxz1ejce+1lClD9npzgnXVnnuEb5JJLxlFNRE+vU0Y9jC9C2ZL8eBVmpwDw9QU6ojZ+gc/z30q9ri68QOjdLMPROd695jneRmsshNmjGhmZyWtMIbF1/HPsM3wQ43blqa0IxN0qDPhccR2TiUc55nCuTV8XIgMJHd2FHyC7YjqBUDZGrCDsrHA/vlMby6dH7sSJRhhVR5W35RDA9h9DCmHNuKSIgZD/dtEctnZMCB78CbSQNNAm5yLW/xrlGZaOKFx0myeywngCi0jGAAkj5inmj3ctI450A2W8RSvs4m4qiTnSF838vpNQ+Y5pICcDpmqXniYd2IhTPr7er4erPmDWjrvnk1i5xlH8+rykrN+vNWjDUzVXoIQsWcYyBVcNLToMrqo35sgQMk1AU+VuuXAKox8booAQCj09PPQlwNo5Z2DB5Th4y4BP0UHQcJo4izxflDRoPu5O84RiVwworXp4WbFWLLiQCcqXWJoDoE4x9D+oTA66gaj9lVU0qFOKbyL4WOzlVblelhQ8WaHIPvIfCqrkNs7w6EkV3cfEg5K5rNSbuZ2Y/b37S8f/bW8A7jbpsxcQCvyko51WtqgKZBtxHty+lqwjQ4l/KuZ4D3SS+HlJPerdzEy9n1eCy/KowX63pl2+xyp6DLfGeORRiCotNxWDLSjSNqzOBTb1zsEAQUoHRiQsbxxi08yCcr59tR4MAefMqBHPmMEgzeqdgsrpPcJ0f5nAcr5fBSQMA0Gs0GHV3AW2zEiSz/2DOvT8Mae2WTR3JhEDiw8qfZ7zcyM3QvB6wxF08FXbWDp5xL5x7Sj5nu8bCaXADn91Nz2AjUuF6e1R3Qnh6yjirZRbSQh6y0EfF7rvN/vZp6RWSX3jkklCNZVcJGNpBQy866CDNRJ2tkHi85BLw3CFWQjUZ6MDcDu/LO3xRg9w9A1RFNZABfKa/GkeE6fC4luXG+vi6tGxRG8d8rzvSZRnml6IjQ8DgirONno4EaJp6RTtgNM/bHQOln1FL/n70zXG4cuYGw4H3/V0wu/+5EMrk8wBrZaCQ1OU0AA4KyXFfnH6hZaETRlq3lxwYaj1op9fzQ4EICv3kQQIvmZ4XA1R4kZHzyJJgGEQpN5+ECBwF8ZqLPhtegNO65cSfctP2NbMyatMZh0h5FBPHQOtBpbkxznSbVewRvSXv0npF//v5nG0md6BgJuCew61GtNvFofhKMONICJJ+6I3Jhqmm14M0mOz/oS+vfCnlJKDxB4V/cVRS7lcWUWWeRuoeBHoWVjOFeQDPc6GbWfGYD8CH1CSDJxrk81oBp2rrsjZZ3sC5oNvWPNf6WGX0+P2+UM23mK8CZB5VsqyhBVZsYVRk1zwJXuZnzjm2y0Y2e939J3RmLIndqoSs727MWGoDMS0rpcd2p9ZHHmuaUrOOGovamN6brxELtgfJQBXyXOTuvo/vBPV1GcJz+TLyzYi5MeOjR0ZhmOBITK0WQLvbsPmvDHKajIPp+mE425EHu7FBQ+v1YexHHxPFFHi6IzDQdl2jgisZKMDwIknyjyho2TyDb12wMb7SZ2GUed4MWcXygY2qBJ3SwU9d8s/p/pOObnofkH7//Rz8vPz4kW2KkflVbXB1RsC0oO5apn9SjFfeNXZgRIfAg7fvgOjygftEV52MbLusIbrIc8leqjpCSKNPKqizn40vMqRkP5kMXzyL0no/ZcrPgq8w0+JKnSqx5nBcRHdE2PGktZt26g4DXVFNWTkVOMsA43z19ULLaUs48zXw3EJUe5MkD7jFYx6Ic1WofT//qR6PWO3sQcbWF6ztoM5teBLn3QqulFYGQ7BnvM1esNR5C3wbyYd/GshA/4cj7qowq1sXI1BXvx3qr2SjW7jzWUK/yz6fOeRyZYpGJd1pajjmvFspT6HvGiib+gtA3Iw9en5WOKR2LLMOxHdPWa+M7GVtthpkGClDFQcCuBFMNOh2h0BDrIO512yhTTtxtMztMQ3k/6jRBodlVdxAnh3KSRl/AoAh3jHmjBeKJC23y5W0FqSNZyc5+cFIYWmoioHpv4bieUXA5flHIDnqR955eBdszTRm82VWjtHyXn9GckmWGILIp4CIhbrnJpj67E3xTmapaUG5CW25mbQ9umH6YcpbOk0fu1Q7wIkWc1zMYNFB3UKHB80Z5Kk+s7uQnWMRKD1fu857lQMQcScyvhEuu0D10aEht7dXLcUd3i0RXRtcOMROpLFCGTE8tVhGIlvx4FicZDsdJlqpNwIxpIx9Zn1uM98txPDMUGmYRVmgQ5/53Ejvb0dDBxj5p+SigInXq0CZoNrNRs0oqzubIS8H72e2zwefejpsAc8wuY9k6jbKiIzyvs8+AY4hpmmYTKjc4Gik0Rn0aH4Eq1uTADJekwMPiB2NQnnvyMxALLflxC3SmFIQ7eA6UvZVa0UMSUr/LKdgZb6gHTeySuG0neYaaGJRpS27DU22UkDnJWp5LegTfhV9XevtBAh6X1IvQkCkZo3Ge2xAlQWCjO+v7nAme2JCWr/IsCI81qjTwKr6FKisS6g74xqruAPfg0WL0u3biiP0x94ROUOwZJVjrIS+p2Bdr1DWrn9sovFN8R2GqH9OB/naNzj/YkyAS29fO71zh6Mx77fK2H7NXrbd9F5gLzXc2OOeES7pP8JInGMzxxPm782nyEVRUP46pOosgw97PRDYPtiAdWkzlJq5JM3QaT78JySYXZ47xs+YJlKM/fghmrJ/hYixpu7aqwFNvUVB+TswKpkZzdCqJjhj10iASiTCoELhSTuIZ657rgORbjuLRH3nxSR2YiLQiGXZE1/Sd+wq2SsWajnWac2hUWdnI3jKon0fdFS2WajIe8UoFaRk6T4s3eTCFW12abGLKacwhcOYJfHsQZyEGYucCS+lhPwJ2IhLpYppvmGk0rFKbAioSWj84QO5xTnb5YAqqbO+Vt1ogROpsaPnV0aAboSc84/9mUM4qM3tTUqh/3uQb1mB8HzCqplOcCdb8rMWZxr/HKwb9IIqthHF/D3slUB1g6l1Q15EM6gui7k6TUv79ZF0nUGVM3zM4Djx9z3xfgN2/RIl77KDQUD7viuarNdiz2H02a4JRnt0JjsFnZpu/6Sk35CMwPsdTt55pw0zTeE6mmxLPZEMdOYkIygEaECI4DQdaGKrod/OohtcdX0E/mhV7GPK03tKh9dk0L8agmuwRN1akpmYWbaIdpigjS35wi57TV6GhgJXXr4QVGsYZLfQpnfi3nJxxzMSTYJq0lzezekGzQQdVwSGF9CruuUlAOVFO163qOvlM251GtVjUwcORK9xjF4PvF7lOhq8EOYKEmJxaXLDuuGf0CtSMgz5aMRsZGUTuCnL79nFMIffihDaDtd/XwtqJ+FoR7Sc+S0dQC1UhNv5Iv7+oOpPnlEwFzSDTMZAXwUzQL2l9IMLjOdWlNxdiVzELmiEtJ/wE43k25FGJzA4xWOu8ZgOFJjftRtc0w2tkkI/jdZ9yVNGXQyTBsCKuaKMuB0iGewh6cnpPHXrUyvMD+S4RVeVc9qpGFaTCItTa7wDrPQELD2XZyEEUN4NQ4MgQDmKqyI+JqQd5hHo9phqeyITZIqexqtC3ETIN7yh20tSlGsf/vlSEJvWzrfsI8LsVgyIBTU25ESLfz8/P5iQ9XdQmiWCGNt2F3Ko71Fub5R5/TvjZXFK/hjLuKRu90951YhwVHd0PhQbH1Ed+XtzjgxhyvRRMP+qrDvkKKz4amMk4Wr2aC+vXRknVevF7F/uVrTlpWT5avhqh07z8DgE/WuMbJgOulRUZJhuq1yVSmckpYDTiHOLZnXU3Ae628c/tGN9c22uRlpOjnLz+8V7KiSGmTjmxU0Odcnz7XpokT8Pk+VmFFy2QStm6rEA5QXg55cihd1YGB9ry1Nrzzr+30KpTDoWx+scC5bisU6AcR6b8OsqBljNMOcRzL6YcOI9yF+vymLuAejbP5wfX+FE3T8u0Plh1JpCqomLE7t05WNW2HJ6FLqi0Me5BUwc1HqUKtzzlIAqmZD6YRh5rVM2BqzYZbQSADFUxIYNaOKzl8bpW3OeeQtToODN319v7JfG6aT2GIhSUVUUZ0QNFsBfyFNm/fDuHRrNqH58VfNPxe7twzdg2c6GJnDdNLvBM0xEPkfQ8Gyg3FHnCjV+TxpTT8uRVTzXA4B5y7ofzC5ENu0F3NGNpORIzyiwijzk3cBOY1z4CWOcoR9o5iPSUo6oYChqQx/B0dwF/xPVd5ZI2VeQLAFQKelb7i3LdSM2BIbZUUiqYET7s9nJbaefl29fO1bmkEhT06W2IT4PfxHyZGSExfEDUaD0JRMp0k0ptTmmh8gqZ9JhOPls7E/uktW2SldJGESc+2VjiSnKk4y0BypniughMiJNGKtTBw3VuelsT5exWdKBbOHJsI3UHDGTcpS30MLcY+RGoO6U0H2liKfV+J+/4e45tjzyIpK3xLFQ6beagKL2WXpRcuZQ4KT637xmjejClNXEM+masI4ALLVLse61E/r2MkjGrhqAW5OdGMC0+2AVRsI5VGcSss3vh70iEa9K454afK7Ot3whVlFkqjlqat9GdI2LQjDXnBvuh3PCcG1JrmGxAMOi8oZme10zPjWA/WPDBN6AcVKy1Cdj5lv3EriLuMPfEQyywLvfxOP+kzLEifR0kQi10JlRnngKJHGUo2+3MT+eiLJajinJIamK/9JDH8pjqhkJE7OMfGDVPiF/Xx5QlmTq4x0bE73QNGCtIK8wnCoPyCb9+fCepKn6dXhErxTrNn6ofoBxwTJtRIaMePmK5ADH9IIIV2novRtzTOEDsSjbyqK64GHBdjZ2R/MTSyaClvV7r59T3zVUqkcShKAZ5iHRVUqwuNAYiJhtSIHAE/l5aBkeTaO4q9cCjvk6Yuto5+xzDtW1P72TF+ePMf+WFnqs4t55UsO5+2hRbNzgIQ3WeYm0GGTA0aIZ7+GOO0aZfDtMMHiV1sxZFnOlcpPKCZprTs+cGSdRiRvGZZrte0H0YqDUdrxDZgG9oJ0eZ5vkWodms1w8th9SaXGSy0el6ve8RuVPOb3fK+eCJF10m5zFWn92ZpikdNkciDCp8FYlD+d9Sam9X3+qtflt8FG11GO/kvpO6iABxSOLZkYWUrnFkjxB4uEzsnu24igvhDj+sDibX23TiO/Wxk0P9cl6jSU7nj6GMN0ulHlIokyvcLZFNLMfWTaBFqrWjMnCIn5+fP0Q+mibB867Zc9TQeBAbPUDjCd2pwRz7Lm0TIju2sW9rO3M+T3Zy63SgJPeMqjtx1F0GmqjLZ9AJG/n1RMhGRXTtn6ai3AyhrsudI+rroFGBnNZHoIn6CzMNX93r9pwXdvLuPAugvjzXeC1dOyibdHJZcPzop+d6kwcaGDp7wDRr6hUhNmrRZfFYlRlzARBLrSnHvN98I4nYD42m13SP0meUjHTYNKZpMdbL2TXgqA801B0R6CtQjzbnOUQ20kcoPfOMmjQnykMplN/+uM/LGTbqycNGHXSSdm3AFyKb0EGoXrEmhYnrmuQmGR77opBgqhj0St0I6OMwt2CD4yCAZ/EvNhMI8tZVrYmfRWqJ2SMmCqHW93qHHATRb/sVl3TGvTX50rvzd9Pvath6lefMmluabW4hMsJ7976cj19f3f+xuD9oufSEsRHDyFWAq+WAcijO0TRS1J+AbLCmueVQfSrEA1I5PI+H6nyaZhM+V23iWeauEgn9QNAM3h4Fc1Qv0uKFK+s6h2NmJqzpWeAA5i062mV3Dzt/c2ZGpu4vwBkw6y2CaRwCdhRErt0C0zRySruc5R2d6zVpu3sk9numOygVzYb1G7fDBpHvKrFyk3SDlruG7XsH4LuLKUeb3oP1GN+oXq+/1vJQdOaLKrQct9gf1Udaopg8K5x2haIB5SDwuNL3iD11hpQMSiolVRO0FvUnvDfEvPvqryxciiT53qZqHWOkUjjfCS3st+M/ZKlTR16zKT4BlFMxgXbAQ7VuIhDjYxwa5dy0nL5ndbZnyRl3EqMoRj2bU9sW1IrM2G9oAAUs+tM8pPfIgmsfq1qf1Z1uXY1Lan+hB5s6w4nGuj04MjJLpw00QrKrxfbciJecZ9fy8qhKOsfprzLvqDI0X+eRl3UnFlQZrh+Lu1UMFwCDYx6va1OLUiakmaXGLrGXPN+9mBrT+J8ArBBjng0iEY9YHEOZ592dmdVuU7lB7AgGTDOq8bRzFmjz2vkIkJYT6jdWXmRdmXbjGH2uQTnXK47Q8lSxZlo21TvGVSOFJnFV7u3PEw8BjdeO+/4vTQ6H18RtWZ9fGH2wnZ0M6iVYidmc+R/hi3FUB6x5gdJSaOHKn3tCB9B4vsv59GmxiiojaQlutNZjJObuukNavDOh01Am4YgYegrAiBM9PnQEohyhe3zrGrauBrxby0UCzwKqjncVHWTYkZq7ebiHICaeCcRD6o7vOHse8YAkjjogWNpPeHwcE+vUecpKDVpfoVt99XklQwOnbV4vGU6Ke5j4+Nm6MjwXasGWZlDz9kUznBDzPM1M0/J1VcaZYcN+AciPqzUtMtlAyeCaNJdvduiHeoPCyjTWaayatIhFeDpnTzNXUm5yPtCxpwAy8FV7aj/XK1HOH3/qp36AcnL14IxBrxV7BC9A6UjMyEBQZNCU7RKoY02sk6hLClKQhQpjZqIraMVSRNQYN2J00rgbvAv2vJqoG8AKZQN9oZ22a4RXEJTUSEqLZ7bRWLzCG86GmC+UaliVYc0mP69TXbArMU0LmpVt8L14X6hYS0zDJnax98+JmJwkoWZtGzKpyaQcPfpBJsrXI2sw0c4l4VX15sjMhPw3jCLgOfDxO+NSe5clzOBVcOT6lBp/DhaviV0Qke84BtQyFKdkzE/qxLPs9fhMmpky9dmdvqPaleKDXfRyvU7/j9BsKPqUkwcdJCu4g73li3SJLoo1BzqDJR/cBvTO4qf6wc8MNXkAD6XVjng+qST6qwJP5phsGBZiyrC0jfMNA6shNjwMy0TzBVEQm9033aXkmHfzcAOycbknyTdgDlVLA6t5Pw/xkWYM43DYn7cG0EY5YQ2DWdXmcI9f1TZv189K9snwZA1927ATNGATT8Q9q7r+1LUbs9FJ7gabzMEqozlffSQUm79WjdgQNTqr6eWamdGfT68+cSZFANoi5al+jDQ5WnuZgn/g+Y5nrNB49LPECg1iYzKqN1upvMYnA5QYN+JofLaZPpsuRq7PsU+aNbVzNfMm4SZw3SWkyE3gem3n0/pyAr7ZvkqjHL38+BDVRIu4Tzn8lIRjm8YaBgcdkBkksrVWl3jyhSLIv8rsIF/IpY45gscf7CNdUMuymFKgnJC3sK6fcGUDv011TnVpTE7ucArdiHc3Z6Zwlie95s0PR+mBVRmfcmhzliCZcpJuAh7PSaAqA86GC/+YciZ4iCpF0+Gny1hT6jDDbkTXeUzHEzHqQwaIB33FWG/izFP8TPc2EM+yELXA8SnuLRDp9tevT7FG/tjRcuqL
*/