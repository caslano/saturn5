/*!
@file
Forward declares `boost::hana::first`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_FIRST_HPP
#define BOOST_HANA_FWD_FIRST_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Returns the first element of a pair.
    //! @ingroup group-Product
    //!
    //! Note that if the `Product` actually stores the elements it contains,
    //! `hana::first` is required to return a lvalue reference, a lvalue
    //! reference to const or a rvalue reference to the first element, where
    //! the type of reference must match that of the pair passed to `first`.
    //! If the `Product` does not store the elements it contains (i.e. it
    //! generates them on demand), this requirement is dropped.
    //!
    //!
    //! Example
    //! -------
    //! @include example/first.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto first = [](auto&& product) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename P, typename = void>
    struct first_impl : first_impl<P, when<true>> { };

    struct first_t {
        template <typename Pair>
        constexpr decltype(auto) operator()(Pair&& pair) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr first_t first{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_FIRST_HPP

/* first.hpp
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
*/