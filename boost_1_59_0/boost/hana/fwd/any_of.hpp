/*!
@file
Forward declares `boost::hana::any_of`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_ANY_OF_HPP
#define BOOST_HANA_FWD_ANY_OF_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Returns whether any key of the structure satisfies the `predicate`.
    //! @ingroup group-Searchable
    //!
    //! If the structure is not finite, `predicate` has to be satisfied
    //! after looking at a finite number of keys for this method to finish.
    //!
    //!
    //! @param xs
    //! The structure to search.
    //!
    //! @param predicate
    //! A function called as `predicate(k)`, where `k` is a key of the
    //! structure, and returning a `Logical`.
    //!
    //!
    //! Example
    //! -------
    //! @include example/any_of.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto any_of = [](auto&& xs, auto&& predicate) {
        return tag-dispatched;
    };
#else
    template <typename S, typename = void>
    struct any_of_impl : any_of_impl<S, when<true>> { };

    struct any_of_t {
        template <typename Xs, typename Pred>
        constexpr auto operator()(Xs&& xs, Pred&& pred) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr any_of_t any_of{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_ANY_OF_HPP

/* any_of.hpp
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
*/