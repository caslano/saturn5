/*!
@file
Forward declares `boost::hana::min`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_MIN_HPP
#define BOOST_HANA_FWD_MIN_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Returns the smallest of its arguments according to the `less` ordering.
    //! @ingroup group-Orderable
    //!
    //!
    //! @todo
    //! We can't specify the signature right now, because the tag of the
    //! returned object depends on whether `x < y` or not. If we wanted to be
    //! mathematically correct, we should probably ask that `if_(cond, x, y)`
    //! returns a common data type of `x` and `y`, and then the behavior
    //! of `min` would follow naturally. However, I'm unsure whether this
    //! is desirable because that's a big requirement.
    //!
    //!
    //! Example
    //! -------
    //! @include example/min.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto min = [](auto&& x, auto&& y) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename T, typename U, typename = void>
    struct min_impl : min_impl<T, U, when<true>> { };

    struct min_t {
        template <typename X, typename Y>
        constexpr decltype(auto) operator()(X&& x, Y&& y) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr min_t min{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_MIN_HPP

/* min.hpp
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
*/