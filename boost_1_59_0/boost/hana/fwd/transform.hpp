/*!
@file
Forward declares `boost::hana::transform`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_TRANSFORM_HPP
#define BOOST_HANA_FWD_TRANSFORM_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Map a function over a `Functor`.
    //! @ingroup group-Functor
    //!
    //!
    //! Signature
    //! ---------
    //! Given `F` a Functor, the signature is
    //! \f$
    //!     \mathtt{transform} : F(T) \times (T \to U) \to F(U)
    //! \f$
    //!
    //! @param xs
    //! The structure to map `f` over.
    //!
    //! @param f
    //! A function called as `f(x)` on element(s) `x` of the structure,
    //! and returning a new value to replace `x` in the structure.
    //!
    //!
    //! Example
    //! -------
    //! @include example/transform.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto transform = [](auto&& xs, auto&& f) {
        return tag-dispatched;
    };
#else
    template <typename Xs, typename = void>
    struct transform_impl : transform_impl<Xs, when<true>> { };

    struct transform_t {
        template <typename Xs, typename F>
        constexpr auto operator()(Xs&& xs, F&& f) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr transform_t transform{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_TRANSFORM_HPP

/* transform.hpp
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
*/