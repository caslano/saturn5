/*!
@file
Forward declares `boost::hana::greater`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_GREATER_HPP
#define BOOST_HANA_FWD_GREATER_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>
#include <boost/hana/detail/nested_than_fwd.hpp>


namespace boost { namespace hana {
    //! Returns a `Logical` representing whether `x` is greater than `y`.
    //! @ingroup group-Orderable
    //!
    //!
    //! Signature
    //! ---------
    //! Given a Logical `Bool` and two Orderables `A` and `B` with a common
    //! embedding, the signature is
    //! @f$ \mathrm{greater} : A \times B \to Bool @f$.
    //!
    //! @param x, y
    //! Two objects to compare.
    //!
    //!
    //! Example
    //! -------
    //! @include example/greater.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto greater = [](auto&& x, auto&& y) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename T, typename U, typename = void>
    struct greater_impl : greater_impl<T, U, when<true>> { };

    struct greater_t : detail::nested_than<greater_t> {
        template <typename X, typename Y>
        constexpr decltype(auto) operator()(X&& x, Y&& y) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr greater_t greater{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_GREATER_HPP

/* greater.hpp
cu3D4bHf65kjJzWMl/QfZO5c1aBkTT2DY9hz+U4IiThyF8iuEl2eKYbNchFoVcEUMWwhi2GQBS8M5TB1lwj3kUx1l8hkDRPfNoLCdKi7RFZ4l8gI7xJp/JBFoLqj+cYe7ZasDnk+yKx1yDZCiaisCuP9Fu0/C0ZtHNWHiV0bGVoG8GuiXBhzErz5Wurberju1gevu/XkultPrLsyYYfiH3N2wj/UZDCI7vlQ2Z7xHdCeHZ8r5zXH/wy4oRnMgOCuu9W8PLpMXnDyNl+sehLcX/SSbHZSZGW8cP8W3Q0p0ZBFYCIeVRERufsPSBSCzUo8ybBx5ja7IclaQ5OsLSQ7XVZ2W1Z22K7gjuEu0q70vRCw7Im+nDmjpUHR73mZlw9tGBHS6eFKfm1q4AN4fx4UPS3hW+QOsKJS1A8zZbV1RjCBMJkvaWwVPbEe3ITjv2kF0ZHCPuerkWhlTH4P/N/NrFYyhCFuZYic5MkMjhcvbCwzHpKSnGcNkpzLt0SLhQQE55gMfEeCw2WmT70zg+o9J6r3nE9Y7+WfpN59tJ5n+AaubmYSb4bJPuv5jTUscZaVzHJTWdlk1m7Jl3KqXFsya3Qqa0wyqzWVVUxmjUhllZJZ7amsjmSWl8pqSWY1pbKak1m5VFY+mdWYyioks0amskYls+xUlpPMGpvK2j2ZtUcqa89k1rhU1vhk1oRU1l7JLD+VNTGZVUllVZNZtVRWZzKrK5U1CW/HaD3fBsna8ks7uqfxc6vmT8GJSf3tW2KnLN/moxnmtL3PpEq5t8alnt6xlFTRJL+6UQqKvJ0UPIxgJhC5SZUqhKWCllSh6arQ06rQ05J8QKrQHFMCAvqItK11sP8aaj3HWvVPwFaPXthF2yIEIQpfDk++TFAv/M2JRnhXSuIzdGOdylbbLMk+CSKgjevsFgdqz4bBMX9VlBgUPThQYT9bM7O40pxXcD8DuNqa9Rx9LU7K2Z2LLP8DMNMFFsd9zFenOJY/BjcM13McpaL/DNSYRVeK5d3E1w4jkbc7XeVcrvM5u8JnGV2Ex1rG4w45yLKt4A2Nve8iJizaUK7onYTeVoedHWpttEBP7fshBjNYZUjs8Qb2F3Uew7kah/kWTtisoF8LY27Af9T5nL/Nibuj5kqM0JwtbhxP5pHo+xEDPyX0IYpYxBdApv+y+jTyg2KVgyOg6L6GvU2iTv8h9h1gdz/msNcMWFFX805wuxPH4JiiYkv1/ZjjxDG00fUqSLWqImwyco61DiWqBJaLht/DlP9Cbst93EWqeItd9tdz469bSQIM1jEZ1B2Tg1NZTii1mtXxWNq35J0hShpWY3+7R9s42CJ6xsbVU19usQZGIM+zKi7HT4N3g4uAi0R3TiG0p60xgSDsJAfzbXF2HUOAU3CWyZsgbZVa7eosiM9bGl2Bj+2vqmEkSTM7AjRJ/qGW2NQS27M92mpPfabFUS1xKp4pNDKL2tLDPiq0rLVWwo4pFGwbbp6qFYsDFEcNsh3/OiRrUh8NUI5ocbXSV13yQuiSq3NpW/dpEEA+S39Gx48d3aeHj23xY7l7dfyIQ7J1ANRfmFBKvCno4ikrPJPIZw5cnCnIXrqBJPtM5mJqzyU/ifDY3T+Dr0YGnzOYwIIzDbbsF8AoJ4UZ7CIm5prV9xcQn78nrgx/szhgfREmNGdhL3o27GgwFSn1fqQGSD0HqZhDNJXOhQwX1DGVTqBCG6iXurtRaA0KIbcyKwy02ftzfPNB3894WqwFhh1aDxJZPqtfsJl254hBuw4luJhk+01gQxiwMBqMXp88Lub8L4b+0gzpE7ZpfJE5s99MRfr9bH3BuMhDGHJU/OtIW2d1D7Cf6vDsp6kpvEtiYC5nemOYjE0OMDftEkw7eaYUwiVmdFIDGymMWbjhOUrofSlyV5eI3UONe1nFJbIQay/Tq/wv3bk5NE4wSpNy9b8eTK/X4tXE6wObo1d942pj5ZRkktbzKoEsTTlOHrLVdq3nFfibHV9ekdUN+tus3XinWV7ZrFvtkwyzNPlXZmeeHh3N6n1V1mqUL9F3QLrkn8cKCfVm+0/xRa/247lwWNtcU54IqnxOPL99w5NoOQPLV1sl3dENc4Wz4sY7WTMmH039DaU1jpnZalSnETNY4U4xXWNlq4FrDEkkaBukXj2T0UDhZs1wp/5YxWacKWawXojWJNUWeU/CyoagLGlQSdo+V+t5mSnLDM4Hda/X9L4L4Bbiunmw4bgQ88HsvQg/BaO3Ry39F9PvvShQqWs9F4U7ku20NIjZh+6PzyaCSy/SenrZd3Mf7sAFlxjqLrmVWSrWaV73Op7nei/KWVovCmr1b9Ig+5cavM+2GIR/GS/4nCMpfZfjiwHrCszSK6Ey8q9K+lc7Teu5Wrxz89/PMwbrZa20OAbxJaj/WlU/ylpG7+cFDf6mvj1Co5XQ4BIMx79OkNnOyCC9vGFPif4oBbbZ/gbBbmOInX99EjnqmBsYrRsZrZuUfGBlliAeDfC6WeF1gyB0IyP0TqpfkOVvElTeYVRuSPTLLVHNtw6qeTPXfBvXfLsR32XHmFyKureoujdL3bdx3dnbknUjy79D6kaOpIR13zn8mNzFlW/lv19gFO5GiaWSo0tiMbgnwiuXoX135jLgtY3NB/RelHSMXpR0tF6GVR97WzxWDsNyGJT/RUByBqwvhTipwqlC90ZkJ8nd90WtKQb3o9yA9eWoQ7/CLfsKc4seTI1Ox7K5WMVOtvUBbuWD/PchbuvDIf3BUOhytOmrqq8fEPp7SLqcv6nvf1uS/rgEw/EfkY7fnzs+kX6vdP+jw3f/1xiZx/jv1xmlb0S0B5yuAE6PK5y+Jjh9XXDij+qnpHDiEgzI/6bgdArjlEhXOD0xPE7fYmz+if8+yTg9FeGEc74rgdO3FU7fEpyeFJz4o/oFKZy4BAPynxacLmCcvpWep0+m5ukzw6BH0+VZRuw7jNh3w/HDXLkKeH1P4fWsIPQdRmhraq4gy39OUNnKqDybmCvfH75jnueaf8B/f8j1/yhJP1ej/h+r+p+XfvmhoMHf1L+X6hcuwXD8FwSZ7zEyiXQ1Vj8ZBqU+reenjMzP+O/P+e+LjNj2BB85n36vAW7/rHD7qeCG8pbZ+6KgyDDqv4xQbCcUuSDDtRiu/5Ig+ktGdIfclwXdV4bmsdSBrzKG/4f//oLx/JcEnqfQ7+eB578qPF8VPH8hCPJn9fdTfcglGJT/S0HtfUYtka768P+m2e8xWvBv9JtwRvMaku/T+voBGxbfv8IXr0PcRBKn+xsRavt6EdnZnmZ3+l1POJc3fKqBA4/HEDWmZf8N0HUUqw5yAklLXtuGIzM7K1/Wh8JvW7QXHKv2gpo4Ja3a4X7dnw+7//c0y/91SJuw+bmO78YJ7+TzFBjZJzmmWzAilqnONXcjuXADfRcjUfTfxPfdv+GtveYzivMiG1OgGLxFf2zD/230bPo3UIfR/hxvFgs13W9j5TCC36WbKD4THW65ZDLIRtcJfh99VTDhpMRhXPPlDTOo27HPRBhws8y9yhdYRRzy3zHS4tAfgJH/R6wgXE3BSNb2LvrYs/w/gdT8P3Mp1Bz8RYpGz4wK9o9hX71LvxuTfTy403LcaSR4DttpTqLTHOk0x9y4urzClp/gPaD4Por8O7NObjqcNtnbPEM1HT2xk6Y73HQai0HEJQ03Ew23BjW2MaYTV+jEDWl6G/1en2z7P0IfHzte/n8wVgxyTEMS8aERzscIC7FUnMpLmv+f8NYPlDppKD5AgRbBU/P/ilr+i9kIpxT9D/FymKAmnwZ/Y8m7xL29DksGLUl68N/MzP4OAP+DtI7uh7ElkrMFrE03cNzV5tvDgKnbH4v8s75Ju4A145gbdL8F+9YB7r2ej9B0LciYIJu+32K/epTEOHbSNn04u7hxePi/AfzxAv9twG8wGb5mAr4BRXyqAnW/SGNz0JsAV+NhCUxxrmiYSr91BuXfjDg9b2Lbtao++XaE2DRNUUWxeqqjvteW0OEhssWBNjuaLovJgu2/QTit+xWBaOOUvFNu3+pI6uvA6ddwXrfuTdmLY67hWswmqreevyNUfdVH3qkec5a2cbX/79A0lhqrK6369LsQybIo8eDju+2xGSW9FXHIwPO5qO7A255dKrHZwjbPDjbhkqjpeKYbLEHkIxgmUDVT73HC+Y9zzlsG4TTvrhAnaTse87Qwh3EoYows3Ky3TVzpqB+5lfHtkFzgQfjaKXzttu2TE2/tLv0Jm8BR6z2Dw9avewP73vrJKYiO5wCik4LopCA6gOgoiKZANAXirxO+wXG3YiGtQf7rVKAPdVEdmixrqu+ssrbNatO3We19GOFtVvAi9d+ajVC5DAHj1x8D4/XBMM6guXcmYn3jUEPmnqb3/iakFT2zN8G/lW13kaiXWN7EKRJxqXdY6SgsBUdJNAuseKFpdBn6WQw9B+h5k6G/BejAfS7B3sywkaSLLMsM2SCGvKuV/FzHoU4WZznZMXOmjdJxMpTlE6GsTEpMPt8z2Yev34Lfrm5IVOt+q4LBt5oJMavL/xO68p1Qd6WzzH4b5uk7rCArUunaqlK+73f0Oh6nv4cQYSYzZ9bPJ5LpHsEz2f8zFHQloFhGL0ARaJVxpAZL8/upYAknYNl1AMA++V1/WQPu4Ih/56bM8lNjP9IH0+/t0Il30Cf1N+lrnFtRNZ25+sgvUKWj6O0iC4d52dU5mxU5eYsoFsd22QlOY3/WqlmWCpIS+vpvzlRnx3XAb9cWtPf34nT/o6T6/eBSThqO2Bfc8KFKjaCefh8JKtcKMm7GYvfVjrQuik3Slpn96dB/tcby4B2gibVPiKfL5vpWalZ9O9q2Hvc4rZ63Ix/ewsvuRH+8Cyf/r38hVPwpnV90JW8srrVsfyJk6sI7Gt2Sts3FEWY2q1vd/8nOj/zDsrglzcyg2kR0uDuIznaCD4QxsPHK7/rznlGD4yPxxY2zvkgfrGWWZ0bVQ3thjefQXZADV4YruUid/l+4y/wKIbnmCb49o/WicfZalLwXfyrLhVTR5d0N1Ifrfi9BzULd7R/Qv0bvH4WUgx+za35pfshn/oV+t7Ld7J6gTkfH8WO2uSHujnrmbmJx43AQST3Bd1hzdt+74d3Nv4OCJ4BGkcTp/o2Q5G/CIYvW80c+PkSVYxbowasIfoKDS/j64BqnuzrOLrN9fwoh/g8gTgREJHG6fzMgWrh0UwGpujjF5DXF8v8bVmOe4f+Nrxg69PRfPBj+Xx0+zeyrYXp1mmGbjcxB9PuFBrnv8KGizDdwdDChvsfdcKsBbOuL6VHr+QOfrYJSvoHItl2YQWbfJBMy0WTAfFK1o1XKyseGf3CWjxoTScHrulrbxyp9Zjlbbdb7pjCsqfhbXoEo79Posbxi6luVVVrf9BB3rW9v5lz7oM4TZAzrx0TYcmSHcP8yXtlbUPMGxCz5zxya7FPAszF8m2HGMdgk5vuw3xTUm4nTV8QUVW+zTBbhumfTb++f49AtCuYC+r0btLVWji7VaaSjWbBtqFb0tZvUec4cpj3NDm5Bev2Eu0NHlSLTnBzLezuBeeswMDczzLuHgjk6QhhzAT7r74E9FV/2roE+zGBfjEb3XPpb5b1duXs/5qnqm5Ppm208f2CXEkv9IhLlncQedBuJBZVQ+t5GM41P53J8NQVRNHDtwfYb6d3aXg3LBQdQxhq8ii9D3CH4IteHiUhUNQ8fGn3zQ0Ix+g6MHw8CVW1czdRl9C2AUBoczM+H0N/ti0JRv6+GSFzP40DvUM4+LIJhB4cz4S00YeupB0fgN28o7EcTtqV8dXoKAdTqqDoXRcmWs4U5kD+WvhELWpLyfiCQa62Ckr7mUsgQQKJKq/WRqIx66hVdKl0zD525O6JrCEKNksR8BdY/QKrRTexh5ETZcP0x9FGVOmpxhJC/hxvHucc+4kuQMSHSSjBBvi8V82XuI12NVzlYwtM2GrYmHrbNmdSw4VXRCWKw38t3keCZtLY7deBScDKjLNxzWGXd+zDwqaaaPJMx2XZNtm3btm3btnlOtm27Jrsmu97zfH/vH591r3ttnL3O3ru1VtdV1wsOI7T7ubywMXk1cRm6B1RRfa46xb7dZ3qVX54/SfMmyCU3fVLh8yyxzngk5sy2esj30E5dU8IKFw3CF/ZVl+cHI9SOrEYouivTgg4ti/qtXYx9bnkSjjWGCYY3sAPzwyuMwilPNUgMDgr7XnfslM7rbYhOb05wE6QYDCX1DEoZpW+DPfWwewwnUYmk+1BdY4kL/gQqXEgXha+M77CEFNYOUZzdGBcbD9vTkNcNCvann499vuuNtHDTdHfy4v6s7Tn8i1mKIgIx0LK7Fm93IogN+1F7xSbO46dQ6JmKNIASVZppHaO5A5ibrDT3GRmiP98nmuDtHr0ZQPXQ/1lWWJj0xw2IykPoKzFGjOtzTbnogbYuds7xS3kIkT8/hg9mByA49NcGeFsAzH695j1x5DOKpHNDK/VF+lyuaxezoKSRUIfzXfdiwujVO0QtnsOuly1YuVIKgO7KRu8KXs3Of/BO3ZbqNDJuOXTE9ExfduL8xpiaWLzs9deF759mzT/OoKqhnT/CWZ1VdCWRfGGRWYTYFdXAr18xRtcZZFWpM5FAlDJUM7EPRXhw5jOMvzcmi36xlV/atfh+51mFvlj1Z/5rOdbUTRYy35nVrYaBqL494OnHlOnHzNLvNX6sYHeBuPrIuRhkw9eFLLlI30zjAj0YBzrdGSZ1ey+k+rUrH7SRB2igzqU5uJDTkcCPSmCPTODvgH02PdyBa0s6fQce9BweolY811W9rl+1vl8QPSOzpns+a9IEOsxeHB4pqGn9io1vMH9fAoe5krape+0HeQMf83c6yF2nZ71Ige11gQfuTVgT0bj3bz+v3xIqW4wDrdxN53Jv7qQrLXdipL4hObVRezjWiDVIkWwWjt/YY0/gyIMtrCWUSwg0B1oBpq9wVRd70ZakO5ZO8mgitlYAkgJoD+x/jcIMekfsp4cgFdfqI2s5N5Py1gZ2UZnhWPyIeTvx/GwZRHIsFvUKbf/yfcZ0BvxosdpiBxvKUoia64KZaUm3TrevogyFyUL5cMb48E3Z8GsQ/GLL5ysp6Wu9wjsrDED+hLLrr7VLXob4CfwWNSbU+c2Kp3woP7Zb55tx8Si/hS5y79FPf385MH34aH04tytaIN22ARBNId0ty7NLRNcOoxCRN5k/7jMncvQ6caepRfBLOWFnz19Xo/5j+YQkLMi7lzcIYaSFrCxsfaGZuitt+c5lVO5Q/riE+kFVHZHNK05/uhN2P7802o9kKuC11SbDieglABlDYY8tzM0uQZiZjoabnGrzRDRky9mgRh2gMWMGyKzDEP/o6a9lZYukgp2ZturYmG+3WWuuAEsJT7qkY2RJEBNkCCf4uR03+Nkb/gsFGSu7hBGMsE/Yj5bxJux5b8lVi19k21zg589BcmrxGw00BQ9SUd+/PWcf023MXmYdxXzrXF4zGczHuRxPLkfZXoUQrvgkrSmXXT9OFht53PPEMVd/PcOMfc8lI/+3eIhBCeA3dBPjKWlg/zBOcpwqHRm7gCtymXaUtzmT3IYMkNHAoBoUnSLU6lSf
*/