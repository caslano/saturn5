/*!
@file
Forward declares `boost::hana::greater_equal`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_GREATER_EQUAL_HPP
#define BOOST_HANA_FWD_GREATER_EQUAL_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>
#include <boost/hana/detail/nested_than_fwd.hpp>


namespace boost { namespace hana {
    //! Returns a `Logical` representing whether `x` is greater than or
    //! equal to `y`.
    //! @ingroup group-Orderable
    //!
    //!
    //! Signature
    //! ---------
    //! Given a Logical `Bool` and two Orderables `A` and `B` with a common
    //! embedding, the signature is
    //! @f$ \mathrm{greater\_equal} : A \times B \to Bool @f$.
    //!
    //! @param x, y
    //! Two objects to compare.
    //!
    //!
    //! Example
    //! -------
    //! @include example/greater_equal.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto greater_equal = [](auto&& x, auto&& y) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename T, typename U, typename = void>
    struct greater_equal_impl : greater_equal_impl<T, U, when<true>> { };

    struct greater_equal_t : detail::nested_than<greater_equal_t> {
        template <typename X, typename Y>
        constexpr decltype(auto) operator()(X&& x, Y&& y) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr greater_equal_t greater_equal{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_GREATER_EQUAL_HPP

/* greater_equal.hpp
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
*/