/*!
@file
Forward declares `boost::hana::replace`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_REPLACE_HPP
#define BOOST_HANA_FWD_REPLACE_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Replace all the elements of a structure that compare equal
    //! to some `value` with some new fixed value.
    //! @ingroup group-Functor
    //!
    //!
    //! Signature
    //! ---------
    //! Given `F` a Functor and `U` a type that can be compared with `T`,
    //! the signature is
    //! \f$
    //!     \mathtt{replace} : F(T) \times U \times T \to F(T)
    //! \f$
    //!
    //! @param xs
    //! The structure to replace elements of.
    //!
    //! @param oldval
    //! An object compared with each element of the structure. Elements
    //! of the structure that compare equal to `oldval` are replaced
    //! by `newval` in the new structure.
    //!
    //! @param newval
    //! A value by which every element `x` of the structure that compares
    //! equal to `oldval` is replaced.
    //!
    //!
    //! Example
    //! -------
    //! @include example/replace.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto replace = [](auto&& xs, auto&& oldval, auto&& newval) {
        return tag-dispatched;
    };
#else
    template <typename Xs, typename = void>
    struct replace_impl : replace_impl<Xs, when<true>> { };

    struct replace_t {
        template <typename Xs, typename OldVal, typename NewVal>
        constexpr auto operator()(Xs&& xs, OldVal&& oldval, NewVal&& newval) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr replace_t replace{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_REPLACE_HPP

/* replace.hpp
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
*/