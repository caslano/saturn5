/*!
@file
Forward declares `boost::hana::repeat`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_REPEAT_HPP
#define BOOST_HANA_FWD_REPEAT_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Invokes a nullary function `n` times.
    //! @ingroup group-IntegralConstant
    //!
    //! Given an `IntegralConstant` `n` and a nullary function `f`,
    //! `repeat(n, f)` will call `f` `n` times. In particular, any
    //! decent compiler should expand `repeat(n, f)` to
    //! @code
    //!     f(); f(); ... f(); // n times total
    //! @endcode
    //!
    //!
    //! @param n
    //! An `IntegralConstant` holding a non-negative value representing
    //! the number of times `f` should be repeatedly invoked.
    //!
    //! @param f
    //! A function to repeatedly invoke `n` times. `f` is allowed to have
    //! side effects.
    //!
    //!
    //! Example
    //! -------
    //! @include example/repeat.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto repeat = [](auto const& n, auto&& f) -> void {
        f(); f(); ... f(); // n times total
    };
#else
    template <typename N, typename = void>
    struct repeat_impl : repeat_impl<N, when<true>> { };

    struct repeat_t {
        template <typename N, typename F>
        constexpr void operator()(N const& n, F&& f) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr repeat_t repeat{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_REPEAT_HPP

/* repeat.hpp
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
*/