/*!
@file
Forward declares `boost::hana::take_while`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_TAKE_WHILE_HPP
#define BOOST_HANA_FWD_TAKE_WHILE_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Take elements from a sequence while the `predicate` is satisfied.
    //! @ingroup group-Sequence
    //!
    //! Specifically, `take_while` returns a new sequence containing the
    //! longest prefix of `xs` in which all the elements satisfy the given
    //! predicate.
    //!
    //!
    //! @param xs
    //! The sequence to take elements from.
    //!
    //! @param predicate
    //! A function called as `predicate(x)`, where `x` is an element of the
    //! sequence, and returning a `Logical` representing whether `x` should be
    //! included in the resulting sequence. In the current version of the
    //! library, `predicate` has to return a `Constant Logical`.
    //!
    //!
    //! Example
    //! -------
    //! @include example/take_while.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto take_while = [](auto&& xs, auto&& predicate) {
        return tag-dispatched;
    };
#else
    template <typename S, typename = void>
    struct take_while_impl : take_while_impl<S, when<true>> { };

    struct take_while_t {
        template <typename Xs, typename Pred>
        constexpr auto operator()(Xs&& xs, Pred&& pred) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr take_while_t take_while{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_TAKE_WHILE_HPP

/* take_while.hpp
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
*/