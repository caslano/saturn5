/*!
@file
Forward declares `boost::hana::fuse`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_FUSE_HPP
#define BOOST_HANA_FWD_FUSE_HPP

#include <boost/hana/config.hpp>


namespace boost { namespace hana {
    //! Transform a function taking multiple arguments into a function that
    //! can be called with a compile-time `Foldable`.
    //! @ingroup group-Foldable
    //!
    //!
    //! This function is provided for convenience as a different way of
    //! calling `unpack`. Specifically, `fuse(f)` is a function such that
    //! @code
    //!     fuse(f)(foldable) == unpack(foldable, f)
    //!                       == f(x...)
    //! @endcode
    //! where `x...` are the elements in the foldable. This function is
    //! useful when one wants to create a function that accepts a foldable
    //! which is not known yet.
    //!
    //! @note
    //! This function is not tag-dispatched; customize `unpack` instead.
    //!
    //!
    //! Example
    //! -------
    //! @include example/fuse.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto fuse = [](auto&& f) {
        return [perfect-capture](auto&& xs) -> decltype(auto) {
            return unpack(forwarded(xs), forwarded(f));
        };
    };
#else
    struct fuse_t {
        template <typename F>
        constexpr auto operator()(F&& f) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr fuse_t fuse{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_FUSE_HPP

/* fuse.hpp
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
*/