/*!
@file
Forward declares `boost::hana::count`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_COUNT_HPP
#define BOOST_HANA_FWD_COUNT_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Return the number of elements in the structure that compare equal to
    //! a given value.
    //! @ingroup group-Foldable
    //!
    //! Given a Foldable structure `xs` and a value `value`, `count` returns
    //! an unsigned integral, or a Constant thereof, representing the number
    //! of elements of `xs` that compare equal to `value`. For this method to
    //! be well-defined, all the elements of the structure must be Comparable
    //! with the given value.
    //!
    //!
    //! @param xs
    //! The structure whose elements are counted.
    //!
    //! @param value
    //! A value compared with each element in the structure. Elements
    //! that compare equal to this value are counted, others are not.
    //!
    //!
    //! Example
    //! -------
    //! @include example/count.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto count = [](auto&& xs, auto&& value) {
        return tag-dispatched;
    };
#else
    template <typename T, typename = void>
    struct count_impl : count_impl<T, when<true>> { };

    struct count_t {
        template <typename Xs, typename Value>
        constexpr auto operator()(Xs&& xs, Value&& value) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr count_t count{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_COUNT_HPP

/* count.hpp
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
*/