/*!
@file
Forward declares `boost::hana::drop_while`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_DROP_WHILE_HPP
#define BOOST_HANA_FWD_DROP_WHILE_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Drop elements from an iterable up to, but excluding, the first
    //! element for which the `predicate` is not satisfied.
    //! @ingroup group-Iterable
    //!
    //! Specifically, `drop_while` returns an iterable containing all the
    //! elements of the original iterable except for those in the range
    //! delimited by [`head`, `e`), where `head` is the first element and
    //! `e` is the first element for which the `predicate` is not satisfied.
    //! If the iterable is not finite, the `predicate` has to return a false-
    //! valued `Logical` at a finite index for this method to return.
    //!
    //!
    //! @param iterable
    //! The iterable from which elements are dropped.
    //!
    //! @param predicate
    //! A function called as `predicate(x)`, where `x` is an element of the
    //! structure, and returning a `Logical` representing whether `x` should
    //! be dropped from the structure. In the current version of the library,
    //! `predicate` should return a compile-time `Logical`.
    //!
    //!
    //! Example
    //! -------
    //! @include example/drop_while.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto drop_while = [](auto&& iterable, auto&& predicate) {
        return tag-dispatched;
    };
#else
    template <typename It, typename = void>
    struct drop_while_impl : drop_while_impl<It, when<true>> { };

    struct drop_while_t {
        template <typename Xs, typename Pred>
        constexpr auto operator()(Xs&& xs, Pred&& pred) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr drop_while_t drop_while{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWDDROP_WHILE_HPP

/* drop_while.hpp
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
*/