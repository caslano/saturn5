/*!
@file
Forward declares `boost::hana::concat`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_CONCAT_HPP
#define BOOST_HANA_FWD_CONCAT_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Combine two monadic structures together.
    //! @ingroup group-MonadPlus
    //!
    //! Given two monadic structures, `concat` combines them together and
    //! returns a new monadic structure. The exact definition of `concat`
    //! will depend on the exact model of MonadPlus at hand, but for
    //! sequences it corresponds intuitively to simple concatenation.
    //!
    //! Also note that combination is not required to be commutative.
    //! In other words, there is no requirement that
    //! @code
    //!     concat(xs, ys) == concat(ys, xs)
    //! @endcode
    //! and indeed it does not hold in general.
    //!
    //!
    //! Signature
    //! ---------
    //! Given a `MonadPlus` `M`, the signature of `concat` is
    //! @f$ \mathtt{concat} : M(T) \times M(T) \to M(T) @f$.
    //!
    //! @param xs, ys
    //! Two monadic structures to combine together.
    //!
    //!
    //! Example
    //! -------
    //! @include example/concat.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto concat = [](auto&& xs, auto&& ys) {
        return tag-dispatched;
    };
#else
    template <typename M, typename = void>
    struct concat_impl : concat_impl<M, when<true>> { };

    struct concat_t {
        template <typename Xs, typename Ys>
        constexpr auto operator()(Xs&& xs, Ys&& ys) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr concat_t concat{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_CONCAT_HPP

/* concat.hpp
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
*/