/*!
@file
Forward declares `boost::hana::drop_front`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_DROP_FRONT_HPP
#define BOOST_HANA_FWD_DROP_FRONT_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Drop the first `n` elements of an iterable, and return the rest.
    //! @ingroup group-Iterable
    //!
    //! Given an `Iterable` `xs` with a linearization of `[x1, x2, ...]` and
    //! a non-negative `IntegralConstant` `n`, `drop_front(xs, n)` is an
    //! iterable with the same tag as `xs` whose linearization is
    //! `[xn+1, xn+2, ...]`. In particular, note that this function does not
    //! mutate the original iterable in any way. If `n` is not given, it
    //! defaults to an `IntegralConstant` with a value equal to `1`.
    //!
    //! In case `length(xs) <= n`, `drop_front` will simply drop the whole
    //! iterable without failing, thus returning an empty iterable. This is
    //! different from `drop_front_exactly`, which expects `n <= length(xs)`
    //! but can be better optimized because of this additional guarantee.
    //!
    //!
    //! @param xs
    //! The iterable from which elements are dropped.
    //!
    //! @param n
    //! A non-negative `IntegralConstant` representing the number of elements
    //! to be dropped from the iterable. If `n` is not given, it defaults to
    //! an `IntegralConstant` with a value equal to `1`.
    //!
    //!
    //! Example
    //! -------
    //! @include example/drop_front.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto drop_front = [](auto&& xs[, auto const& n]) {
        return tag-dispatched;
    };
#else
    template <typename It, typename = void>
    struct drop_front_impl : drop_front_impl<It, when<true>> { };

    struct drop_front_t {
        template <typename Xs, typename N>
        constexpr auto operator()(Xs&& xs, N const& n) const;

        template <typename Xs>
        constexpr auto operator()(Xs&& xs) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr drop_front_t drop_front{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_DROP_FRONT_HPP

/* drop_front.hpp
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
*/