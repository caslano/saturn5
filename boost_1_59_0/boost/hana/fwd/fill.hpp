/*!
@file
Forward declares `boost::hana::fill`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_FILL_HPP
#define BOOST_HANA_FWD_FILL_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Replace all the elements of a structure with a fixed value.
    //! @ingroup group-Functor
    //!
    //!
    //! Signature
    //! ---------
    //! Given `F` a Functor, the signature is
    //! \f$
    //!     \mathtt{fill} : F(T) \times U \to F(U)
    //! \f$
    //!
    //! @param xs
    //! The structure to fill with a `value`.
    //!
    //! @param value
    //! A value by which every element `x` of the structure is replaced,
    //! unconditionally.
    //!
    //!
    //! Example
    //! -------
    //! @include example/fill.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto fill = [](auto&& xs, auto&& value) {
        return tag-dispatched;
    };
#else
    template <typename Xs, typename = void>
    struct fill_impl : fill_impl<Xs, when<true>> { };

    struct fill_t {
        template <typename Xs, typename Value>
        constexpr auto operator()(Xs&& xs, Value&& value) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr fill_t fill{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_FILL_HPP

/* fill.hpp
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
*/