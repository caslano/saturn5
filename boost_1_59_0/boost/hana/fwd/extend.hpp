/*!
@file
Forward declares `boost::hana::extend`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_EXTEND_HPP
#define BOOST_HANA_FWD_EXTEND_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Comonadic application of a function to a comonadic value.
    //! @ingroup group-Comonad
    //!
    //! Given a comonadic value and a function accepting a comonadic input,
    //! `extend` returns the result of applying the function to that input
    //! inside the comonadic context.
    //!
    //!
    //! Signature
    //! ---------
    //! Given a Comonad `W` and a function of type \f$ W(T) \to U \f$, the
    //! signature is
    //! \f$
    //!     \mathtt{extend} : W(T) \times (W(T) \to U) \to W(U)
    //! \f$
    //!
    //! @param w
    //! A comonadic value to call the function with.
    //!
    //! @param f
    //! A function of signature \f$ W(T) \to U \f$ to be applied to its
    //! comonadic argument inside the comonadic context.
    //!
    //!
    //! Example
    //! -------
    //! @include example/extend.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto extend = [](auto&& w, auto&& f) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename W, typename = void>
    struct extend_impl : extend_impl<W, when<true>> { };

    struct extend_t {
        template <typename W_, typename F>
        constexpr decltype(auto) operator()(W_&& w, F&& f) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr extend_t extend{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_EXTEND_HPP

/* extend.hpp
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
*/