/*!
@file
Forward declares `boost::hana::none_of`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_NONE_OF_HPP
#define BOOST_HANA_FWD_NONE_OF_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Returns whether none of the keys of the structure satisfy the
    //! `predicate`.
    //! @ingroup group-Searchable
    //!
    //! If the structure is not finite, `predicate` has to return a true-
    //! valued `Logical` after looking at a finite number of keys for this
    //! method to finish.
    //!
    //!
    //! @param xs
    //! The structure to search.
    //!
    //! @param predicate
    //! A function called as `predicate(k)`, where `k` is a key of the
    //! structure, and returning a `Logical`.
    //!
    //!
    //! Example
    //! -------
    //! @include example/none_of.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto none_of = [](auto&& xs, auto&& predicate) {
        return tag-dispatched;
    };
#else
    template <typename S, typename = void>
    struct none_of_impl : none_of_impl<S, when<true>> { };

    struct none_of_t {
        template <typename Xs, typename Pred>
        constexpr auto operator()(Xs&& xs, Pred&& pred) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr none_of_t none_of{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_NONE_OF_HPP

/* none_of.hpp
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
*/