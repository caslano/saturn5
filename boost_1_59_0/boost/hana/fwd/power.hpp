/*!
@file
Forward declares `boost::hana::power`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_POWER_HPP
#define BOOST_HANA_FWD_POWER_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Elevate a ring element to its `n`th power.
    //! @ingroup group-Ring
    //!
    //! Specifically, `power(x, n)`, is equivalent to multiplying `x` with
    //! itself `n` times using the Ring's multiplication. If the power is
    //! equal to `zero`, the Ring's identity (`one`) is returned.
    //!
    //! @param x
    //! A `Ring` element that is elevated to its `n`th power.
    //!
    //! @param n
    //! A non-negative `IntegralConstant` representing the power to which `x`
    //! is elevated.
    //!
    //!
    //! @note
    //! Only the tag of `x` is used for tag-dispatching.
    //!
    //! Example
    //! -------
    //! @include example/power.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto power = [](auto&& x, auto const& n) -> decltype(auto) {
        return tag-dispatched;
    };
#else
    template <typename R, typename = void>
    struct power_impl : power_impl<R, when<true>> { };

    struct power_t {
        template <typename X, typename N>
        constexpr decltype(auto) operator()(X&& x, N const& n) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr power_t power{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_POWER_HPP

/* power.hpp
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
*/