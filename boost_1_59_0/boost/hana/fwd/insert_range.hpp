/*!
@file
Forward declares `boost::hana::insert_range`.

@copyright Louis Dionne 2013-2017
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
 */

#ifndef BOOST_HANA_FWD_INSERT_RANGE_HPP
#define BOOST_HANA_FWD_INSERT_RANGE_HPP

#include <boost/hana/config.hpp>
#include <boost/hana/core/when.hpp>


namespace boost { namespace hana {
    //! Insert several values at a given index in a sequence.
    //! @ingroup group-Sequence
    //!
    //! Given a sequence, an index and any `Foldable` containing elements to
    //! insert, `insert_range` inserts the elements in the `Foldable` at the
    //! given index of the sequence.
    //!
    //! @param xs
    //! The sequence in which values should be inserted.
    //!
    //! @param n
    //! The index at which elements should be inserted. This must be a
    //! non-negative `Constant` of an integral type, and it must also be
    //! true that `n < length(xs)` if `xs` is a finite sequence.
    //!
    //! @param elements
    //! A `Foldable` containing elements to insert in the sequence.
    //!
    //!
    //! Example
    //! -------
    //! @include example/insert_range.cpp
#ifdef BOOST_HANA_DOXYGEN_INVOKED
    constexpr auto insert_range = [](auto&& xs, auto&& n, auto&& elements) {
        return tag-dispatched;
    };
#else
    template <typename S, typename = void>
    struct insert_range_impl : insert_range_impl<S, when<true>> { };

    struct insert_range_t {
        template <typename Xs, typename N, typename Elements>
        constexpr auto operator()(Xs&& xs, N&& n, Elements&& elements) const;
    };

    BOOST_HANA_INLINE_VARIABLE constexpr insert_range_t insert_range{};
#endif
}} // end namespace boost::hana

#endif // !BOOST_HANA_FWD_INSERT_RANGE_HPP

/* insert_range.hpp
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
*/