#ifndef BOOST_DESCRIBE_DETAIL_COMPUTE_BASE_MODIFIERS_HPP_INCLUDED
#define BOOST_DESCRIBE_DETAIL_COMPUTE_BASE_MODIFIERS_HPP_INCLUDED

// Copyright 2020, 2021 Peter Dimov
// Distributed under the Boost Software License, Version 1.0.
// https://www.boost.org/LICENSE_1_0.txt

#include <boost/describe/modifiers.hpp>
#include <type_traits>

namespace boost
{
namespace describe
{
namespace detail
{

#if defined(_MSC_VER)
# pragma warning(push)
# pragma warning(disable: 4594) // can never be instantiated - indirect virtual base class is inaccessible
# pragma warning(disable: 4624) // destructor was implicitly defined as deleted
#endif

// is_public_base_of

template<class T, class U> using is_public_base_of = std::is_convertible<U*, T*>;

// is_protected_base_of

struct ipb_final
{
    template<class T, class U> using fn = std::false_type;
};

struct ipb_non_final
{
    template<class T, class U> struct fn: U
    {
        static std::true_type f( T* );

        template<class X> static auto g( X x ) -> decltype( f(x) );
        static std::false_type g( ... );

        using type = decltype( g((U*)0) );
    };
};

template<class T, class U> using is_protected_base_of =
    typename std::conditional<std::is_final<U>::value || std::is_union<U>::value, ipb_final, ipb_non_final>::type::template fn<T, U>::type;

// is_virtual_base_of

template<class T, class U, class = void> struct can_cast: std::false_type {};
template<class T, class U> struct can_cast<T, U, decltype((void)(U*)(T*)0)>: std::true_type {};

template<class T, class U> using is_virtual_base_of =
    std::integral_constant<bool, can_cast<U, T>::value && !can_cast<T, U>::value>;

// compute_base_modifiers
template<class C, class B> constexpr unsigned compute_base_modifiers() noexcept
{
    return (is_public_base_of<B, C>::value? mod_public: (is_protected_base_of<B, C>::value? mod_protected: mod_private)) | (is_virtual_base_of<B, C>::value? mod_virtual: 0);
}

#if defined(_MSC_VER)
# pragma warning(pop)
#endif

} // namespace detail
} // namespace describe
} // namespace boost

#endif // #ifndef BOOST_DESCRIBE_DETAIL_COMPUTE_BASE_MODIFIERS_HPP_INCLUDED

/* compute_base_modifiers.hpp
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
*/