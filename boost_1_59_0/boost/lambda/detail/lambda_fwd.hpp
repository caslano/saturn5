//  lambda_fwd.hpp - Boost Lambda Library -------------------------------

// Copyright (C) 1999, 2000 Jaakko Jarvi (jaakko.jarvi@cs.utu.fi)
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// For more information, see www.boost.org

// -------------------------------------------------------

#ifndef BOOST_LAMBDA_FWD_HPP
#define BOOST_LAMBDA_FWD_HPP

namespace boost { 
namespace lambda { 

namespace detail {

template<class T> struct generate_error;

}   
// -- placeholders --------------------------------------------

template <int I> struct placeholder;

// function_adaptors
template <class Func> 
struct function_adaptor;

template <int I, class Act> class action;

template <class Base> 
class lambda_functor;

template <class Act, class Args> 
class lambda_functor_base;

} // namespace lambda
} // namespace boost


//  #define CALL_TEMPLATE_ARGS class A, class Env
//  #define CALL_FORMAL_ARGS A& a, Env& env
//  #define CALL_ACTUAL_ARGS a, env
//  #define CALL_ACTUAL_ARGS_NO_ENV a
//  #define CALL_REFERENCE_TYPES A&, Env&
//  #define CALL_PLAIN_TYPES A, Env
#define CALL_TEMPLATE_ARGS class A, class B, class C, class Env
#define CALL_FORMAL_ARGS A& a, B& b, C& c, Env& env
#define CALL_ACTUAL_ARGS a, b, c, env
#define CALL_ACTUAL_ARGS_NO_ENV a, b, c
#define CALL_REFERENCE_TYPES A&, B&, C&, Env&
#define CALL_PLAIN_TYPES A, B, C, Env

namespace boost {
namespace lambda {
namespace detail {

template<class A1, class A2, class A3, class A4>
void do_nothing(A1&, A2&, A3&, A4&) {}

} // detail
} // lambda
} // boost

// prevent the warnings from unused arguments
#define CALL_USE_ARGS \
::boost::lambda::detail::do_nothing(a, b, c, env)



#endif

/* lambda_fwd.hpp
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
*/