//  config.hpp  ---------------------------------------------------------------//

//  Copyright 2012 Vicente J. Botet Escriba

//  Distributed under the Boost Software License, Version 1.0.
//  See http://www.boost.org/LICENSE_1_0.txt


#ifndef BOOST_RATIO_CONFIG_HPP
#define BOOST_RATIO_CONFIG_HPP

#include <boost/config.hpp>
#include <boost/cstdint.hpp>


#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5) || !defined(__GXX_EXPERIMENTAL_CXX0X__)
#  if ! defined BOOST_NO_CXX11_U16STRING
#    define BOOST_NO_CXX11_U16STRING
#  endif
#  if ! defined BOOST_NO_CXX11_U32STRING
#    define BOOST_NO_CXX11_U32STRING
#  endif
#endif


#if !defined BOOST_RATIO_VERSION
#define BOOST_RATIO_VERSION 1
#else
#if BOOST_RATIO_VERSION!=1  && BOOST_RATIO_VERSION!=2
#error "BOOST_RATIO_VERSION must be 1 or 2"
#endif
#endif

#if BOOST_RATIO_VERSION==1
#if ! defined BOOST_RATIO_DONT_PROVIDE_DEPRECATED_FEATURES_SINCE_V2_0_0
#define BOOST_RATIO_PROVIDES_DEPRECATED_FEATURES_SINCE_V2_0_0
#endif
#endif

#if BOOST_RATIO_VERSION==2
#if ! defined BOOST_RATIO_PROVIDES_DEPRECATED_FEATURES_SINCE_V2_0_0
#define BOOST_RATIO_DONT_PROVIDE_DEPRECATED_FEATURES_SINCE_V2_0_0
#endif
#endif

#ifdef INTMAX_C
#define BOOST_RATIO_INTMAX_C(a) INTMAX_C(a)
#elif __cplusplus >= 201103L
#define BOOST_RATIO_INTMAX_C(a) a##LL
#else
#define BOOST_RATIO_INTMAX_C(a) a##L
#endif

#ifdef UINTMAX_C
#define BOOST_RATIO_UINTMAX_C(a) UINTMAX_C(a)
#elif __cplusplus >= 201103L
#define BOOST_RATIO_UINTMAX_C(a) a##ULL
#else
#define BOOST_RATIO_UINTMAX_C(a) a##UL
#endif

#define BOOST_RATIO_INTMAX_T_MAX (0x7FFFFFFFFFFFFFFELL)


#ifndef BOOST_NO_CXX11_STATIC_ASSERT
#define BOOST_RATIO_STATIC_ASSERT(CND, MSG, TYPES) static_assert(CND,MSG)
#elif defined(BOOST_RATIO_USES_STATIC_ASSERT)
#include <boost/static_assert.hpp>
#define BOOST_RATIO_STATIC_ASSERT(CND, MSG, TYPES) BOOST_STATIC_ASSERT(CND)
#elif defined(BOOST_RATIO_USES_MPL_ASSERT)
#include <boost/mpl/assert.hpp>
#include <boost/mpl/bool.hpp>
#define BOOST_RATIO_STATIC_ASSERT(CND, MSG, TYPES)                                 \
    BOOST_MPL_ASSERT_MSG(boost::mpl::bool_< (CND) >::type::value, MSG, TYPES)
#else
//~ #elif defined(BOOST_RATIO_USES_ARRAY_ASSERT)
#define BOOST_RATIO_CONCAT(A,B) A##B
#define BOOST_RATIO_NAME(A,B) BOOST_RATIO_CONCAT(A,B)
#define BOOST_RATIO_STATIC_ASSERT(CND, MSG, TYPES) static char BOOST_RATIO_NAME(__boost_ratio_test_,__LINE__)[(CND)?1:-1]
//~ #define BOOST_RATIO_STATIC_ASSERT(CND, MSG, TYPES)
#endif

#if !defined(BOOST_NO_CXX11_STATIC_ASSERT) || !defined(BOOST_RATIO_USES_MPL_ASSERT)
#define BOOST_RATIO_OVERFLOW_IN_ADD "overflow in ratio add"
#define BOOST_RATIO_OVERFLOW_IN_SUB "overflow in ratio sub"
#define BOOST_RATIO_OVERFLOW_IN_MUL "overflow in ratio mul"
#define BOOST_RATIO_OVERFLOW_IN_DIV "overflow in ratio div"
#define BOOST_RATIO_NUMERATOR_IS_OUT_OF_RANGE "ratio numerator is out of range"
#define BOOST_RATIO_DIVIDE_BY_0 "ratio divide by 0"
#define BOOST_RATIO_DENOMINATOR_IS_OUT_OF_RANGE "ratio denominator is out of range"
#endif


//#define BOOST_RATIO_EXTENSIONS

#endif  // header

/* config.hpp
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
*/