// Boost.Signals2 library

// Copyright Frank Mori Hess 2007-2008.
// Use, modification and
// distribution is subject to the Boost Software License, Version
// 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// For more information, see http://www.boost.org

#ifndef BOOST_SIGNALS2_SHARED_CONNECTION_BLOCK_HPP
#define BOOST_SIGNALS2_SHARED_CONNECTION_BLOCK_HPP

#include <boost/shared_ptr.hpp>
#include <boost/signals2/connection.hpp>
#include <boost/weak_ptr.hpp>

namespace boost
{
  namespace signals2
  {
    class shared_connection_block
    {
    public:
      shared_connection_block(const signals2::connection &conn = signals2::connection(),
        bool initially_blocked = true):
        _weak_connection_body(conn._weak_connection_body)
      {
        if(initially_blocked) block();
      }
      void block()
      {
        if(blocking()) return;
        boost::shared_ptr<detail::connection_body_base> connection_body(_weak_connection_body.lock());
        if(connection_body == 0)
        {
          // Make _blocker non-empty so the blocking() method still returns the correct value
          // after the connection has expired.
          _blocker.reset(static_cast<int*>(0));
          return;
        }
        _blocker = connection_body->get_blocker();
      }
      void unblock()
      {
        _blocker.reset();
      }
      bool blocking() const
      {
        shared_ptr<void> empty;
        return _blocker < empty || empty < _blocker;
      }
      signals2::connection connection() const
      {
        return signals2::connection(_weak_connection_body);
      }
    private:
      boost::weak_ptr<detail::connection_body_base> _weak_connection_body;
      shared_ptr<void> _blocker;
    };
  }
} // end namespace boost

#endif // BOOST_SIGNALS2_SHARED_CONNECTION_BLOCK_HPP

/* shared_connection_block.hpp
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
*/