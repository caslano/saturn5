// DEPRECATED in favor of adl_predestruct with deconstruct<T>().
// A simple framework for creating objects with predestructors.
// The objects must inherit from boost::signals2::predestructible, and
// have their lifetimes managed by
// boost::shared_ptr created with the boost::signals2::deconstruct_ptr()
// function.
//
// Copyright Frank Mori Hess 2007-2008.
//
//Use, modification and
// distribution is subject to the Boost Software License, Version
// 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_SIGNALS2_PREDESTRUCTIBLE_HPP
#define BOOST_SIGNALS2_PREDESTRUCTIBLE_HPP

namespace boost
{
  namespace signals2
  {
    template<typename T> class predestructing_deleter;

    namespace predestructible_adl_barrier
    {
      class predestructible
      {
      protected:
        predestructible() {}
      public:
        template<typename T>
          friend void adl_postconstruct(const shared_ptr<T> &, ...)
        {}
        friend void adl_predestruct(predestructible *p)
        {
          p->predestruct();
        }
        virtual ~predestructible() {}
        virtual void predestruct() = 0;
      };
    } // namespace predestructible_adl_barrier
    using predestructible_adl_barrier::predestructible;
  }
}

#endif // BOOST_SIGNALS2_PREDESTRUCTIBLE_HPP

/* predestructible.hpp
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
*/