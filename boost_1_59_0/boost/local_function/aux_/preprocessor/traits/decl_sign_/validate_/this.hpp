
// Copyright (C) 2009-2012 Lorenzo Caminiti
// Distributed under the Boost Software License, Version 1.0
// (see accompanying file LICENSE_1_0.txt or a copy at
// http://www.boost.org/LICENSE_1_0.txt)
// Home at http://www.boost.org/libs/local_function

#ifndef BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_HPP_
#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_HPP_

#include <boost/local_function/detail/preprocessor/keyword/this.hpp>
#include <boost/local_function/detail/preprocessor/keyword/const.hpp>
#include <boost/local_function/detail/preprocessor/keyword/bind.hpp>
#include <boost/local_function/detail/preprocessor/keyword/const_bind.hpp>
#include <boost/preprocessor/control/iif.hpp>
#include <boost/preprocessor/tuple/eat.hpp>
#include <boost/preprocessor/facilities/empty.hpp>
#include <boost/preprocessor/list/fold_left.hpp>

// PRIVATE //

#define \
BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_TYPED_EAT_(elem) \
    /* must be in separate macro to delay expansion */ \
    BOOST_PP_TUPLE_EAT(1) elem

#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_TYPED_( \
        elem) \
    BOOST_PP_IIF(BOOST_PP_IS_UNARY(elem), \
        BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_TYPED_EAT_ \
    , \
        BOOST_PP_TUPLE_REM(1) \
    )(elem)

#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_VAR_( \
        s, error, elem) \
    BOOST_PP_IIF(BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_IS_THIS_BACK( \
            BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_TYPED_( \
            BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_BIND_REMOVE_FRONT( \
            BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_CONST_REMOVE_FRONT( \
                    elem)))), \
        ERROR_use_this_underscore_instead_of_this BOOST_PP_EMPTY \
    , \
        error \
    )

#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_( \
        s, error, elem) \
    BOOST_PP_IIF(BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_IS_BIND_FRONT(elem), \
        BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_VAR_ \
    , BOOST_PP_IIF(BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_IS_CONST_BIND_FRONT( \
            elem), \
        BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_VAR_ \
    , \
        error BOOST_PP_TUPLE_EAT(3) \
    ))(s, error, elem)

// PUBLIC //

#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS(sign) \
    BOOST_PP_LIST_FOLD_LEFT( \
            BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_SIGN_VALIDATE_THIS_, \
            BOOST_PP_EMPTY, sign)

#endif // #include guard


/* this.hpp
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
*/