
// Copyright (C) 2009-2012 Lorenzo Caminiti
// Distributed under the Boost Software License, Version 1.0
// (see accompanying file LICENSE_1_0.txt or a copy at
// http://www.boost.org/LICENSE_1_0.txt)
// Home at http://www.boost.org/libs/local_function

#ifndef BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS_HPP_
#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS_HPP_

#include <boost/local_function/aux_/preprocessor/traits/decl_/index.hpp>
#include <boost/local_function/aux_/preprocessor/traits/param.hpp>
#include <boost/local_function/detail/preprocessor/keyword/default.hpp>
#include <boost/preprocessor/tuple/elem.hpp>
#include <boost/preprocessor/tuple/eat.hpp>
#include <boost/preprocessor/tuple/rem.hpp>
#include <boost/preprocessor/arithmetic/inc.hpp>
#include <boost/preprocessor/control/iif.hpp>
#include <boost/preprocessor/logical/compl.hpp>
#include <boost/preprocessor/facilities/is_empty.hpp>
#include <boost/preprocessor/list/adt.hpp>
#include <boost/preprocessor/list/fold_left.hpp>

// PRIVATE //

#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS_DEFAULT_OP_(s, \
        default_count, param_traits) \
    BOOST_PP_IIF(BOOST_PP_IS_EMPTY( \
            BOOST_LOCAL_FUNCTION_AUX_PP_PARAM_TRAITS_DEFAULT(param_traits)), \
        BOOST_PP_TUPLE_REM(1) \
    , \
        BOOST_PP_INC \
    )(default_count)

// Precondition: params is a pp-list which is not nil.
#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS_DEFAULT_COUNT_(params) \
    BOOST_PP_LIST_FOLD_LEFT( \
            BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS_DEFAULT_OP_, \
            0 /* start with defaults_count to 0 */, params)

// PUBLIC //

// Expand: pp-list of param-traits (no bound variables).
#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS(decl_traits) \
    BOOST_PP_TUPLE_ELEM(BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_INDEX_MAX, \
            BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_INDEX_PARAMS, decl_traits)

// Expand: number of parameters with default values (0 if no default).
#define BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS_DEFAULT_COUNT( \
        decl_traits) \
    BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS( \
            BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS(decl_traits)), \
        BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS_DEFAULT_COUNT_ \
    , \
        0 BOOST_PP_TUPLE_EAT(1) \
    )(BOOST_LOCAL_FUNCTION_AUX_PP_DECL_TRAITS_PARAMS(decl_traits))

#endif // #include guard


/* decl_params.hpp
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
*/