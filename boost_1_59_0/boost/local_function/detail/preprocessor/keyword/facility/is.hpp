
// Copyright (C) 2009-2012 Lorenzo Caminiti
// Distributed under the Boost Software License, Version 1.0
// (see accompanying file LICENSE_1_0.txt or a copy at
// http://www.boost.org/LICENSE_1_0.txt)
// Home at http://www.boost.org/libs/local_function

#ifndef BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_HPP_
#define BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_HPP_

// Boost.Preprocessor author P. Mensodines confirmed on an Boost email thread
// (subject ``check if a token is a keyword (was "BOOST_PP_IS_UNARY()")'')
// that it is OK to used `PP_IS_UNARY()` to check if tokens match predefined
// "keyword" as it is done by the macros below (even if `PP_IS_UNARY()` is
// technically only part of Boost.Preprocessor private API).
#include <boost/preprocessor/detail/is_unary.hpp>
#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/control/iif.hpp>
#include <boost/preprocessor/tuple/eat.hpp>

// PRIVATE //

#define BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_(a, b) \
    BOOST_PP_IS_UNARY(BOOST_PP_CAT(a, b))

// PUBLIC //

// `checking_prefix ## tokens` expand to unary (e.g., `(1)`) iff `tokens` start
// with keyword to check.
#define BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_FRONT( \
        tokens, checking_prefix) \
    BOOST_PP_IIF(BOOST_PP_IS_UNARY(tokens), \
        /* on MSVC this check works even if tokens already unary but on */ \
        /* C++03 (including GCC) this check on non-unary tokens gives */ \
        /* a concatenation error -- so return false is tokens is not unary */ \
        0 BOOST_PP_TUPLE_EAT(2) \
    , \
        BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_ \
    )(checking_prefix, tokens)

// `token ## checking_postfix` expand to unary (e.g., `(1)`) iff `token` is the
// keyword to check. This check only works if `token` is a single token, it
// will always expand to 0 if token is multiple tokens (e.g., `const *this`).
// This check will expand to 0 with no error if `token` starts with a
// non-alphanumeric symbol (e.g., `*this`).
#define BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_BACK( \
        token, checking_postfix) \
    BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_(token, checking_postfix)

#endif // #include guard


/* is.hpp
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
*/