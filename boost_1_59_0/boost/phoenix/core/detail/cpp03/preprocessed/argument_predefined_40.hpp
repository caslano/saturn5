/*==============================================================================
    Copyright (c) 2001-2010 Joel de Guzman
    Copyright (c) 2010-2011 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
    
    namespace placeholders
    {
        typedef expression::argument<1>::type arg1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type arg2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type arg3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type arg4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type arg5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type arg6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type arg7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type arg8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type arg9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type arg10_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<11>::type arg11_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<12>::type arg12_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<13>::type arg13_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<14>::type arg14_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<15>::type arg15_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<16>::type arg16_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<17>::type arg17_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<18>::type arg18_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<19>::type arg19_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<20>::type arg20_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<21>::type arg21_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<22>::type arg22_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<23>::type arg23_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<24>::type arg24_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<25>::type arg25_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<26>::type arg26_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<27>::type arg27_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<28>::type arg28_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<29>::type arg29_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<30>::type arg30_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<31>::type arg31_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<32>::type arg32_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<33>::type arg33_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<34>::type arg34_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<35>::type arg35_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<36>::type arg36_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<37>::type arg37_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<38>::type arg38_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<39>::type arg39_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<40>::type arg40_type BOOST_ATTRIBUTE_UNUSED;
        typedef expression::argument<1>::type _1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type _2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type _3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type _4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type _5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type _6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type _7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type _8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type _9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type _10_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<11>::type _11_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<12>::type _12_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<13>::type _13_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<14>::type _14_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<15>::type _15_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<16>::type _16_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<17>::type _17_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<18>::type _18_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<19>::type _19_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<20>::type _20_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<21>::type _21_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<22>::type _22_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<23>::type _23_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<24>::type _24_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<25>::type _25_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<26>::type _26_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<27>::type _27_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<28>::type _28_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<29>::type _29_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<30>::type _30_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<31>::type _31_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<32>::type _32_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<33>::type _33_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<34>::type _34_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<35>::type _35_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<36>::type _36_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<37>::type _37_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<38>::type _38_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<39>::type _39_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<40>::type _40_type BOOST_ATTRIBUTE_UNUSED;
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED arg1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED arg2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED arg3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED arg4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED arg5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED arg6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED arg7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED arg8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED arg9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED arg10 = {{{}}}; expression::argument<11>::type const BOOST_ATTRIBUTE_UNUSED arg11 = {{{}}}; expression::argument<12>::type const BOOST_ATTRIBUTE_UNUSED arg12 = {{{}}}; expression::argument<13>::type const BOOST_ATTRIBUTE_UNUSED arg13 = {{{}}}; expression::argument<14>::type const BOOST_ATTRIBUTE_UNUSED arg14 = {{{}}}; expression::argument<15>::type const BOOST_ATTRIBUTE_UNUSED arg15 = {{{}}}; expression::argument<16>::type const BOOST_ATTRIBUTE_UNUSED arg16 = {{{}}}; expression::argument<17>::type const BOOST_ATTRIBUTE_UNUSED arg17 = {{{}}}; expression::argument<18>::type const BOOST_ATTRIBUTE_UNUSED arg18 = {{{}}}; expression::argument<19>::type const BOOST_ATTRIBUTE_UNUSED arg19 = {{{}}}; expression::argument<20>::type const BOOST_ATTRIBUTE_UNUSED arg20 = {{{}}}; expression::argument<21>::type const BOOST_ATTRIBUTE_UNUSED arg21 = {{{}}}; expression::argument<22>::type const BOOST_ATTRIBUTE_UNUSED arg22 = {{{}}}; expression::argument<23>::type const BOOST_ATTRIBUTE_UNUSED arg23 = {{{}}}; expression::argument<24>::type const BOOST_ATTRIBUTE_UNUSED arg24 = {{{}}}; expression::argument<25>::type const BOOST_ATTRIBUTE_UNUSED arg25 = {{{}}}; expression::argument<26>::type const BOOST_ATTRIBUTE_UNUSED arg26 = {{{}}}; expression::argument<27>::type const BOOST_ATTRIBUTE_UNUSED arg27 = {{{}}}; expression::argument<28>::type const BOOST_ATTRIBUTE_UNUSED arg28 = {{{}}}; expression::argument<29>::type const BOOST_ATTRIBUTE_UNUSED arg29 = {{{}}}; expression::argument<30>::type const BOOST_ATTRIBUTE_UNUSED arg30 = {{{}}}; expression::argument<31>::type const BOOST_ATTRIBUTE_UNUSED arg31 = {{{}}}; expression::argument<32>::type const BOOST_ATTRIBUTE_UNUSED arg32 = {{{}}}; expression::argument<33>::type const BOOST_ATTRIBUTE_UNUSED arg33 = {{{}}}; expression::argument<34>::type const BOOST_ATTRIBUTE_UNUSED arg34 = {{{}}}; expression::argument<35>::type const BOOST_ATTRIBUTE_UNUSED arg35 = {{{}}}; expression::argument<36>::type const BOOST_ATTRIBUTE_UNUSED arg36 = {{{}}}; expression::argument<37>::type const BOOST_ATTRIBUTE_UNUSED arg37 = {{{}}}; expression::argument<38>::type const BOOST_ATTRIBUTE_UNUSED arg38 = {{{}}}; expression::argument<39>::type const BOOST_ATTRIBUTE_UNUSED arg39 = {{{}}}; expression::argument<40>::type const BOOST_ATTRIBUTE_UNUSED arg40 = {{{}}};
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED _1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED _2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED _3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED _4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED _5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED _6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED _7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED _8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED _9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED _10 = {{{}}}; expression::argument<11>::type const BOOST_ATTRIBUTE_UNUSED _11 = {{{}}}; expression::argument<12>::type const BOOST_ATTRIBUTE_UNUSED _12 = {{{}}}; expression::argument<13>::type const BOOST_ATTRIBUTE_UNUSED _13 = {{{}}}; expression::argument<14>::type const BOOST_ATTRIBUTE_UNUSED _14 = {{{}}}; expression::argument<15>::type const BOOST_ATTRIBUTE_UNUSED _15 = {{{}}}; expression::argument<16>::type const BOOST_ATTRIBUTE_UNUSED _16 = {{{}}}; expression::argument<17>::type const BOOST_ATTRIBUTE_UNUSED _17 = {{{}}}; expression::argument<18>::type const BOOST_ATTRIBUTE_UNUSED _18 = {{{}}}; expression::argument<19>::type const BOOST_ATTRIBUTE_UNUSED _19 = {{{}}}; expression::argument<20>::type const BOOST_ATTRIBUTE_UNUSED _20 = {{{}}}; expression::argument<21>::type const BOOST_ATTRIBUTE_UNUSED _21 = {{{}}}; expression::argument<22>::type const BOOST_ATTRIBUTE_UNUSED _22 = {{{}}}; expression::argument<23>::type const BOOST_ATTRIBUTE_UNUSED _23 = {{{}}}; expression::argument<24>::type const BOOST_ATTRIBUTE_UNUSED _24 = {{{}}}; expression::argument<25>::type const BOOST_ATTRIBUTE_UNUSED _25 = {{{}}}; expression::argument<26>::type const BOOST_ATTRIBUTE_UNUSED _26 = {{{}}}; expression::argument<27>::type const BOOST_ATTRIBUTE_UNUSED _27 = {{{}}}; expression::argument<28>::type const BOOST_ATTRIBUTE_UNUSED _28 = {{{}}}; expression::argument<29>::type const BOOST_ATTRIBUTE_UNUSED _29 = {{{}}}; expression::argument<30>::type const BOOST_ATTRIBUTE_UNUSED _30 = {{{}}}; expression::argument<31>::type const BOOST_ATTRIBUTE_UNUSED _31 = {{{}}}; expression::argument<32>::type const BOOST_ATTRIBUTE_UNUSED _32 = {{{}}}; expression::argument<33>::type const BOOST_ATTRIBUTE_UNUSED _33 = {{{}}}; expression::argument<34>::type const BOOST_ATTRIBUTE_UNUSED _34 = {{{}}}; expression::argument<35>::type const BOOST_ATTRIBUTE_UNUSED _35 = {{{}}}; expression::argument<36>::type const BOOST_ATTRIBUTE_UNUSED _36 = {{{}}}; expression::argument<37>::type const BOOST_ATTRIBUTE_UNUSED _37 = {{{}}}; expression::argument<38>::type const BOOST_ATTRIBUTE_UNUSED _38 = {{{}}}; expression::argument<39>::type const BOOST_ATTRIBUTE_UNUSED _39 = {{{}}}; expression::argument<40>::type const BOOST_ATTRIBUTE_UNUSED _40 = {{{}}};
    }
    namespace arg_names
    {
        typedef expression::argument<1>::type arg1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type arg2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type arg3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type arg4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type arg5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type arg6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type arg7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type arg8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type arg9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type arg10_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<11>::type arg11_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<12>::type arg12_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<13>::type arg13_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<14>::type arg14_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<15>::type arg15_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<16>::type arg16_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<17>::type arg17_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<18>::type arg18_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<19>::type arg19_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<20>::type arg20_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<21>::type arg21_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<22>::type arg22_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<23>::type arg23_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<24>::type arg24_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<25>::type arg25_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<26>::type arg26_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<27>::type arg27_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<28>::type arg28_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<29>::type arg29_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<30>::type arg30_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<31>::type arg31_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<32>::type arg32_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<33>::type arg33_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<34>::type arg34_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<35>::type arg35_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<36>::type arg36_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<37>::type arg37_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<38>::type arg38_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<39>::type arg39_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<40>::type arg40_type BOOST_ATTRIBUTE_UNUSED;
        typedef expression::argument<1>::type _1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type _2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type _3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type _4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type _5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type _6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type _7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type _8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type _9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type _10_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<11>::type _11_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<12>::type _12_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<13>::type _13_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<14>::type _14_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<15>::type _15_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<16>::type _16_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<17>::type _17_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<18>::type _18_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<19>::type _19_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<20>::type _20_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<21>::type _21_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<22>::type _22_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<23>::type _23_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<24>::type _24_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<25>::type _25_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<26>::type _26_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<27>::type _27_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<28>::type _28_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<29>::type _29_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<30>::type _30_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<31>::type _31_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<32>::type _32_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<33>::type _33_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<34>::type _34_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<35>::type _35_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<36>::type _36_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<37>::type _37_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<38>::type _38_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<39>::type _39_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<40>::type _40_type BOOST_ATTRIBUTE_UNUSED;
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED arg1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED arg2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED arg3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED arg4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED arg5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED arg6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED arg7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED arg8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED arg9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED arg10 = {{{}}}; expression::argument<11>::type const BOOST_ATTRIBUTE_UNUSED arg11 = {{{}}}; expression::argument<12>::type const BOOST_ATTRIBUTE_UNUSED arg12 = {{{}}}; expression::argument<13>::type const BOOST_ATTRIBUTE_UNUSED arg13 = {{{}}}; expression::argument<14>::type const BOOST_ATTRIBUTE_UNUSED arg14 = {{{}}}; expression::argument<15>::type const BOOST_ATTRIBUTE_UNUSED arg15 = {{{}}}; expression::argument<16>::type const BOOST_ATTRIBUTE_UNUSED arg16 = {{{}}}; expression::argument<17>::type const BOOST_ATTRIBUTE_UNUSED arg17 = {{{}}}; expression::argument<18>::type const BOOST_ATTRIBUTE_UNUSED arg18 = {{{}}}; expression::argument<19>::type const BOOST_ATTRIBUTE_UNUSED arg19 = {{{}}}; expression::argument<20>::type const BOOST_ATTRIBUTE_UNUSED arg20 = {{{}}}; expression::argument<21>::type const BOOST_ATTRIBUTE_UNUSED arg21 = {{{}}}; expression::argument<22>::type const BOOST_ATTRIBUTE_UNUSED arg22 = {{{}}}; expression::argument<23>::type const BOOST_ATTRIBUTE_UNUSED arg23 = {{{}}}; expression::argument<24>::type const BOOST_ATTRIBUTE_UNUSED arg24 = {{{}}}; expression::argument<25>::type const BOOST_ATTRIBUTE_UNUSED arg25 = {{{}}}; expression::argument<26>::type const BOOST_ATTRIBUTE_UNUSED arg26 = {{{}}}; expression::argument<27>::type const BOOST_ATTRIBUTE_UNUSED arg27 = {{{}}}; expression::argument<28>::type const BOOST_ATTRIBUTE_UNUSED arg28 = {{{}}}; expression::argument<29>::type const BOOST_ATTRIBUTE_UNUSED arg29 = {{{}}}; expression::argument<30>::type const BOOST_ATTRIBUTE_UNUSED arg30 = {{{}}}; expression::argument<31>::type const BOOST_ATTRIBUTE_UNUSED arg31 = {{{}}}; expression::argument<32>::type const BOOST_ATTRIBUTE_UNUSED arg32 = {{{}}}; expression::argument<33>::type const BOOST_ATTRIBUTE_UNUSED arg33 = {{{}}}; expression::argument<34>::type const BOOST_ATTRIBUTE_UNUSED arg34 = {{{}}}; expression::argument<35>::type const BOOST_ATTRIBUTE_UNUSED arg35 = {{{}}}; expression::argument<36>::type const BOOST_ATTRIBUTE_UNUSED arg36 = {{{}}}; expression::argument<37>::type const BOOST_ATTRIBUTE_UNUSED arg37 = {{{}}}; expression::argument<38>::type const BOOST_ATTRIBUTE_UNUSED arg38 = {{{}}}; expression::argument<39>::type const BOOST_ATTRIBUTE_UNUSED arg39 = {{{}}}; expression::argument<40>::type const BOOST_ATTRIBUTE_UNUSED arg40 = {{{}}};
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED _1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED _2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED _3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED _4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED _5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED _6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED _7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED _8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED _9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED _10 = {{{}}}; expression::argument<11>::type const BOOST_ATTRIBUTE_UNUSED _11 = {{{}}}; expression::argument<12>::type const BOOST_ATTRIBUTE_UNUSED _12 = {{{}}}; expression::argument<13>::type const BOOST_ATTRIBUTE_UNUSED _13 = {{{}}}; expression::argument<14>::type const BOOST_ATTRIBUTE_UNUSED _14 = {{{}}}; expression::argument<15>::type const BOOST_ATTRIBUTE_UNUSED _15 = {{{}}}; expression::argument<16>::type const BOOST_ATTRIBUTE_UNUSED _16 = {{{}}}; expression::argument<17>::type const BOOST_ATTRIBUTE_UNUSED _17 = {{{}}}; expression::argument<18>::type const BOOST_ATTRIBUTE_UNUSED _18 = {{{}}}; expression::argument<19>::type const BOOST_ATTRIBUTE_UNUSED _19 = {{{}}}; expression::argument<20>::type const BOOST_ATTRIBUTE_UNUSED _20 = {{{}}}; expression::argument<21>::type const BOOST_ATTRIBUTE_UNUSED _21 = {{{}}}; expression::argument<22>::type const BOOST_ATTRIBUTE_UNUSED _22 = {{{}}}; expression::argument<23>::type const BOOST_ATTRIBUTE_UNUSED _23 = {{{}}}; expression::argument<24>::type const BOOST_ATTRIBUTE_UNUSED _24 = {{{}}}; expression::argument<25>::type const BOOST_ATTRIBUTE_UNUSED _25 = {{{}}}; expression::argument<26>::type const BOOST_ATTRIBUTE_UNUSED _26 = {{{}}}; expression::argument<27>::type const BOOST_ATTRIBUTE_UNUSED _27 = {{{}}}; expression::argument<28>::type const BOOST_ATTRIBUTE_UNUSED _28 = {{{}}}; expression::argument<29>::type const BOOST_ATTRIBUTE_UNUSED _29 = {{{}}}; expression::argument<30>::type const BOOST_ATTRIBUTE_UNUSED _30 = {{{}}}; expression::argument<31>::type const BOOST_ATTRIBUTE_UNUSED _31 = {{{}}}; expression::argument<32>::type const BOOST_ATTRIBUTE_UNUSED _32 = {{{}}}; expression::argument<33>::type const BOOST_ATTRIBUTE_UNUSED _33 = {{{}}}; expression::argument<34>::type const BOOST_ATTRIBUTE_UNUSED _34 = {{{}}}; expression::argument<35>::type const BOOST_ATTRIBUTE_UNUSED _35 = {{{}}}; expression::argument<36>::type const BOOST_ATTRIBUTE_UNUSED _36 = {{{}}}; expression::argument<37>::type const BOOST_ATTRIBUTE_UNUSED _37 = {{{}}}; expression::argument<38>::type const BOOST_ATTRIBUTE_UNUSED _38 = {{{}}}; expression::argument<39>::type const BOOST_ATTRIBUTE_UNUSED _39 = {{{}}}; expression::argument<40>::type const BOOST_ATTRIBUTE_UNUSED _40 = {{{}}};
    }

/* argument_predefined_40.hpp
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
*/