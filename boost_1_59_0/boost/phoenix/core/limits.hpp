/*=============================================================================
    Copyright (c) 2001-2007 Joel de Guzman

    Distributed under the Boost Software License, Version 1.0. (See accompanying 
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#ifndef BOOST_PHOENIX_CORE_LIMITS_HPP
#define BOOST_PHOENIX_CORE_LIMITS_HPP

#include <boost/config.hpp>
#include <boost/detail/workaround.hpp>
#include <boost/preprocessor/arithmetic/add.hpp>
#include <boost/preprocessor/inc.hpp>
#include <boost/preprocessor/dec.hpp>
#include <boost/preprocessor/stringize.hpp>
#include <boost/phoenix/version.hpp>
#include <boost/phoenix/support/preprocessor/round.hpp>


#if defined(BOOST_PHOENIX_LIMIT)
# if !defined( BOOST_PROTO_MAX_ARITY )
#  define BOOST_PROTO_MAX_ARITY BOOST_PHOENIX_LIMIT
# elif (BOOST_PROTO_MAX_ARITY < BOOST_PHOENIX_LIMIT)
#  error "BOOST_PROTO_MAX_ARITY is set too low"
# endif
#include <boost/proto/proto_fwd.hpp>
#else
#include <boost/proto/proto_fwd.hpp>
#define BOOST_PHOENIX_LIMIT BOOST_PROTO_MAX_ARITY
#endif

#if !defined(PHOENIX_LIMIT)
#define PHOENIX_LIMIT BOOST_PHOENIX_LIMIT
#endif

#define BOOST_PHOENIX_LIMIT_STR BOOST_PP_STRINGIZE(BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT))

#ifdef BOOST_NO_CXX11_VARIADIC_TEMPLATES
# define BOOST_PHOENIX_NO_VARIADIC_ACTOR
# define BOOST_PHOENIX_NO_VARIADIC_CALL
# define BOOST_PHOENIX_NO_VARIADIC_FUNCTION_EQUAL
# define BOOST_PHOENIX_NO_VARIADIC_FUNCTION_EVAL
# define BOOST_PHOENIX_NO_VARIADIC_EXPRESSION
# define BOOST_PHOENIX_NO_VARIADIC_BIND
# define BOOST_PHOENIX_NO_VARIADIC_SCOPE
#endif
#ifdef BOOST_NO_CXX11_RVALUE_REFERENCES
# define BOOST_PHOENIX_NO_VARIADIC_ACTOR
# define BOOST_PHOENIX_NO_VARIADIC_FUNCTION_EVAL
#endif

#if BOOST_WORKAROUND(BOOST_MSVC, == 1800)
// FIXME: temporary disable on MSVC 2013.
# define BOOST_PHOENIX_NO_VARIADIC_SCOPE
#endif

#ifdef BOOST_NO_CXX11_FIXED_LENGTH_VARIADIC_TEMPLATE_EXPANSION_PACKS
// FIXME: Due to proto, some compilers cannot expand parameter pack.
# define BOOST_PHOENIX_NO_VARIADIC_ACTOR
# define BOOST_PHOENIX_NO_VARIADIC_CALL
# define BOOST_PHOENIX_NO_VARIADIC_FUNCTION_EVAL
# define BOOST_PHOENIX_NO_VARIADIC_EXPRESSION
# define BOOST_PHOENIX_NO_VARIADIC_BIND
# define BOOST_PHOENIX_NO_VARIADIC_SCOPE
#endif

# define BOOST_PHOENIX_NO_VARIADIC_OBJECT
# define BOOST_PHOENIX_NO_VARIADIC_OPERATOR
# define BOOST_PHOENIX_NO_VARIADIC_FUNCTION

#if !defined(BOOST_PHOENIX_ARG_LIMIT)
# define BOOST_PHOENIX_ARG_LIMIT BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT)
#elif (BOOST_PHOENIX_ARG_LIMIT < 5)
# error "BOOST_PHOENIX_ARG_LIMIT is set too low"
#elif BOOST_PHOENIX_ARG_LIMIT != BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT) && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#if !defined(BOOST_PHOENIX_ACTOR_LIMIT)
# define BOOST_PHOENIX_ACTOR_LIMIT BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT)
#elif (BOOST_PHOENIX_ACTOR_LIMIT > BOOST_PHOENIX_ARG_LIMIT)
# error "BOOST_PHOENIX_ACTOR_LIMIT > BOOST_PHOENIX_ARG_LIMIT"
#elif (BOOST_PHOENIX_ACTOR_LIMIT < 3)
# error "BOOST_PHOENIX_ACTOR_LIMIT is set too low"
#elif BOOST_PHOENIX_ACTOR_LIMIT != BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT) && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#if !defined(BOOST_PHOENIX_PERFECT_FORWARD_LIMIT)
# define BOOST_PHOENIX_PERFECT_FORWARD_LIMIT 3
#elif (BOOST_PHOENIX_PERFECT_FORWARD_LIMIT > BOOST_PHOENIX_ACTOR_LIMIT)
# error "BOOST_PHOENIX_PERFECT_FORWARD_LIMIT > BOOST_PHOENIX_ACTOR_LIMIT"
#elif (BOOST_PHOENIX_PERFECT_FORWARD_LIMIT < 3)
# error "BOOST_PHOENIX_PERFECT_FORWARD_LIMIT is set too low"
#elif BOOST_PHOENIX_PERFECT_FORWARD_LIMIT != 3 && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#if !defined(BOOST_PHOENIX_COMPOSITE_LIMIT)
# define BOOST_PHOENIX_COMPOSITE_LIMIT BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT)
#elif (BOOST_PHOENIX_COMPOSITE_LIMIT < 5)
# error "BOOST_PHOENIX_COMPOSITE_LIMIT is set too low"
#elif BOOST_PHOENIX_COMPOSITE_LIMIT != BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT) && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#if !defined(BOOST_PHOENIX_MEMBER_LIMIT)
# define BOOST_PHOENIX_MEMBER_LIMIT BOOST_PP_DEC(BOOST_PHOENIX_COMPOSITE_LIMIT)
#elif (BOOST_PHOENIX_MEMBER_LIMIT > BOOST_PHOENIX_COMPOSITE_LIMIT)
# error "BOOST_PHOENIX_MEMBER_LIMIT > BOOST_PHOENIX_COMPOSITE_LIMIT"
#elif (BOOST_PHOENIX_MEMBER_LIMIT < 3)
# error "BOOST_PHOENIX_MEMBER_LIMIT is set too low"
#elif BOOST_PHOENIX_MEMBER_LIMIT != BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT) && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#if !defined(BOOST_PHOENIX_CATCH_LIMIT)
# define BOOST_PHOENIX_CATCH_LIMIT BOOST_PHOENIX_COMPOSITE_LIMIT
#elif (BOOST_PHOENIX_CATCH_LIMIT < 1)
# error "BOOST_PHOENIX_CATCH_LIMIT is set too low"
#elif BOOST_PHOENIX_CATCH_LIMIT != BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT) && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#if !defined(BOOST_PHOENIX_DYNAMIC_LIMIT)
# define BOOST_PHOENIX_DYNAMIC_LIMIT BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT)
#elif (BOOST_PHOENIX_DYNAMIC_LIMIT < 1)
# error "BOOST_PHOENIX_DYNAMIC_LIMIT is set too low"
#elif BOOST_PHOENIX_DYNAMIC_LIMIT != BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT) && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#if !defined(BOOST_PHOENIX_LOCAL_LIMIT)
# define BOOST_PHOENIX_LOCAL_LIMIT BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT)
#elif (BOOST_PHOENIX_LOCAL_LIMIT < 3)
# error "BOOST_PHOENIX_LOCAL_LIMIT is set too low"
#elif BOOST_PHOENIX_LOCAL_LIMIT != BOOST_PHOENIX_PP_ROUND_UP(BOOST_PHOENIX_LIMIT) && !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
# define BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES
#endif

#endif

/* limits.hpp
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
*/