
#if !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
#ifndef BOOST_PHOENIX_STATEMENT_DETAIL_TRY_CATCH_EXPRESSION_HPP
#define BOOST_PHOENIX_STATEMENT_DETAIL_TRY_CATCH_EXPRESSION_HPP

#include <boost/phoenix/support/iterate.hpp>

#include <boost/phoenix/statement/detail/preprocessed/try_catch_expression.hpp>

#endif
#else

#if !BOOST_PHOENIX_IS_ITERATING

#ifndef BOOST_PHOENIX_STATEMENT_DETAIL_TRY_CATCH_EXPRESSION_HPP
#define BOOST_PHOENIX_STATEMENT_DETAIL_TRY_CATCH_EXPRESSION_HPP

#include <boost/phoenix/support/iterate.hpp>

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(preserve: 2, line: 0, output: "preprocessed/try_catch_expression_" BOOST_PHOENIX_LIMIT_STR ".hpp")
#endif

/*==============================================================================
    Copyright (c) 2005-2010 Joel de Guzman
    Copyright (c) 2010 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(preserve: 1)
#endif

#define BOOST_PHOENIX_ITERATION_PARAMS                                          \
    (3, (0, BOOST_PHOENIX_CATCH_LIMIT,                                          \
    <boost/phoenix/statement/detail/try_catch_expression.hpp>))
#include BOOST_PHOENIX_ITERATE()

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(output: null)
#endif

#endif

#else

        template <
            typename Try
            BOOST_PP_COMMA_IF(BOOST_PHOENIX_ITERATION)
            BOOST_PHOENIX_typename_A
        >
        struct try_catch<
            Try
            BOOST_PP_COMMA_IF(BOOST_PHOENIX_ITERATION)
            BOOST_PHOENIX_A
        >
            : expr_ext<
                try_catch_actor
              , tag::try_catch
              , Try
              BOOST_PP_COMMA_IF(BOOST_PHOENIX_ITERATION) BOOST_PHOENIX_A
            >
        {};
    /**/

#endif

#endif // BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES

/* try_catch_expression.hpp
XOEEfiXftFmP79D67bQ76v7vEEthkRUnTF0JlQL8uFD4WoxMm+kXUjxfFn8tahyE/u9HjByYTdaZOO4/PaFVlRWKzgXUCotImLZ0bY9HvVPN+u2Bq9AZlvOLi7O2UhCI3akqBvkG6zIq2/qZ75ymvNetGl7M/SNxpyjQFtgX4vGgmipIRM32yquuIGToy2v8mvNl21Rw4MWhJevTnG2gHOdysFCP9vraAvohWA5LgjLzIZ5A2hd15dm4CIwm2X4yMKSM6UbdHQLdnEfl9YWhLJcJHj88JDbsuokkzNyC/3lcFRsOdbFlnCV97vVO4LVzeYZFUUkp+Ie6eigIUnQUW+HKy28Epe/fvmG68g+YxFD8VM43DL0HtheRmhDBoi3jhWz18a9iimAVs3kfrCy3OrmHz858L1G5Iab6JVB9xvyaOoSnWnnVj4rKsjP20ZCy0VDuR4AANiKwE32NlxR7hj//RhAoaQQdYk8QpuS+Xjbqgn3Ep2WpJGPcyLYL9Kdw/8DzZCEI5NvbXs1GJx+dGvSbeHqGTCt1PoRuu5oLCvaSdnZ2rviO2mp2Z6xyRPzDWL+9/qJampdrN/juH4PxU+VE7pM1qEfTSLLyJ+15Kf2gKN+QrRTTUN80fX/nTWvV0XXpJ8u2gsSoKaQsvt4B/IhAM36tcZbxNXvDQyYag/H5DTyS+GrWMehRBTEJhBYhxBvS5MM2VA/KjR7VtA8hcrwevcRwt7hktJshp2BJ2xZSuHB879X6fv2EjlDeIxdn54Ltwp5dklWz/eHYcA4ODpgONiG/d7yhMXttoXzCSRmPEuE3jknCN1SmN3H0OA7vX3fv2/A61WGe40oCvrCFabdcb6JylVAsxFvilofieLKavf7lfiFLwW6hLl2+1qiGgv4B/kJd0RspYEbMkaRPadfPQjl/tl1+tlvKoVV8CukgIJ7t1q+ALqnPVl9ywlgZaKdOW744HOa+uF4E2ad0SfaY8K41USIb3nkGgafukDl/Dc8egGAKExPT5jOHbHUqrUoO1vFj7MR1enHEL0bzwWpNKf6HbXr73xGux0hG/R/Vf+WvC4S5ErxnW2N/j+ZzVJN905Bt28kkCAdbXLUX/muvF642U+oeG8QojISRkjr/8ncVBl2tSNKUk4IhKCggSjY8vL9Q2DtxOzNgntQgKuKHhqiGRsSWpHqWQ/eY/HKGIrucH3A79U1WcdKKxpxzomNZJ1yk9erSd1q4I6vB/021E1PGiWkN4Sld9maJTMcw5o0n82ZJRGRAy8hHnr8Gucnau0y5pE3FUOwzBuWmOnre04AoelnKOwGln1rBqZ7/G6kB6/BFNZ2rxlrCtp7Kux4lzyCeNYaE7HZ63PC/c6h2vmZjUi0jI/9+zEu7b/QMDO19Tmw9FVag9biBhV9Ym/cyqgBkMUhQrMnByPiU5lH50IwXjlUnG85Qfvx1t/qHFm32oiylVgSrO9GcXKUcahbP/wVlUjTIlVy4dS6oBvxA3cR6vRPMokFVFSroBzOO6VZ2Ip5TJtOZrEhqGDuJJtQHEtLEDFSxT5nzjpKwrCJe08LUKO0OTn45ootYDyGrMB9NuvCLsH+8cXZxMRcxNTqTuo3uOfDgq37zE9hSjYFXYCai6NFtf0R+7pK4CcF/ce8YSdpUEa0GY83bZJQp6ERhrjGWV0kbhJG8NGV+FfpD0EZ8udzg2FCDDPR7Q+5+ObLxcb7CuGn9ewCAQUQ9S6o8U1PsgA2te+Ul6MJJz7dBv6iKXhgpvB6bcu4Dnfxz6S0vsONVrw++H8AZ3VccE1kNkdgAoc+A4I7NgTmuwOBcAI3spzF1POFZp0zTAjI1fMtSeMU2YQJBrBjdCZjuDoHXlgMB4QBk5qksYbxKtJhAYjPN0c/34n4bSjyKG9HbdLfW6myo7F4kgRcuW4Mdwd/6NfJzfRRxYSBR1vdAGl/VIeIeTWLPF/mGZGvmrdjMlYc3uZtDRqaNWpl4S+7m0z2qXDHhrAtNaSSapOBuuwswu7z8qXK57VNeUlKSYCpAAifccaB9El5V1YY4F5dZm7tHihrslGD3U+r80lrWJS1WMZLGuShjNPWmG/iD87BKwvIP16uuj1MF419bE27hbnIZIxA650KG8N/2cB9+YkmvKvHKK4JBODzy/o3/prgmBYbGcSOfpHkaU3QKCvthmWGWeXN+R/b/cnnWrRL1y7qTaHQyeI2J+bZi5FjdJxzEcBJIQSLzCPAkIlmabuYmG/aFq3Qb6Z0ThfHTsyDzbqGZN8DN6/VHOEjUPbg6SWDWlnOKEp4C/swS6Sb1vfhs/IvpFP++Gl+TurOfuXTMlxwM60X3g8LjRxapfHt1Y+4TLE9UcJUcaA3B453bbDWP05kniarkumEWx/Pn7ACg1qzFASzfhk5EqUhG+j3HZuCG1/H9umx5aS7Kk9VGu1IjLDuQ4b15Rmpye2j0XjtOfI1hcbBKynRYrwh3WW2yG0pphLug2IywyhJwe+f7tc0T7Ixz+XSkLiDtb4l0I+FR+NXutotKBG5W1yR+mEgg6U1oNHEt4WJJdKXtLxRBmn+Jy8vtIaX/IYeyMKna2MwM6hFB2TnqdZeMz/T1gPuNOG7SF6JfzT9gALElAw6gH7exrqM8usEU9epLN4RW37gLY/c6G8yPeClb8tqKaYBS3r4iLNmCkvXoQWdFrO2nW3MMQJVOgfyuRXRaZ+LRmmbatzZU4Z8VajmY7NcGR7mHwmxsc6880zYEMp+BtCvhGpvqj2XLLuWEOmrbq83yyIDtDBh/G4NBfkIKhXaS0PyrAgY/QoKGSfrtpkGdNuTpldU5vNWCrn6UrqpPrI22eW+RgDh5rb2tP64RHGsCtLcPRI7PeTBmzdKovvGgbJ+/20B6LeVVJGVZWccDgnRgajhp3MDhRGoCLu0Azgf+ql0lCthXOsIFGMIkoo4VdiVqHkR9Om/nKDgBqwTj3rp5HuzCVXQmn+1Y3Q9dVUxixX+qzBZHiLivn4Bz+jXzIaNV0rnkGdY/FSQhIwOSm3H0m3LCw8THt54CjEbpFsS3Y36eLjHSyUaHnei6pRHOBIIDlSIe1gO/pVPXD1SpinHndXyirY8bjHV37Cimhyx30CqTPEja/aWNShZMID6Mgz7yLmNVwn82OMo+FGZist335+sBNPb0gFEKThT+wkkRT8lsXejlZH65c4uu3XJE6SRWTMC3UHhv35fsRjp1iQCbwjkl6Upsk+9+Hs4vBvNinEWSRVIHZTcL3+v5PM4uLi6+pBwoIzWNPF1sWEre3baZEPmdCu+vJwmuZlqTA7WifcwVbr2y6WGT8rjvyP5xdKkmXobuYbEeDAMo6fXFTblTD45veyHtIBbQpyI/n+2AfgIK6/Juo9OrAWWtqKchR2Mz+b1M4F2XUAG9G4jWh6OQQGwVvDcoQaeYtKddgMV3IywrwIR9ecJnYPT9GmUC5wr0FQbmRGSoLU/84sR84i8zVe49VDz02UQuQfid5Sn6hcmXt9g7tBO74Hs8o6KhZ7H6ma9zcHakr0aPKmenp8qCEmmBu0i4LFkqdUsGjxU6Rne8gqeGTdEGzPBuLQHln7Z4LASoG8yMEaCrSx9Mt/OVe0CNYLDX7sDi0hKXgIDAm6eRtJrRZ+QVB9W2F1j4+3dVEP6I9Ld0frfTcxfQtFsdE+PlhdemgdIkwM6u6h0/6W1EKPjPnz+laptbowCu85GPxQ+pTkPZ3M87y6NTQcaZiYFwVC0be/vqg7TkC/67irKhaecZ5z0QiOcKdfQt3mQak1YZ6xqv1mEkdl/3lqMF3OcF3iUZ/MrIyCh0W/ptkOMZ5MEq6J8jMpMLmnG49qnRCNKW3T0Ti/qBuI2KffGiUdnoKFM5C3Hu+KMSnhxbgU12CAPl/WzbBDki34QtEhdLirq7AnvOyNWkbLUnjy44n06ZbVZhyPBk11Dtp0SlJpvsXPQhjyGajW5n0fFQLinDZ2VUAa6/YSLhQdX96Awyxhsu7OvnkyHGWz5FG6K7hqR709A6fpQ41bZJHbJUIrJTJ6xvT9lcqQm4qmAwVIPJ3MkyLyc+SntfnMkYMhytzZtPLzcKPNvf1fcG2fDl63duN3C+sJFvmqxRbx4zSQ7FZcV9aQLTE8QUr9GswpQ+13z9FY+PjzG58JBOb4+aR/7gcEaFj5SJMbirq2sLTyQhISHg4MBsmOJRjgoj3HggjD7ap/Md67av8X1tfv5H9PEnrikZ1qrLsL7LtIK+/mZ4OArxbV5algsp39MDq7yKStVfEaUcQa/73YFwQJrhcJDhsXB89zYJeapBH5IpFCYmJpjmj/wHFycnFp4sDCm4SheRiUfiy5cv/XypKXWYK8COLxyFbZ4eQ5Ip5tI760v25CKageAj/bOioqIZr1gra+spjdMZFW8p/bceWlLBJ9aNtbWq6cnJ94w6jSxTtJ1mTGmH7jBmBele3Tc3T7x/eeQKYRsr3rPb29wBehZ+6urqPWTb6lrV+uXkt2zPHnsSs3+SaZQIIONyCT4MvkvbyPx9jTM37SkejzyekP6PzOTNc5Q7NmwljK1MYC+SsAt3dm2NLUDAQtHY2/s1lT2dyQbSJse0kNDf3iTNO2gli5URSwIVj644/M6OHgxtl0lQbbrUEjLiZJhMfxuUki95YZhcDO9GuMIW2NGYbBWQj35z6q2ywXXaFW8JSD588tpyUXZwdHRMLC8/QSz223xNuLq5salyy9lIletxGB0bewnr8T8cNw9pzej7AXJ7tlcTq9/Hwnqe6q8LsB41PZccd8YKn5EJGLJ6TqMbWPv1rZmZMPBrTXbr2kZoTo7Cl+pE/2i3//ZjJcTFf8uW4jM8mOJjN1+n3vZd3RKfMRSBgKAXUFZrszffZGp8yMzRjayTKmZtp1Q+hyoRF2ZpHEE+mx7ui9jvhPAZ8TpbSCUvIbMNR9SPHYH3nIUfUWpdWondrvjAk5rm2idAjyFFRkKy2W6wnPGew0H5COXOBhLKmyZP7Q8C213uCGy1YoN5xgDjUFwpX2eknQYVNWhYpZ9uhI6tXXtPTG1UU9lyj4xRTpOOdjw3iVJCp6VLNrAkz9NmZ+BurhwK47cvF1rdq1Rmu2LqzLKHuKkoKPY6g4OD00dHvs+VgLNefrW9REM2hH2k9MenV2/041YoEunCRDMRnbwuTmea3z9Sd3UBZOwFUwmpZsHLGaL6VzFDfxbgnJpNCE/Zm8ji1Ur5MuIEc61HHXOCHPcGsp9Xi4UwtnHWW+fnQjZaXuucEGOozrZHR0dJPDyeuihIJVJymEqlEzK5bJYVI+Pj/Xv3+19WtqqKHbU5MHY7NFSJOJGoJQF2YTjVuchiyp0wWVN/dtsAglR/xx0b8KKfRaE1jjoK9iXx7F2lCwrXwzyXpJvjCX4Y0JJbxCMGTQ0PuHxoa591QvEke7XO/ogVaHGA9/qMUTBbk5eTE3N1vVfaM42eT77I5IgfkMWZ8BTGp33o2zqTXRVBd3r8J+uuJqX2/A3K36OB8lvxmvKXbtpxu38J+1O8uJeU+jQDwLhhrxXt1vOsCDpS0/um133bdPrTBl4jAMqPTRpy2yft57S4wDO9wtpM16A7AYLj3wwDWwI8oVm+w/S3+gnbn3sXLUCSdypnCb9VlkcobRavq06qZwOqJEMmxOxgWyOuQPfpKQcbRXEFX4rbAuSvk+T7Lrwi6Xf3fFrZbEiTChH7Zq26/wq6WL5VmeupOXpyy5scSZB0wB+yOSRtZ8R9hcP2zOyEOtOsMX673V015cUntlRB3Tl/fX3t9o15r918j6+ru3G9nfpUCZzqcPyHV948LuumJubLYFrgFtLpMYyDXbyReE4icdVmu2hRjVuLHTXMCz3NZSn8w4dLLa0Z9X+LeTrLBwWlpdPFLUj+ayHof4yVSHjQDkkWHNpQkYy58Hy2J4HBDVYrEzEkr0QQtiztVju5aQ3UGhgYsNHhaSB1AQcTwq9+J5HJokHkG1Diqzh5y5GN34SNXOIdlC9BaC3ZSFVwOttT4zzsuqN813O6z7Qqv5ZM3kTVYTtqXSCOLvCc8ptUaYX9IVRC7gjiJfruTbzxFyU4cPgX3qQ/NkJgnOoON6+MaOMCWNnekDx3O9DG4/uFzyNa9wxad2P3rWBpXtr9SCTla9nkFupblSna5Xz8yS6bsLp9OMBXU6S/XpOWeTiUBp8lJ0rMaa/jC8recijnIqkOsteeYIr0lFS7GU2QXDNR7MiA65xVZYYwBs4ZDiYycz//kQAvvbLuI28buYBw6l7CDPZq41GUYN/21wT/BNbsuH/abvOh662u/FgoGzJIq/uVAX6CsPEP+G3Mwp1+RKT34zBMuna3GPp20cMP1YqcR5kInd7Jto0roTv6f6ij9kGIrTGuKsij7koDwpSatvqcKLAZpk715YZ52TM1snDYdEIkRrxZe6XqlQ14Dk5XH4TaAv5UlaM9CNRbiVcCmA9yd6rpZXE2lsG7V7y4atW/Pzwx0FUG9rcMf9P/Or3s0grN3NJpBRRjXTgTYoVUUFL+4jYzq/Ei/g7bRRZ2t5A6/zwTnDtkq42vHHrjY45VJA3vHe4CqjHsev0z3zMCh1iXFx8fD7eh/bcpXvgVbTnT7RcvmOuciyhalVHzAOPDTe5OLT0vLjo2jvevSaiork0MnLFPaZAfzOVFskDpV319yyZKhr2j/O/OJPVmLugnwoR9l+utADaEYjndRu7GhL06PEMLlzq7h2+eOjWkvW+1mwmKk376TFb29t0RtoMiz8TCHn9IJ3pNmshXWz2pzlfoKV1bGOq7LPP47VnGOPbZePbNQuPJkBBfLAUpa9Yw+WC/hJ05PAnMbe1E/guBoYvXi6AYLhnDIYsaXl/6TeM9M7jj+cg/38SYsNNIdKmH+wu0rmPlYIN9lHsnMEor75e1GVMUflCiECjRDTgj2NYg/nZxIvGr3pUKBe2js5ldsESCpDyy/aCtbGZ5GAAyGRuOQ3d9SyQbPrAuIB/R7iX1fexZmV1gwly2N99jTxlmGZgbPZR91FN05iF1K4YyE+h3/PeLkN1Xi+KoV361Kje2/dYWyqbf9f7+3ucTT49xUF1MTCwwpsdS5+16ACArUBYtQbgdENsnm3bWA6s3gH69Kt5uwXqi0oNfppKjwi6gMFqKeqMdp3prPv++pPanmSRX2BMV/PxOqW8dK409Jq2ZxH2AkKVVE3z/iznEm6mv/BS+058+9J2CsPGPNoVaPYFYh9aswyrKjtTzu29fEAxD/J3T+8cH7cThbY3nFKJn8PSC4zwhlEcB36It5wtdo/1HKcUCADGJ+rdsUhnFQvg7d3026OxcNa2b1LBZ3ZHqN7Hw25sQFJJzOTUUdd06XfSKmPU7A9bwsdp7AeMO6TrBniNYHoffBjWP3Rr6ZU0A7coiptdgwvHTJ1UUGhSOhYX1VTAyWI4trz2hBnCz959FXh07nLBFdK3/EjzvWXzA/dYKuqXMY/T78O2AQwGbCzZBw71jsw/c+r/iiGvydRFfsl/4/BkLkT/tDqQrxf3ufx9InVBSSpLO/XgFl0huXk2JeWRzDI3QHMRnJGyvR/EmfSwoHfa38IVnvvYwCL34dgTzhh99fryJjE85/JsOn/yBG1chI3GLs4JP
*/