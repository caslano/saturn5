
#if !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
#ifndef BOOST_PHOENIX_OBJECT_DETAIL_NEW_HPP
#define BOOST_PHOENIX_OBJECT_DETAIL_NEW_HPP

#include <boost/phoenix/object/detail/cpp03/preprocessed/new.hpp>

#endif
#else

#if !BOOST_PHOENIX_IS_ITERATING

#ifndef BOOST_PHOENIX_OBJECT_DETAIL_NEW_HPP
#define BOOST_PHOENIX_OBJECT_DETAIL_NEW_HPP

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(preserve: 2, line: 0, output: "preprocessed/new_" BOOST_PHOENIX_LIMIT_STR ".hpp")
#endif

/*==============================================================================
    Copyright (c) 2005-2010 Joel de Guzman
    Copyright (c) 2010 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(preserve: 1)
#endif

#define BOOST_PHOENIX_ITERATION_PARAMS                                                \
    (3, (1, BOOST_PHOENIX_COMPOSITE_LIMIT,                                            \
    <boost/phoenix/object/detail/cpp03/new.hpp>))
#include BOOST_PHOENIX_ITERATE()

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(output: null)
#endif

#endif

#else

    template <typename T, BOOST_PHOENIX_typename_A>
    inline
    typename expression::new_<detail::target<T>, BOOST_PHOENIX_A>::type const
    new_(BOOST_PHOENIX_A_const_ref_a)
    {
        return
            expression::
                new_<detail::target<T>, BOOST_PHOENIX_A>::
                    make(detail::target<T>(), BOOST_PHOENIX_a);
    }

#endif

#endif // BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES

/* new.hpp
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
*/