
#if !defined(BOOST_PHOENIX_DONT_USE_PREPROCESSED_FILES)
#ifndef BOOST_PHOENIX_FUNCTION_DETAIL_FUNCTION_OPERATOR_HPP
#define BOOST_PHOENIX_FUNCTION_DETAIL_FUNCTION_OPERATOR_HPP

#include <boost/phoenix/function/detail/cpp03/preprocessed/function_operator.hpp>

#endif
#else

#if !BOOST_PHOENIX_IS_ITERATING

#ifndef BOOST_PHOENIX_FUNCTION_DETAIL_FUNCTION_OPERATOR_HPP
#define BOOST_PHOENIX_FUNCTION_DETAIL_FUNCTION_OPERATOR_HPP

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(preserve: 2, line: 0, output: "preprocessed/function_operator_" BOOST_PHOENIX_LIMIT_STR ".hpp")
#endif

/*==============================================================================
    Copyright (c) 2005-2010 Joel de Guzman
    Copyright (c) 2010 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(preserve: 1)
#endif

#define BOOST_PHOENIX_ITERATION_PARAMS                                          \
    (3, (1, BOOST_PHOENIX_ACTOR_LIMIT,                                          \
    <boost/phoenix/function/detail/cpp03/function_operator.hpp>))
#include BOOST_PHOENIX_ITERATE()

#if defined(__WAVE__) && defined(BOOST_PHOENIX_CREATE_PREPROCESSED_FILES)
#pragma wave option(output: null)
#endif

#endif

#else
        template <typename This, BOOST_PHOENIX_typename_A>
        struct result<This(BOOST_PHOENIX_A_const_ref)>
            : detail::expression::function_eval<F, BOOST_PHOENIX_A>
        {};

        template <BOOST_PHOENIX_typename_A>
        typename detail::expression::function_eval<F, BOOST_PHOENIX_A>::type const
        operator()(BOOST_PHOENIX_A_const_ref_a) const
        {
            return detail::expression::function_eval<F, BOOST_PHOENIX_A>::make(f, BOOST_PHOENIX_a);
        }

#endif

#endif // PHOENIX_DONT_USE_PREPROCESSED_FILES

/* function_operator.hpp
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
*/