///////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2005-2013. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/container for documentation.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_CONTAINER_ALLOCATION_TYPE_HPP
#define BOOST_CONTAINER_ALLOCATION_TYPE_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif

#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/container/detail/config_begin.hpp>
#include <boost/container/detail/workaround.hpp>

namespace boost {
namespace container {

#ifndef BOOST_CONTAINER_DOXYGEN_INVOKED
enum allocation_type_v
{
   // constants for allocation commands
   allocate_new_v   = 0x01,
   expand_fwd_v     = 0x02,
   expand_bwd_v     = 0x04,
//   expand_both    = expand_fwd | expand_bwd,
//   expand_or_new  = allocate_new | expand_both,
   shrink_in_place_v = 0x08,
   nothrow_allocation_v = 0x10,
   zero_memory_v = 0x20,
   try_shrink_in_place_v = 0x40
};

typedef unsigned int allocation_type;
#endif   //#ifndef BOOST_CONTAINER_DOXYGEN_INVOKED
static const allocation_type allocate_new       = (allocation_type)allocate_new_v;
static const allocation_type expand_fwd         = (allocation_type)expand_fwd_v;
static const allocation_type expand_bwd         = (allocation_type)expand_bwd_v;
static const allocation_type shrink_in_place    = (allocation_type)shrink_in_place_v;
static const allocation_type try_shrink_in_place= (allocation_type)try_shrink_in_place_v;
static const allocation_type nothrow_allocation = (allocation_type)nothrow_allocation_v;
static const allocation_type zero_memory        = (allocation_type)zero_memory_v;

}  //namespace container {
}  //namespace boost {

#include <boost/container/detail/config_end.hpp>

#endif   //BOOST_CONTAINER_ALLOCATION_TYPE_HPP

/* allocation_type.hpp
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
*/