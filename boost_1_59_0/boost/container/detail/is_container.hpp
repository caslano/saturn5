//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2017-2017. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/container for documentation.
//
//////////////////////////////////////////////////////////////////////////////
#ifndef BOOST_CONTAINER_DETAIL_IS_CONTAINER_HPP
#define BOOST_CONTAINER_DETAIL_IS_CONTAINER_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif

#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#if defined(BOOST_GCC) && (BOOST_GCC >= 40600)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-result"
#endif

//empty
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_FUNCNAME empty
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_NS_BEG namespace boost { namespace container { namespace is_container_detail {
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_NS_END   }}}
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_MIN 0
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_MAX 0
#include <boost/intrusive/detail/has_member_function_callable_with.hpp>

//size
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_FUNCNAME size
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_NS_BEG namespace boost { namespace container { namespace is_container_detail {
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_NS_END   }}}
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_MIN 0
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNCTION_CALLABLE_WITH_MAX 0
#include <boost/intrusive/detail/has_member_function_callable_with.hpp>

//#pragma GCC diagnostic ignored "-Wunused-result"
#if defined(BOOST_GCC) && (BOOST_GCC >= 40600)
#pragma GCC diagnostic pop
#endif

namespace boost {
namespace container {
namespace dtl {

template <class Container>
struct is_container
{
   static const bool value =
      boost::container::is_container_detail::
         has_member_function_callable_with_size <const Container>::value &&
      boost::container::is_container_detail::
         has_member_function_callable_with_empty<const Container>::value;
};

template <>
struct is_container<void>
{
   static const bool value = false;
};


}  //namespace dtl {
}  //namespace container {
}  //namespace boost {

#endif   //#ifndef BOOST_CONTAINER_DETAIL_IS_CONTAINER_HPP

/* is_container.hpp
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
*/