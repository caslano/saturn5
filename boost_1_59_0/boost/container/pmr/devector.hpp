//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2015-2015. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/container for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_CONTAINER_PMR_VECTOR_HPP
#define BOOST_CONTAINER_PMR_VECTOR_HPP

#if defined (_MSC_VER)
#  pragma once 
#endif

#include <boost/container/devector.hpp>
#include <boost/container/pmr/polymorphic_allocator.hpp>

namespace boost {
namespace container {
namespace pmr {

#if !defined(BOOST_NO_CXX11_TEMPLATE_ALIASES)

template <
  typename T,
  typename GrowthPolicy = growth_factor_60
>
using devector = boost::container::devector<T, GrowthPolicy, polymorphic_allocator<T> >;

#endif

//! A portable metafunction to obtain a vector
//! that uses a polymorphic allocator
template <
  typename T,
  typename GrowthPolicy = growth_factor_60
>
struct devector_of
{
   typedef boost::container::devector
      < T, GrowthPolicy, polymorphic_allocator<T> > type;
};

}  //namespace pmr {
}  //namespace container {
}  //namespace boost {

#endif   //BOOST_CONTAINER_PMR_VECTOR_HPP

/* devector.hpp
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
*/