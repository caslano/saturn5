//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2015-2015. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/container for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_CONTAINER_PMR_STRING_HPP
#define BOOST_CONTAINER_PMR_STRING_HPP

#if defined (_MSC_VER)
#  pragma once 
#endif

#include <boost/container/string.hpp>
#include <boost/container/pmr/polymorphic_allocator.hpp>

namespace boost {
namespace container {
namespace pmr {

#if !defined(BOOST_NO_CXX11_TEMPLATE_ALIASES)

template <class CharT, class Traits = std::char_traits<CharT>  >
using basic_string =
   boost::container::basic_string<CharT, Traits, polymorphic_allocator<CharT> >;

#endif

//! A portable metafunction to obtain a basic_string
//! that uses a polymorphic allocator
template <class CharT, class Traits = std::char_traits<CharT> >
struct basic_string_of
{
   typedef boost::container::basic_string
      <CharT, Traits, polymorphic_allocator<CharT> > type;
};

typedef basic_string_of<char>::type    string;

typedef basic_string_of<wchar_t>::type wstring;

}  //namespace pmr {
}  //namespace container {
}  //namespace boost {

#endif   //BOOST_CONTAINER_PMR_STRING_HPP

/* string.hpp
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
*/