//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2015-2015. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/container for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_CONTAINER_PMR_FLAT_SET_HPP
#define BOOST_CONTAINER_PMR_FLAT_SET_HPP

#if defined (_MSC_VER)
#  pragma once 
#endif

#include <boost/container/flat_set.hpp>
#include <boost/container/pmr/polymorphic_allocator.hpp>

namespace boost {
namespace container {
namespace pmr {

#if !defined(BOOST_NO_CXX11_TEMPLATE_ALIASES)

template <class Key
         ,class Compare = std::less<Key> >
using flat_set = boost::container::flat_set<Key, Compare, polymorphic_allocator<Key> >;

template <class Key
         ,class Compare = std::less<Key> >
using flat_multiset = boost::container::flat_multiset<Key, Compare, polymorphic_allocator<Key> >;

#endif

//! A portable metafunction to obtain a flat_set
//! that uses a polymorphic allocator
template <class Key
         ,class Compare = std::less<Key> >
struct flat_set_of
{
   typedef boost::container::flat_set<Key, Compare, polymorphic_allocator<Key> > type;
};

//! A portable metafunction to obtain a flat_multiset
//! that uses a polymorphic allocator
template <class Key
         ,class Compare = std::less<Key> >
struct flat_multiset_of
{
   typedef boost::container::flat_multiset<Key, Compare, polymorphic_allocator<Key> > type;
};

}  //namespace pmr {
}  //namespace container {
}  //namespace boost {

#endif   //BOOST_CONTAINER_PMR_FLAT_SET_HPP

/* flat_set.hpp
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
*/