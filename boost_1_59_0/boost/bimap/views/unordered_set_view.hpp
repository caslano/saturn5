// Boost.Bimap
//
// Copyright (c) 2006-2007 Matias Capeletto
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

/// \file views/unordered_set_view.hpp
/// \brief View of a bimap that is signature compatible with tr1::unordered_set.

#ifndef BOOST_BIMAP_VIEWS_UNORDERED_SET_VIEW_HPP
#define BOOST_BIMAP_VIEWS_UNORDERED_SET_VIEW_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/config.hpp>

#include <boost/bimap/container_adaptor/unordered_set_adaptor.hpp>
#include <boost/bimap/detail/set_view_base.hpp>

namespace boost {
namespace bimaps {
namespace views {

/// \brief View of a bimap that is signature compatible with std::unordered_set.
/**

This class uses container_adaptor and iterator_adaptor to wrapped a index of the
multi_index bimap core so it can be used as a std::unordered_set.

See also const_unordered_set_view.
                                                                             **/

template< class CoreIndex >
class unordered_set_view
:
    public BOOST_BIMAP_SET_VIEW_CONTAINER_ADAPTOR(
        unordered_set_adaptor,
        CoreIndex,
        local_iterator,
        const_local_iterator
    ),

    public ::boost::bimaps::detail::
        set_view_base< unordered_set_view< CoreIndex >, CoreIndex >
{
    BOOST_BIMAP_SET_VIEW_BASE_FRIEND(unordered_set_view,CoreIndex)

    typedef BOOST_BIMAP_SET_VIEW_CONTAINER_ADAPTOR(
        unordered_set_adaptor,
        CoreIndex,
        local_iterator,
        const_local_iterator

    ) base_;

    public:

    unordered_set_view(BOOST_DEDUCED_TYPENAME base_::base_type & c)
        : base_(c) {}

    unordered_set_view & operator=(const unordered_set_view & v) 
    {
        this->base() = v.base();
        return *this;
    }
};


} // namespace views
} // namespace bimaps
} // namespace boost

#endif // BOOST_BIMAP_VIEWS_UNORDERED_SET_VIEW_HPP


/* unordered_set_view.hpp
gB/udbzXKLsYk77HxUs3ok782Mo8vgYOFiEL01LvNtcjCmItMcVFJGJbECJC5rCn3BUHa8hx5KcbKHHBLKwWYTb9gG/8hwDL02KFYuXSaIn5C7vKRAUreMopS8KShLaYwZh/P/u036hFZypqygc2oPvyXBLmWOAJ9YpaVhULkzrFQr3351eQ+LVZI7NLXw+4mnC7b918NhRTo876tnI8BBGoaXgn0UgLg6qtDmJdOTpprTVtLj5xjzY4nDt4wt+XfqWB2tMHBpbRB/0baW2uuhkQMCQho9wXXMtjT2xP59uM2hqCEKOP4qBLEDC9O7oFYfjIxibfeI8IiPujqfdn/Y1ypqLvpvnPn1/W/nszdR91uNmAUVjrdAqNtEVBGMZ9G0+5KhXF4rkO68Y58YUmC8cMeKv6+R+1QswuKv1zKvTVZHJYEIIo8Bsxufat0PgPyB6ePRr34WIeBT2Kvea8sZLuxyCwrzLk7xvJEOhKYmiA8DWNPsMuvw0p8a4KD3jAgKJ1NFWCHo9cXqphRWT7VRkPsfb7fbHcnFnWaU0tmZCj/QvPHZkOFD4uLn/h32JTj4IuDcj7uC0VurlZi3D1LFCFL5eA18Efe55lFOuH33G4LNGHO+BCw/bn0EwdsFQwdCw3BAfrHmlUPL3xhvLzAuXUkzZesWIgfkPsxBYBFm0C7PLfp5J82kP8Fkda67SERt25hEbcBsTVo3Mio996h3oUHuEAB02l9mRuW1BiWqVzC1VrMpCQKZX1MFvqwG09Z37dEs7XgfKIqG/MV97DGiWkPttRK7GahfKFywEap8obAg6h8m98w0pzwx/xIpDuf0SHZqbEMN2aMQzUEo9XBqK99JdhhPJjtNRB1BKvSH6KI7Vpsuly7ttiHCooYZVPCqJw6mU1/31WBRJQq6b32GBUsBwOTsEgRIkgVM4ubI7kdVOWdyZY7HyDLUP0OcuXl8H8b15Ve+EN5UfQ1PS0uuXaddW1ExAtVwPTFRwUlIAM/YPEv/Ph6ziYL6ETS9L9oCheXFIPt3AOhgAU/M8dwJiJY6XVz7Ol5bn7+1nK6epkOqvN9M/y8NrfZPECR2dnAQKpgjmTx6encRAnPzAoLuRp/4ubHbA8KC57P7ADoeqJEMpst/4u2QnfeSnKIozrS2yLsYQfC4rX8bVQZqamckG8sFfYrfsGFkd9w2uAZ9ncL/BGT7z+7Yery94uy5fn3k0YVwzrx7oRwo6/Hb69UolgYmJiUsbDuJQWlWCciY47Ral6uFC7/wcNuhmk0X8AgENLrZ1DlzBN063btm3btu2+27Zt27Zt27Zt27bP8w6+f3BqksOszLyiInatWLn5QF71RbKh3eB2srOz1Tuvr6/Tn8EDEKKSt4dSeaIVAaBcDl7Cxuu6H6Hs6kTWNdurDmoDdHy2HcZuTmOAyZzgcAAkTnmQzUM9EB6NEp4x2sVPT0/lDNlQvNWxkqwEBQXxZFwNDAz4YApPTIFZOJ8V6j3yJmSOl/l7bm5ucqa7oEuxS5ualtZXV1fhwA580Rs1/LstLGRqAWZN39MG6AT7Dc0z25TQ3QjAOO0BCCzGA8oIZwPse4Ff1cc5wmSFagQCQu7PBFTPloTOLZ7CIaDM01eIuLm4otMcEjFTAYcaH3seHzEVtLWr86M7ACAbb87Nrayugm/MLSwuAOJLC6IteHl5z5hxAYYKNpDWz/T/QGGbwg7AZYjA4QBIEsjJQDQPJSCIBR1gABxQQJUBBQmSU1PRUpOTUQS4URQoBd4P+wEEY7pCCTK9g2xFHhIGioNGXS7crPlY0cZW89eChTecAWluZGVlbWZmZmwAZtSNH3TnvekuAPUhUkfq44S7qhlAcd4ZccYXwY5U9cguyPO8H32HJkei0On9FXrAB11prhmrMQQFYRX//funrqsbK9fVjvDmCAGBjlKr5yG19sLM31OaR+ZuI4zsBwmwdt5yBfYDhRC69JiJ1uwKTFIDCwtbExMTUzPPAHEJSAk2LL3vB/hL/r+/OT94NOcy2q1k73uvAIAUkwQ86EO5oF6B5BIaGGQn0TicjSj9FKF9AEJGAIJpgcV0P7WkYS+aP5MuoWEZ5fYx0pmD0aFVUxzPVy2fOmqCRfoF0DeLYPXNy6urbEbOqzGdASTKdWcHv8ivdP4hVeZfOZwA8eFkoAyxAfbakAcHIl48IRCZROj5FAWlAEdQjCwRgIKAh5ByMCC3rFGHLVhrdQbORYM7HBPfxazT7Qf/myWoFhrpxWhwD6xmUUlHZ2dYFKDON0vxL+3gD9q/kaf62of1GkAAiBZcP/sQ8MgZQgbtW4NYLJoCiGGSoYziH0F7LTnJD5Cof7RgHwnGcnmebbKqP4ct/SkNLSsrq+zLy0vNPvi6/nTS/R+ggIfk017aDjDAgyY8teJdoL02mBdVCMhUHafRWCwtMMMkIQpnJS0KBkJI+mu+Hm1TkV7M1Vr9wXnjrOWy/FoLCHgdbjwEGkFwkjdAicFcLm+lqsLNbsj+yh5AckjmXe85HJeAHOdJssEMunk09MI5frAPOXYe8q3D0aiqglF+QhMkBCh4SM6ac9A/6on7n4F4dJZa6T5NUMg6SCTdoWcAipcu1xtL51C9uUByNyAKeObBXlOGHhkpxz7yiyFUAvre98MR8+W3ooCZYezocVx+X2/QUOUS8/lm/4LsLT2BghfIThDAmKtFeWn9edV49zXe9Hl2IApYbw7J336+uNmTW2Q5joNe/d+hD895QMcP9I4qg/f0Lr+mfQ6Ww7P5cvIB0wMPgd1gSGQqhgc6UWBTReH21JgpK1DBeVw+VmwsKQgwrDXV+HnYdd1peSy363XFuBAGoJBTzPunUnhfz5EpYcGHVZO/1TpDJUDjPg8FCH0ZkaJfbqx7oHYNDK1TuUyWCqSp5mWM7VxEYLA6VJTnpcVy6T4oiJ8gg9Yb64RPsC+SnI++jgLBew6i2nLIo8jixkF8oOnsf6E3lL+/te3jwN6CuvHgzhPUL1ct4Mk0zjwn85MmAFJLqzVaVg0y05y7lG/fr/NdiG9+AMmZgGQ2Ek1b9ACBo+80WCdJ9ScYUMay2RwNhs/nC8TzAhpcffrE4IIDo66wIfr506c2smLnbTfmqTFamcG2qjZZ3R29AygJKTnEGr+/ohOzktaRukUb3vPP+huYSNSoJh9MFkINMnlKZCnEUMH9GZw12qb4KnQlpNu7rPdiHqgg0EOAaEAl1/HCcJQDIr2+X683L/n7htvcqLhr+ACJe7A8omxjAdZNDFhfvOAbWcI0DH/2DOdT5vnK+6YxmMylKEMVUtpZNfhQkRT65kVhjGRJ9Zudrhqfni3d3d5xDms2gWz9rQM0zB0jIOi1QEQwEBnJI+3FXWs8RRdogeH9jGs7Oky+MgmAkwdP4hMP4rGIncAmKhgXnatLZA0H6Fwlcv7FYHNKmgLUEtceYLPwAMmswKJRp002H+TLW+ToUWySSzcu/truG11JSBguT0Nltj94WKFTrdlmx3JZbDYsuUYoIRYwQMGhgSedp4Xw/LIzOY3GGaBDTvQ3yW1sLFKuurXHx6eY0gICgZ/xTn9J6v3OkuyhyTs5uEra8aTiuFyasbyGzdnO2+7+ZYV7IQg4LHQS524Bg5K8eUXW2+0NUMgefPYkCrafV0tJfpt2QNkwtp9xlLOqp7s/cARq2Y0mQFiHX/Vlg6YOQLEmWnBl05MoAwLSDDAkDKs21vHieZtE9N3d0ql9isAC6gzH/bJq1MenJkcf0q0oaPqNWUfA4U9QKqQWV0KjCnm6NJJvUl5ecRl1zqCnNAaYGHzOLkA0q6kpxlMNYXEJzPIZJGV5HIqTn4wk0uAU4UvANkpTqPTzQvH3gkfsf6/TyZUMnsyw2Nb+JHDezCX2EEfCVt3oc8+9kKVxR5fL0xnMY4aog9dJSjOCAQrYJLLYLBh4Lj2oT6Hgvx2Q/es02K0s0ra+AcfHJ9IOJs/1ITlWBop0ZEsbpkI58G3lDOJQ+soBBJGx5fZUw62rdNcll2z5BVurUvynVLkGOZLMtLLkSLxvlkU0nhYdxj/3JkWqu26vLMBo19KvSia38WeW27GQmSTYUaRF7SFmP58vXQ2bI7x2Yfm0f9CbxgWlF1VZFlmmmrN8wPFx2a03YNYwHSAwE1isliqMoSreLqxaAQNiivrtMaKhxoPDbBBrSXPWKV54mwRRjNGTtBQs/RSV5TAntICKSpnkpKQdSpqZVt8w2FBDjpGRTjEuU0WpFha3iaYtsjn7MTGCusf627LST4OPZB6uE0qUlN6iEMnSs3mUTp+MMMq7TbzJdzDCYf847Ha7Jf9DrHJwaFRy/rcPXMIWWKLXhBI7t28IjwBDKSFj7yVUZWOpTF7cjKUxG3ZfEzRsytSGgJ1mss9Kvmrbccyy4y0BdnE71cRfkWewGz0lvhhDSENTTAAAA2BEwCo0GIgZpl8oNznlDHOqGCeTldVVSli4bHnNLZKbRbleoWn75Ryu46b3pXF/H9HxZMTpmNdMLiUbRbiPYlE73xyn2WBWEByXBU76zkWr1bpC9Es7NNYOZzNBuNbgQ/O+Prd4i1D11UX/WAKuwnQmExVbiZIDBePS0qj4qlZHjdyv0ydm+28dbIKSInF7sFB97uxUMZxQ6WQcaN2bOc7+7sbqNzWVzgJAwbJyCzm3p55uJ71pH5YaUyuDWE2HS43PfVeGcrSeUXkIbrIFQMKaKE5n6OZqteYoPoq+yFr8ywd98/hBZur9pUWZWRYJHd/r8bA2CH0IjQBgDFa/HFPJ4KM1uEqFYBemAgIMaBgU9CcDA+jorM9P5/dl2xU4kgemJJCMnX0qsJCJ3wADObqrTpddqGl51VnCRydsgcWWt917e2WXauSD97EibjoN3s8eDg2DKasMgYAFCgWdxLwJr9rxxiE1iBnPcec7xoJuAvPLgUdgkWXijkyWi4OdsZgKgNkPQqw3Drkbk9k0ejibmK3YsAIkiEm3AkLXyn1eJ84Mhf9vx9HD+eAfcHR9h+hIuDcmZ6XA5FRSXQL40y563dT9fEKrmRS9/yKdqtfmdHGey4Gji69DhfOr81SMnzpp398W1cfgGHyKNH12TgOaqj+DXis+N0ezAxua5ugBoRGv/yD5bVqB0THZYp3h+AgwxWsn5j8AQI7RQDN+EGb5U9fnDqez2CPq2oGD5KkW54CF8IhLeb+nyu+b3JZEZXUaQX17PEGFaEytYNw+u76nZ/U/xSLoGJt+tHTerq3p7pDuU2E5oBJUrJM+O8+d6ZXfI2jxiS65KW93Yftyg65F/WCFANdZvSbTGdtrJF/8QxRhtFpACUvW213HsBgSf0JlwNg/Uo7xamF4XufCwCAZF8yq/PysSUNfKr8+t5rs11+/cRt429RBxCIS+CcY1uz52CwFkjCa8mRJZangqcZTArxYmN3S1m4iPdNZujTOJ6pgX9ZKRdcVs6mzvyfQjm/mOOiwyopNgTtm/M8V8y4kCu/xLv2BwIhsK6JZzGTQ8WGQGOwTy10fl6LHlXsDQAR4nD5wZbiQTtpsfr9fEfN4Hia5jHKQqiw44XV3/PZLxI/ZuVRpLzQWYYcIMnZqeaMGTPvdbynMOB9ZznQ7HIYHnH4w0AzGJhlTfO0AVW4/pqmwopCSk8fLTDKPvTD8RPyfT1WLu/qpzopN0l4Qu63oNcDDCle8LbwqbRxT/JMAEidWVJpi/DUv3P8AhmE4ZGMwJtPzGdHkzEs268IKeiE+WpFdgbCuxt9tVtn1GglqNHXKOk5LHuW9OVWw3P1GZDJYBNTHKC19pxxlxrNE0QwUk8X79wNFJTZ5Z+envOu0Afy4WNX1WSPLcDddAKOionL/nC5MANVnBl5pAtfSpQbouDbzZBYI6BaAeNTw1eo+m83JwzNQXR1iAbcttQFQtbo62ZHGr48VEzMmpjIUamrHYaJZYb81BpiECV4uynGdGV1AEVbKYo08K++6/Dp5kveT5n1GTv8imWXutWQCHvFxFjw5OUl0LI/ZEYNrYboMJ3PdQ0YKAH6G4wcGTNWQVun8er3Bs8dmu4GZVprqvNTQ9/MExflXBD/ZWkm3ZJ6ZGyOpgIADMgG4xA8XjaVM4VQQUBGxYo8tZ+AR8n2Cf3USSF3Q8cXJLrhlgut9P3DEGEAf6sZjfLLKIDvIdhun+lm03QOE4G8EROWCTC0Htn9BJf/ZZH5PYVJisVjhDduapfd6MXYs3ueh8yhFdY+yvYZFXG/M/RaPyAQVM4EDvx5wIKhr2yojWsZsJeexXYnfMvGJi+v4K44X37fbw1Xz6rS1ydL5FnRPw4ODN7YA2p2kz+nAfkbQ9QC2xH/8X9RRKSxgLxDjDDqQrQ1oDOxnBxmEpy3S+fjEdb89fp2UrFnOaAdJJ7Jot2az9ciUHpESVWMwt/mqL5Zdva2rTrkx3t+KyruZ8dM+7WfFvvbApRrI+pnjbjaXlFz7UxXIfoPX4KyaoqZOtPk1qvR+58kbja/kNOJurLJcLt5NBANChmqFxGdstPshCyQ6ukRdgA/CUAoAwPlAuNP8o3pkxCy6bM52sEyCY8A4o3erSYT3/SassExuR6WyheZ0v4V4QtmeaPXb1a0ufxFI7+KqT6tQ5eLWLG7qwWyt8EP7cHZpNvQCn328GSgVerImCE3+XeARqdgIXiZjnsc8APBSptID3D8cB5a3ZRWupd3KWgSTjLeehDglOVooQOv3o9j8FfMv/qNvBYGG6sBbBOSkekVeb6oX5l0DDtOoUbopsIXIgRRc+3sX/TjKsZPSdfDYhkLFd5XN1DZkkRAq5AMbbgb39IJisoHvX4zKxf/JXqDzmdh0ztRYz0sOqbnvWDfIirp5rt/gcMYn3yScCu4toh+B0cC6FaCgwyTEfgDSYMabXrQffzk9RfM/Bux4STsbNwizH1OwFNbQJy9nAvRjU2v7V63egEvO/7iEzN7vy+Yi9xOFyE55O3WwctHrGLVm9Aee0h2+z3FdP0Q2OGN0kgJ4WVoJB8/2fukiP/UTZwf4FEUorBsXoms9ubwYsIKFx7jOZByqVDTZdGyELhN3I84UhGlnHh95q/J25+3cQqOnHFbzQqpuQA1y/kRAIFy5r5yQ/urjSrHVypZhQ50ZnoXvVKLz+xzldA83KQIrd4FEwnL5uEUxlUq7dYrL7gwfm/PpOSmTKDLvXVQIAynA0PxpVz4q3d52eT8Ef4b8CISOUMsfqRDadvDFoOb34eBhO4FXbsf33DR9BC3FbLo/DA9TAzYUzwfn18m1ZaKi0eZ9MQnKZKHtYT2OQMO882l+NG9jcZNs5dctUYnlSTrnD3L0bm2eCAikHz9a0F47sFtbk5VlmEXQxZXvwUjzc+KXR4je7WW6SdLOw9BtaWGh1+v94doNHWw2wduW43lZ8ZfhahoQbrsboHXKdNZ5VRsVchRTl86vM8cb96jssQC2787e/8AaCCwv+UHnr2HoCFnEn3KCyJnmc2mg8egpi8Px3rhYvYHqvhuwu+p8kW+Sr/NvTh/xTpWlbWqJ3iZxchEPM8BNCAJsUS5N/vcDSK1zdYeyPyQY1Gl0chB9DbJtzD68BJw33z+gbkngiYKEv3daNRQ2r1N5vTszGjYenq9XjgrRd9ng
*/