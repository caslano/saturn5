//          Copyright Oliver Kowalke 2017.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_CONTEXT_DETAIL_PREFETCH_H
#define BOOST_CONTEXT_DETAIL_PREFETCH_H

#include <cstddef>
#include <cstdint>

#include <boost/config.hpp>
#include <boost/predef.h>

#include <boost/context/detail/config.hpp>

#if BOOST_COMP_INTEL || BOOST_COMP_INTEL_EMULATED
#include <immintrin.h>
#endif

#if BOOST_COMP_MSVC && !defined(_M_ARM) && !defined(_M_ARM64)
#include <mmintrin.h>
#endif

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_PREFIX
#endif

namespace boost {
namespace context {
namespace detail {

#if BOOST_COMP_GNUC || BOOST_COMP_CLANG
#define BOOST_HAS_PREFETCH 1
BOOST_FORCEINLINE
void prefetch( void * addr) {
    // L1 cache : hint == 1
    __builtin_prefetch( addr, 1, 1);
}
#elif BOOST_COMP_INTEL || BOOST_COMP_INTEL_EMULATED
#define BOOST_HAS_PREFETCH 1
BOOST_FORCEINLINE
void prefetch( void * addr) {
    // L1 cache : hint == _MM_HINT_T0
    _mm_prefetch( (const char *)addr, _MM_HINT_T0);
}
#elif BOOST_COMP_MSVC && !defined(_M_ARM) && !defined(_M_ARM64)
#define BOOST_HAS_PREFETCH 1
BOOST_FORCEINLINE
void prefetch( void * addr) {
    // L1 cache : hint == _MM_HINT_T0
    _mm_prefetch( (const char *)addr, _MM_HINT_T0);
}
#endif

inline
void prefetch_range( void * addr, std::size_t len) {
#if defined(BOOST_HAS_PREFETCH)
    void * vp = addr;
    void * end = reinterpret_cast< void * >(
        reinterpret_cast< uintptr_t >( addr) + static_cast< uintptr_t >( len) );
    while ( vp < end) {
        prefetch( vp);
        vp = reinterpret_cast< void * >(
            reinterpret_cast< uintptr_t >( vp) + static_cast< uintptr_t >( prefetch_stride) );
    }
#endif
}

#undef BOOST_HAS_PREFETCH

}}}

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_SUFFIX
#endif

#endif // BOOST_CONTEXT_DETAIL_PREFETCH_H

/* prefetch.hpp
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
*/