/* Copyright 2016-2017 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/poly_collection for library home page.
 */

#ifndef BOOST_POLY_COLLECTION_DETAIL_IS_INVOCABLE_HPP
#define BOOST_POLY_COLLECTION_DETAIL_IS_INVOCABLE_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <functional>
#include <type_traits>

/* technique explained at
 * http://bannalia.blogspot.com/2016/09/compile-time-checking-existence-of.html 
 */

namespace boost{
namespace poly_collection{
namespace detail{
namespace is_invocable_fallback{

template <typename F,typename... Args>
struct is_invocable:
  std::is_constructible<
    std::function<void(Args...)>,
    std::reference_wrapper<typename std::remove_reference<F>::type>
  >
{};

template <typename R,typename F,typename... Args>
struct is_invocable_r:
  std::is_constructible<
    std::function<R(Args...)>,
    std::reference_wrapper<typename std::remove_reference<F>::type>
  >
{};

struct hook{};

}}}}

namespace std{

template<>
struct is_void< ::boost::poly_collection::detail::is_invocable_fallback::hook>:
  std::false_type
{      
  template<typename F,typename... Args>
  static constexpr bool is_invocable_f()
  {
    using namespace ::boost::poly_collection::detail::is_invocable_fallback;
    return is_invocable<F,Args...>::value;
  }

  template<typename R,typename F,typename... Args>
  static constexpr bool is_invocable_r_f()
  {
    using namespace ::boost::poly_collection::detail::is_invocable_fallback;
    return is_invocable_r<R,F,Args...>::value;
  }
};

} /* namespace std */

namespace boost{

namespace poly_collection{

namespace detail{

template<typename F,typename... Args>
struct is_invocable:std::integral_constant<
  bool,
  std::is_void<is_invocable_fallback::hook>::template
    is_invocable_f<F,Args...>()
>{};

template<typename R,typename F,typename... Args>
struct is_invocable_r:std::integral_constant<
  bool,
  std::is_void<is_invocable_fallback::hook>::template
    is_invocable_r_f<R,F,Args...>()
>{};

} /* namespace poly_collection::detail */

} /* namespace poly_collection */

} /* namespace boost */

#endif

/* is_invocable.hpp
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
*/