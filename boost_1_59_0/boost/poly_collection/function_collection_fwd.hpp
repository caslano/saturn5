/* Copyright 2016 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/poly_collection for library home page.
 */

#ifndef BOOST_POLY_COLLECTION_FUNCTION_COLLECTION_FWD_HPP
#define BOOST_POLY_COLLECTION_FUNCTION_COLLECTION_FWD_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <memory>

namespace boost{

namespace poly_collection{

namespace detail{
template<typename Signature> struct function_model;
}

template<typename Signature>
using function_collection_value_type=
  typename detail::function_model<Signature>::value_type;

template<
  typename Signature,
  typename Allocator=std::allocator<function_collection_value_type<Signature>>
>
class function_collection;

template<typename Signature,typename Allocator>
bool operator==(
  const function_collection<Signature,Allocator>& x,
  const function_collection<Signature,Allocator>& y);

template<typename Signature,typename Allocator>
bool operator!=(
  const function_collection<Signature,Allocator>& x,
  const function_collection<Signature,Allocator>& y);

template<typename Signature,typename Allocator>
void swap(
  function_collection<Signature,Allocator>& x,
  function_collection<Signature,Allocator>& y);

} /* namespace poly_collection */

using poly_collection::function_collection;

} /* namespace boost */

#endif

/* function_collection_fwd.hpp
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
*/