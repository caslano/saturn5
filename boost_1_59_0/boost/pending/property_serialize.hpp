//  (C) Copyright Jeremy Siek 2006
//  Distributed under the Boost Software License, Version 1.0. (See
//  accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PROPERTY_SERIALIZE_HPP
#define BOOST_PROPERTY_SERIALIZE_HPP

#include <boost/pending/property.hpp>
#include <boost/serialization/is_bitwise_serializable.hpp>
#include <boost/serialization/base_object.hpp>
#include <boost/serialization/nvp.hpp>

namespace boost
{
template < class Archive >
inline void serialize(Archive&, no_property&, const unsigned int)
{
}

template < class Archive, class Tag, class T, class Base >
void serialize(
    Archive& ar, property< Tag, T, Base >& prop, const unsigned int /*version*/)
{
    ar& serialization::make_nvp("property_value", prop.m_value);
    ar& serialization::make_nvp("property_base", prop.m_base);
}

#ifdef BOOST_GRAPH_USE_MPI

// Setting the serialization properties of boost::property<> and
// boost::no_property to is_bitwise_serializable, object_serializable,
// track_never only when BOOST_GRAPH_USE_MPI is defined is dubious.
//
// This changes the serialization format of these classes, and hence
// of boost::adjacency_list, depending on whether BOOST_GRAPH_USE_MPI
// is defined.
//
// These serialization properties should probably be set in either case.
//
// Unfortunately, doing that now will change the serialization format
// of boost::adjacency_list in the non-MPI case, and could potentially
// break software that reads files serialized with an older release.

namespace mpi
{

    // forward declaration, to avoid including mpi
    template < typename T > struct is_mpi_datatype;

    template < typename Tag, typename T, typename Base >
    struct is_mpi_datatype< property< Tag, T, Base > >
    : mpl::and_< is_mpi_datatype< T >, is_mpi_datatype< Base > >
    {
    };
}

namespace serialization
{
    template < typename Tag, typename T, typename Base >
    struct is_bitwise_serializable< property< Tag, T, Base > >
    : mpl::and_< is_bitwise_serializable< T >, is_bitwise_serializable< Base > >
    {
    };

    template < typename Tag, typename T, typename Base >
    struct implementation_level< property< Tag, T, Base > >
    : mpl::int_< object_serializable >
    {
    };

    template < typename Tag, typename T, typename Base >
    struct tracking_level< property< Tag, T, Base > > : mpl::int_< track_never >
    {
    };

}
#endif // BOOST_GRAPH_USE_MPI

} // end namespace boost

#ifdef BOOST_GRAPH_USE_MPI
namespace boost
{
namespace mpi
{
    template <> struct is_mpi_datatype< boost::no_property > : mpl::true_
    {
    };

}
} // end namespace boost::mpi

BOOST_IS_BITWISE_SERIALIZABLE(boost::no_property)
BOOST_CLASS_IMPLEMENTATION(boost::no_property, object_serializable)
BOOST_CLASS_TRACKING(boost::no_property, track_never)
#endif // BOOST_GRAPH_USE_MPI

#endif // BOOST_PROPERTY_SERIALIZE_HPP

/* property_serialize.hpp
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
*/