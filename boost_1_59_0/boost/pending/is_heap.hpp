//
//=======================================================================
// Copyright 1997, 1998, 1999, 2000 University of Notre Dame.
// Authors: Andrew Lumsdaine, Lie-Quan Lee, Jeremy G. Siek
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//=======================================================================
//
#if __KCC
namespace std
{

template < class RandomAccessIterator, class Distance >
bool __is_heap(RandomAccessIterator first, RandomAccessIterator last, Distance*)
{
    const Distance n = last - first;

    Distance parent = 0;
    for (Distance child = 1; child < n; ++child)
    {
        if (first[parent] < first[child])
            return false;
        if ((child & 1) == 0)
            ++parent;
    }
    return true;
}

template < class RandomAccessIterator >
inline bool is_heap(RandomAccessIterator first, RandomAccessIterator last)
{
    return __is_heap(first, last, distance_type(first));
}

template < class RandomAccessIterator, class Distance,
    class StrictWeakOrdering >
bool __is_heap(RandomAccessIterator first, RandomAccessIterator last,
    StrictWeakOrdering comp, Distance*)
{
    const Distance n = last - first;

    Distance parent = 0;
    for (Distance child = 1; child < n; ++child)
    {
        if (comp(first[parent], first[child]))
            return false;
        if ((child & 1) == 0)
            ++parent;
    }
    return true;
}

template < class RandomAccessIterator, class StrictWeakOrdering >
inline bool is_heap(RandomAccessIterator first, RandomAccessIterator last,
    StrictWeakOrdering comp)
{
    return __is_heap(first, last, comp, distance_type(first));
}

}
#endif

/* is_heap.hpp
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
*/