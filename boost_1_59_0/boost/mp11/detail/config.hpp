#ifndef BOOST_MP11_DETAIL_CONFIG_HPP_INCLUDED
#define BOOST_MP11_DETAIL_CONFIG_HPP_INCLUDED

// Copyright 2016, 2018, 2019 Peter Dimov.
//
// Distributed under the Boost Software License, Version 1.0.
//
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt

// BOOST_MP11_WORKAROUND

#if defined( BOOST_STRICT_CONFIG ) || defined( BOOST_MP11_NO_WORKAROUNDS )

# define BOOST_MP11_WORKAROUND( symbol, test ) 0

#else

# define BOOST_MP11_WORKAROUND( symbol, test ) ((symbol) != 0 && ((symbol) test))

#endif

//

#define BOOST_MP11_CUDA 0
#define BOOST_MP11_CLANG 0
#define BOOST_MP11_INTEL 0
#define BOOST_MP11_GCC 0
#define BOOST_MP11_MSVC 0

#define BOOST_MP11_CONSTEXPR constexpr

#if defined( __CUDACC__ )

// nvcc

# undef BOOST_MP11_CUDA
# define BOOST_MP11_CUDA (__CUDACC_VER_MAJOR__ * 1000000 + __CUDACC_VER_MINOR__ * 10000 + __CUDACC_VER_BUILD__)

// CUDA (8.0) has no constexpr support in msvc mode:
# if defined(_MSC_VER) && (BOOST_MP11_CUDA < 9000000)

#  define BOOST_MP11_NO_CONSTEXPR

#  undef BOOST_MP11_CONSTEXPR
#  define BOOST_MP11_CONSTEXPR

# endif

#endif

#if defined(__clang__)

// Clang

# undef BOOST_MP11_CLANG
# define BOOST_MP11_CLANG (__clang_major__ * 100 + __clang_minor__)

# if defined(__has_cpp_attribute)
#  if __has_cpp_attribute(fallthrough) && __cplusplus >= 201406L // Clang 3.9+ in c++1z mode
#   define BOOST_MP11_HAS_FOLD_EXPRESSIONS
#  endif
# endif

#if BOOST_MP11_CLANG < 400 && __cplusplus >= 201402L \
   && defined( __GLIBCXX__ ) && !__has_include(<shared_mutex>)

// Clang pre-4 in C++14 mode, libstdc++ pre-4.9, ::gets is not defined,
// but Clang tries to import it into std

   extern "C" char *gets (char *__s);
#endif

#elif defined(__INTEL_COMPILER)

// Intel C++

# undef BOOST_MP11_INTEL
# define BOOST_MP11_INTEL __INTEL_COMPILER

#elif defined(__GNUC__)

// g++

# undef BOOST_MP11_GCC
# define BOOST_MP11_GCC (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)

#elif defined(_MSC_VER)

// MS Visual C++

# undef BOOST_MP11_MSVC
# define BOOST_MP11_MSVC _MSC_VER

# if BOOST_MP11_WORKAROUND( BOOST_MP11_MSVC, < 1920 )
#  define BOOST_MP11_NO_CONSTEXPR
# endif

#if _MSC_FULL_VER < 190024210 // 2015u3
#  undef BOOST_MP11_CONSTEXPR
#  define BOOST_MP11_CONSTEXPR
#endif

#endif

// BOOST_MP11_HAS_CXX14_CONSTEXPR

#if !defined(BOOST_MP11_NO_CONSTEXPR) && defined(__cpp_constexpr) && __cpp_constexpr >= 201304
#  define BOOST_MP11_HAS_CXX14_CONSTEXPR
#endif

// BOOST_MP11_HAS_FOLD_EXPRESSIONS

#if !defined(BOOST_MP11_HAS_FOLD_EXPRESSIONS) && defined(__cpp_fold_expressions) && __cpp_fold_expressions >= 201603
#  define BOOST_MP11_HAS_FOLD_EXPRESSIONS
#endif

// BOOST_MP11_HAS_TYPE_PACK_ELEMENT

#if defined(__has_builtin)
# if __has_builtin(__type_pack_element)
#  define BOOST_MP11_HAS_TYPE_PACK_ELEMENT
# endif
#endif

// BOOST_MP11_DEPRECATED(msg)

#if BOOST_MP11_WORKAROUND( BOOST_MP11_CLANG, < 304 )
#  define BOOST_MP11_DEPRECATED(msg)
#elif defined(__GNUC__) || defined(__clang__)
#  define BOOST_MP11_DEPRECATED(msg) __attribute__((deprecated(msg)))
#elif defined(_MSC_VER) && _MSC_VER >= 1900
#  define BOOST_MP11_DEPRECATED(msg) [[deprecated(msg)]]
#else
#  define BOOST_MP11_DEPRECATED(msg)
#endif

#endif // #ifndef BOOST_MP11_DETAIL_CONFIG_HPP_INCLUDED

/* config.hpp
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
*/