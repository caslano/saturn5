/*
 *
 * Copyright (c) 2002
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 */

 /*
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         regex_match.hpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Iterator traits for selecting an iterator type as
  *                an integral constant expression.
  */


#ifndef BOOST_REGEX_ITERATOR_CATEGORY_HPP
#define BOOST_REGEX_ITERATOR_CATEGORY_HPP

#include <iterator>
#include <boost/type_traits/is_convertible.hpp>
#include <boost/type_traits/is_pointer.hpp>

namespace boost{
namespace detail{

template <class I>
struct is_random_imp
{
#ifndef BOOST_NO_STD_ITERATOR_TRAITS
private:
   typedef typename std::iterator_traits<I>::iterator_category cat;
public:
   BOOST_STATIC_CONSTANT(bool, value = (::boost::is_convertible<cat*, std::random_access_iterator_tag*>::value));
#else
   BOOST_STATIC_CONSTANT(bool, value = false);
#endif
};

template <class I>
struct is_random_pointer_imp
{
   BOOST_STATIC_CONSTANT(bool, value = true);
};

template <bool is_pointer_type>
struct is_random_imp_selector
{
   template <class I>
   struct rebind
   {
      typedef is_random_imp<I> type;
   };
};

template <>
struct is_random_imp_selector<true>
{
   template <class I>
   struct rebind
   {
      typedef is_random_pointer_imp<I> type;
   };
};

}

template <class I>
struct is_random_access_iterator
{
private:
   typedef detail::is_random_imp_selector< ::boost::is_pointer<I>::value> selector;
   typedef typename selector::template rebind<I> bound_type;
   typedef typename bound_type::type answer;
public:
   BOOST_STATIC_CONSTANT(bool, value = answer::value);
};

#ifndef BOOST_NO_INCLASS_MEMBER_INITIALIZATION
template <class I>
const bool is_random_access_iterator<I>::value;
#endif

}

#endif


/* iterator_category.hpp
H+1WPPlSI3D6qrtaa9NuxZS8yFCXbr80QYVYoep7YerMM+/5JmZrLqzeikvOtN8n9cB8lUKoVL5y0wkc7tz1G6cZm1PPv1Dmk2U2xss6vVVoywjj+K3YHnAn7WfcsoDqrejSKyYaT9xyDzlOmCDl32VG3LTS/f5N3/NHzp6+YblNOilh2lUnlWyntLlNARX5K7eSvm+2zVDRmLqVG/nN0I2Syn3wZL5bqcUapc63y04FZmxZayG9bxp9j/2iPSoVLJxZ1pEagyfUUIVzW41ttepWajSoblrQVTY50vb2BrLXpnXZWROXNAZeW8VOC9zjahHxYkvatYklv651zeYbvQwyq17Sb2YX/Wru+ILJwlPnCeTHWx6kTLJZpziPkCsTfmJnyU7Pt/aVl4nnmx3uuXOd7ixWJWiYbC1VX92q0Riwy7Jpr8VFr178SOU7xRSbCkV2Voai2669D48+3hZ3d/HkleEKJ1qKj16V1tN5k7ctrVkqBJXfKWhYVIjfM+HVywWeFE+5N8dDNc5tOJj7skz+wIjcKduXjunMnbapdd/1J2fY8CeXenxcscy+tsM2Tt1o1tUix+mBeQ47LnCcP/jVfCTOnwVoPW13irozvv2afvqZPXjGkHyby6rEZ8TzRuF+n1cY5ez0HN/pTVnh+cgwzejqx7U94RJ6N9gPyf0znjjjWmfQyX7jaVL+UWFnHI//UnRzqdZw0nCUHR6khMZnUc0IF+TqFbfr3U8s0TIqituVqSWLLFijWf2hYtG6ueMjbFzWPpXziNHPn9auYJHkVEZ/+VRRvnELnRAiVXiKXpxWmU6+8thrbbWPQjeuIqr0ki4lM3BVyIp1k2J2tyH0cVZ3Ny+8XPZTYef+kIEvV27zni3s3KGpvsfF6pLulQ9t/EUJJONxe8Yxk8abny2nqlvXc1ZTvh45emTDrTXhB1dvPpL4hD9OUtKX8eWjrTr/tqWewpXKnPp5aUYta1ivb677/PS8/WyuYcDGlRydZfMawlR1dnKQK/cMvkfIfTwqxw+oPqb4RGK/j9L6KGMzm63N+0MWNgwbWy14HXQ4N+Pp96w42ZKCbRZ5e71zFarPuQ/Vuv+crNnSmD4x5PWq+fKOV2tyEoo5x7ccypySEXpup+7RFqKUXODdyKfqdlLDU6eboDtnDq16Rhl+PVExfsbMeKFXYdJy1cMH+o5pjaT/5Fnff2OkvKapIK96vuunzZGczYM7lm55FMmxnv1pcxI9eV9PtdfWwmImiXBHq01iqvq5O7cYtI0zvdMszVJJJTLNVeMpUyzsjHKnqTgV5+htysq3uLJfwT7+yA2Sj/XkJRVzNFrnUq+rTzmQd0zxKmd/wbxTiv4582a+2G2rNrcKV6Ykf3uTwzj9PbgSK/y09MRrLTZbTU7KZ8nGh7ZV7FkvN3uN69vEIv4E7bD0Jzc8pI6g3oGrMjP8t6RPmCi77oDHpJ8XTtsc3x5SKLdbI2CFzft3W60OsLzLHzTIWs6ULnANmiQrWHDAQ2YiNwNZXP4gYufzjclln/OPZFhdjhGcmWTr4L62DJl3cNZ7Tq7EZNR8ijy3yaHS8kns9NaA6sjW6WqTq1bmZleprP0YN4vGvkIfv+H5wgNpc9dX1e9fNWuZ5AMfvylpKRcnTHCwGJRDdKL36YeEpJiV66fXrSxa+GhfwYX9A+bTV3Dum2tWSrRw3KOEh8dX3O1Y2niipTJbNa1yXdPLtZu7PnK8Ai/JW95f+Ti/yrP7ZIxWft2Goofvu5njlbl9j2PXKbjvvfBMgq/ibDz5/ZI17E3OqpziuzN/WIZfXNSjuqYv6+JTJ73sBY8kOHoVbbO6Ex7mu8edPr1o3wand42WnAt5ZV/ePUhPMwyVPLwow2BCKTVy68OGJUTNR2FzTvkiioy0Co5ZjPvuDUrKZS+24StrH+7JSb8VV6xcl794U2vo98dHFm9pfY8a81o96pMmlwTXJ21eH/K+8vUWMJULumdgKjE+ZIbk4ZDdF+/EyNrTn01eU9o8d40Me2bVlb6WkKWtybVWM1n0BqMdISb43aXHZhnp5X1czL+TscLORtFrm9uZm/XuZ/2QO0G9cYlyjfUOrp06Am6igeMVt+rv74/vb7kl/fxG5PWAz3MdJWyc/Q7nVWtVV+MM73iew/+0rflcd3DRmQ8e6kSlgPfRktu17Vd4LSRMO9SwVC5jtsdzaY23E0vfX1mNe+s3/sYlsq4LLVBdV0/71B4yTz1gwU5l+Qea1dUzFZKWhqj6z/HUyEorusf2m5ammh9P2FHtverch+mte1MbWYFrn1pkXRQETut5sID26Zl9wYWHobvjL+adOS13x15K4bQ57sFuDVeb8JDaX2hDW+TpivJZA+P6bGcT9geqZr2YXFnSpFNz/EclddEeq12MSomCSZH7Y/KWBZ/Qz1mbNHVwNSeVV1wZZC4nNyfw8NRckxVzWJ5TlCfbTAot4iy0jg89Xl4dd2PVsuB7Gpa/8pxmBO0oCrg7OeBSqcwG20uXUwsX6h8bHlyXsPz1kTOu8xsfy61WllugLI80VgwyNRpbKlavuy+gtdRLpeb4RMXLtM+fMOnMC9fgo1cihl4+yt1VteUZNSm/b+HC09Ep624uYyrubsDlqyS+07id1mq3fqHfK42zMWbKcy+v9vm5s/0R/lpg+JTwApsBu5IXQT6bPCws1aJmdv3Iznn5gJZCdHpu0VYaUjWYVWLV3Sjd4rDP5pz5O70JUrvfSl0JaaIc3p3BzJHtbvN32uT/2SlwUq3ty9qK94yE6zU7Px8zsOti7dqVqfGiz0SCbHiHOHvdoAd+INLh7Frva1KyHX4z9HjRwxVOx14csHReMH3awgaXO+aX5ttoLG/g7O8xD7jN9b9/aPrFRdIaz4L8GtQXHt28y8SctcK6cNZ5dOuJnBkXg9Uk1lD9ZTvdb6Qv7QeDybFzFq8ks+3Dzy5Z4YBr4NqeLdvfHnaz4Pqe+Y80djmm71COqHa1XNO3YNujxse5OaoHZd7t7nGbq7Z2xVLvxiA7qXu2UrQ3Vk5URbdcb0Laz+elnSE9m+385i202r76ef6lD07l+gKS2+oge3Zo0JHB48+GW3pGlEtpk/Fq/vmRlLQX0tt5EbF7IzzzpsRMcwsvtx3eYm9uyts+tAw3iXJ0olXgScms2oNnpcjyZwreTKxPki953nAru/W680zLoF+2KiFaem+j0wpLiV0Ho+a0hTrqrHWycV9RzNo3fh7pcpEv0U935iR/k0Nnjq9cIK3rce7Og5xfUibWazMDM6xXFjte/zF9xyV5erPesms0u0eByyaG0HY2n53R3qnhQi+wGwjSjFQrPaaWtbxX8KBdNoR92jQMf3L8Sk9z5YEc73c6Ovt6o5v2658/4UfdcaI8jb3y7J6NrHcfc074Htko45C1PzbD88wgZWcredFep8zGe0FaNtKndYsvlkpPl2jUGHjWtahd5o2bRvydx3x5VkpXk2p+xOb6U86nJCdsjgx421wZqEft1n0QvOy59cyOl3vSHKMCUg7a4s+Ne3R0zuYZNruOnpGTCHEnn+g8JXkhSP9u5KPxygtze4qsjMpa9j4eF3YwbzWXu9B/yTm/1iJfIX7VRnf6+iLnLEXpb3OSf+F/eSutObLouZVc7SAznBP9cB9Sgxeor3+rbJqQTs4I3nqWQj1o42VBd59UFLnI+UjzMP104saItfveaMxJaGKvn37sgyW5oWHxJdmDZZb7HMYtkQqY/TG98U3agpeTMw/H7u5JD5rXMKyN/57oZX3lwxnXCzs35mQ2Fc8RnqMwn+bsUNm+bLoK32xN8D7rbKUWHb9a93X8Kw/MXr9bkr4xyPXbw0cX8tdbntZ5EmKW8e4Ex8NW1js9ZF5WgHWvTYu1tNyOtdl9J0vbzPbK5O+dxLzYvkRzdY1vWPi2JtIa18nJSTEAAiz90yOTbhhnC091C0dm7FRcfTevzWW8fR63T0d7WsajLMUkmvPeVO3N8+bOn7VTJ0OOYLHQW2bXpPOzrmRLhLlfV83Z1kP13L8j8pXezAnyER+KZMenU01u+2vrnyp8Tri2FH2jlC+pcJ51nHKtv23w9j21q/cOXvvRNUfAuPdDs5xlo/TmdJzqpU+7hz9NLJ0zLgKfW/B9/KKrI4wZfi0/7secyTvM+Mjwfo/y3o98f7WiZkpe9YfYeYmrEw4PP7QVJjNd3JXmNFlx5z5Dwi/wCGdboylHzkproicC61u93Y/imOndatTxQS3reZrhUtPVf66OYyxiUbxsH0UTc3gOttKX1CzNKg12SNldGvxhe2Uf/y1r5vQaMz/H655Pz1x7/3UKmZ71YovijK1s26B3ZNPp13K7WvTv3Hqr1r/86ZTDLeu3Rk68dpi9dMXq/sWdV2s0U4cen1ymcjNbZfHuTYZVs4KDj92mD7Wx1NzfZsSrPn9L2Dz37qLp7iMjHTUdhTOaRg64nF6smlM6PkNlS/ZQUCff8Lh3YeL6J4wOw0DK/PkPzkyLD9Jq/b4wL+7YrIfy59cdcysPeuDgxpAXtmfvqNmptzpj5XhFLQXjDMor6RuVwztGXFOkgn1I9Onry1dbrG2Kexb8eKHTPMHwZy3HWTsfk7m7lf3srCJeXY316HvcsJGxZvIUO8otRvwWi9r5Cl9bDW8mLdz/cueDLR8y0S2kGfrbHbcUXbB7HXJwzmMHq4ob3FefDVPjok5fFlolhl1ibUkNSpq7c50L+mq6ZOjincdsTHYWOL2uC2R5Lj54P2muf3es1swFO7U/fLvKfvYwyK4jYu7hx7cyI+b7nNopa2jqVuth5/3s4Qd6pp/m/gXH6crXV/a8OvDJ/bT+m+Uf5u5lH11VE2B0d9X8mxtqHk2k349Y4tKtd5L1IlZukH3/h8vTFbr764IvXbU9mXfOIsVb223ezRv7DjvcOrT/0c7Tg7Z33GMfnmTdXNXdGPXy/M5LT21vbq8LYE1avHqeWYdS0YcemfvJ6oKkwbz9PbH3Iww/DD3N2//t8tYut9trGs7u/OZ2fVVP49EV15y0hp5GPKjzOPVCNkDL7eF9e32PGjf6yeSCrY5uyFO/1k09614T7FdfdX0QgHzYvnr+0aZM9qRT559d2qD7aVfOjWTN/Q+OPvTWPrjA9fbtT59iNZMDru6ru5HJ1veZFxT7lDXXracp0/7idi132Q+ss0TDxhv2jzLn0l/keGi5rbhqlLsgd/Pq7wXXE1Gns1vnr++wN5Q7eyrgVdi5vNOuLO9zB06vv2p/lFC4V7v924aTXYFaO/1O7pr77MFMyiqPBxN9ybEvVDPuy9aep3R4N2i1y214fB5vU3zyyOFTebJRd1Zof7o93ey5Yto5S7LXZZco6XtLqH13yb7WRGGCtVNFfjX13dV1kR+48tFBPinrn3fkmNKlk+4PXLT+9WSeZ9hG+pZpA17kBr8pb3JMbjXPf+z9ZUL/NBXGhZ8ndx9rnTOzP7n36Y6vw4Lnh5r5iZUm9Ivh6788CfgQ6zL72BbH3OcCl8vj45fXDcqXdo9XPzV1krGuoZvautkJ/ofTStYe8d7Afrch9cGm134bd9+zV37zckLP4XiklL/2leJzjuNqk7gtXWcWVx479uXHrOP3e17YlrwdmvH0pObN/ppZJ2arLzn3/l//NpxeQxRetzozbiB1pl3Ttt3LvWarvZ46YKyxviJpveBxUkL+FoM5CtlL0YSnQx0Dm4dQV3+jBM7iQxO3CHVbf0yb5m+ccmoNdWSz7K28V/mv+Q07KI3qfree3h1+/6JFf6SFdXGbLb9p0riE1lLXlrL9Xd4CVs8CNnPI3Pf5M6XjRmfv5nGYk6rM1igNqacEtzQcGpj9efpwnfA05WqKq1pG45KC/FPv+NckHIPUH296xUpSXbL0tn1JSH36nLIGzRmdNhSj74Vu8YJSisn67xol1w8XpD4p8n9R4X1RL6KfbCwg12YsTTGLL/FnVt6zXNHzKj3/usEbCScPnSD/70t7lSc/3DvT/3WY2+mnz/vKj85YUX/jyPWzrVw7xyQqkTuj88oW19V75+TdWK02C5l95n3P3LOHrl4vsD0+h7THXBUpeXuRzTiZGnxCOnlDerHjvhneBbofhO4q7hfntb+2jixe/uGgayTpp+6v8JZ7nz+5aJ16RzxY1i34xMyezm9q1PPY8uxHZdiUnbdc1OrjDmz+YN58c9sltefr/vrrX/1lwi3JQ05XZryelLNZUPyvf8LzX1otl+9wNg2rNR0kclq64l6ZvUgc2Cu4E5jzPCn1wohfwFfKsy3T9h/gBE3+USj/tZj7NeTpJ1QYs9yesaPpcXOK9IH3P06ZNr6Z9vpEZ/Ndu+wSRa8zK76S8m/Nu/IjRdGSZPQR8VlIHfpCjbhcJ395zrl1tzJDMp/MsUktyjre/iXBIp8pMVk/w1flAnf9V2c1k2ecg45TFTWm7f1JXvwp6+D4RQcPvL1w0KrN+uNw04kqNZ/TP/XnnNNlp7XPmMF/IXXIYGlk+Z33vk2Wdr3m3zZvyzJ1Ox+z+uIji1/GI26D1uejgjoVFPqdtkX1jDyyMNqhdKT/VPLQRf625V/7KP5vLr1JfI+iJ3ffGWo4NnHa0HvT1CGfY1OWbzb99jH1zo+mLUfqvCY3d+/OPMTdFPflYddg+4pzfXV105L6g/1rFkyd+lnY/fVu96bz2iZ3BWW/akxPfh553HL88EgNIzXgbkzCp/4ve5Lpt0ZOL5+ft/lXM9K8e+Tt52qvcsEhYUe4cTzZaLh6yvLbAw+ad5tOXTX4YTHl9tWfSROjBj+cOlyStKH9jemSHw/9vvfENgzW+awcOrh7Uc0TiffbvhzefWjfwa+OrxaNPO+ZtnppnLDp3BOK6Z3goc2Lhe9eyPffvfV2aXTJza8fqhoZUadexb174VK3ocfO1PCHh8eh6lXCvtIkiRefvkQ6dg13fej4uWCk7fX5VQsOTfpVJc/1mfaq591U3Rj0fp1pLyJcz3o09OVnyuLw9c8/ZlAbVmfaHLt5X3LqtYxjz+fbPBXoXHN+kP98N3fa1YoqLd8vM34ox1w9GR3OXEQT1n7cGWN4YDd/pNsPiTijsGDRg8r5b+8veVGdNTE8KnZhCj3Nru4sNe60k4cvJevnR3z1jWRLndDLp9v0psrk+N4yXUu1jbnsdmto5FaJf3rk6ZuH+od57w2ygvt31Pvsq9cORA76hMputjywHVe40G4F6ej2oYg3S84btdQk1Tk0hbmVP3A/Vuauu5VqHxJiuV+qaZaurlThZMGshbonyaGF+5pxDkMhppFNGWZTXht+KmmO6jIbtCco2pl8PRD7FR5lr0uZZvomNuJgebpTvppbz/n9a1LtSgUtTStTg7UU1LsUEt3PfjsXdZf40D2z5NL1KMrE5PXy9M6fX6xOat8vLBZ4KD/Tq+vvyXvnnjy7/Ad7pXGiXtfsIpltUoOkqy63I42HE33NTj7vv1LCSrh/fal3IsesR5A0q+Va1693dGFUaphZKK2TpKxmYqIziEgrfe2sueDRMzir3OS+x5sUn+rLJ1PUHqw2fnHnUMUz38SDKzwWxwhuxH4yKfWPWrm+9sfXlNrTGo9neSfVljl1v+YP1nTq9qdMTbRT
*/