/*
 *
 * Copyright (c) 2002
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 */

 /*
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         regex_match.hpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Iterator traits for selecting an iterator type as
  *                an integral constant expression.
  */


#ifndef BOOST_REGEX_ITERATOR_CATEGORY_HPP
#define BOOST_REGEX_ITERATOR_CATEGORY_HPP

#include <iterator>
#include <type_traits>

namespace boost{
namespace detail{

template <class I>
struct is_random_imp
{
private:
   typedef typename std::iterator_traits<I>::iterator_category cat;
public:
   static const bool value = (std::is_convertible<cat*, std::random_access_iterator_tag*>::value);
};

template <class I>
struct is_random_pointer_imp
{
   static const bool value = true;
};

template <bool is_pointer_type>
struct is_random_imp_selector
{
   template <class I>
   struct rebind
   {
      typedef is_random_imp<I> type;
   };
};

template <>
struct is_random_imp_selector<true>
{
   template <class I>
   struct rebind
   {
      typedef is_random_pointer_imp<I> type;
   };
};

}

template <class I>
struct is_random_access_iterator
{
private:
   typedef detail::is_random_imp_selector< std::is_pointer<I>::value> selector;
   typedef typename selector::template rebind<I> bound_type;
   typedef typename bound_type::type answer;
public:
   static const bool value = answer::value;
};

template <class I>
const bool is_random_access_iterator<I>::value;

}

#endif


/* iterator_category.hpp
+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
*/