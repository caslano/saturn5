/*
 *
 * Copyright (c) 1998-2002
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 */

 /*
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         regex.cpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Declares boost::basic_regex<> and associated
  *                functions and classes. This header is the main
  *                entry point for the template regex code.
  */

#ifndef BOOST_RE_REGEX_HPP_INCLUDED
#define BOOST_RE_REGEX_HPP_INCLUDED

#ifdef __cplusplus

// what follows is all C++ don't include in C builds!!

#include <boost/regex/config.hpp>
#include <boost/regex/v5/regex_workaround.hpp>
#include <boost/regex_fwd.hpp>
#include <boost/regex/regex_traits.hpp>
#include <boost/regex/v5/error_type.hpp>
#include <boost/regex/v5/match_flags.hpp>
#include <boost/regex/v5/regex_raw_buffer.hpp>
#include <boost/regex/pattern_except.hpp>
#include <boost/regex/v5/char_regex_traits.hpp>
#include <boost/regex/v5/states.hpp>
#include <boost/regex/v5/regbase.hpp>
#include <boost/regex/v5/basic_regex.hpp>
#include <boost/regex/v5/basic_regex_creator.hpp>
#include <boost/regex/v5/basic_regex_parser.hpp>
#include <boost/regex/v5/sub_match.hpp>
#include <boost/regex/v5/regex_format.hpp>
#include <boost/regex/v5/match_results.hpp>
#include <boost/regex/v5/perl_matcher.hpp>

namespace boost{
#ifdef BOOST_REGEX_NO_FWD
typedef basic_regex<char, regex_traits<char> > regex;
#ifndef BOOST_NO_WREGEX
typedef basic_regex<wchar_t, regex_traits<wchar_t> > wregex;
#endif
#endif

typedef match_results<const char*> cmatch;
typedef match_results<std::string::const_iterator> smatch;
#ifndef BOOST_NO_WREGEX
typedef match_results<const wchar_t*> wcmatch;
typedef match_results<std::wstring::const_iterator> wsmatch;
#endif

} // namespace boost

#include <boost/regex/v5/regex_match.hpp>
#include <boost/regex/v5/regex_search.hpp>
#include <boost/regex/v5/regex_iterator.hpp>
#include <boost/regex/v5/regex_token_iterator.hpp>
#include <boost/regex/v5/regex_grep.hpp>
#include <boost/regex/v5/regex_replace.hpp>
#include <boost/regex/v5/regex_merge.hpp>
#include <boost/regex/v5/regex_split.hpp>

#endif  // __cplusplus

#endif  // include
































/* regex.hpp
FeoWltuX1DgWl2umxUd2HHz01T/ufOHKvS9deejVqw++cnnH0xd3Pvve/S9/cP8LF7Y/cW7lrqPDdxzsn3d/x/S76npWVLTNr2iZU9k8p7p1bmXr3ILqGbGSKbFMvz+/3R6q07vKrP7qSLonXjalvHFeQ8eK5r41VR2rmgc2NvSvS9XOL6wZChe1s8SCiazfIFcCLg8jg7ZxEIQ9OPCICm5kdARHWsLKcZBuv/+bY69929v3df+kr4+/9i1A+Ef8MseCkIybQgoEv0BqvLxocYQkk27+VzWrHW6FcGGXWVQ1Dm2TR9/mNXR4O9cNIvx2eFXNTkmVGeF3sB7JeDBwD31yOqjcuHvr5Y+vMcIoZ4bxa2Bini2f2oTktEdUPlgHX1JeIeURokcYqKfc6E45PFRAyogg4i4bakF1MKAbFRT6r6rSH7P4Soa1xA/4lZRa1HUuQzNgwZsZrrz+xQ1rm9fS5jW3uFPTSwG/ynKTpFB75+674RE23HsngNdW6fuXV7rnmUcBv/KMXpxCWTTKwUXMK8fpdpDroHlSSkZazSjS0KU6RqWRrjHTNRa63IiEEPwAkDWdS+fm0twJtI5B+UTMhIJfoJKkNYpSvabGbGiym9qc5jaXpd1tbXfZ2t02dMdtbHYoq03cpIJyctBZIchFsCWBJtb/s6N6sxElwJ2IHg3kdFhCZbRAxKwmJ7/DL+uNaQZThqkZy7Ri+5Rix0DG1Z/29Gf8gyWR6RWJWbWF8xozC5qL5zcXzWvCzNsAEC6b11I+tyUzsy7clzHX+QC/bOBfnwQcAThdWRG1MG1R1vgNbQlLb6FtUqF1oMA8OaWfnK+eklRMSUoHEuLusLDFJ2xwCxo9nFYvo91LtbnoeitdqafLtHSlIa/eCt9h9fgFAxHx1LhsKKmYUaAYLlSMFIISVs5OgylmFcpnFYApZxdqZmdAHpvml1oWllsWlBvnlihnFgimRjlTwvwZCcW8EsvSWs/yBu+yOtnUYP/m7U+d/NPOFy7f8/RH9710addLH2079N62p97d9eL7Dz7/3q6nzq1/6Pjie54dWbO3Z3hr08DayrYFJfWzyhuHK5tGKprmFtUOxzIDwWS3r6DTHW8xeyu19mJvvCVeNpiuGW7oWd44sLqxf33X9C31kzYUtywpbZ6VXzFZorXeTv0KqSlQaDo6W8hCghUAYdDSfjECglM0DtLL174D8NbVIwMIAwv/iF9BXvbCIBnAsQsDgQJIjY/+Cro/qQY8QUZcVjHc8tWfvuYUIG6tm9clK7cqaxzqJremzavt8LTfgfBbubRN1e6RNdjRL05romwC5B5aBFOXz3rzvbe/+ubraGcpjfE7ff0CZr6OEUePtujuVci1dAmjTQXwJYmgokforwE9hu70VKPyMq8E/fA9qxB+LTxaw0D/VYuOmrEUOG3N/BMM3d3R1LTS65/fMDW7TE1Ofb09MVgE+FWUGbbs3XbwlacBVoguwc8NoIOCHZEJEkoAbP+yqYdefRbAK4eTKq0DFc3wi/NA82gwhH3glKnoIg2jRMsq07Mrjew6K7vJzmpxMhrsNBAcnKV6Ji2aiLQruIEgLPPVdFrLLFBxkgphgUpWolPXmPSNNmOz3dzitLQ6LW0uK2C5zQW4VlYZuUk5wq8qF51L5AMi9v8DfqmxoDEzF9XZgJBw8+iYnCqCY8fKqXcJm/ySVpQPVTT6lTVeVbVHX+e3tMU9A0WRmVX5c+sL5jUCigvn1hfOqc/MaSid21wxv7VyXmvRcH2kv8hc75cUGlhhGeWXUAEZM6riF5gUlR59c9zanbH3l1gnZQy9SVV3TNodEXSHOJ0hZpufrnFQRUYqqSUpBqrCQleY6TIDHIZ0hZFqtNFdXu7kqHRmSj272DCvzLig3ASoXFBmmF8Kpp9fgtI68+C2xDi/1Lqw3Lmk2resLrSyMbyqKbi8wbOo2jCSkUyN86ZGRcNJzcJyx4qGwKpm3/J68RRfw9rlz5z++oHDV7Y+88HO5z7c9cIHdz/57t1PvL3zmXfvfeqde5984559J+7Y9cKCjY9PWbCre+iupr5VZQ1zi6qnl9UOlTfMLG8aKayYGk51BQo73Yk2R6Te4q80eav9yc6C6pl1fUtbpqzrnnZ3+9TN9ZM21vavLWubHysfNPuK8zi5efzbUDRAQ9MmVrY6E3x8jzAbe7TyaD17HKSgnAl+33wLsTB8afb+8bMvEIrRgxCXalyY4Zw+AkV1KTollHkbdm56871ztmq/rMh8+MyxXU89zE6q79y7HXzSpoW9gN/JG2dtfep+Vbu7Ze0A/OI7V96LzqocuGsW3GcklJRTYEu5Ll+78tXXXy3atEKWb6b9ciqIJDEcBbaGeNvCyQBqsLbZ/bRDvGHX5ss3ruBoDKqAKZ9UT9v46E5XFZLiDgRq9MNz+mk7f+rC6QjsUpwxFOJQqoK2pdyXb1xlxNTctF5UapJVmmODGQCsvs6urbWpq8yR3tTVT6+JCjVHzhxrXzAJkChL6GwVXnBgD7z81JKtqwRxpTipPnr2OEBYVqgDCMsyeiBrHghjEAakFg3Ec7GOLjcwKwysSiOnxsypt3GbHdw2N7vFxai20Ck1+lAMTFTZBqdNoZ6uBGax0BktHZczIxJeQi4t1qiqjLp6i6HRZmpxmFudxAh+eSkF5eIiocXHIVySqyV3/k+0/i8QBjEPvjkcQaDf3DwqJKHiSjpfw0hqmQkNM6JiBpXcsFpSaNLV+R29BcEZ5bE5tflz6/Ln1CZn1RbMriua2wBecMWCNoBwZqQ+1F9srPMLU3o6KAX80mEFO6kXlzo0dUFzW9LRU2TvLTZ3p7UdCWlrmN8SYLX4qWZvXp2TKjFTCQ0VUoLR+Vo6Y6CLDHSxHkG4zkp1+bhT4/I5GcOictuSGic4y8tqHUurbYurbIsqrYsqLYvKsVXYllS6l9UGVzbG1rSm1nWkN3Rl1nel1rSFl9ZZZhXLpiYEU2Pi4QLdogrXygb/ykbX4hpBvzs1b/r+177Y/eq1bU9/sP3QhXuefHfDY2+ue+T0XY+e3br/7NbHTm15+Nh6wO/6/TOX7p46d1v/jI2t/cuqm0fK6qeXNwyVN80sqh/KL+0PZ7rdyTZnrB7MEqqzhZqAf6u6l/SNbBmYs6Nlyub2qVtaJ28o61hY0jQrUtTLVcgncH6NoihqChVoWnD40SVEFcko7AzgZdFy6r/qZ7BjWD93DX794uE/IfxqGdmSYhGOChIW42L81pciXMCfMDI33Hcn4bIDrxxixBSshIqb0q64bz1AeBTFgm4MbJola3Y0ru6HL/s3z/r6u2/gzsjWJawCNeUVXb5+Zdfe+1G21AJukQTwS4cQ/y66Zw0gEe5MXTW3fLAF2BnuX75+FWHWB/4y8n+j7UXjTAqPA5yLfn7lLFLQBmdC29Q29BLkuPJVjqpIbUkn/CQFjlhUzkqqeWltsDv19ofvKivMyjKTvFgfaIufu/A2KyKz1QRIXR0+KGpQnNkvOvjKIfKdLY9skyQ10gKtLK0DCpYV6UWgoiMyChxhgGRISpfo6WozQJVVY2HVWjkNdk6zg9PqZAMFg+NWpEMCG+QQEHFGT9c5mS1eRqMLXZxxGRUQ0kEhNyGVFGmUlQZtnQVpaYBwi9Pc4gA4q6uNgkIl7eVTGqwrCGzH7f+E6v9iJAGEs7dI4eNKJ0rPBMvTMPLUdJ6aQZn5vLBaXeWx96YCgN/Z1XGwkarESHVqdl0GPN8F4A63lcxvSc6s9fWltTVeblKbFwTyldDo5DTLKtz6xrC1PeXsStu706aOAk1rXNoU4jf6mQ1eqt5D1zjpEgudhHdJQ8d0dMpIF5vpUhOSLlUmVPfZH+TNTKrml5gXV7mWomCXZ1mta2mNa0kN3AJgwTzL67wr6oKrmmJrWwvWdxZv7Cnb1Fu+qbd0fXd6dVt4SZ11Vol8aoI/JSYaSmrmltgXVTkXVJlHSthtNvfkln3Hrh849cl9z3+49dB7ax95Y+GOY/O2vLJm12ubH3l9y8PHtz58bOueV1ZvPTRn9SNTF+0cnH1n99SVLV3z61pBQg9VNA2VNUwrLB+IlvR7Uh3OeIM9XGuLNLgT7fmVM2p7V0xfeP/gvPt6Z26dPHdb69R1Tf2rmnqXZmpnKMyO2zi/zOIXoAqsZBegXCqYQ4hUpZYJF/PN8avtOH516ep3cMcZ/uPb579t6/sK4ReuQy2Nrn+SmBNgE2H8NpUiiY6OCCaKtbp42MUGD1TOiql4Sa0oY5SWWuQVdlmlTVJlFVab6pag0C6/xiystYpqrcJKEyetocO4VLQ2Ae4qaGmGV8YOKdlRNSuiYcCp61PQHjnDo2S61SyHmmFV0BYJKgf3yZjwYxEVC37Gix6hvKsaBawwfssHGxCjwZGF8kdM9BK0FL5lwGu3pRB+URTULUSXU0TGTiiFKY24UAscKkyqueCm+UWUB3drgEtrY9NWdjaS4BOCn8uPyoUxpTCuFCVUQMTwW8C/smK9JKMTJNVIJbpx5W4R4NdC11oZtVZmnY3VYGc1OVgtDrhl1FkRTgvVdFJFZ3R0tZXZ6mV3BZhtHrrKTOfDEwBfgIcgnC+TlGhV1UZdgxVFpJsdpma7qdGmrTFLitSMoBAFzUQYv6Ri6uZIxf8/No5iFqZjNjbWRJo5Ebz1PDWLE1Cpq73O/sLgcEV0VlVspDI6XBkH/M6pT89rzixoSc9vTs1pCA9V2LuT8konM6FG+A3J6KSWX2KTV3v1TRFLW8LWmbJ2pswd+brWmKIpLGoMcOp9jDoPXe2iy+10xkIXmOi0hS6x0RV2usqGyuoaLHSHgxrwM4Zi4tlp/bxS6/wKx4JK58JK5+Iq95IacGD9KxpCq5oiq5sBucl1HZkN3SUbe0s39JSt6ype01G4ojm2uM4zv9IwnAHHmT0pzB2IyKYmddPTumkFqv44VW0wtBfvOfzh02c/v+/FDzcdeHfxfSf6Vz09bc0za3a9eudDr21+6Piu/a89eODoXfc9t2zT/tkrHuwfubO5b3lV09yy2uGyuqGKxqHS2snJ0p78sr5QuseZ32wN11kjDb5Ud7JquHHS+hmLHpyx8IFp8+/tGt7SM+uuweHNzYMrK1vn2XwFt/N/S8kmoPpDgl/wMYF5nSJkKK2P8hfj+B03kM3AvADetXdmQ1i4jogFXmQ2MSfOI3XGCCOtpQi8Gipba44C3UI6IGGG5WyUWtUK00ZJiVlaYhUXmwQZPbdQUzkb1X+Df8dKa9gZLTej5RSoGTHZK6defeX1V60lPkW+eeaauSu23SHO1wsTOk5YxfDKaaeM4VCynBq2TcMwK2mTlLaAIyxlBBTT185TZuy0XwYsGa0vQBVldhzLmtKUrWO042QNOBFmnM2E127i2gowfklHlp1LuQQocBSUcSJyTkTBCsoYXhHl4CHAAvzhpcHvmkmTCbxGETsg5YVlfPCCowpBXCHKVwHtitMaaZFOUqQTpbX8pIoZlqB3o1BDV5gAmwTCjHobeL6MRmToIqww0KgvSIuAXGNlNLsAvMxmFwpwFarooAhpVw+PEREL0kpZhV5TZwFf2AQs3ITwq681y0t07Ig4z8xAfgHB77iNw3A8A0jwmK1pvMn+X1BMCpizZcy4NkPF5IU02jq/ayAD+I3MqooAfkeq4rNqknMaUvOawOJzUbGTa3JG3xYWlllAhCMpHlUwCg38cru8zqdrDhvbYqaOhKkj39ie0LfG1M0RaWOQX+9n1XoY1S5GhYNRYmNmLKwiK7PMTlc76HoH3WSn22x0t4Me8OZNDTKmRUXT89VDBYYZafNIkW1OqXNBpXdJbXB5Y2Rlc3xVS3J1W8Ga9sLV7YUr21JLm+LzakPD5Z7pxfZpGcO0AiBfzqQQ1emlW93sVq+w3S9q9wuaPLemFeqGgodevvjEqc+2PP3+8j1np65/rmPxgbl3v7Rl72s7Hj2589GTDzxx4r79xzY/8MKquw7OXfHQ1Pnbuqatq+9aWg4Qrp9Z3jijuG5aoqQnUdwZSXd5C9rt8QbAr7+wp6hpYc/w1jnLH5q15IHeWfd0D98zvPi+wXnbumZs7OxbHkw15krycqW3Itxl8YtLNQh+rQKUmlfRctP7/4Jf8HlBNhPmVaIWrAvoojVx0IOoGeXNKLPzX/9NXTQtWx3hETIDUoAAL67mJ7XCQp2oyAAsLCjUcxMqZkQWaU/DzyN56RGBfGWEZbhDSS4vshx4OStK3774zuTlQ5qMWVFgEka1bK+c4ZAxbQqWTc2yaBhGBa2X0gZ4FRLaI4Ofj3WUoMC1R4oatJzZb0bhmwEp8pERDLnZCJ5HjElZZMt4bn7+u/bdDz+Dqh2Ar11CuINKlwlmCfaN+BY3iTE8QnZAwg3JAMK8iIwXk/MTSkFSJSpQi9Na4F9xkU6Y1nLyVegv5qsocNbKjXSliQGSrxoHn2uxVRkRfkv1CMJgZXq6wojIGn4A7iBZIkERJBcXhDQnKReXIgrWAwU32syNdnOjzVBnUZbpuTEpZWWi/C8Lw+2/hTD5/s3qmiQU/gXg/y1+b/7fsTsUZyKlYfEjWl19wDmYDsysCCP8VkVHQEXXJuY0xOc0RObU+ocrHNOKjL0JeYObXaSnYnLwFKh8FaPYxK9ySBt86pawvj1u6EgYOvIN7XGCX1ljUFDvY9e6GVVORrmdUWRhFpjAGEDEFTa63k63OuguB93rpCe56EmevH4f3evndQdl3WF1b0w/mLQMZRyzSr1zK/0LqoMLaoLza0LzqoOzK73TSxz9KWNbRF3vk9d6JA1eYauf3eGn2txUg42qNqPEdy3q/WDXOG4pVIirIve/+PbB059tfOL8vHuP9644OHXdM2vvP7Z178kHnziz95k39z539qGnXt/28OE1dx9asm7fgtW7Zyza1jV9bV3noqrm2ZVNw2VNMworBqLpzkimM5Buc8Tr7LGWSOnkiq5Vw0sfWLTmoT7wmufvnLNs9/SFu/rmbh2ctaV7YHVh1SBbJ5qg+B0Kb5ow79j4WRcYJHS2OojBUZf+VwiPG4CXY65EFy38OoGwDhOxhknrmOhLclXDdY66ClE/IdMr4gRl/KhSmK8WFgB+QULrwPiFWk5cibJXIEfhV3T4QfRsVKPrBe9Pzowp2DFAvVKcUCsLDbpii6HEqklbpHEtz6dg2qUMs4xhUiDwamW0WkxrRLQRt1a6cFOlR4bMK0NiO6BC5Zcgqv0yhF/4i07cqh2QMqKoKwyVODoF6MmDclDnIVFtwO8ScDFqk2bjV8pET5JElsBuavJkekRsv4QTlHJCMm5Yxo3KuDE5L1/BT6mEhWpxRgv4FRfrhSCJ4Q2PyBgFamaRllmiYwBIAa3/ZJh8Mxqa9NWDZk4pkaIG1s5XIvkNksbOAQpmRiWiIhV4wbo6i7HBivDbYDPWWlSlOm5UQpmZP/LveMcBSRlwcMhCgIWTFBc4EZPhVlhQ3QJc4Ux+919QPF6myM6leLmoUJmHa6FZqF8L8MsNqdU1Xlt/yjujLDhSGRqpDI9UR2fVRGbXBmdVe4bLEcFNSijbA8JqGzOtQfgFS2lZpWZBtVPS6Fe0hdUdcW1Xvq4zX9+e0LbFVS3AvwF+
*/