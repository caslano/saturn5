// Copyright David Abrahams 2003.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef RAW_FUNCTION_DWA200336_HPP
# define RAW_FUNCTION_DWA200336_HPP

# include <boost/python/detail/prefix.hpp>

# include <boost/python/tuple.hpp>
# include <boost/python/dict.hpp>
# include <boost/python/object/py_function.hpp>
# include <boost/mpl/vector/vector10.hpp>

# include <boost/limits.hpp>
# include <cstddef>

namespace boost { namespace python { 

namespace detail
{
  template <class F>
  struct raw_dispatcher
  {
      raw_dispatcher(F f) : f(f) {}
      
      PyObject* operator()(PyObject* args, PyObject* keywords)
      {
          return incref(
              object(
                  f(
                      tuple(borrowed_reference(args))
                    , keywords ? dict(borrowed_reference(keywords)) : dict()
                  )
              ).ptr()
          );
      }

   private:
      F f;
  };

  object BOOST_PYTHON_DECL make_raw_function(objects::py_function);
}

template <class F>
object raw_function(F f, std::size_t min_args = 0)
{
    return detail::make_raw_function(
        objects::py_function(
            detail::raw_dispatcher<F>(f)
          , mpl::vector1<PyObject*>()
          , min_args
          , (std::numeric_limits<unsigned>::max)()
        )
    );
}
    
}} // namespace boost::python

#endif // RAW_FUNCTION_DWA200336_HPP

/* raw_function.hpp
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
*/