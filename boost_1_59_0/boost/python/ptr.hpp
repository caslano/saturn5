#ifndef BOOST_PYTHON_PTR_HPP
# define BOOST_PYTHON_PTR_HPP

# include <boost/python/detail/prefix.hpp>
// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// Based on boost/ref.hpp, thus:
//  Copyright (C) 1999, 2000 Jaakko Jarvi (jaakko.jarvi@cs.utu.fi)
//  Copyright (C) 2001 Peter Dimov

# include <boost/config.hpp>
# include <boost/mpl/bool.hpp>

namespace boost { namespace python {

template<class Ptr> class pointer_wrapper
{ 
 public:
    typedef Ptr type;
    
    explicit pointer_wrapper(Ptr x): p_(x) {}
    operator Ptr() const { return p_; }
    Ptr get() const { return p_; }
 private:
    Ptr p_;
};

template<class T>
inline pointer_wrapper<T> ptr(T t)
{ 
    return pointer_wrapper<T>(t);
}

template<typename T>
class is_pointer_wrapper
    : public mpl::false_
{
};

template<typename T>
class is_pointer_wrapper<pointer_wrapper<T> >
    : public mpl::true_
{
};

template<typename T>
class unwrap_pointer
{
 public:
    typedef T type;
};

template<typename T>
class unwrap_pointer<pointer_wrapper<T> >
{
 public:
    typedef T type;
};

}} // namespace boost::python

#endif

/* ptr.hpp
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
*/