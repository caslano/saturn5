// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef PYOBJECT_TYPE_DWA2002720_HPP
# define PYOBJECT_TYPE_DWA2002720_HPP

# include <boost/python/cast.hpp>

namespace boost { namespace python { namespace converter { 

BOOST_PYTHON_DECL inline
PyObject* checked_downcast_impl(PyObject *obj, PyTypeObject *type)
{
  return (PyType_IsSubtype(Py_TYPE(obj), type) ? obj : NULL);
}
// Used as a base class for specializations which need to provide
// Python type checking capability.
template <class Object, PyTypeObject* pytype>
struct pyobject_type 
{
    static bool check(PyObject* x)
    {
        return ::PyObject_IsInstance(x, (PyObject*)pytype);
    }

    static Object* checked_downcast(PyObject* x)
    {
        return python::downcast<Object>(
            (checked_downcast_impl)(x, pytype)
            );
    }
#ifndef BOOST_PYTHON_NO_PY_SIGNATURES
    static PyTypeObject const* get_pytype() { return pytype; }
#endif
};

}}} // namespace boost::python::converter

#endif // PYOBJECT_TYPE_DWA2002720_HPP

/* pyobject_type.hpp
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
*/