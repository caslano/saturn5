// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef IMPLICIT_DWA2002326_HPP
# define IMPLICIT_DWA2002326_HPP

# include <boost/python/converter/rvalue_from_python_data.hpp>
# include <boost/python/converter/registrations.hpp>
# include <boost/python/converter/registered.hpp>

# include <boost/python/extract.hpp>

namespace boost { namespace python { namespace converter { 

template <class Source, class Target>
struct implicit
{
    static void* convertible(PyObject* obj)
    {
        // Find a converter which can produce a Source instance from
        // obj. The user has told us that Source can be converted to
        // Target, and instantiating construct() below, ensures that
        // at compile-time.
        return implicit_rvalue_convertible_from_python(obj, registered<Source>::converters)
            ? obj : 0;
    }
      
    static void construct(PyObject* obj, rvalue_from_python_stage1_data* data)
    {
        void* storage = ((rvalue_from_python_storage<Target>*)data)->storage.bytes;

        arg_from_python<Source> get_source(obj);
        bool convertible = get_source.convertible();
        BOOST_VERIFY(convertible);
        
        new (storage) Target(get_source());
        
        // record successful construction
        data->convertible = storage;
    }
};

}}} // namespace boost::python::converter

#endif // IMPLICIT_DWA2002326_HPP

/* implicit.hpp
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
*/