//  Copyright David Abrahams 2001.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef REGISTRY_DWA20011127_HPP
# define REGISTRY_DWA20011127_HPP
# include <boost/python/type_id.hpp>
# include <boost/python/converter/to_python_function_type.hpp>
# include <boost/python/converter/rvalue_from_python_data.hpp>
# include <boost/python/converter/constructor_function.hpp>
# include <boost/python/converter/convertible_function.hpp>

namespace boost { namespace python { namespace converter {

struct registration;

// This namespace acts as a sort of singleton
namespace registry
{
  // Get the registration corresponding to the type, creating it if necessary
  BOOST_PYTHON_DECL registration const& lookup(type_info);

  // Get the registration corresponding to the type, creating it if
  // necessary.  Use this first when the type is a shared_ptr.
  BOOST_PYTHON_DECL registration const& lookup_shared_ptr(type_info);

  // Return a pointer to the corresponding registration, if one exists
  BOOST_PYTHON_DECL registration const* query(type_info);
  
  BOOST_PYTHON_DECL void insert(to_python_function_t, type_info, PyTypeObject const* (*to_python_target_type)() = 0);

  // Insert an lvalue from_python converter
  BOOST_PYTHON_DECL void insert(convertible_function, type_info, PyTypeObject const* (*expected_pytype)() = 0);

  // Insert an rvalue from_python converter
  BOOST_PYTHON_DECL void insert(
      convertible_function
      , constructor_function
      , type_info
      , PyTypeObject const* (*expected_pytype)()  = 0
      );
  
  // Insert an rvalue from_python converter at the tail of the
  // chain. Used for implicit conversions
  BOOST_PYTHON_DECL void push_back(
      convertible_function
      , constructor_function
      , type_info
      , PyTypeObject const* (*expected_pytype)()  = 0
      );
}

}}} // namespace boost::python::converter

#endif // REGISTRY_DWA20011127_HPP

/* registry.hpp
iWCMglPJEiAUaKTsJProuBGvczjIeaWyUWhmxhUvfYLLpU2kkZ70jqqtpn1unhPWFiUD5VxZqqP38aUZAifj8/dgzS5bPmIKO/MNh8svFz0UmUsZcuSMZE9FL8vIP76H8zY5G6S+/lPrJhLEjYEVVZbCozmNqqULc8A1gTJHR6aao5A+a6zoIdKBA6rJSkjWZJ94IVhkHvPSg1uqjZMHlu3ElN/5tfcNNpx/VvpptnTNRuUMqUIvUNviiYil/H1xwCv8XQzXiCe0uXXdQ9iYzmVVKEOVtQg9g6G9zCUe714XoamjMLujhtjUiejVugpolbSHotb4wqanGtEqOehr7ohY/nT/1WmFGTJ+nAkJ6mHlpUTC63Tmp5RP9XehnZDeqmjQthbWZhDpXTp/g6FK2piERf1QNh/L5Vb4UGXZrQUfxjdH0eqCz/dr1p8dwSorWdSwMZPXoyC1Z3MTdUYmLB4EaXWL1hZSd8JtOziPSh+xv11kDdl3sZSsKiqFRYppNjtv5dTkq5jwfZA9F9CQ3/dlrkWN1SjNgy/zBONAcwmyhVxv5RxjYRGDrBnMBw5s65qELJLoQz91WYUYDw9LINp2x3/i4JpUZCc06CnHWIcUHvIbRC5hPp/dJqJIxLbS2FbN+YcThuSon/wHW4cqp3Ydv10WDQgxxApQ+VDq+XSlck0wK2e/ki5bE1BCpnbNsvWrAxAVPpMNpLe8RPP09Vifg3rkqP6qS5QGER+gs8QAXZJ3wvo80PHew7U9Oxf9r1gWuOQEep4DAzZEszCIlQs2VRhC1g2QWgDvFCAQwXevFxVXFxVSokLrKt5aVPto6uzhqif3HmlkEXDsOhjH0vXYzgeBr/ZCiwhMEQBh4ywYS3OupQAtJBRUrqy0Yogq9U76nZdhVo2P1i9NCHhF+z+LMqYjBDtZ3eXYWLfKwPI7FbtZR2LncgdLSWlwHfi+fpTaDqwONE0zVlbaG+Ju5C7k7nT904+mV6C+tUn6A7d4cXPxmEsgDyWT1GGXk/2EopBtnYS2sJK1/0x+kZmxQuOuGArYYdLu38/80uWsj1CxNkyWSbmmqWwYlTEA26uSbwfPYMfS8qX6WQAuaR47TEnJFkjr0t9wi1EjxigJdLqVE/4j9DMzTLr/t7pVgOmrzELP+cBu3rV2RumMDJPdV45URnpR/Fw/RHtEu1S545P6H2uYGKvQ+j6Vowyp/lDpwYd//MdkHuZLh6ruf+gRtzb1rEq2DklY8C+Ja8KM4BeWtMXFuIJ6juobiEXyZ1f3sQ0HP0TIv/HyxycAHqn3aMCV7OWPakk+3zVrQNA8Y3A/qlFg0Kwk6FaVRkdW6KdCQ719gQoxSU+/LLXMpSw0sLrh2g5wbSkrECTRiVkqqKCZMj6cdHshEypak7k3v/gNIvJgbdI505W2odAkpQaY/6jOVucnzrtGJ6Ev3/hWAJL0oQ4S1bv3TPu4BFgQu1HuX/1/0bjsWsZWq0t+2gmsd1UrMPcskd3mSEny0J06wtmg0esV9BXaAJaTlTz1A2+jPLgooE0ooW/o0g3OjjsqDwHQoJTLiao+OCTw14qVjvZzOZKAXtga8lSMqc1GKiYBjIyXGzVcjhMDBiay7ZT9nl1OAi4cGwIEi4OMNqSgqQqFD3jzei7WtwJuPM+D7XgYXtVTAcN638625+BmaDnHw7AEbKrArmQTWG2+E8lkyswKOPpnayXauqs6eOgszwD0K93iC53jYmgpUH2jFcpPUGopyzkgqtsph8aAoJ+A3AM9wW0rG6LV/+NqlRqVqFfFwSnLvyeJ2gNMl9OBBs751Zue+VWdDsVWzyM8RluSjRdDBaexHO7XYJz5nX+dPlijdMS32b1I75pH4qXQHz2NDev6fWQQ2DkEunpIJ0fdu0VaK+66iPODdK7u4GGyanH7Zm7hzyilCQ/GNfN6Qh+DnKtKCkMwLri6P5UV6qZhJvF6UpvqWhACjPhPAwgg1jedyOyImq9MqVEc2FyV0myMv4droWA2esmfvDCgsHewRijlfKJLKkBNP3FKHPxmbTwHN81Ys31ex0F3S1/rdtm7cehyFPRMsbB5ixkKuxNNA46PFg+EjAPAJYF35rvOcH/5+kIXv5QljeSdKfCo0VBDW0/KJcSAOJxJeTlKBLPzv0aB45Lj5CiaShZR+AGOT9mT/wi/2SGd8IYEOZULviRheg4IZuwDS5yEB65LfDR0c7ayWbXHW2F4Ww6RZV9SR5e9gUPx37rS5WYAhIKbCtNuofukG/HE6bnxFI40LIecNKLcYy2z942UyE63IWwBESVBXVtHS37u6AFOQCXKZNOg4dlK8418U7BC2FejG+4sFgIDyMKvgJ4pOxaj4ea7vP3fgviXsH5mVQd7J2cp7SKXUZa9X25yF6tLDzME+aZ4xOsgj3Vsrn+Bqq77OJHk/v+flpRuWG/l53YO34WsFnCO/5RgEPKlliuyVapbZlZUYOlLaaWkpGyhg1BeM19ccTuFx8rLYFEWXTm/2WSyN7eyH3s7czddnNxSbeH+c0pTsoniABlZXmGrUWaTlx2NVINBGv/1yLmVxJrb3j3tmM9y6rm1n9189XCQVGMduSh6cczcW0xzp3SSb8CU2RmnaX72R25D/eItcqFgZDW7JnX/cmf2FL35KaEpkObEjpRx8w5qCvZZLbw9SbUty0e38yuDGL6jky/AaK67hN18lfHFsOaV9+FKV5ifdsuTd65wwIOHEQQJlewvhmwfZSjQQ/TIbrsS0sh3/tlxnpzlVRBgvEXRztGad8SrEzz3SBwIG3JpXeoIXcaUaabnzFOeU8+ADFket4kxqY5qTp1F8Y5ihIm2KEyX2JJxAlROkBZ7KHafPPgHVCGrc1GE1doVfE136pNdJug6y1IGrmRFdJcCJKifg54dlnO7espk7QONtZriFvqNSfNvDsbYgzTv5VnCLrEXfIuhPeCzNBhgaurJDPBMjHp3rnYGae7XHLWdpnnx4LeYqP0taXy495/a1IpHmZrbps9mGncq/bfI0sQWMgdEanggr87dmjn6l20HBUsH9XAelnhQp98vl/72pGbxVmIChZhst6fxudvCv8dTkJQ8Ix1pqKsiXkm5GNMHMxXhywDMcenMVbC5t6ijx8VYNo4asxNXBgdy19KZn/WI3pzqMM1WYJjVWKNqvXQVMPkC/V8vylGc3WMGTrRtftDG62IFYPQZtqP0+Ztc0/mqKf4QvmXw5aWlV0Qz+cHipjCIzAx3Z8a87yPEVRyy9rmMTYMqEdy7oNiY4GlOl5GTtIyGglLSQrwQGAi6WpE5plHg21fEsvSo/0gq84e1cq+IwrB1+PV62sgFjjJ006GvM3QtGToUa1pilRcUTODusJcLShCWHYc0BOlQNvPEq/QK5M6PtyOqSOyNG9gsVa79ysdWk7HzUcn0k4KgUJsxpCgcwIYR+uYBZmdZMDERIsa2rMfH+abCfMERFPrFEFWXKkvacsqPctOfMsv04a4RH80z7XiGK3aNWrzHoZT5muKJkO7HTxAHo1tU0LmQ0Z33R4LVwmUkhKj75I5e1cOBEt3XJRiBHMSwlR5mpVxDrkRIdRqFAsa6UEWupQUWf46iJRdz2G5CRlFgf+wnS4FnitEgLMqQ9qojB8MX00hVbjUW+yDvUfM/tvpsA115K+lM0L4uAmvZ+wIL51HoDlOubd/bA+VH8kTgkxbn2IqZt7qpdtGq6ICEZg/QE7aCmhugn2m7Mkth78dFCrA9sUG8YbzpEdLuzODVjmBNbHdmPcgz54hqrq3TG1vo7xTo7hTftsnBerKoo39HwUnE4WW2ooqQncHSWG0lXnOXvsEuoD/IA14YIUn29MyJApzPKgGuwhTWbvCXvo07foNvfhUd3qBcKnw6gVlphH/MGWviQeoE1eE/TFzX3L/tIRoP5rUW0MKWbf3Xg5AnPSGNtttoIOtLmtJRHu28sd/rKBuByv9jzyOGDIJ6M6vv4LAC3HQDeklyI9ORu/xXb5JCpFY+3OsJNr3H8zyiLZ2UMuI9u2qsECdkML8GBxkUROZNhB1uhlVLzwy9/8yD8jG+UKQCMVLsbCMWYA6NU7nY54CaG5BoOtzhqnJ+EKttjLHbz9//JXzNjRNIX4oXuvF+7BTx4pPqKJRCG9ZjDtnDJvO+kTrvc4eReXUjJBKBzl47Pyzr5M5/wSGjA3r7OViVRfdfdGmC31ZQWtJ9Zc78gXDxDVITZlnA1NWzp5E8W15O94KyaCivMfdyBEwkC9sHTv8VYQlu9X9KufjDUVJNyhhAQDg+k0ia4g5LFBaDChvXY3xZofC9rmToJUeQ6lDZFLjYs4vB7tH1VtG6rAEHITMJ126Mtkxz9oN21TOseF4AZJcKBplpAfULFaUYosEEBj/LDM/SyUgXwXqMnPEh9apA3+2mOxEtemdZ6EFIKifnO6f+ChBXY6hnPbSxO7b/teSSwtxDG5hQO6XwqjK7vEoXheGTceITpAYdvZ+SeP4kOBhtRJ4/Sn7YuDPACMIuVKYdWbymQly5aACxvIHM6VkP8fVDE5RgndN5wGicJ53jy0EtAnb2wA59dfj7JeqRx8D9eAbqyWNg+WUXrFIWns+cA9CKgihpHVgSFD/MnL/BuVPgPjt/LiAsFMXvvkF+rT4lmSuWopfVuFtkYiwk4s8TjZ8FwxojwTbjeKiSSRIahFBBAR6EUF3lnCSVYfkV9KnE9II6eVzj0AMrGl4/GtABMOgHpz8Q5DVR8v7u2cDI5IFIzpMZBOUkeZuq/CvUiwB3/CIi2EM1y99N75qlKdutwkrptY4sGL475hQKlziWXuIoEgoSnQfVQJ+V3Z3OuZPa7OGSjX90V2GzvfG3aNYTCIsK8K78r6SAYJAduBCmnVS3RWhGoF11DopCSIfNUyqlSZSBNuDunUl1w2r4Wp8Wl1noYKFEoAfYBRqB83n5GthIQ2AxaVxkYMxlcBwCV7Wk274bbLZqRW3Wl7ssb8NDyO317Ic8PQuZo/Is+xOlQUIRAQDM5Zqy+LBWIiK32crJ/+wBJYwXb/bt9nzRhoB3H3nGWHrkza+PXYCYWV/Meul+uyyvh6fd87H2uLLUGa8/YHZeUfSGUtdHRj0X7p07RxwbHr1mJSnnJEgBwJKFgIUn64BoRuma8xCJtgeoyWwNJos+vlSeSXvsV0PYB7a+Nrk5XsWQ66LwEhCmEen8FWhK9CnU/5eyvxVGWgKDjyifF7ViszW0UtWwPg6Ch89UMdf1xVYzPMEkt6Ictv31/r8Gic5fwy+MBDlcyGvLCvAU45EEf/7GLoJaUT3wMV9OOpXM7fVOXLTJmmkhfGcXXpkpAIH6Loa7cHdIGPVPsE0qzWa87W9iXS8aBkNzB18KoRt8XusugNNKr3fZ1nL+e92SK4dfkXVku3qa8xAfjGBnYmMw8FfblDK8+K8M8jR9e6t2kiI+6Fx8Zqb4/oUcIWUIvlaAjfxLtWbwOClGT7xha1wMqY5Uaq0vQGLPVlBRW259D0nBGKwV7DFkBdKi2loOGIU80YczVP+Oa88QYAT3MqEHGJW84XSGeBckhaB6F1L2gTP7q8/SAJ5isMPPfhWC2TdbdNCH6B1XQYLZDDtVsWT8ImhbsvNlJvWL+sNG3Fyct6O+Uh3vieFwhhcw01s2LyWqadFdXrmHq19Kt0u/XVuy9pay96MoytYfBgFVNt//oCjAVU/UqRgOLNNdaCdeblNDSvrYOucqgNKxG7iF4nSA+kjv9GhIUgfOYSOEO2RrkZCr+xbdBnGWMX49yHEiYYvXFbBUQRi4VjsZayjqjl8l3/HHl5CqXZ3odimF0ysH3aN8nWIOTTHYYb5p+wwn7eqxfsWAIDw2xHcFVjBQSLjNCxKprmQFYFi3t1VOmt9X+qPbAO8FwT/8sWtafPzGAdG4/ym8wNWhdrv3APtqDt0AtYD1tH3GyCMXBXYzePPhpESjCj/tIIIFHs0q1iu9btbpXZtjZxoYKg05GBQ47/az0hm+JdfAiXWF1uRg8IFSI9/HCqZGwp8jTXRt1Z7fFHZgY3TOlzRQuecWaejtCpQyADgoCvd5rLg1O621Is0fWF3hOVeDfZp93cg2kkuR90kCvtV7d0G7RlzdQD/A/rhR5eI+knrjOf0YPjGcvIk+/+See8oXgC+Ai7oGn7nJeMPZly9jTBnCpGrgLW3fW6BpYZQ7nPUXn1XeQ+ytoyE68UdLM4OUz2MKmLLXu9RBTew4dd9qCju2wLGEcu94SJy/QekBd5Ymyy2l2AvpxBDtGqaaqKgb5KXqbDP1wHWDCVTmi0m+4plSgx1a7AEnh7olu+8TkqAjIBkjQCwNqYBbsphfghbZwp1weSUQXIwLtpbbdf7jtRG5GCmYrL/U0Gertaeq7mGUl4Wtnc6pun73XFKfEl0Cc+kG2o4pM0ZcxrjxscZptlDj8Z4863pJlpLtP+OJ/hdFnw5PD/VmW8BGv+emAWgPoEoA0ylijFwnO4/jHqKVxsDCR4J5ubf4X5qsGFM9gxoOZkFF+iZcp3c9ZpMbaXXGsk7T4bhtepUWk2MeHjWCeLvn/NvA0dRHRUq3S71CMwh3XDVHRpbo6y9PVG+5ND77hFJYzPwn7NpaF6vhki2MYNJslYAU0gl6H7hsvRuNJ3llK2C4iEuxF5qAVyHHpEvtN3xjVUnzygsqjt35fy9lXlNtyBWjkKUR9WWOjgvmsOpSIynxFv3QdWmV4+utz1QWauvcbSYUKg9UV5z/QJWZSDDuj5Op5+irVwogqLYb6AzndsbFkJ8wfpwsWXbU7SRL762U+OLmWuBmzfe0AM9ZWG8CCq1tNv6jAyR58/ls9yMmaN6skVBguQEraGGT5ugp5PZgAjPWx3K54QmrwNBijN/UiHOgrS3y3nUmjZqSmoJyvRJMB0W/1scZ2E6ulxqv2x//dG7SmmXpcYE+XejVMwr83opqd0ZBz37bbNJDjXbIkK8V4PvWJ4lGyj++bAWK2tGnhKKJ8hIgI+u2JbSDXMuNBodzM9i7+9A5AjQnxYWZ42Vq9aFH0aAPFH5caZaCU1sPVOX0TOHVOJ6rdHyu8O6uEKilWqqM/LAKk0eN60MKqXgkjjkQ+Af4n5598rOYdt08nk0Wuk1WLTvX04hON+OsexlLzhx2VGAMaf+IdnzobaF2XwqbY1ods+XqbFf787ChjlRfjVpLB+d/K4GGFLd77KrURBWw3RrLAyguwZpqsrIk7PiqDOuItnwI4n3PwJxZ4NE1OcLAE6hIeJRWHODN9HXLm/52TzGgM5EbEEtBzqi1lNX/gmk/vIro/F7lmd2Hzl7XFwr4EgloaAvwtWFDkPBkpmS3Uw09JJZx4sOL99/IXKBIkm33SY1NRPnMpE786VlJfsRiABebkujQFNERdV3Xzm4NeHUVauodThF/heE+f5nDCuvhZ/5Z7LMXU6z7C7v+lCwRDkZ13qi+O+ZJzUCorUtmKbHGfbkbIsECJBJbi44ZzlfaxA8iVmXAc+IkA/OVRmfaksw2osfNiVIiiEQ+MsTfP2b7PUR00Gqd8Vxlarq2/wPdtHdgiZuGrEpmTlvoXpg5Ab9tOFzk8c4AB+GuGNJxz/QVDMeLlIP0EQksdC+6egDb
*/