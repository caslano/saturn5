#ifndef BOOST_PP_IS_ITERATING
// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
# ifndef TYPE_LIST_IMPL_DWA2002913_HPP
#  define TYPE_LIST_IMPL_DWA2002913_HPP

#  include <boost/python/detail/type_list.hpp>

#  include <boost/preprocessor/enum_params.hpp>
#  include <boost/preprocessor/enum_params_with_a_default.hpp>
#  include <boost/preprocessor/repetition/enum.hpp>
#  include <boost/preprocessor/comma_if.hpp>
#  include <boost/preprocessor/arithmetic/sub.hpp>
#  include <boost/preprocessor/iterate.hpp>
#  include <boost/preprocessor/repetition/enum_trailing.hpp>

namespace boost { namespace python { namespace detail { 

template <BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(BOOST_PYTHON_LIST_SIZE, class T, mpl::void_)>
struct type_list
    : BOOST_PP_CAT(mpl::vector,BOOST_PYTHON_LIST_SIZE)<BOOST_PP_ENUM_PARAMS_Z(1, BOOST_PYTHON_LIST_SIZE, T)>
{
};

#  define BOOST_PP_ITERATION_PARAMS_1                                                                   \
        (3, (0, BOOST_PP_DEC(BOOST_PYTHON_LIST_SIZE), <boost/python/detail/type_list_impl.hpp>))
#  include BOOST_PP_ITERATE()


}}} // namespace boost::python::detail

# endif // TYPE_LIST_IMPL_DWA2002913_HPP

#else // BOOST_PP_IS_ITERATING

# define N BOOST_PP_ITERATION()
# define BOOST_PYTHON_VOID_ARGS BOOST_PP_SUB_D(1,BOOST_PYTHON_LIST_SIZE,N)

template <
    BOOST_PP_ENUM_PARAMS_Z(1, N, class T)
    >
struct type_list<
    BOOST_PP_ENUM_PARAMS_Z(1, N, T)
    BOOST_PP_COMMA_IF(N)
    BOOST_PP_ENUM(
        BOOST_PYTHON_VOID_ARGS, BOOST_PYTHON_FIXED, mpl::void_)
    >
   : BOOST_PP_CAT(mpl::vector,N)<BOOST_PP_ENUM_PARAMS_Z(1, N, T)>
{
};

# undef BOOST_PYTHON_VOID_ARGS
# undef N

#endif // BOOST_PP_IS_ITERATING 

/* type_list_impl.hpp
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
*/