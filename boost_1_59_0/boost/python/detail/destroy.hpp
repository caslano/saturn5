// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef DESTROY_DWA2002221_HPP
# define DESTROY_DWA2002221_HPP

# include <boost/python/detail/type_traits.hpp>
# include <boost/detail/workaround.hpp>
namespace boost { namespace python { namespace detail { 

template <bool array> struct value_destroyer;
    
template <>
struct value_destroyer<false>
{
    template <class T>
    static void execute(T const volatile* p)
    {
        p->~T();
    }
};

template <>
struct value_destroyer<true>
{
    template <class A, class T>
    static void execute(A*, T const volatile* const first)
    {
        for (T const volatile* p = first; p != first + sizeof(A)/sizeof(T); ++p)
        {
            value_destroyer<
                is_array<T>::value
            >::execute(p);
        }
    }
    
    template <class T>
    static void execute(T const volatile* p)
    {
        execute(p, *p);
    }
};

template <class T>
inline void destroy_referent_impl(void* p, T& (*)())
{
    // note: cv-qualification needed for MSVC6
    // must come *before* T for metrowerks
    value_destroyer<
         (is_array<T>::value)
    >::execute((const volatile T*)p);
}

template <class T>
inline void destroy_referent(void* p, T(*)() = 0)
{
    destroy_referent_impl(p, (T(*)())0);
}

}}} // namespace boost::python::detail

#endif // DESTROY_DWA2002221_HPP

/* destroy.hpp
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
*/