#ifndef BORROWED_PTR_DWA20020601_HPP
# define BORROWED_PTR_DWA20020601_HPP
// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

# include <boost/config.hpp>
# include <boost/type.hpp>
# include <boost/mpl/if.hpp>
# include <boost/python/detail/type_traits.hpp>
# include <boost/python/tag.hpp>

namespace boost { namespace python { namespace detail {

template<class T> class borrowed
{ 
    typedef T type;
};

template<typename T>
struct is_borrowed_ptr
{
    BOOST_STATIC_CONSTANT(bool, value = false); 
};

#  if !defined(__MWERKS__) || __MWERKS__ > 0x3000
template<typename T>
struct is_borrowed_ptr<borrowed<T>*>
{
    BOOST_STATIC_CONSTANT(bool, value = true);
};

template<typename T>
struct is_borrowed_ptr<borrowed<T> const*>
{
    BOOST_STATIC_CONSTANT(bool, value = true);
};

template<typename T>
struct is_borrowed_ptr<borrowed<T> volatile*>
{
    BOOST_STATIC_CONSTANT(bool, value = true);
};

template<typename T>
struct is_borrowed_ptr<borrowed<T> const volatile*>
{
    BOOST_STATIC_CONSTANT(bool, value = true);
};
#  else
template<typename T>
struct is_borrowed
{
    BOOST_STATIC_CONSTANT(bool, value = false);
};
template<typename T>
struct is_borrowed<borrowed<T> >
{
    BOOST_STATIC_CONSTANT(bool, value = true);
};
template<typename T>
struct is_borrowed_ptr<T*>
    : is_borrowed<typename remove_cv<T>::type>
{
};
#  endif 


}

template <class T>
inline T* get_managed_object(detail::borrowed<T> const volatile* p, tag_t)
{
    return (T*)p;
}

}} // namespace boost::python::detail

#endif // #ifndef BORROWED_PTR_DWA20020601_HPP

/* borrowed_ptr.hpp
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
*/