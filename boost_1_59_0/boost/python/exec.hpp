// Copyright Stefan Seefeld 2005.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef EXEC_SS20050616_HPP
# define EXEC_SS20050616_HPP

# include <boost/python/object.hpp>
# include <boost/python/str.hpp>

namespace boost 
{ 
namespace python 
{

// Evaluate python expression from str.
// global and local are the global and local scopes respectively,
// used during evaluation.
object 
BOOST_PYTHON_DECL
eval(str string, object global = object(), object local = object());

object 
BOOST_PYTHON_DECL
eval(char const *string, object global = object(), object local = object());

// Execute an individual python statement from str.
// global and local are the global and local scopes respectively,
// used during execution.
object 
BOOST_PYTHON_DECL
exec_statement(str string, object global = object(), object local = object());

object 
BOOST_PYTHON_DECL
exec_statement(char const *string, object global = object(), object local = object());

// Execute python source code from str.
// global and local are the global and local scopes respectively,
// used during execution.
object 
BOOST_PYTHON_DECL
exec(str string, object global = object(), object local = object());

object 
BOOST_PYTHON_DECL
exec(char const *string, object global = object(), object local = object());

// Execute python source code from file filename.
// global and local are the global and local scopes respectively,
// used during execution.
object 
BOOST_PYTHON_DECL
exec_file(str filename, object global = object(), object local = object());

object 
BOOST_PYTHON_DECL
exec_file(char const *filename, object global = object(), object local = object());

}
}

#endif

/* exec.hpp
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
*/