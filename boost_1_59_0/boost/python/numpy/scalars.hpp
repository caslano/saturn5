// Copyright Jim Bosch 2010-2012.
// Copyright Stefan Seefeld 2016.
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef boost_python_numpy_scalars_hpp_
#define boost_python_numpy_scalars_hpp_

/**
 *  @brief Object managers for array scalars (currently only numpy.void is implemented).
 */

#include <boost/python.hpp>
#include <boost/python/numpy/numpy_object_mgr_traits.hpp>
#include <boost/python/numpy/dtype.hpp>

namespace boost { namespace python { namespace numpy {

/**
 *  @brief A boost.python "object manager" (subclass of object) for numpy.void.
 *
 *  @todo This could have a lot more functionality.
 */
class BOOST_NUMPY_DECL void_ : public object
{
  static python::detail::new_reference convert(object_cref arg, bool align);
public:

  /**
   *  @brief Construct a new array scalar with the given size and void dtype.
   *
   *  Data is initialized to zero.  One can create a standalone scalar object
   *  with a certain dtype "dt" with:
   *  @code
   *  void_ scalar = void_(dt.get_itemsize()).view(dt);
   *  @endcode
   */
  explicit void_(Py_ssize_t size);

  BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS(void_, object);

  /// @brief Return a view of the scalar with the given dtype.
  void_ view(dtype const & dt) const;

  /// @brief Copy the scalar (deep for all non-object fields).
  void_ copy() const;

};

} // namespace boost::python::numpy

namespace converter 
{
NUMPY_OBJECT_MANAGER_TRAITS(numpy::void_);
}}} // namespace boost::python::converter

#endif

/* scalars.hpp
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
*/