//  (C) Copyright David Abrahams 2000.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
//  The author gratefully acknowleges the support of Dragon Systems, Inc., in
//  producing this work.

#ifndef ERRORS_DWA052500_H_
# define ERRORS_DWA052500_H_

# include <boost/python/detail/prefix.hpp>
# include <boost/function/function0.hpp>

namespace boost { namespace python {

struct BOOST_PYTHON_DECL error_already_set
{
  virtual ~error_already_set();
};

// Handles exceptions caught just before returning to Python code.
// Returns true iff an exception was caught.
BOOST_PYTHON_DECL bool handle_exception_impl(function0<void>);

template <class T>
bool handle_exception(T f)
{
    return handle_exception_impl(function0<void>(boost::ref(f)));
}

namespace detail { inline void rethrow() { throw; } }

inline void handle_exception()
{
    handle_exception(detail::rethrow);
}

BOOST_PYTHON_DECL void throw_error_already_set();

template <class T>
inline T* expect_non_null(T* x)
{
    if (x == 0)
        throw_error_already_set();
    return x;
}

// Return source if it is an instance of pytype; throw an appropriate
// exception otherwise.
BOOST_PYTHON_DECL PyObject* pytype_check(PyTypeObject* pytype, PyObject* source);

}} // namespace boost::python

#endif // ERRORS_DWA052500_H_

/* errors.hpp
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
*/