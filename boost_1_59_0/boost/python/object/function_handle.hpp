// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef FUNCTION_HANDLE_DWA2002725_HPP
# define FUNCTION_HANDLE_DWA2002725_HPP
# include <boost/python/handle.hpp>
# include <boost/python/detail/caller.hpp>
# include <boost/python/default_call_policies.hpp>
# include <boost/python/object/py_function.hpp>
# include <boost/python/signature.hpp>

namespace boost { namespace python { namespace objects { 

BOOST_PYTHON_DECL handle<> function_handle_impl(py_function const& f);

// Just like function_object, but returns a handle<> instead. Using
// this for arg_to_python<> allows us to break a circular dependency
// between object and arg_to_python.
template <class F, class Signature>
inline handle<> function_handle(F const& f, Signature)
{
    enum { n_arguments = mpl::size<Signature>::value - 1 };

    return objects::function_handle_impl(
        python::detail::caller<
            F,default_call_policies,Signature
        >(
            f, default_call_policies()
         )
    );
}

// Just like make_function, but returns a handle<> intead. Same
// reasoning as above.
template <class F>
handle<> make_function_handle(F f)
{
    return objects::function_handle(f, python::detail::get_signature(f));
}

}}} // namespace boost::python::objects

#endif // FUNCTION_HANDLE_DWA2002725_HPP

/* function_handle.hpp
dDQAERhSh5qvzvlrjmHNO91A6VH+loFxkIihbW3y3CpkphETiiKaXcBxRpELgWIqXdXmxOvfFJykSSSSoa0AJ1YyY+NwhfyKto2z78BE6mtr+57o6wT/QKE+AVaCGkVAd26krICZwFBh00wj1UzUtNAZBNcrqaxdZRprpixZ0UTic+aVhDLBA9J9Rx8BF/p/awQLngsQqmwAIizRKuRXMzPt2/wRxTKgVPWjzHHVrE/whQFPMjFhttX/KrNoja+4kpse1JdN6iqnjD6Ks68y1Nu9GTVbbI+FhG1Awzbf8rwTQgaDa+4vMzzYvYfSVnhUJEp10KFNNtE8SA4DKGAKhbetozfHzBFZ9+hRwH0KhQS4vRi+YV9njkWsttccBDg/3KZTrUUWMmOpjxEEtfhG3J064WhvGvyf1PY0ygh33KoWbYc4KflX2uZjGFO+2FBrcU2zHw+0xHwyj9kPu9JIu1gfOF62J01upoDbX0yyNbSUN+8T70t4UKmqAUN3L9fwGTCyj2fGTsIUGfwoQ1RUhFeKnc9JNRe3ZZvpCLIfiM2PcWOYYjClIQXmqYgcqPIPDDho8g4UlOp0rwnJQrnx1hshWrvl9j3wDzzgDzzqBp8QODamJNFPIMFOJImmU5yiH94iH944plFL/WTcJ7txaiYEO+9nRe6aeYXU7DRCvmGOt28MxHZZz77pjNi10x93AtzHgrB+wFgea7Hd1WS9yAOhaLGhKfM+YN30hdTH73kbydrOPpBujwmpkXY454jhi3+QTUxwQ5jnvm7c1jTVx59568gWSXrBeU2CIUe3w2jwGI8+Cu6+b8JM7GGbbWrUltSanaNW59VyoCly5rzreKy9qI/7XROgNz+ZZhKy5076DVQaI1v3CDhoQDcu6znfpQFw+Llul3bjghRmdAY9XNgpV43HMVvJPtnvKhGKUf1zEP/AZ5ZAz8w2AjA3aU0yBpcUMAbjmhD8EI/G3TkGFKhMVHOXvJyR659U/SElsLVLc+W87ESALpyAhozs7R9a/EF20gKn6iy82tnCn07x72FIKuaNK972IjExxWkZ7300KS4uQMjJF1IPs6/8GHa7HBTiUDe4N66ng50JfvFheiEWj6M5I6/IJ7r+6sunfxCMTNsa+sINK5OwWsbxrW9EqsnjAf6i+fuFIvlepfdeZfSuPUl4gOBtpIURf+8uPM4NQA5AwJZwz05ATGHdZ/CCg/QVDoM9H3M5jyfS+qI+SGNN2NEo3SLJGzL1BryR4zv8pPv6/mP3pWoe0XzWbJZhE9EsbDXXHEq9nmwa0dzUILzBUfvrXfXpb4N+xK5agTmytcf7/LwpxPaWvXkJPu4KxqxB2qZj8D70D82206m0RCI1mB082C2rEoGJk/lNqvAZDfk2UcQI9yvaVGqrw9kIm+YwdQEFtIbK+r1//i683C2lHByev2d1eXdv7tEc9EsBNXQPkmh4lW7H7G7TWaNL+kpOz9i2CoXFvIVT1accIdL+umgbNjVtOUlnDMmg1RzQP7BrYn8cB9xa2ClSTE9kWcWIRwp09e8ykUn4p66o9/18HtoyC/JFCUVE7SrnW0686JsWM2qs4xT0kILXMqoJyzxcMqZ67ncPoMcmciaHvL136cxUrshqZqOoTk8/hZCSkkKsH2E1xNQcMnsXRZu2j4ZEzbhH1QSiBmJNC/Zvm3KiMyXjWrsKvT8ChIoWJvIxk1NaiQiOcPaSf/2xSIcrD0dH1+XgD62LsVyf6tQ3FlNnSZuPfJUqjShrRzC+JXOJ6IA7hjsp16CQVFXtINQgEFor9Env4OtbWy5VhLggCjHxCPiAXiAECPyDVzXfrPP1W9xMmZCYsUWkSUZVX6NGWddGOag7zKYCz64CWNjL9tDvHs+13fGBaOmVr8ki7oVZ+I6TDSfyZqtNGHFC8DtuWJ74gjwZ9EEA2u6lr7EbS9elXN37+DWpMcvyKSw61LbFxAzlM5sN1qaHldUBmuOW9w3EGB0g1ZG+2uhUd/WE265+pB95yRenVL2ez/F27EP8DgHp7RMarIlicyVBU2iQ676IpoWDa/M3A+mieZqVN29vQnlORlkEbuf9wwVIFakKJlEUgq2oZt65wzW7hT/qtdZgnXNq+2KjiA8Jxghwml842YGl1bZJmYChK8iVaojv0iUdmmUa9xzmgsP9N1G1BvO+1IFZ4O6Ip6x08lbP+YsBf3jjMIm0EwpHx4Rt/A2y33P0icTUtDI90pjHk9BbRFkPXjF98Jl51DI4iFiMysbZTYd8KKajFmlkAq68x6sEI8a18uXkr2tYbGWpX34MFGutq9nFq1jJ3zPhXiNjJ7+RiFnxhVDp9ecma4OYv3OGjIe0qoUgnhxBO0qwplcOztvOOG0+CtWyJtcCuGF2jyhLr4z7UbiHCY2gNl5E/soLs6QzY6jPDa6EW1sFMlL9ICxuDBV3CqiGzjg31bHhcY48IoLh2s6HdBn0tfmwJkoUSiqA8xo/DCut/BDCEQ3UQzawIyRsPULnn7/sVjRMSF4FmErIzeuG3+hEvdbw1+ffhLc08UhmRqZNY0gvOMtYj6s8X+erKUfMmzrXQfeorCTViT5TbAUr1K0mFa7Au/IeYCA59yzfygLQJqGWhJDEZ0AYxbd2R/OClBkq8OOwqoBkklZ7Ke71XfdBjJQMWDE0VVcb6yh8E7ajkV8+8a4xlLboWMVQNIsi/1V1O3gI76oM76LaUqwh66VEqFUFeJbo5QFeJQX4QNbrAeos/1Mj0WsJcZtezcAaDMDnagHvka57sjaASUFzTmaum7tris69bsmAScLhHfD5XFLPiaqM59xW5KR44mzW58dReUAR8Tc2ZXVzseGxNHkL6x44me3yizP33Z3P5TMXcDaotKixQKPdkRq5PlnwvEiwPpkV+R8N3H33JGdfnH3aFB2NI+nd+Ydxk+3Tnu3TwNh0exsDpiebdQ3kcD+F6B6kPV+P4Pd9y8HoDFnx2aqktp172yy48LAHH2L1ShIIjusqfpNvc8HLeM+ep+VZl2v+TsXuy/beS7t3wst4zEs230kHRNaNxCeOyr8BhNtswE5SAFGk3VCgzpo/Nw8g8q8gsYgG2FNbJmnff4z8Uk1SA0FrSGetFTC7dBIT0MYQPiHm5vudyi5eavVBPbrM2QTvgVjtUJ2QFpzsKi3ax3Et4n9axQfaUofxRyKrDBL33zygRT87S7ym3zwyyrYCpHvW4/pGhNssBgo2Tsh3AqGIdE8dJCQKy6kGkComJzj6vm0GQSzi7gyZcV7+RUt1Ljc6FMEM1b1YlNWQrjcmadAdiwcSTHCin9Y5aNOJoVWzjsZ1oybco9QU/Ihj3LdLHLIXp0qy8dOtFnDsQ9Xw8tyE10AdnxPhRBiQwhhxWVDYM0+yRa4l7R9V6A1U/YM+STfCQsZjFP9XaIJ0fLpD/pLaoLCmVQ9mjEtwMVFEdmZkkUgisjNyJju6TdfZDaNAA1SGHj70L8av6lrjklPGrcCfnyVNJ1FiHiwCnyHOoaxqXUwzFieVIjeueVEGgtG7jvCCyjmQGO9P325qvPuJDtLfXLRmBWAHs8TnKWvATCQ9873SSzLFdWNRfK15t7eH1VtBi8hP/sv5mSVn78omTa5V2rc4Nl1pFgL8hb3tBz6cmqZ6QaZDk48HRXCOXDil09Zt0uTLUD1sHxk3C5+IYRjaKzxmacTrQu94HYKohH2iFFkhqsTIRrnd4JuJNwOBwzVAZ0A4ghllEWVRF+Hn5FJ5+YmHAkxDZ1nKTC/O5uPY8ZQ5J6Wy+II7uhcr6GeYeFhNkxeK3EwGkVTOAGtQgAo5x+i3/c+tmglxxRDmm4HDqlhWX6qJLN7ow/nGQGXRfFONatY+fmgxEIW9FbZElaFHEQ4klgDG2lBylKJDDGA94asukJN8wS0rePmCmggMrkUz6X0a6J8zva9xXv5jFWI4sT7MfTwgLzh93rE13UstQIDROxxSDnIJtjHDaWKJTwGqoDRbBJXUVxJ5s/bEV6N/mMUKZdgUdYwTkz85+nObDn9fn+95e3n13rT7oHjziDUNDKrd2BKEMeBCcDGlU+ISbKEDnWCaGBSpJEmZNoDcwb/RvXWovxhT7KVymS+JOpC6zoGtt3rDdOuLIoHlqmB0izvh9iQKJTJcHB6b0TuS7qVeKHhDzdzDu2BlBoD0cWshe/fmEzMWdUVjg5feFRftvyrWF0hY3Si6ALhgIpFPLP/VDHOydT3r1YSpbOf6hER/e7DRUnaa+L+QsEX7QB6vHkVm0DP0GD81eo6joirBpjNf0JhmqyT5JrVmYnKBXdzXFINy6JSj0S4h4Crfa22h69gseuokxaRsvS+c+wLRriDoXEfuF4W/6y7B0C4B1Vwj0fJu2x34cXUqOQenWGDT6jPIyNzHXRhKxrhEd4Z5y7+m2EsIbTi5IxE9ynPoxF2ISpkbUBMmh6b5QENA9eoDPfKzYzkCRHrFhYrfct++a7y/GDKx5ptMaMfEJA9uPr3Gs2Y/yqRqHQbgtYW6xWKC0cL97vMK/c2IhjccoWGgLTJhf9BGMhfkXOD+FAHO3uvDjf651VgEgOvrYmiN6PublO+9MucV7TDnEqKsJTNMiGDH/q20DP0tYS7aK4NGuvj5In6j4BMACuR/bt0tEzGz6DqHm1ppyJIQJDzmOvQYE/+osqvJPZg3euTVOTb3Skk+vEtHTGt6KDxcRY8CraCOcRGVKD2gOyFanmCam0Cal/AHfpMTAPcUXRSO7WMzkXi4pI/FRwo7zAv72y+9kh6P/8NPNNTPh264179H1RV7V1554/0wcyxNXOAfAAIs/dMSSSxeWLjdKBE8fxwB2VQ02VR1IJ0E01ifVD/ycJhaLEZhKDAVXC8gBBkKEjBkrpp8jfYDlSpvjceVzsTAZst30zN5AtDN17XnjecOIqNpjvayjmdO04qG51V9/XyS7Vr0OKdNoeu/3FXY3lA08tNTzzOxfdotT1WJoV2fWZx2o6IwdAJCygAjo2BCQs6I6luRGqRmTqjTQnVvfvbxH6jre/+NG2A0TiGyNfI1joSwtPHsCozv48ZPt8ZPsEYseSxb5Fz7rTPS5RzmPx/a1zujpZdMF9zXckc4MkI98e+XkjFCPU1L2iIirIENgNLqZ/W7ACQydDy9/TPLx9Fr5tR7vmbjUU8f/mneRDzyIkZUTU9kKsL10jYaMrGAf1cf+bG3UlrZP1v5M/Q+FubMvuyr/6DQuuB3VFwM0Qg2RnWIb9y+FBZf1pGam1Ye2grvhTQ+1HNhVwYy0Bj9PNGQM+AXOwy5P/Mtl9ShMYk1PkQDcGLBsVtpCOZhF4KonwJJ0hY3VsvMOMfiQIaRcTUZWoyFYSsqCpsRm2u+RXOLIYtZVmh6x1ZqAksySj/fWhYJXrGpvPFBrgeASz0cZv7Dhb1ZACfJylyhSptmfZEety43Iu53VDKwmMWAqqRzVeTYlKp6sZjbYLqyr1qA1ND92QohBJSoG6eOhmZN+ARrK5+Gyol61fKg2f94NLA/DvYbhNpu9xMQ4ZzGDtDKNFEp+PKx7vYbt0ze351C3vUTfH0g7g5mWfPS0/uXoLGMIcM3Dl+8U3rSEu0x7pfskiVzvkwul8yex9ciw6zOGPk30RtKrQcH0/K+TH/ly3af8+hAyquElYG7eV5N8v6Jrd7932rDqlmWMeSDjho2akvNA0VKROUTzpVIxrPAJ8TVRs6/1IwRFzD1A7mdvWVyu2bC/JHGnZET3oSv06TH+7/ihgpRRh8HAlIae5l8jmrjpiVqBf8U5dyJJiFaX3axq50xiqOAr7SQxpYvenL/TO5yRCeWuC4/ztMObBctXj2zyUKmzg9/kE8t0Vef8LA/xLT/25I1aYypsERV63+wfqya9q4gfbGm2eMaBTYJQlLAGTth9Yq50ULh/G3ffG9cz1+qTWs8uMcIWBdO9mnvAqROzWhwxD9D98/afN4i7J14uVMEaA41ZM835XtAuDNwIPRxIbNRwmLB2gd6u1yZSsabghGUk1yY1vjdqp+S0rNP7Rc3bhMIlWjoliYNnmVlOvVbCnspYpgJPbFn7ooQOtCHP+UGdrL6Udvr0f4re4E9tLwRX5n78yD9YLTCz3mSI9Seu8blC25fX3VUSsL9munaIz6OU3IX8nmy6fD0aWxqtRctEe8Tdu+VA8awsceb/BHaElN9yR8o7kw+OdmYw0DDlXEsYp4IA4QGN2ZeH+B+e3BWvEw+tFISMtYNBQoxw9Rpz6c/FIRoNBPgx7Bnop3cbrOxUhJYbLE+jzQKijr7ElyPbpmuMOzJCYPO8aFcfz/k1Mf9yFgKiUwk4X3oPJaF0Xqmot+I6FHJtYseMTFSRJA0gRFUxc197Jo8uOKMtMQnBY1YyXk0wwnDgdX3LYiCkdfrym71XaH/xuniDc0rxxCWmGrWTrjnk7WxhRHrB2FmvCLG37etdz7C6iUoiJWeqzely5Qn2UxB5y1qsTb/M6w5WL3YXDXVhOMMMfS7ycWeT30F4LThUYBonRf7e5R587zeNG+5gtO6goJX35HInVlPY9dhFZ2YdcByj7c0eoxf/m986r2XZit9hmzGFVNhYioDtV9B1lGupboY7vkY9mbakfD7Bkv72/8cmxUOw4t4n06Lqt9lY4Tcxz1cMOOM5KwNoOjg/YfAlG1w4+lyTuRiMJTIBcwZkXpNWuyvxSvDDaFdFiLfTw+tMcMCBJBe+E2N2rze6cU2zuAbDF5jzqPpZfXK9OJjQ1FZO4vUBfsQOG5lllcZYrfoAivH3pBGDSjx5eMElSrPA+jtqgCgVl7rMHqelCwxenh1br68RrZERsX88ft8+7sZivmDlznM5BuFdTdtVa8ouJjmbjH9D4XSZ0Xt0J5Uf2LkIHL9XmmfvnC+H3rldXjOTkJmR0hYiMj4egrffqxmWvfAeMQHO57YZXizhXQzH0hlKmWMQpODx/Yfj/j+Zut2R+6BEgNTIMmIom3OT1KrQjlFMtl7lqBKpiNZPDLGJgKqNJ3gdwynTHoEyoapdoh5WJeFsiXmbvdzC4/q3k1PNKYypQs4I67kqOw4n0JvbNDCx1ff+F440oq1dm6s/TigDVuktT4o+X4oJSaCpY3wVk53yv1uWmzDnH6oaBXJ99O7HXUzAoqNWlGK1o+6AsjvMFN2PWlm1Mm5aOyUS0W0+m89U1tbL3xvNVfGsDmjY+B0KU+kZB+fEHpZ7wi/x054a50/53SVlvR59dV9g3Hd60u7C5Bp3bMWA1b0qAJB1aAMBXmtOvtIaQNYb7xD5Juni4ecV59u1O+otxC3ab0Z/1YI+iLo/UG1lpz9MfTOApUKApQAd/LcavFP0e7DvQMewLanZv3aOXS2X7gPXwmCeDeKc725LmbalsFTF7N0OZESV4QSU27kcWy/oY+uOjaYcySkVtbDEj13eOPzLa35WiMYnRRhHJHr0q0u2EfOEFX9sM+j6717OGsTSbe/41s5zFtaG+Q3J6oMCjGMGW00ZScrRq4UWrJXcRcPjmWqTdG0vLVuAKXXDbH1MuK8PkRGaXdabCVj1EK6gXe867xehKW0IO+e/i4Deu2JkIzsILPrxNDyIh665ROIks+NHr52xB6ElVVdq9wdNL7m7CLN
*/