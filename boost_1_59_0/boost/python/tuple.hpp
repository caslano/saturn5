// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef TUPLE_20020706_HPP
#define TUPLE_20020706_HPP

# include <boost/python/detail/prefix.hpp>

#include <boost/python/object.hpp>
#include <boost/python/converter/pytype_object_mgr_traits.hpp>
#include <boost/preprocessor/enum_params.hpp>
#include <boost/preprocessor/repetition/enum_binary_params.hpp>

namespace boost { namespace python {

namespace detail
{
  struct BOOST_PYTHON_DECL tuple_base : object
  {
   protected:
      tuple_base();
      tuple_base(object_cref sequence);
      
      BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS(tuple_base, object)

   private:
      static detail::new_reference call(object const&);
  };
}

class tuple : public detail::tuple_base
{
    typedef detail::tuple_base base;
 public:
    tuple() {}

    template <class T>
    explicit tuple(T const& sequence)
        : base(object(sequence))
    {
    }

 public: // implementation detail -- for internal use only
    BOOST_PYTHON_FORWARD_OBJECT_CONSTRUCTORS(tuple, base)
};

//
// Converter Specializations    // $$$ JDG $$$ moved here to prevent
//                              // G++ bug complaining specialization
                                // provided after instantiation
namespace converter
{
  template <>
  struct object_manager_traits<tuple>
      : pytype_object_manager_traits<&PyTuple_Type,tuple>
  {
  };
}

// for completeness
inline tuple make_tuple() { return tuple(); }

# define BOOST_PP_ITERATION_PARAMS_1 (3, (1, BOOST_PYTHON_MAX_ARITY, <boost/python/detail/make_tuple.hpp>))
# include BOOST_PP_ITERATE()

}}  // namespace boost::python

#endif


/* tuple.hpp
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
*/