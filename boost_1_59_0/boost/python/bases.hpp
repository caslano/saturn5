// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef BASES_DWA2002321_HPP
# define BASES_DWA2002321_HPP

# include <boost/python/detail/prefix.hpp>
# include <boost/python/detail/type_list.hpp>
# include <boost/python/detail/type_traits.hpp>
# include <boost/mpl/if.hpp>
# include <boost/mpl/bool.hpp>
# include <boost/preprocessor/enum_params_with_a_default.hpp>
# include <boost/preprocessor/enum_params.hpp>

namespace boost { namespace python { 

# define BOOST_PYTHON_BASE_PARAMS BOOST_PP_ENUM_PARAMS_Z(1, BOOST_PYTHON_MAX_BASES, Base)

  // A type list for specifying bases
  template < BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(BOOST_PYTHON_MAX_BASES, typename Base, mpl::void_) >
  struct bases : detail::type_list< BOOST_PYTHON_BASE_PARAMS >::type
  {};

  namespace detail
  {
    template <class T> struct specifies_bases
        : mpl::false_
    {
    };
    
    template < BOOST_PP_ENUM_PARAMS_Z(1, BOOST_PYTHON_MAX_BASES, class Base) >
    struct specifies_bases< bases< BOOST_PYTHON_BASE_PARAMS > >
        : mpl::true_
    {
    };
    template <class T, class Prev = bases<> >
    struct select_bases
        : mpl::if_<
                specifies_bases<T>
                , T
                , Prev
          >
    {
    };
  }
# undef BOOST_PYTHON_BASE_PARAMS
}} // namespace boost::python

#endif // BASES_DWA2002321_HPP

/* bases.hpp
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
*/