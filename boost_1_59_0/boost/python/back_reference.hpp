// Copyright David Abrahams 2002.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
#ifndef BACK_REFERENCE_DWA2002510_HPP
# define BACK_REFERENCE_DWA2002510_HPP

# include <boost/python/detail/prefix.hpp>

# include <boost/python/object_fwd.hpp>
# include <boost/python/detail/dependent.hpp>
# include <boost/python/detail/raw_pyobject.hpp>

namespace boost { namespace python { 

template <class T>
struct back_reference
{
 private: // types
    typedef typename detail::dependent<object,T>::type source_t;
 public:
    typedef T type;
    
    back_reference(PyObject*, T);
    source_t const& source() const;
    T get() const;
 private:
    source_t m_source;
    T m_value;
};

template<typename T>
class is_back_reference
{
 public:
    BOOST_STATIC_CONSTANT(bool, value = false); 
};

template<typename T>
class is_back_reference<back_reference<T> >
{
 public:
    BOOST_STATIC_CONSTANT(bool, value = true);
};


//
// implementations
//
template <class T>
back_reference<T>::back_reference(PyObject* p, T x)
    : m_source(detail::borrowed_reference(p))
      , m_value(x)
{
}

template <class T>
typename back_reference<T>::source_t const& back_reference<T>::source() const
{
    return m_source;
}

template <class T>
T back_reference<T>::get() const
{
    return m_value;
}

}} // namespace boost::python

#endif // BACK_REFERENCE_DWA2002510_HPP

/* back_reference.hpp
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
*/