//  This header intentionally has no include guards.
//
//  Copyright (c) 2010 Neil Groves
//  Distributed under the Boost Software License, Version 1.0.
//  See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt
//
// This code utilises the experience gained during the evolution of
// <boost/smart_ptr/operator_bool.hpp>
#ifndef BOOST_RANGE_SAFE_BOOL_INCLUDED_HPP
#define BOOST_RANGE_SAFE_BOOL_INCLUDED_HPP

#include <boost/config.hpp>
#include <boost/range/config.hpp>

namespace boost
{
    namespace range_detail
    {

template<class DataMemberPtr>
class safe_bool
{
public:
    typedef safe_bool this_type;

#if (defined(__SUNPRO_CC) && BOOST_WORKAROUND(__SUNPRO_CC, < 0x570)) || defined(__CINT_)
    typedef bool unspecified_bool_type;
    static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr)
    {
        return x;
    }
#elif defined(_MANAGED)
    static void unspecified_bool(this_type***)
    {
    }
    typedef void(*unspecified_bool_type)(this_type***);
    static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr)
    {
        return x ? unspecified_bool : 0;
    }
#elif \
    ( defined(__MWERKS__) && BOOST_WORKAROUND(__MWERKS__, < 0x3200) ) || \
    ( defined(__GNUC__) && (__GNUC__ * 100 + __GNUC_MINOR__ < 304) ) || \
    ( defined(__SUNPRO_CC) && BOOST_WORKAROUND(__SUNPRO_CC, <= 0x590) )

    typedef bool (this_type::*unspecified_bool_type)() const;

    static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr)
    {
        return x ? &this_type::detail_safe_bool_member_fn : 0;
    }
private:
    bool detail_safe_bool_member_fn() const { return false; }
#else
    typedef DataMemberPtr unspecified_bool_type;
    static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr p)
    {
        return x ? p : 0;
    }
#endif
private:
    safe_bool();
    safe_bool(const safe_bool&);
    void operator=(const safe_bool&);
    ~safe_bool();
};

    } // namespace range_detail
} // namespace boost

#endif // include guard

/* safe_bool.hpp
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
*/