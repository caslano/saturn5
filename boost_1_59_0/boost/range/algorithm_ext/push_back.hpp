// Boost.Range library
//
//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_EXT_PUSH_BACK_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_EXT_PUSH_BACK_HPP_INCLUDED

#include <boost/range/config.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/difference_type.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/detail/implementation_help.hpp>
#include <boost/assert.hpp>

namespace boost
{
    namespace range
    {

template< class Container, class Range >
inline Container& push_back( Container& on, const Range& from )
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<Container> ));
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const Range> ));
    BOOST_ASSERT_MSG(!range_detail::is_same_object(on, from),
        "cannot copy from a container to itself");
    on.insert( on.end(), boost::begin(from), boost::end(from) );
    return on;
}

    } // namespace range
    using range::push_back;
} // namespace boost

#endif // include guard

/* push_back.hpp
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
*/