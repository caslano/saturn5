// Boost.Range library
//
//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_EXT_INSERT_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_EXT_INSERT_HPP_INCLUDED

#include <boost/range/config.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/difference_type.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/assert.hpp>

namespace boost
{
    namespace range
    {

template< class Container, class Range >
inline Container& insert( Container& on,
                          BOOST_DEDUCED_TYPENAME Container::iterator before,
                          const Range& from )
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<Container> ));
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<Range> ));
    on.insert( before, boost::begin(from), boost::end(from) );
    return on;
}

template< class Container, class Range >
inline Container& insert( Container& on, const Range& from )
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<Container> ));
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<Range> ));
    on.insert(boost::begin(from), boost::end(from));
    return on;
}

    } // namespace range
    using range::insert;
} // namespace boost

#endif // include guard

/* insert.hpp
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
*/