// Boost.Range library
//
//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_EXT_IOTA_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_EXT_IOTA_HPP_INCLUDED

#include <boost/range/config.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/iterator.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>

namespace boost
{
    namespace range
    {

template< class ForwardRange, class Value >
inline ForwardRange& iota( ForwardRange& rng, Value x )
{
    BOOST_CONCEPT_ASSERT(( ForwardRangeConcept<ForwardRange> ));
    typedef BOOST_DEDUCED_TYPENAME range_iterator<ForwardRange>::type iterator_t;

    iterator_t last_target = ::boost::end(rng);
    for (iterator_t target = ::boost::begin(rng); target != last_target; ++target, ++x)
        *target = x;

    return rng;
}

template< class ForwardRange, class Value >
inline const ForwardRange& iota( const ForwardRange& rng, Value x )
{
    BOOST_CONCEPT_ASSERT(( ForwardRangeConcept<const ForwardRange> ));
    typedef BOOST_DEDUCED_TYPENAME range_iterator<const ForwardRange>::type iterator_t;
    
    iterator_t last_target = ::boost::end(rng);
    for (iterator_t target = ::boost::begin(rng); target != last_target; ++target, ++x)
        *target = x;
    
    return rng;
}

    } // namespace range
    using range::iota;
} // namespace boost

#endif // include guard

/* iota.hpp
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
*/