//  Copyright Bryce Lelbach 2010
//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_EXT_IS_SORTED_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_EXT_IS_SORTED_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/value_type.hpp>
#include <boost/detail/is_sorted.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function is_sorted
///
/// range-based version of the is_sorted std algorithm
///
/// \pre SinglePassRange is a model of the SinglePassRangeConcept
template<class SinglePassRange>
inline bool is_sorted(const SinglePassRange& rng)
{
    BOOST_RANGE_CONCEPT_ASSERT((SinglePassRangeConcept<const SinglePassRange>));
    BOOST_RANGE_CONCEPT_ASSERT((LessThanComparableConcept<BOOST_DEDUCED_TYPENAME
      range_value<const SinglePassRange>::type>));
    return ::boost::detail::is_sorted(boost::begin(rng), boost::end(rng));
}

/// \overload
template<class SinglePassRange, class BinaryPredicate>
inline bool is_sorted(const SinglePassRange& rng, BinaryPredicate pred)
{
    BOOST_RANGE_CONCEPT_ASSERT((SinglePassRangeConcept<const SinglePassRange>));
    BOOST_RANGE_CONCEPT_ASSERT((BinaryPredicateConcept<BinaryPredicate,
      BOOST_DEDUCED_TYPENAME range_value<const SinglePassRange>::type,
      BOOST_DEDUCED_TYPENAME range_value<const SinglePassRange>::type>));
    return ::boost::detail::is_sorted(boost::begin(rng), boost::end(rng), pred);
}

    } // namespace range

using range::is_sorted;

} // namespace boost

#endif // include guard

/* is_sorted.hpp
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
*/