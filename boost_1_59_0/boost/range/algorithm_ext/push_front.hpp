// Boost.Range library
//
//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_EXT_PUSH_FRONT_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_EXT_PUSH_FRONT_HPP_INCLUDED

#include <boost/range/config.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/difference_type.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/detail/implementation_help.hpp>
#include <boost/assert.hpp>

namespace boost
{
    namespace range
    {

template< class Container, class Range >
inline Container& push_front( Container& on, const Range& from )
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<Container> ));
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const Range> ));
    BOOST_ASSERT_MSG(!range_detail::is_same_object(on, from),
        "cannot copy from a container to itself");
    on.insert( on.begin(), boost::begin(from), boost::end(from) );
    return on;
}

    } // namespace range
    using range::push_front;
} // namespace boost

#endif // include guard

/* push_front.hpp
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
*/