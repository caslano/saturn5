//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_COPY_BACKWARD_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_COPY_BACKWARD_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function copy_backward
///
/// range-based version of the copy_backwards std algorithm
///
/// \pre BidirectionalRange is a model of the BidirectionalRangeConcept
/// \pre BidirectionalTraversalWriteableIterator is a model of the BidirectionalIteratorConcept
/// \pre BidirectionalTraversalWriteableIterator is a model of the WriteableIteratorConcept
template< class BidirectionalRange, class BidirectionalTraversalWriteableIterator >
inline BidirectionalTraversalWriteableIterator
copy_backward(const BidirectionalRange& rng,
              BidirectionalTraversalWriteableIterator out)
{
    BOOST_RANGE_CONCEPT_ASSERT(( BidirectionalRangeConcept<const BidirectionalRange> ));
    return std::copy_backward(boost::begin(rng), boost::end(rng), out);
}

    } // namespace range
    using range::copy_backward;
} // namespace boost

#endif // include guard

/* copy_backward.hpp
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
*/