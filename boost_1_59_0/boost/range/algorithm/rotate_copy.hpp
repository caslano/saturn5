//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_ROTATE_COPY_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_ROTATE_COPY_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/iterator.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

    /// \brief template function rotate
    ///
    /// range-based version of the rotate std algorithm
    ///
    /// \pre Rng meets the requirements for a Forward range
    template<typename ForwardRange, typename OutputIterator>
    inline OutputIterator rotate_copy(
        const ForwardRange&                                             rng,
        BOOST_DEDUCED_TYPENAME range_iterator<const ForwardRange>::type middle,
        OutputIterator                                                  target
        )
    {
        BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<const ForwardRange> ));
        return std::rotate_copy(boost::begin(rng), middle, boost::end(rng), target);
    }

    } // namespace range
    using range::rotate_copy;
} // namespace boost

#endif // include guard

/* rotate_copy.hpp
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
*/