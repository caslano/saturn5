//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_REMOVE_COPY_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_REMOVE_COPY_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function remove_copy
///
/// range-based version of the remove_copy std algorithm
///
/// \pre SinglePassRange is a model of the SinglePassRangeConcept
/// \pre OutputIterator is a model of the OutputIteratorConcept
/// \pre Value is a model of the EqualityComparableConcept
/// \pre Objects of type Value can be compared for equality with objects of
/// InputIterator's value type.
template< class SinglePassRange, class OutputIterator, class Value >
inline OutputIterator
remove_copy(const SinglePassRange& rng, OutputIterator out_it, const Value& val)
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange> ));
    return std::remove_copy(boost::begin(rng), boost::end(rng), out_it, val);
}

    } // namespace range
    using range::remove_copy;
} // namespace boost

#endif // include guard

/* remove_copy.hpp
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
*/