//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_REPLACE_IF_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_REPLACE_IF_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function replace_if
///
/// range-based version of the replace_if std algorithm
///
/// \pre ForwardRange is a model of the ForwardRangeConcept
/// \pre UnaryPredicate is a model of the UnaryPredicateConcept
template< class ForwardRange, class UnaryPredicate, class Value >
inline ForwardRange&
    replace_if(ForwardRange& rng, UnaryPredicate pred,
               const Value& val)
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<ForwardRange> ));
    std::replace_if(boost::begin(rng), boost::end(rng), pred, val);
    return rng;
}

/// \overload
template< class ForwardRange, class UnaryPredicate, class Value >
inline const ForwardRange&
    replace_if(const ForwardRange& rng, UnaryPredicate pred,
               const Value& val)
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<const ForwardRange> ));
    std::replace_if(boost::begin(rng), boost::end(rng), pred, val);
    return rng;
}

    } // namespace range
    using range::replace_if;
} // namespace boost

#endif // include guard

/* replace_if.hpp
+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
*/