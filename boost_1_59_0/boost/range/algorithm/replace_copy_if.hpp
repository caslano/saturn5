//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_REPLACE_COPY_IF_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_REPLACE_COPY_IF_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function replace_copy_if
///
/// range-based version of the replace_copy_if std algorithm
///
/// \pre ForwardRange is a model of the ForwardRangeConcept
/// \pre Predicate is a model of the PredicateConcept
/// \pre Value is convertible to Predicate's argument type
/// \pre Value is Assignable
/// \pre Value is convertible to a type in OutputIterator's set of value types.
template< class ForwardRange, class OutputIterator, class Predicate, class Value >
inline OutputIterator
replace_copy_if(const ForwardRange& rng, OutputIterator out_it, Predicate pred,
        const Value& with_what)
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<const ForwardRange> ));
    return std::replace_copy_if(boost::begin(rng), boost::end(rng), out_it,
        pred, with_what);
}

    } // namespace range
    using range::replace_copy_if;
} // namespace boost

#endif // include guard

/* replace_copy_if.hpp
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
*/