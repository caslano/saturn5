//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_COUNT_IF_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_COUNT_IF_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/difference_type.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function count_if
///
/// range-based version of the count_if std algorithm
///
/// \pre SinglePassRange is a model of the SinglePassRangeConcept
/// \pre UnaryPredicate is a model of the UnaryPredicateConcept
template< class SinglePassRange, class UnaryPredicate >
inline BOOST_DEDUCED_TYPENAME boost::range_difference<SinglePassRange>::type
count_if(SinglePassRange& rng, UnaryPredicate pred)
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<SinglePassRange> ));
    return std::count_if(boost::begin(rng), boost::end(rng), pred);
}

/// \overload
template< class SinglePassRange, class UnaryPredicate >
inline BOOST_DEDUCED_TYPENAME boost::range_difference<const SinglePassRange>::type
count_if(const SinglePassRange& rng, UnaryPredicate pred)
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange> ));
    return std::count_if(boost::begin(rng), boost::end(rng), pred);
}

    } // namespace range
    using range::count_if;
} // namespace boost

#endif // include guard

/* count_if.hpp
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
*/