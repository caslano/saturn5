//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_BINARY_SEARCH_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_BINARY_SEARCH_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function binary_search
///
/// range-based version of the binary_search std algorithm
///
/// \pre ForwardRange is a model of the ForwardRangeConcept
/// \pre BinaryPredicate is a model of the BinaryPredicateConcept
template<class ForwardRange, class Value>
inline bool binary_search(const ForwardRange& rng, const Value& val)
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<const ForwardRange> ));
    return std::binary_search(boost::begin(rng), boost::end(rng), val);
}

/// \overload
template<class ForwardRange, class Value, class BinaryPredicate>
inline bool binary_search(const ForwardRange& rng, const Value& val,
                          BinaryPredicate pred)
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<const ForwardRange> ));
    return std::binary_search(boost::begin(rng), boost::end(rng), val, pred);
}

    } // namespace range
    using range::binary_search;
} // namespace boost

#endif // include guard

/* binary_search.hpp
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
*/