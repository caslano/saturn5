//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_COUNT_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_COUNT_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/difference_type.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function count
///
/// range-based version of the count std algorithm
///
/// \pre SinglePassRange is a model of the SinglePassRangeConcept
template< class SinglePassRange, class Value >
inline BOOST_DEDUCED_TYPENAME range_difference<SinglePassRange>::type
count(SinglePassRange& rng, const Value& val)
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<SinglePassRange> ));
    return std::count(boost::begin(rng), boost::end(rng), val);
}

/// \overload
template< class SinglePassRange, class Value >
inline BOOST_DEDUCED_TYPENAME range_difference<SinglePassRange const>::type
count(const SinglePassRange& rng, const Value& val)
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange> ));
    return std::count(boost::begin(rng), boost::end(rng), val);
}

    } // namespace range
    using range::count;
} // namespace boost

#endif // include guard

/* count.hpp
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
*/