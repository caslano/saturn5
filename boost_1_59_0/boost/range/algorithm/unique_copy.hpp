//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_UNIQUE_COPY_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_UNIQUE_COPY_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {

/// \brief template function unique_copy
///
/// range-based version of the unique_copy std algorithm
///
/// \pre SinglePassRange is a model of the SinglePassRangeConcept
/// \pre OutputIterator is a model of the OutputIteratorConcept
/// \pre BinaryPredicate is a model of the BinaryPredicateConcept
template< class SinglePassRange, class OutputIterator >
inline OutputIterator
unique_copy( const SinglePassRange& rng, OutputIterator out_it )
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange> ));
    return std::unique_copy(boost::begin(rng), boost::end(rng), out_it);
}
/// \overload
template< class SinglePassRange, class OutputIterator, class BinaryPredicate >
inline OutputIterator
unique_copy( const SinglePassRange& rng, OutputIterator out_it,
             BinaryPredicate pred )
{
    BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange> ));
    return std::unique_copy(boost::begin(rng), boost::end(rng), out_it, pred);
}

    } // namespace range
    using range::unique_copy;
} // namespace boost

#endif // include guard

/* unique_copy.hpp
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
*/