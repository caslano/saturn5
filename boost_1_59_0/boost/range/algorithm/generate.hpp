//  Copyright Neil Groves 2009. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
//
// For more information, see http://www.boost.org/libs/range/
//
#ifndef BOOST_RANGE_ALGORITHM_GENERATE_HPP_INCLUDED
#define BOOST_RANGE_ALGORITHM_GENERATE_HPP_INCLUDED

#include <boost/concept_check.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/concepts.hpp>
#include <algorithm>

namespace boost
{
    namespace range
    {
/// \brief template function generate
///
/// range-based version of the generate std algorithm
///
/// \pre ForwardRange is a model of the ForwardRangeConcept
/// \pre Generator is a model of the UnaryFunctionConcept
template< class ForwardRange, class Generator >
inline ForwardRange& generate( ForwardRange& rng, Generator gen )
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<ForwardRange> ));
    std::generate(boost::begin(rng), boost::end(rng), gen);
    return rng;
}

/// \overload
template< class ForwardRange, class Generator >
inline const ForwardRange& generate( const ForwardRange& rng, Generator gen )
{
    BOOST_RANGE_CONCEPT_ASSERT(( ForwardRangeConcept<const ForwardRange> ));
    std::generate(boost::begin(rng), boost::end(rng), gen);
    return rng;
}

    } // namespace range
    using range::generate;
} // namespace boost

#endif // include guard

/* generate.hpp
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
*/