// (C) Copyright 2005 Matthias Troyer 

// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  Authors: Matthias Troyer

#include <boost/serialization/array.hpp>

#ifndef BOOST_MPI_DETAIL_FORWARD_IPRIMITIVE_HPP
#define BOOST_MPI_DETAIL_FORWARD_IPRIMITIVE_HPP

namespace boost { namespace mpi { namespace detail {

/// @brief a minimal input archive, which forwards reading to another archive
///
/// This class template is designed to use the loading facilities of another
/// input archive (the "implementation archive", whose type is specified by 
/// the template argument, to handle serialization of primitive types, 
/// while serialization for specific types can be overriden independently 
/// of that archive.

template <class ImplementationArchive>
class forward_iprimitive
{
public:

    /// the type of the archive to which the loading of primitive types will be forwarded
    typedef ImplementationArchive implementation_archive_type;

    /// the constructor takes a reference to the implementation archive used for loading primitve types
    forward_iprimitive(implementation_archive_type& ar)
     : implementation_archive(ar)
    {}

    /// binary loading is forwarded to the implementation archive
    void load_binary(void * address, std::size_t count )
    {
      implementation_archive.load_binary(address,count);
    }
    
    /// loading of arrays is forwarded to the implementation archive
    template<class T>
    void load_array(serialization::array_wrapper<T> & x, unsigned int file_version )
    {
      implementation_archive.load_array(x,file_version);
    }

    typedef typename ImplementationArchive::use_array_optimization use_array_optimization;    

#ifndef BOOST_NO_MEMBER_TEMPLATE_FRIENDS
    friend class archive::load_access;
protected:
#else
public:
#endif

    ///  loading of primitives is forwarded to the implementation archive
    template<class T>
    void load(T & t)
    {
      implementation_archive >> t;
    }

private:
    implementation_archive_type& implementation_archive;
};

} } } // end namespace boost::mpi::detail

#endif // BOOST_MPI_DETAIL_FORWARD_IPRIMITIVE_HPP

/* forward_iprimitive.hpp
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
*/