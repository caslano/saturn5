// (C) Copyright 2005 Matthias Troyer 

// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  Authors: Matthias Troyer

#ifndef BOOST_MPI_DETAIL_FORWARD_OPRIMITIVE_HPP
#define BOOST_MPI_DETAIL_FORWARD_OPRIMITIVE_HPP

#include <boost/config.hpp>
#include <boost/serialization/array.hpp>

namespace boost { namespace mpi { namespace detail {

/// @brief a minimal output archive, which forwards saving to another archive
///
/// This class template is designed to use the saving facilities of another
/// output archive (the "implementation archive", whose type is specified by 
/// the template argument, to handle serialization of primitive types, 
/// while serialization for specific types can be overriden independently 
/// of that archive.

template <class ImplementationArchive>
class forward_oprimitive
{
public:

    /// the type of the archive to which the saving of primitive types will be forwarded
    typedef ImplementationArchive implementation_archive_type;
    
    /// the constructor takes a reference to the implementation archive used for saving primitve types
    forward_oprimitive(implementation_archive_type& ar)
     : implementation_archive(ar)
    {}

    /// binary saving is forwarded to the implementation archive
    void save_binary(const void * address, std::size_t count)
    {
      implementation_archive.save_binary(address,count);
    }
    
    /// saving of arrays is forwarded to the implementation archive
    template<class T>
    void save_array(serialization::array_wrapper<T> const& x, unsigned int file_version )
    {
      implementation_archive.save_array(x,file_version);
    }

    typedef typename ImplementationArchive::use_array_optimization use_array_optimization;

#ifndef BOOST_NO_MEMBER_TEMPLATE_FRIENDS
    friend class archive::save_access;
protected:
#else
public:
#endif

    ///  saving of primitives is forwarded to the implementation archive
    template<class T>
    void save(const T & t)
    {
      implementation_archive << t;
    }

private:
    implementation_archive_type& implementation_archive;
};

} } } // end namespace boost::mpi::detail

#endif // BOOST_MPI_DETAIL_FORWARD_OPRIMITIVE_HPP

/* forward_oprimitive.hpp
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
*/