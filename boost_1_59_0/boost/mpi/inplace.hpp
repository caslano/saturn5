// Copyright (C) 2005-2006 Alain Miniussi <alain.miniussi -at- oca.eu>.

// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Message Passing Interface 1.1 -- Section 4. MPI Collectives

/** @file inplace.hpp
 *
 *  This header provides helpers to indicate to MPI collective operation
 *  that a buffer can be use both as an input and output.
 */
#ifndef BOOST_MPI_INPLACE_HPP
#define BOOST_MPI_INPLACE_HPP

#include <boost/mpi/communicator.hpp>
#include <vector>

namespace boost { namespace mpi {

/**
 *  @brief Wrapper type to explicitly indicate that a input data 
 * can be overriden with an output value.
 */
template <typename T>
struct inplace_t {
  inplace_t(T& inout) : buffer(inout) {}
  T& buffer;
};

template <typename T>
struct inplace_t<T*> {
  inplace_t(T* inout) : buffer(inout) {}
  T* buffer;
};


/**
 *  @brief Wrapp a input data to indicate that it can be overriden 
 *  with an ouput value.
 *  @param inout the contributing input value, it will be overriden 
 *  with the output value where one is expected. If it is a pointer, 
 *  the number of elements will be provided separatly.
 *  @returns The wrapped value or pointer.
 */
template<typename T>
inplace_t<T>
inplace(T& inout) { 
  return inplace_t<T>(inout);
}
/**
 * \overload
 */
template<typename T>
inplace_t<T*>
inplace(T* inout) { 
  return inplace_t<T*>(inout);
}
} }  // end namespace boost::mpi

#endif // BOOST_MPI_INPLACE_HPP


/* inplace.hpp
1qQyZOvwd5GRE4qJxk9qc24hPReXDeuZqqhPYLCAoNu4QjH7QtHTqptO47ox0dU4lfV5yVRKQH9VpWCtatnbPAm1OaTLBC2uywdeZ1YZyAnPYdTA6X4twtU3nPYSZylkJYrlkq29Pyd5Q/zQN8aE3w3nyEIdHPDdkVnkUupx7onwiQNq66/6pjSU64upukmPJnK8KrUoJR+LNsfjEm6/oSi405MQr6PoJL/wRVg02JDFSxnpO5+dCfxoRm2dJZY9/w4tx/sAIU2reS9MDnyjtp7HPsZpgd4x9wJoVOPIln+vr/XkneJArwiRmxGNZB5nl74A/Ao52QshBeanpvjidzNT9eWUGi7svIUxfIwaqRebw/mHiwpdRgeuVdwA957LbyDo23qGY4n4aQdXhA/O8g9nwiBAR/YxFfo6lzrqW/R3fPW9gWjJ/g9jNuYY1D867oo53RqgkE4FwUngWmhgXn54mxyGerYG8F16ghOFgrycCZXgFVlUg+Vuehqso9s3xdMMdnNbeYyWZOR55dYzkumvagBiAv/I5W3Fa5bX4aDQN2GtGjf96bj/6aP1qNvl5V43yjYSsXV5GhDeXzmC4t1P67fw/cLaxbwaC/7gfL+f/kL/95zhR3nie9LGkN2nXtn/bys5HvE20T8PJbnFtpN08NiTCmtZcXWCRHwq9Zr6VR1HxYRqnCo1xFLlXz4QkkgijY1t8spoe4dFEJCqslznM1Ju7byXoYWANlSxsppEvJSPLVV6IVtg5fypFpQgIxEz30xF05imtDmae3J3V3GgBAk/b4CjqAWjnM/FcZOhnWYidQi4rgqu7B7nP3UQ4MGfko2XCCMRXg8JmuvRDLhkdJ8UGItyN+eGjOL68MUz/nQr4jecuXPuRXPyWoei9sJezMg7ZeXLJ0kMhHJ0Ai1hanFWZCiVl6huC/GYVMLh/UovjNbMRdU1Zadg1Hg5vHth7trJggxeOTusM2KDsAbIblGXRIoaV+AvDVqOq8kPKB1P3iaa8bZjKOXMq0kxjD86CX3hGWfMjgr/rEQ2Y5P1qU6lvzvGeCpT2BpOEPTBYczJS+meNW4yz05jltHauR9MfL90Cqo29CEB2sxdn1XjC+7xRVJ9KBrTneEFP2zfZo7mF01CwaE2b3cI7EN7f9glQONJmpQKZLYXLuN+jxOgIVRAVjvw0h26HdNR2QItFWGD+tNMy/FIsHJoKq/spV7p+cYMhpLSjeYcvxKARsHuBx+STUFCgxhyOEPgNs1WTAe0/F6nl8Z4+6WuX8EQycd9aAvogMPWvgB56vck/rj06PEF+AAEvJHpuvnRTbuCGX4LE9AMZtJNGAQytlQUsmJJHq7botE+BgTriLfaiMqifYeY1EFLmK9lEUCfHs+XnUfMIueCzzRl8x9f+YzUOook6LSj9oO7CTgo7yJ4HDdlKDAlxu+hECQ+VfYbYkFL5dMorofRA3PgJLjr+cQIpH6rNGR4PWgAVTn3iwvcUq85YjY2t8K65RrSgG4TYRxAqAUYE1TiSU4VDF4nsxLH4tdiheC7gisTOZ4jE7v+qnxvhr5eet1/NGJ9uyn8a+KQ+CvyblMf/ToSYzNEZw6J0xPQYDwowrUTJRIih0S0gDuUoEXq7VuFjxdoULzLUHA2R4EPYLHWS888HDtCCf9R4b/ODzUWsAEWGzwbinoMl8fXN6ByjCHc8CtRUsmJtPabAGjUPLvqOYSF8inFmxIc6nOwRSeL8hNaak5jxCEXwd4G3CBaWH4Wct6z8iKEZpUoZCm6B8I9JCybwXV6Tcgq2aBTEzNttMuf9Xa30LdNN35I4tXsftzPTnJNVrvGl3aiDyfVzc2Ma80T66lffqas3AVKJf/WDxNyE3XvaHzlbQkr4f7ZHigWYJ8f+RmovpSWgI9+iQSNOJtROD4aktgQJfhiNc2UThJ8Ko2Zg44OiztG8I8Ae68iHEyKm/gqmqkWx4E2z7h5LKaHTystfbW2HdLNR8XBsIhmPYD1Y9/Li3XYvqodnTXz1b8IfdydVTfWVkt4DwkPaJy9lSaG6C/9ghelniK6j0CuICNv4pCoRVrokPqNLuCDKgMVkc6SlcMEKQZCs/ef8SM4so9hZEWorzvxtB4XhR8r7/2+atRVZOBdwjM8O0fyyjjZtCe6Us+uRNDEyivWiLM0KIV75MEyPKeAOGLGetHhG+SyR2KfyFMPnnWY0Ds7dcmdeUvedI/AsAs7UUHD3Kt1Ksyxuz6ljQBRMtE3nD2PvCIgfFIlecw8jpGUdWf1/jdxSTJq4+8IprSo+EzJzBjJag3grjEBhYvfVJgZDOnhSMfWzT6O9jinN3fpJCS6AgpO3Vpyfxj+tJcutw5SO9j2CDprvbqRvUp0DhBmkG6lCtkDKSYHgACAQ0sBAID/f7WMRHdUTzA5fPkUPjH568DhIJpjtAglx5scJCDKJ4iL9LazdJYOduw/2krgey8/YPFjfIuBpaSfSxYk90mdT20qGxYMhuSpeHzK0sdlnZmcoAqx0dHQiCMRUX1CnLT8dGTTyEhw06QhPAvYoBaif4gXQA66pRHhmoBo2KDdM+kAaDRGpw/b9Yi/X1sGtlOPRn58vbF34jhClxX9AIjzBWppqMuzeXDDoRcObhlmgTVl1Kktvql12CjO8cbsvlw9MXhjKzmG++cSVF5wLEQ8XQ0CUX2D3HrkFzM0kXk+F1DTGo0P5w1QQA0X/MMo8wuhAvlLvMq2tUYKiwbC2cIIa/z1APlc+7HYHgoMUUDrft9Bp5KvkOHDOKfhtKiyOt8n5SkW75BuyXG1lcZ667dpZEND8To5slnokvd7aw4MqDk7vjR2R2YoeiGxvWDaEmaEcWWAulE47ihBWUCLyIDCKKmjPAg44gfCYAOqyJ7JkJyDOmjqqOhnU01su8kp8uFTdH/rjA+wfpyo3RzyS3RhU6m7nu7+fHaGmLzID/RTYOlAoJB4ONissnj+gPGJgJkCEsQMCj3XmS9vRuewtuEoGr05L0rbO/9/qDvTX0UMmzbDFU8TCSqOjhMC1qph4sE4lsJv88tMAGGy9z8xop81m+t1LgORYDK/+Y/D15yeELi6wJJp+Nb+3P+BoFhnf274z02RWV+IzyPm7wtp+01PkQ1PZigKLY8S60X1WB5sn8U7QPeYEbO2SMGuihAKH69dkpgSdQv0y+cHh48hSzT0Zys1uE1IfibjTJmRSeB00CuCjQsdEBWzfF03JYWlzcRUNWdLL/SwwnoWWVkaQi8NI73sDneA/rNT5E3ZGsmxnSVQD1mCyw9n87RpjALzlw9XUksTvihQ4kEZFFBOYFMHRAT7lxJ/fdfMXJ904Z+wDdj9MVkyChq1XUxryPHqvLyUZO138wnp1icr7+9jpHB0HYDo1f3+NLZcroIfi4LwUCwZMJ6CRhQeooXvLhD5Umg7/vi1I+6z6DJsRPCJUm0itKqQDZJOsSS0CugyrwerhCsJHbF52Lhp7Wl4sLPvFOwQjIriPCToAvDZ5OOF9hoPhoUbBp0dG95JOTOMWtILcVYNSdsGOtYzA+agfEtJQIJcIfmDVUjkhG9xw88iPGiR3/r71Wr8iJ9Li291ElUTJUiE4xtFA3JGlz75qU2nuRoTFhsfNNTNFUDs4LPh+X/wcHL8g0jTGcz3VieCD8GniM+xaKNnGTCFbR4WkI/UaLAMvO9Hyycft+PHhPXlrdGCz5gan/Je/tJftQPoZDwq88kxdC2N0RBM9/rmqrxyLl05XiQThZSGxf7HAa0aSZ/4MkjAr2xXp1ubfz237d5KvVAoOZmJGgMnnYGIF0oJWH7b6I5f1tlRVMPndaSlXnBi9qXjUiItlpu8nZXIMP+o/eOxgd6SBlYfVpn/wudF4K00VR5Y9C993nE/TXu/GntJlA5xx5+vwR+QRJ0TPrnAGvHc+btKMu+6YlAgnI9W/kzljSNEuG6s1MB8l/oFoxRlA97vxENIpSQ5vXzBitTwQzIm8uuSmxy1HMR2rRm3N99upFHbnVyp385RutwpXctkHKguh71uMtVQZBxRV+klHVGHhTg6TPk+iw2EKeeaBeWQztCcBD55lCkB19x+HOWYHcA9aO9AELTMzXwR5fT7HVE1h5qEEd4jmdCChNVg/Nqvb8cyLxeV/V+EFS78yl1C9Z1ZiuIv5f5gyCKwT8Y56MQggwk1y5PdcsZNgsTn1M3k2vHTn5HFiLAMP+r48KKO9ofsfjnt+lUcSyQ/oaxiFjGi/GIfGFxZOS4zgyX7d0cNbT0uNDaowGrOHAzDgOBEXo6C+U6B8a/+bxd7Uf1gfw7g6oRgBenwxXYhU/SxkpCoq6aA3mUw9y9drR7BwTnVcBIG+/fWCxcvnsA+xnHiyFb+85RJTBE3Z1QF4cSqcG5NMti0B1UZ595kQ8mQOvmwIbHnnwolZ+07eWmH3L0TpQc+i0CUKiY2BzFFk95Y1EdbbMK2uKMM5pmnBaVvRMpeoQu1uTbiruQ3KUNjPt4KSBqmoTQkwokeA5Yj4BWuWHGvS0adjxmykws0jW3yfkr59ikLvYe7v0olnHePUrUjml86j0w+MbOUtZDKGMvhpohDfR9snJkezaj2bTg9D9ScsuOmvSZI0piv+hnM7ZRZIU31Rc6frmnAxSLACfDy1Kf0pInpVWeT/Uyb4QQF4pIMDtl2Y6w7rJg1brZQ6Q6I/EzOpyXrs+lXj89MZB4Hun3epgCyetguXJCefFPGSC7JGBlP0iGLuKp3xnGxeXS9u2W8gkf8m2BExyLQr99QKCLhLIcF2N+FVearMzORByMdMzuZg1CBh6tqz8b2Tq6EnsNDyQeOzo+It7pj8XvUdrMJLf8HQw1loRjeVrojVIADRkzoxUsBHOfJlfmcy3lXg9+ux8YTDvMGH0Lzr7GjIezgkJZI7/t8ZRawYd5U2FrqHeXRL0Zso/SxNUpVqPHOTJmyGuGqhgoD20hfgSgx1a7OkdfFpepNlV3QeFD/vQxg5cQIRbB/1gjOG4MoZhRmtzU0TamLoRFkb+dKw3HjZ9W1Sd74mp05ORlY7uir9xeWco1n1a2AO1vgYMBz7mEkb8RkYBzswdaS2Jh232n7foAs8SpvoKDuytIcZ8g+WKUsGKor77eL6sKQ1ZCTiWInbDHIN2NLHmJlThJ6nuIXvnFYdD+xUc59kRhj2IwvrQbgZ/yvx9jBkIO0DZSvc2Ic0O7xfjYGLsMLBjnt8P9ge/LJCHezESAidJvTI5qRqmkK+Z3sAqacowfyxXScCaazOC2+qQ6nWnE79xkjRn9MQ0Afn5ogt2D6Pq4GC3wyb0htO6T1sQnK9gnSZbv/Ui8qr/9YpV93wd2jSdkXlfxNGuoKWCJobachednUsGG84qiFt+27LgQ+IYyrl6YFPNX8sOM1+Ym7yolRDEN9UWAChnCuMLIildfR2MoevctCNma0v3aioe8SvEiGq0xxoVLw6hyUBHvpmkbNktVlPFvLx3peP6Rv9CVgCML3cWzXWKXB3lNhjq78DpGaQ6brIAa2WgFDsx0sMwblUI3qZaz0tpkmBJcmPrqlaQfbs5tkW9ocpGiV7XyPwATNqIAPQst8wLx39ZVqAn1w3c+5kDcN1M50QR1l+lIuyxWXPIIgLN/Ye2ZIcioaRADuXLvGFF2J2BpOrFS9lQ7m3UTbOtmqyqNKSb1D4v/+D6gBUxjYUuDCeLaAXFwqed/0D3kmzqyNIpPSR+yVMqQ0yfGMyj/Uek+ErKpzS0vLV3M+0JSgFDWX3+2cc4WtUT8rjwrMfKuLyY1l0VCLbJEDNHLPmJw+Tq2HOVIT5e8NGf9qaVrLOsl4/TfNwsgd9XvfQMSSGdwZmJUwTRoQcja9I4Y7hMVGIjTE9gHW2yx0TbX+zoPJCQdg3FdJJxoh1JhNme1wVRVShVImEZ+C75YzTlwuS4bJBqBbtAL9C4Y0l4qA2XfARzgmRzILBhqfD6l1FFv9mH82HrxHmZxwHFNecVHuPZqglJfetOYHSqkqlN3Gd/0PkAXS8m4TyZJGpf478x2XFNUgVNodQQdi2ROZa2hSFtybNvfxS1170Wq7kB6SV/WopX7P6aNBYPidSg1F8JVbx6aXEjVNKQi9bj7OZcLf1GMcoYnHbDRq5xVC82v5MgRznDsN2x3+KZQl4fB0TMVNsBJKshZN0lmoq74Emc5HoPMBeSAgT9cZ40U39munHxzW6uJRVUBDcbNYS+9+Tmi/ZBy/OopQAJ/aLIZhCRDxD/ul8sERX+eRK2mrJwVQWI2RmCAVCzto3AS5+w/LlxkHymt4bEF5zqIvqdwywfD+AAMKzWpiv3okL06ruiUekyp0+YsiTPBBN4NUjEw7n6zbviRvs2taM3aYINoyfNkxdzS5nBqARZSp7UrNId4v0zFHVTJINC5sMe0tMhdjfGpylD7XulkehHgXj0bTqbFVgYxJb6BQOgrC+B8UeQeRMAOoAXfmwwh8JMG3YJLIaJERseNyzTE+yZkZoKcjeghPvaOuE6hHGoKLaY9PQSjpkKTHmpGkPIn2tViV9lcd99T+6BeEvNFMu/juPosmRRWD0LL9WIyykUvr7ltOSscUvxZjX7pvK+cprIpHSSnbd1qrrP0Ii/dtreL/tQoMHnvFzbJZiJ75OFFvLQ2Ijc/zMMfLwm6JvmRUTXj77RQ+eiB8HhuELTj++n0545ksZniSMIZbiJ0m+NEA6mnTNM5RiBY4rHh9Jz1emMeQ21Eo89E4qKQfVjGPOCHxguitjC97cV7F+NKxlYjNUoCHJhgwnvmOPKDM6TnLWI2naq45fKT1YmvbQ/oS5kO97Fxv2tujGRjq/x9B7dV/7ngfHhNaHhHCr9+GeKKbAI/+u+nOmbHy9eDFTYEiSrndV2YcMKgwqUblfGmUkeIgTUfhFJGNTNfOuo865kAA9EE8U5O18HfBVerPnzbd9FgTGBTKqYIcHzNBlMTLquLhmcWOX4pVqSDJwxrrO1Vv2YsSkmIXVG2NvfM2JDU145vhIJf8i4wTPngVZgpQkSbropWfvNaQo5rJdi1vhUW4HoKyBi4GJ99A0t9gLoCu6ikkLfGq4VAFgRW9h3SwOaxBROQdrJ/GeKuOXIvlDpTRaESb5vkLBwgYF5PRk01RgPAKPEMi8E99kGY6UwoTVZ3105BHiqW2VqTN2P/lHW6kG2Zxx4vyqWoKoYpzV6GggeD9o0TqvGBTsTlCQPJXPVhmi5EII1HMkIXgT15OFr3FVqPOVFIeaEyGRcPaSfLe3pabCCVyTs97kaWN5thBRQdZx7cSMXO9MqO8kbzt8NoNmysE5wgRHBcBx9gspmTHLmEBF1xpWQXlQ68fEz2AKy7qFoazvTdp1msBXz3NYQw1o6AU3bolMmcwJo1kxEMzR1f33Z4CBMo8eNi1j4kwxV6BvpHZ4RqGl9CgEVaLApWGeQnOAJCXvaC+jCxUA7kh6KHX9c7PDFICSGYNhwrryUxZ8FI2gyDvrPLgRKcASwsZP+C5ktiDEUoBWh5Mu62pyWB+leJI2MU8zCW8OGU0JG/jBKQBHM/ONBuMEjdfoZtI0AtRqYlYbHP7d8+adxcx2aiBfgZjGx1t551d+beNb2Tz782EjM9XcwgwhxajL0c+O/jRlnJj
*/