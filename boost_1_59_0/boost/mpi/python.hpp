// Copyright (C) 2006 Douglas Gregor <doug.gregor -at- gmail.com>

// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  Authors: Douglas Gregor
#ifndef BOOST_MPI_PYTHON_HPP
#define BOOST_MPI_PYTHON_HPP

#include <boost/python/object.hpp>

/** @file python.hpp
 *
 *  This header interacts with the Python bindings for Boost.MPI. The
 *  routines in this header can be used to register user-defined and
 *  library-defined data types with Boost.MPI for efficient
 *  (de-)serialization and separate transmission of skeletons and
 *  content.
 *
 */

namespace boost { namespace mpi { namespace python {

/**
 * @brief Register the type T for direct serialization within Boost.MPI
 *
 * The @c register_serialized function registers a C++ type for direct
 * serialization within Boost.MPI. Direct serialization elides the use
 * of the Python @c pickle package when serializing Python objects
 * that represent C++ values. Direct serialization can be beneficial
 * both to improve serialization performance (Python pickling can be
 * very inefficient) and to permit serialization for Python-wrapped
 * C++ objects that do not support pickling.
 *
 *  @param value A sample value of the type @c T. This may be used
 *  to compute the Python type associated with the C++ type @c T.
 *
 *  @param type The Python type associated with the C++ type @c
 *  T. If not provided, it will be computed from the same value @p
 *  value.
 */
template<typename T>
void
register_serialized(const T& value = T(), PyTypeObject* type = 0);

/**
 * @brief Registers a type for use with the skeleton/content mechanism
 * in Python.
 *
 * The skeleton/content mechanism can only be used from Python with
 * C++ types that have previously been registered via a call to this
 * function. Both the sender and the transmitter must register the
 * type. It is permitted to call this function multiple times for the
 * same type @c T, but only one call per process per type is
 * required. The type @c T must be Serializable.
 *
 *  @param value A sample object of type T that will be used to
 *  determine the Python type associated with T, if @p type is not
 *  specified.
 *
 *  @param type The Python type associated with the C++ type @c
 *  T. If not provided, it will be computed from the same value @p
 *  value.
 */
template<typename T>
void 
register_skeleton_and_content(const T& value = T(), PyTypeObject* type = 0);

} } } // end namespace boost::mpi::python

#ifndef BOOST_MPI_PYTHON_FORWARD_ONLY
#  include <boost/mpi/python/serialize.hpp>
#  include <boost/mpi/python/skeleton_and_content.hpp>
#else
#  undef BOOST_MPI_PYTHON_FORWARD_ONLY
#endif

#endif // BOOST_MPI_PYTHON_HPP

/* python.hpp
zmjk1UFFaTonEy3hzQFMospm1vB2PTQRjxNJHJp8K2t2W9+9NTlZPcxKyk6KPShPa6IQLfqaK+Xc/yBCLMx2k18HiapWxHCYRZAbqbWpfcDopStzlf21AVMSyVOOFGtjGhN60oajy1TxzUgC2cx9Epy22S/M8PYs9aIxHrvpbMOAyUCGpZlYBhcB2i61YDgpCpms+PuniCaE/LL88kPRAcXJvbeFNkFpgs79gOFb9+QlHP8x3CXnCRnGsHeE/KPHn6EJH2WoFrndTzlD9qwoolf1ALm/UOXVlk7P0kEYGzMHqQMoDwqQDbnNjYyeRcIV+cc6KvkVL6wVB/EYXHG0YO/hQ0hghk/mwK61R1zoU1R4O2aAbjyzQxDur9KyqtnSebgrjOl7vJrRK8mwLPqIRoB4U5pqiHSV7fPueIy117lB3uXgbn74ioiiOaO6tzhtzctfO1YMSYPYdK9AlhBEr4I06nASpegHg0/g69ic2DonI3ul6BTF8jh0mjzZstBzSBwa7prIDaWv3aVjKjCbUPze+w9mSNFMq3xz/BOebLt4WRh3d28umrXSZxElxZEXuL/RVQWzMjTQWoN/jt07e7Sl00SF6DI2J82YWiCZ+MrxqcPtnJy8lQf2Mks2MPzVxwS3gl1x/b1QwfV3+h8PAWWvgDpzJ8sQ78x/UtmbVrZSMQf4La3+ZpiZF3y1jfE9+ktuBWth7UPSvGJFaxSBg5B0KSmDaaBGBq0L8HJqUP4FRFRrTA6fYImwIuVG8Y3wyBgSejAQg0/8LrY3KlLM5Wps3rNB9/2Egqwn3j3l3Wwzmlr8EUFEYrjH+zE3nKoscdYp63Zk0XENc9NrM3ZLVgtBMmwIjtwFTHHgfgB+gpKAAH6/vjosidjD/aRosIqPW4f2skdtvctGB7W1Sp+atRoE3qgp+uIfgpiKXhphVDtSbWPS3wIfTw4yyIkuvy701BJc2+HWor49XCMc6IHdgA/gUDfaoXHNefBtkBdOpHLx8J2OObtQ4LtO4OXKvkc4HVIQjh2JYHg0qyV5moSTfFFqaB3iK78RNrQ4yEpJcL+MJVpWP8lfkDCtDCOXI+U6Lq4yOOnB20rFvBZnKNL0ZxcLMvMRCCJljdrSbkNGgi5dIPNCBwaIYeau21ByVFCJQWvvDBDonRDWnYiOyb097jo1o8P62zKLMmqwVtFHCASggWLDqQ1i6E4n9Qk//WA/+fsMwZMafr4B7H0OmdfKT/ZbQkvxLWICIHYfa4x4wEUWGGtqc7TUPbGJ7bUAPcVCMvyWh5SvspadKH33r9+t1rLYFBuQx+CgHINzN6Br1W6vRrixN6seXuaigxVlKepENUA2/Ugjdt5O3TRLbADvt/hU4d05qtCQXcUfPkQK8nbDGuQQYQrAGs+UEzu+kkqd/0ovVeCcXzD10N85kFXnZeZ9TRR9yBC6QpBnefjB7Cn3GaXp3KSsI01BDThM3BV7nc3DjipLdXBGkdM/cVF5NW2iqfc8EOf/2UuUJu5clZCsPV31kjw/UrSzuFHdLsHf2x9EWTOuKhGlMLg4/oxnzh9fQliwJzpE8ASk78PDoZDGsFVjVHXmlKJhoXQ4WxLsshDtNTfhTs978H1SeJmvztzkVPt0mExlgGIxhi9E2o1c6xUmvi75OOucOzz824yOuGFLQiyYVNm3Vf1hKK+uWZmBsfFa4SOHF068RrEZ2h1CA8dok3kXsj8mi1zm8Ru0cUcn+jnS36/w8agX64YVyPfq9aMTWsT6spgo+kKCh2mnSi03gKESZhht7OAtsg2j4wz2+WoJFVTrfqwT7XEJzT5u2tUyq/XRZUK36bpE/CENyKn8utNahL6eXqkOb6viVVfACw9ARDw/b7e+t5nebOlAuy9hem1aMD6XjlucJik2b0wo5HBY4B5xxEvUDqMbknSaWZ99MC7rGF3AsXbQZHmO9TWRsQ6VtP1YOIO1MZFRCqMRi8WomB+D9+a4mgR1tgXLBtvsdfhUF9dOfIuLJ2HTLSU0lIJMxoVUaFami47g+JHy8ty3OK7GxdD1KXRhfvWqMYW42CuApEPZTscNVGztUm6X2OMM1GXhbqYuqSPUCU/gQXMTAWdcVuOhsTABXk9h53JxSzaQ10g+2PmXqzEwJQHj8LPDuI5EwLf0uIqCe73blfTxr4kmt0CH9A7z6hJjWDeKB8K5RgzmvwwbzPMSWVCIwKkjq0SLgvW0mDMLucFT1W3jSDHsyuV8eyttI3i6CbI5cRSZB2VeOfB30b8ZdAH2L3Zra55KINtY1SE0I2wpfD6bHaKmNB64oZX7dxjSoDdG3P9Xya5kJTV5gdBKtF7ObOhYKiwVABLQaaJZLM2L3M5aPj7gcP/lYwgtMZYB4u7twOMjcr0QIEmcpKtkNNd6ozzqNj2IVW61RqbfjAD3uxhHZ5CPD9TyJcV9CpaFH3XFn+sp2td/nj0Q+WZ9FTTXckvB70O9bOqSTK5YeER/lP4SQ2IT+0BI3lwh/kQ8+WWV0WzS3rn7P/+nywQPqfXhjjvn1hNoo1cLNPmNr+y7ponOzGe3MHsZAm6Pn+1/v6xB9P+lNi7NjQ1mujDNChg8e3ls7Kdpmm2f3ZwrhggtBV338sTpktDzXOSwyi94nmCC4K08Yjkt1x1pbNcSxnxUOKkNPz76tohzMUEkgLLFqX869/KlpMKQItOXzrYhFLqnTPfKwg5xQ6WT9klxpQwouP6or0wWyBuD+YacZZkBkav8ZoBa1i6sslxaN2q5rTLLk/Js5pTN2zo66coL0jYWYK6Cy9r3sqnjTtrCwOTMyt+Z1Dt1psq+jGKw5Y94ejAE56CFqjX++OAIdGfohJqmqe2kUHfNumnh7LDkEnarB71/YPzz0cZE0T6HUbzt0oNTZOB8UU6V1+DhuWKr+Pe4s0Vra0y3kYx2P6QwPoYEYkq3KGNTgiP7/W+cJTWe7X2OuGDNCA5hPqRGh+ABQlpYXckW+hz3cDTRAXJb+mLJJLNn0Aq0hm6Z/qIghGoXvuMMEnD4fFxSU7x9bAtDA/jEo7rXnFvYHWAuXId7cKUm842kFp0DCL37skFAr7+WMmbr0vpyYx5ICsQRk+7JJpFpoYdYELgaYShY1ri0yvUCd/btsJZ/lbcydryOkPRk/8sk1JNwGjN72++lf/WhgyPTFNMOdpf2GjsjEt7bGEEiaSq2aAsioKym/qjDo3WlmPqLjJ0KF7cDD7LfOsceAYmiLMRPGZ5Krz0nQoVZaqIZLOvYnL86AxDipO5k9DX7vP+eJWZVJhkjMSezyKKzA+i/l5Z/z9hlyf1jGpHXSXDPn4vHhzWarOss1HwQgvbL0KMFkIJEG3NsuKKQZzuh3ZjRI6ikgAqgtYvAxhHvRESQ19vTi8UiJRTfOCX2ImqTNTo53tGVGJ3vVBPfZao5xmrjyyiBs4MczXZd5f4R+TAaUZWNaIBkH46G/Tr3ji2jcFIps+Nduo96fTEaFEtcKrlsiOYvRv7Ambo8l3Z1Erz7fLWBpemSn20bBUSuO2kv1/+ZXuu9hSafHsguP9qn4O5uwOWHnEJwpWcLaoyrwOW4SkrJUlwUMV1+wVGcz9C6bnWeG8vtbocy6lufTK5HVzrX5gKfagaVuhfBDe0vPnMFrsqCQtOcs6A0t+E/wA0Ikzf35YNCeEpb6m7jQWg76c+jP+XJKUca9h2U+Gwm5xj0SEXsz5benFbMzuSWRhPLqMbiBNwhTYhsV6acdW+DTkUK4gBOVJvrJ359hKIRjXti3SzIA2NLO5WvHtn8wwZ8tIvfFOiFieAtofSPJKZcA8jfm5bg13Mi4bSXeGpbC3+U8gilb9YVqGH5D71YtXxDw/8AG7z2ACfUPOSKd1k2hhl9lLH1pXjGqsYGJX9izMol1yQi9HGjjfN07q3EV5/+wfK3M5cm8tJx4XjAGWvDbDkS9xa74QoJBTUZsEesXEpygCKtvDknoNQJgWloyeJnUCDc8VQVQRO/oHXLNylOI87eDiU4hA/4Is3CvUyD1Jrsv+je4wlLHb1A05BQD4QYzLbwpsgooNl8thLXYTrrneiurK87neBRvJf6VKtFkPi1WM3i8eK8ieVfIvHAf6OoPdUpRSQAI7FmQ0i4yhp9jikCM7duNj0VrKz4Fi6a68/A4a88wRoMUfDvzMxjY7XMS7ovZ0xRtYT/GWZgvAkYDRMNIKAzbEz4O9Ul7kb12zqvay2mW//09skuVPu/5yjVj2mbhz23LTDcOkAVbt1k5NRz8w+ZNh6lDP1bxCX+TKoXSivBxJF7HLSJVdKPsIQmgxeRnzNfLujDTTdr1a9pqdE94y/vayIWzTbAnfCLglKcl6XR7x/TFwaQWI/wL5w9QU4TgKPQkacZmwXcUrfDqJqwE8sHcwSyCEKYAfk5YM07/+dx4P96N96B+ZWtbvsmYZU1RLJFhHePbzJiQ4nxC5Hcp0evmXykhlR8BsjPBVAq7IAr9oYFwm3Hlqzu+JWmMi76/UFXe5kFq2IK+lWaG8bd+jKQm7HzHxdiFS/eWyWbnbtqJlInmkqsORe6/9Xj8VG1xqHnZ++pGoqSN20qbIfQVu0nz2TFRn/OcF7ZQadStjfKikrmpNo84oDV0gbkEoN+EdEWup+dYGueP+16JSIqaWTDeL9XShfZPohgmdR3h2lck0aze5j0z5JmKNBJqXqKJ3Xps5P9mb3bVpmydtNMO3h2v1569e1Z5bLOsdSlPjTTrmsrilT708MFe6FyiN2Jq+/2sxQ44pEdQrpjhxftLEJJ66y74cKdFTv6yOp2vZbm8qa5/IapKxlcqBLcGbvYB5fk7kcvxZ5vecdN+ZhDquMdmL8sAgVAKwS1MS68NPmlb9Q8AS8yOJtjLcF9KGRUGDcJQdTSO0uAmsPC2vA60RJm46DD7ZkfK59PgH+0i6n1VD16fCkknPEaFS87HIXKdWBJ+n/2rh4oxfH3RSzSlxkWaECdcPGbBxEx5wqIBftmM8Pjblz2ez0oDLpWW/72r8/tsCHcfSwSdpHYspnK4CGby+cGk5ZjQYylwfVoyY6+rdIK4XGIfQXAKhSkiSHFBLCd3eUr2DU5FFvIVKR6i9z5gaMN44oD8j7hfZtayiTh7CPYO31I0sY4DiPIema4k6De6dsY0fugh9nO52R2OA8PGbfvvegENuUV3f6eZM5wSsDqwSJabD16+xBNbFugdTCZMeIcMhq0vUrWH7V7PebBGv/gugHmAlIHdlOFC6a2v3BtJrDUnPrhC0i3GmVX0bUImwlHPe5r5JutWKMnvT+Oe3TjIssXIJ8ILCGsqcLRqj0+IZhG1Rmw5tQhS65UZDn/c6fUal5Z5uc552BJuZjjKO4gXQu9HkwEiogMoDAAO4QgUPBdG8vggdBejsh4PYqJ/1rak1SozpMP/754DYhNp5zXWYv3je0AdovHf8zCA15wEHPPdWODXGfA5kLDozGEdBSh3YUPdc3HtF1fdLFvIPYYGP3AJrg0bjUy3Oot2W/rhXaF/XoEeYWVpkhbTmQQKxEcdzsqz3N7VwCv2rh0yM/X29NDUuMz1VlXvCNFW99vkhx/1I2WV7kjeRQ+2Lp46hiy+o28/wLho0bz0FZaP0e4t887AbfkbNymFbN0XCg0yUw/vEwODUwmIBGanLG4SZgEb/S2HKGHibzDOIyvwFsnvIKGKbvNqBJv4wUw55PaMmv8wAusmOJ26ghkcdbYdflyAIf3Bwyos4ZxKZI6f9x9dkPvSGOSdEIO71g9DV+OVr61zeqmVPfgsomzWzpm2Wgq0HFfvn9Lr2xPAXy40e7eQEkaUC9wftiyeL+curw1R1pz37WA97IXflec3gb/9vImr7TsMMpGgim9T0KxmQYsnVctpnDsQZoiAhKJDfjlFjq2YM/ZcUtild9QS9t/u+153P4A8tHwWdzEzXmLEMHB6aFamDse8OEIJMgfllODTnERfepeNvlLjhcImxS7Q6tXjXVy9Om+HY8Y9IDdUR0GiUDGeUFx8fCSQUUzpg5VSFJ70PJKWdb2L69NJcbBfSJZeyIZFrG9AETeqxpV/cb98dgDLJb3w5RCOS0xGOM8Ge4KpaKgWX2AgiqiKWjXk1RednggYobr177T6C46B/N4IyYkJUF/hYe96hQvvQF/qY63tFD7XFT6sY33LRVSJP8f1VDVIfwuujhbh5gDAbtFhdPctME0f2kNwS3WWsHZ0u0zi1qtR8u9Sg01TjzfsCEMKd6sd06gtQi0iAqsuvEtXx5DwX5UU8Ru4A1yWMwE1CLn1Q5xGwws1TNs8Hck1jiXUVyO1SDhPAJhuolADxTCaBz6FyjJ7Wpu0uJBzb3KRzgLuinZMzn7mBlsA6dpGlud4+p+CWMwqAmaQL+dwuT1ESjf5n/G7TagqNEm6XK/SKDQS3O1gTLo9yscZYiTajRtII7KvU3jDBwM6L8snaamByhhujk+i1qu/Hb/1YEMczxflK2HOgorbpqKXnqpp+ufP0MtYA/RVkAFFH3aZEZzBUEb0mHoXSB5Gl+7ZvL4tOm8v8RxR/xTS/+vn5/dZkdQsOZM+9+pdLJfwOG/w6Iy2uYT7BtnxZ83tya5vW+7uR3FAm1r7A3DdQvXCRNxS+ZcnZzg1YU6ABKI9JYQUfunxzZvVm48cXUEIqdFqvHjZzn1+X9kEZ4vWB70AIeA/swRhAfA1DyzeqrXLgiog7Yzgedsdv9UWXtzFPQOgWM233yXuZl+aY2FoVPi6aZFfOiuI2XnlFftq50yH8SXyEKXvQ52P39gTrn3ilKLHY6GkVkg+GlzjB++5sEowyEyM6xDfCkTjO6eHbofHfN/Tr3fqie3+xXRaGyEOS9BCpBSNw/hozan60fDYpZeWOdmGok+1ppIMo182VkP2xFhfCb+/ZeZOo2AB+1sZEgu7btn7dpVtj1bWtqsg7CyceAmK8jBYaPtENdZJQ+C+z4iXHfKBiW+Gs7H5xkZ8oFQgNkQpghIpTAfKcOO5Yuj89chwcGzg1sXCZ2me9C2YgyjhxSlbjSE9eZ8eMaLt1Ybp5eu2ZLhQv8d+nX8G5E6pFDU3lP5FP83dUhOfyOf2HBxHEOHQ5XxUfzk2J4gGCenFDJTv3DAcTSjCgYdNCgl/nXBYvnCQRyXsYoqbetiG/WvnXKaMciUc4hEc03On9RQaAIe9wVeDmLvBER+19JG6cCbAA7EAejTqaC/h5eIIv0bdOe/GOJ5NbI7T4mVFANiYYb1fLnrN4f0ttnzkxhRtr6meA6oIkpADdJq4INlezjZuUSJukgQPq4yV/EZtnQApho2kBCIz6UCe5ZoD1FmxEWW3DyQQZ+4R5en00riMvhPagab6SjYuZku8GqEujWsnkM0jXsQhaN2ipj7//BX6NlPnI3SCKMBB0OIASIhU1X6cwK9hHJAjPC0ezeThdEq2/Rkm8n/BxuA5H/JOFA9GCy+VznYOImCoOTHmkn5AunJhg+ffAl0B4UE3eWfRIsjkl1gUuutjEATt4DZZo2V36Es3BA+VHJhxybQlkBELEjxzunOjUkK4asSqJ+0CgdGhNVgOB+QUMOUZIS02qbOCyX+wb7SqMxRu6b+9mK1WUAZzXx9G+rkuFzgG/SdeaywySk7pG13qOm3
*/