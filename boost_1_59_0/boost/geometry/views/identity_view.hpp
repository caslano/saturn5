// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2012 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2012 Mateusz Loskot, London, UK.

// This file was modified by Oracle on 2020-2021.
// Modifications copyright (c) 2020-2021 Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_VIEWS_IDENTITY_VIEW_HPP
#define BOOST_GEOMETRY_VIEWS_IDENTITY_VIEW_HPP

#include <boost/range/iterator_range.hpp>

#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>


namespace boost { namespace geometry
{

// Silence warning C4512: assignment operator could not be generated
#if defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable : 4512)
#endif

/*!
\brief View on a range, not modifying anything
\tparam Range original range
\ingroup views
*/
template <typename Range>
struct identity_view
{
    using const_iterator = typename boost::range_iterator<Range const>::type;
    using iterator = typename boost::range_iterator<Range>::type;

    explicit inline identity_view(Range& r)
        : m_begin(boost::begin(r))
        , m_end(boost::end(r))
    {}

    inline const_iterator begin() const { return m_begin; }
    inline const_iterator end() const { return m_end; }

    inline iterator begin() { return m_begin; }
    inline iterator end() { return m_end; }

private:
    iterator m_begin;
    iterator m_end;
};

#if defined(_MSC_VER)
#pragma warning(pop)
#endif

}} // namespace boost::geometry


#endif // BOOST_GEOMETRY_VIEWS_IDENTITY_VIEW_HPP

/* identity_view.hpp
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
*/