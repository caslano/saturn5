// Boost.Geometry

// Copyright (c) 2017-2018, Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_SRS_EPSG_HPP
#define BOOST_GEOMETRY_SRS_EPSG_HPP


#include <boost/geometry/srs/projection.hpp>
#include <boost/geometry/srs/projections/epsg.hpp>
#include <boost/geometry/srs/projections/epsg_params.hpp>
#include <boost/geometry/srs/projections/epsg_traits.hpp>


namespace boost { namespace geometry
{
    
namespace projections
{

template <>
struct dynamic_parameters<srs::epsg>
{
    static const bool is_specialized = true;
    static inline srs::dpar::parameters<> apply(srs::epsg const& params)
    {
        return projections::detail::epsg_to_parameters(params.code);
    }
};

template <int Code, typename CT>
class proj_wrapper<srs::static_epsg<Code>, CT>
    : public proj_wrapper
        <
            typename projections::detail::epsg_traits<Code>::parameters_type,
            CT
        >
{
    typedef projections::detail::epsg_traits<Code> epsg_traits;

    typedef proj_wrapper
        <
            typename epsg_traits::parameters_type,
            CT
        > base_t;

public:
    proj_wrapper()
        : base_t(epsg_traits::parameters())
    {}

    explicit proj_wrapper(srs::static_epsg<Code> const&)
        : base_t(epsg_traits::parameters())
    {}
};

} // namespace projections


}} // namespace boost::geometry


#endif // BOOST_GEOMETRY_SRS_EPSG_HPP

/* epsg.hpp
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
*/