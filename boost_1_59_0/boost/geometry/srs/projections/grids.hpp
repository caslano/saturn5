// Boost.Geometry

// This file was modified by Oracle on 2018, 2019.
// Modifications copyright (c) 2018, 2019, Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_SRS_PROJECTIONS_GRIDS_HPP
#define BOOST_GEOMETRY_SRS_PROJECTIONS_GRIDS_HPP


#include <boost/geometry/srs/projections/impl/pj_gridinfo.hpp>

#include <fstream>


namespace boost { namespace geometry
{


namespace projections { namespace detail
{


struct grids_tag {};
struct shared_grids_tag {};


}} // namespace projections::detail

namespace srs
{

class grids
{
public:
    std::size_t size() const
    {
        return gridinfo.size();
    }

    bool empty() const
    {
        return gridinfo.empty();
    }

    typedef projections::detail::grids_tag tag;

    projections::detail::pj_gridinfo gridinfo;
};

struct ifstream_policy
{
    typedef std::ifstream stream_type;

    static inline void open(stream_type & is, std::string const& gridname)
    {
        is.open(gridname.c_str(), std::ios::binary);
    }
};

template
<
    typename StreamPolicy = srs::ifstream_policy,
    typename Grids = grids
>
struct grids_storage
{
    typedef StreamPolicy stream_policy_type;
    typedef Grids grids_type;

    grids_storage()
    {}

    explicit grids_storage(stream_policy_type const& policy)
        : stream_policy(policy)
    {}

    stream_policy_type stream_policy;
    grids_type hgrids;
};


template <typename GridsStorage = grids_storage<> >
class projection_grids
{
public:
    projection_grids(GridsStorage & storage)
        : m_storage_ptr(boost::addressof(storage))
    {}

    typedef GridsStorage grids_storage_type;

    GridsStorage & grids_storage() const
    {
        return *m_storage_ptr;
    }

private:
    GridsStorage * const m_storage_ptr;

public:
    std::vector<std::size_t> hindexes;
};


template <typename GridsStorage = grids_storage<> >
struct transformation_grids
{
    explicit transformation_grids(GridsStorage & storage)
        : src_grids(storage)
        , dst_grids(storage)
    {}

    projection_grids<GridsStorage> src_grids;
    projection_grids<GridsStorage> dst_grids;
};


namespace detail
{

struct empty_grids_storage {};
struct empty_projection_grids {};

} // namespace detail


template <>
struct transformation_grids<detail::empty_grids_storage>
{
    detail::empty_projection_grids src_grids;
    detail::empty_projection_grids dst_grids;
};


}}} // namespace boost::geometry::srs


#endif // BOOST_GEOMETRY_SRS_PROJECTIONS_GRIDS_HPP

/* grids.hpp
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
*/