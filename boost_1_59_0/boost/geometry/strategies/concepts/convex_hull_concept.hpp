// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2012 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2012 Mateusz Loskot, London, UK.

// This file was modified by Oracle on 2014.
// Modifications copyright (c) 2014 Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_STRATEGIES_CONCEPTS_CONVEX_HULL_CONCEPT_HPP
#define BOOST_GEOMETRY_STRATEGIES_CONCEPTS_CONVEX_HULL_CONCEPT_HPP


#include <vector>

#include <boost/concept_check.hpp>


namespace boost { namespace geometry { namespace concepts
{


/*!
    \brief Checks strategy for convex_hull
    \ingroup convex_hull
*/
template <typename Strategy>
class ConvexHullStrategy
{
#ifndef DOXYGEN_NO_CONCEPT_MEMBERS

    // 1) must define state_type
    typedef typename Strategy::state_type state_type;

    // 2) must define point_type
    typedef typename Strategy::point_type point_type;

    // 3) must define geometry_type
    typedef typename Strategy::geometry_type geometry_type;

    struct check_methods
    {
        static void apply()
        {
            Strategy const* str = 0;

            state_type* st = 0;
            geometry_type* sp = 0;
            std::vector<point_type> *v = 0;

            // 4) must implement a method apply, iterating over a range
            str->apply(*sp, *st);

            // 5) must implement a method result, with an output iterator
            str->result(*st, std::back_inserter(*v), true, true);
        }
    };

public :
    BOOST_CONCEPT_USAGE(ConvexHullStrategy)
    {
        check_methods::apply();
    }
#endif
};


}}} // namespace boost::geometry::concepts


#endif // BOOST_GEOMETRY_STRATEGIES_CONCEPTS_CONVEX_HULL_CONCEPT_HPP

/* convex_hull_concept.hpp
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
*/