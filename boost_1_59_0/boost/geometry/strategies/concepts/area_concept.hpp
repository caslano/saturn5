// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2012 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2012 Mateusz Loskot, London, UK.
// Copyright (c) 2017 Adam Wulkiewicz, Lodz, Poland.

// This file was modified by Oracle on 2018.
// Modifications copyright (c) 2018 Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_STRATEGIES_CONCEPTS_AREA_CONCEPT_HPP
#define BOOST_GEOMETRY_STRATEGIES_CONCEPTS_AREA_CONCEPT_HPP


#include <boost/concept_check.hpp>
#include <boost/core/ignore_unused.hpp>

#include <boost/geometry/geometries/point.hpp>


namespace boost { namespace geometry { namespace concepts
{


/*!
    \brief Checks strategy for area
    \ingroup area
*/
template <typename Geometry, typename Strategy>
class AreaStrategy
{
#ifndef DOXYGEN_NO_CONCEPT_MEMBERS

    // 1) must define state template,
    typedef typename Strategy::template state<Geometry> state_type;

    // 2) must define result_type template,
    typedef typename Strategy::template result_type<Geometry>::type return_type;

    struct check_methods
    {
        static void apply()
        {
            Strategy const* str = 0;
            state_type *st = 0;

            // 3) must implement a method apply with the following signature
            typename geometry::point_type<Geometry>::type const* sp = 0;
            str->apply(*sp, *sp, *st);

            // 4) must implement a static method result with the following signature
            return_type r = str->result(*st);

            boost::ignore_unused(r, str);
        }
    };

public :
    BOOST_CONCEPT_USAGE(AreaStrategy)
    {
        check_methods::apply();
    }

#endif
};


}}} // namespace boost::geometry::concepts


#endif // BOOST_GEOMETRY_STRATEGIES_CONCEPTS_AREA_CONCEPT_HPP

/* area_concept.hpp
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
*/