// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2012-2014 Barend Gehrels, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_STRATEGIES_CARTESIAN_BUFFER_HPP
#define BOOST_GEOMETRY_STRATEGIES_CARTESIAN_BUFFER_HPP

namespace boost { namespace geometry
{

namespace strategy { namespace buffer
{

/*

   A Buffer-join strategy gets 4 input points.
   On the two consecutive segments s1 and s2 (joining at vertex v):

   The lines from parallel at s1, s2 (at buffer-distance) end/start
   in two points perpendicular to the segments: p1 and p2.
   These parallel lines interesct in point ip

             (s2)
              |
              |
              ^
              |
        (p2)  |(v)
        *     +----<--- (s1)

        x(ip) *(p1)


    So, in clockwise order:
        v : vertex point
        p1: perpendicular on left side of segment1<1> (perp1)
        ip: intersection point
        p2: perpendicular on left side of segment2<0> (perp2)
*/



/*!
\brief Enumerates options for side of buffer (left/right w.r.t. directed
    segment)
\ingroup enum
\details Around a linestring, a buffer can be defined left or right.
    Around a polygon, assumed clockwise internally,
    a buffer is either on the left side (inflates the polygon), or on the
    right side (deflates the polygon)
*/
enum buffer_side_selector { buffer_side_left, buffer_side_right };

/*!
\brief Enumerates types of pieces (parts of buffer) around geometries
\ingroup enum
*/
enum piece_type
{
    buffered_segment,
    buffered_join,
    buffered_round_end,
    buffered_flat_end,
    buffered_point,
    buffered_concave,   // always on the inside
    piece_type_unknown
};


/*!
\brief Enumerates types of joins
\ingroup enum
*/
enum join_selector
{
    join_convex,
    join_concave,
    join_continue, // collinear, next segment touches previous segment
    join_spike     // collinear, with overlap, next segment goes back
};

/*!
\brief Enumerates types of result codes from buffer strategies
\ingroup enum
*/
enum result_code
{
    result_normal,
    result_error_numerical,
    result_no_output
};


}} // namespace strategy::buffer


}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_CARTESIAN_BUFFER_HPP

/* buffer.hpp
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
*/