// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_DISCRETE_DISTANCE_CARTESIAN_HPP
#define BOOST_GEOMETRY_STRATEGIES_DISCRETE_DISTANCE_CARTESIAN_HPP


#include <boost/geometry/strategies/cartesian/distance_pythagoras.hpp>

#include <boost/geometry/strategies/detail.hpp>
#include <boost/geometry/strategies/discrete_distance/services.hpp>
#include <boost/geometry/strategies/distance/comparable.hpp>
#include <boost/geometry/strategies/distance/detail.hpp>

#include <boost/geometry/util/type_traits.hpp>


namespace boost { namespace geometry
{

namespace strategies { namespace discrete_distance
{

template <typename CalculationType = void>
struct cartesian
    : public strategies::detail::cartesian_base
{
    template <typename Geometry1, typename Geometry2>
    static auto distance(Geometry1 const&, Geometry2 const&,
                         distance::detail::enable_if_pp_t<Geometry1, Geometry2> * = nullptr)
    {
        return strategy::distance::pythagoras<CalculationType>();
    }
};


namespace services
{

template <typename Geometry1, typename Geometry2>
struct default_strategy<Geometry1, Geometry2, cartesian_tag, cartesian_tag>
{
    using type = strategies::discrete_distance::cartesian<>;
};


template <typename CT>
struct strategy_converter<strategy::distance::pythagoras<CT> >
{
    static auto get(strategy::distance::pythagoras<CT> const&)
    {
        return strategies::discrete_distance::cartesian<CT>();
    }
};

template <typename CT>
struct strategy_converter<strategy::distance::comparable::pythagoras<CT> >
{
    static auto get(strategy::distance::comparable::pythagoras<CT> const&)
    {
        return strategies::distance::detail::make_comparable(
                strategies::discrete_distance::cartesian<CT>());
    }
};


} // namespace services

}} // namespace strategies::discrete_distance

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_DISCRETE_DISTANCE_CARTESIAN_HPP

/* cartesian.hpp
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
*/