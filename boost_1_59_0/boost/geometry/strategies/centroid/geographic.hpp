// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_CENTROID_GEOGRAPHIC_HPP
#define BOOST_GEOMETRY_STRATEGIES_CENTROID_GEOGRAPHIC_HPP


#include <boost/geometry/strategies/detail.hpp>
#include <boost/geometry/strategies/centroid.hpp>
#include <boost/geometry/strategies/centroid/services.hpp>


namespace boost { namespace geometry
{

namespace strategies { namespace centroid
{

template
<
    typename FormulaPolicy = strategy::andoyer,
    typename Spheroid = srs::spheroid<double>,
    typename CalculationType = void
>
class geographic
    : public strategies::detail::geographic_base<Spheroid>
{
    using base_t = strategies::detail::geographic_base<Spheroid>;

public:
    geographic() = default;

    explicit geographic(Spheroid const& spheroid)
        : base_t(spheroid)
    {}

    // TODO: Box and Segment should have proper strategies.
    template <typename Geometry, typename Point>
    static auto centroid(Geometry const&, Point const&,
                         std::enable_if_t
                            <
                                util::is_segment<Geometry>::value
                             || util::is_box<Geometry>::value
                            > * = nullptr)
    {
        return strategy::centroid::not_applicable_strategy();
    }
};

namespace services
{

template <typename Geometry>
struct default_strategy<Geometry, geographic_tag>
{
    using type = strategies::centroid::geographic<>;
};

} // namespace services

}} // namespace strategies::centroid

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_CENTROID_GEOGRAPHIC_HPP

/* geographic.hpp
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
*/