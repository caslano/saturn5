// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_DENSIFY_SPHERICAL_HPP
#define BOOST_GEOMETRY_STRATEGIES_DENSIFY_SPHERICAL_HPP


#include <boost/geometry/strategies/detail.hpp>
#include <boost/geometry/strategies/densify/services.hpp>

#include <boost/geometry/strategies/spherical/densify.hpp>


namespace boost { namespace geometry
{

namespace strategies { namespace densify
{

template
<
    typename RadiusTypeOrSphere = double,
    typename CalculationType = void
>
class spherical
    : public strategies::detail::spherical_base<RadiusTypeOrSphere>
{
    using base_t = strategies::detail::spherical_base<RadiusTypeOrSphere>;

public:
    spherical() = default;

    template <typename RadiusOrSphere>
    explicit spherical(RadiusOrSphere const& radius_or_sphere)
        : base_t(radius_or_sphere)
    {}

    template <typename Geometry>
    auto densify(Geometry const&) const
    {
        return strategy::densify::spherical
                <
                    typename base_t::radius_type, CalculationType
                >(base_t::radius());
    }
};


namespace services
{

template <typename Geometry>
struct default_strategy<Geometry, spherical_equatorial_tag>
{
    using type = strategies::densify::spherical<>;
};


template <typename R, typename CT>
struct strategy_converter<strategy::densify::spherical<R, CT> >
{
    static auto get(strategy::densify::spherical<R, CT> const& s)
    {
        return strategies::densify::spherical<R, CT>(s.radius());
    }
};


} // namespace services

}} // namespace strategies::densify

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_DENSIFY_SPHERICAL_HPP

/* spherical.hpp
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
*/