// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_DENSIFY_GEOGRAPHIC_HPP
#define BOOST_GEOMETRY_STRATEGIES_DENSIFY_GEOGRAPHIC_HPP


#include <boost/geometry/strategies/detail.hpp>
#include <boost/geometry/strategies/densify/services.hpp>

#include <boost/geometry/strategies/geographic/densify.hpp>


namespace boost { namespace geometry
{

namespace strategies { namespace densify
{

template
<
    typename FormulaPolicy = strategy::andoyer,
    typename Spheroid = srs::spheroid<double>,
    typename CalculationType = void
>
class geographic
    : public strategies::detail::geographic_base<Spheroid>
{
    using base_t = strategies::detail::geographic_base<Spheroid>;

public:
    geographic() = default;

    explicit geographic(Spheroid const& spheroid)
        : base_t(spheroid)
    {}

    template <typename Geometry>
    auto densify(Geometry const&) const
    {
        return strategy::densify::geographic
                <
                    FormulaPolicy, Spheroid, CalculationType
                >(base_t::m_spheroid);
    }
};


namespace services
{

template <typename Geometry>
struct default_strategy<Geometry, geographic_tag>
{
    using type = strategies::densify::geographic<>;
};


template <typename FP, typename S, typename CT>
struct strategy_converter<strategy::densify::geographic<FP, S, CT> >
{
    static auto get(strategy::densify::geographic<FP, S, CT> const& s)
    {
        return strategies::densify::geographic<FP, S, CT>(s.model());
    }
};


} // namespace services

}} // namespace strategies::densify

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_DENSIFY_GEOGRAPHIC_HPP

/* geographic.hpp
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
*/