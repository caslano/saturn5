// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_AZIMUTH_GEOGRAPHIC_HPP
#define BOOST_GEOMETRY_STRATEGIES_AZIMUTH_GEOGRAPHIC_HPP


// TODO: move this file to boost/geometry/strategy
#include <boost/geometry/strategies/geographic/azimuth.hpp>

#include <boost/geometry/strategies/azimuth/services.hpp>
#include <boost/geometry/strategies/detail.hpp>


namespace boost { namespace geometry
{

namespace strategies { namespace azimuth
{

template
<
    typename FormulaPolicy = strategy::andoyer,
    typename Spheroid = srs::spheroid<double>,
    typename CalculationType = void
>
class geographic : strategies::detail::geographic_base<Spheroid>
{
    using base_t = strategies::detail::geographic_base<Spheroid>;

public:
    geographic()
        : base_t()
    {}

    explicit geographic(Spheroid const& spheroid)
        : base_t(spheroid)
    {}

    auto azimuth() const
    {
        return strategy::azimuth::geographic
            <
                FormulaPolicy, Spheroid, CalculationType
            >(base_t::m_spheroid);
    }
};


namespace services
{

template <typename Point1, typename Point2>
struct default_strategy<Point1, Point2, geographic_tag, geographic_tag>
{
    using type = strategies::azimuth::geographic<>;
};


template <typename FP, typename S, typename CT>
struct strategy_converter<strategy::azimuth::geographic<FP, S, CT> >
{
    static auto get(strategy::azimuth::geographic<FP, S, CT> const& strategy)
    {
        return strategies::azimuth::geographic<FP, S, CT>(strategy.model());
    }
};

} // namespace services

}} // namespace strategies::azimuth

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_AZIMUTH_GEOGRAPHIC_HPP

/* geographic.hpp
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
*/