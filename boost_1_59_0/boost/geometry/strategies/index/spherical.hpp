// Boost.Geometry

// Copyright (c) 2020-2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_INDEX_SPHERICAL_HPP
#define BOOST_GEOMETRY_STRATEGIES_INDEX_SPHERICAL_HPP


#include <boost/geometry/strategies/distance/spherical.hpp>
#include <boost/geometry/strategies/index/services.hpp>


namespace boost { namespace geometry
{

namespace strategies { namespace index
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail
{

template <typename RadiusTypeOrSphere, typename CalculationType>
class spherical
    : public strategies::distance::detail::spherical<RadiusTypeOrSphere, CalculationType>
{
    using base_t = strategies::distance::detail::spherical<RadiusTypeOrSphere, CalculationType>;

public:
    spherical() = default;

    template <typename RadiusOrSphere>
    explicit spherical(RadiusOrSphere const& radius_or_sphere)
        : base_t(radius_or_sphere)
    {}
};


} // namespace detail
#endif // DOXYGEN_NO_DETAIL


template <typename CalculationType = void>
class spherical
    : public strategies::index::detail::spherical<void, CalculationType>
{};


namespace services
{

template <typename Geometry>
struct default_strategy<Geometry, spherical_tag>
{
    using type = strategies::index::spherical<>;
};

template <typename Geometry>
struct default_strategy<Geometry, spherical_equatorial_tag>
{
    using type = strategies::index::spherical<>;
};

template <typename Geometry>
struct default_strategy<Geometry, spherical_polar_tag>
{
    using type = strategies::index::spherical<>;
};


} // namespace services


}}}} // namespace boost::geometry::strategy::index

#endif // BOOST_GEOMETRY_STRATEGIES_INDEX_SPHERICAL_HPP

/* spherical.hpp
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
*/