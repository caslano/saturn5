// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2017 Adam Wulkiewicz, Lodz, Poland.

// Copyright (c) 2016-2018 Oracle and/or its affiliates.
// Contributed and/or modified by Vissarion Fisikopoulos, on behalf of Oracle
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_STRATEGIES_SPHERICAL_GET_RADIUS_HPP
#define BOOST_GEOMETRY_STRATEGIES_SPHERICAL_GET_RADIUS_HPP


#include <boost/geometry/core/coordinate_type.hpp>
#include <boost/geometry/core/radius.hpp>
#include <boost/geometry/core/tag.hpp>
#include <boost/geometry/core/tags.hpp>
#include <boost/geometry/util/select_most_precise.hpp>


namespace boost { namespace geometry
{


#ifndef DOXYGEN_NO_DETAIL
namespace strategy_detail
{

template
<
    typename RadiusTypeOrSphere,
    typename Tag = typename tag<RadiusTypeOrSphere>::type
>
struct get_radius
{
    typedef typename geometry::radius_type<RadiusTypeOrSphere>::type type;
    static type apply(RadiusTypeOrSphere const& sphere)
    {
        return geometry::get_radius<0>(sphere);
    }
};

template <typename RadiusTypeOrSphere>
struct get_radius<RadiusTypeOrSphere, void>
{
    typedef RadiusTypeOrSphere type;
    static type apply(RadiusTypeOrSphere const& radius)
    {
        return radius;
    }
};

// For backward compatibility
template <typename Point>
struct get_radius<Point, point_tag>
{
    typedef typename select_most_precise
        <
            typename coordinate_type<Point>::type,
            double
        >::type type;

    template <typename RadiusOrSphere>
    static typename get_radius<RadiusOrSphere>::type
        apply(RadiusOrSphere const& radius_or_sphere)
    {
        return get_radius<RadiusOrSphere>::apply(radius_or_sphere);
    }
};


} // namespace strategy_detail
#endif // DOXYGEN_NO_DETAIL


}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_SPHERICAL_GET_RADIUS_HPP

/* get_radius.hpp
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
*/