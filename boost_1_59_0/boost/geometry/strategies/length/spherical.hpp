// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_LENGTH_SPHERICAL_HPP
#define BOOST_GEOMETRY_STRATEGIES_LENGTH_SPHERICAL_HPP


#include <boost/geometry/strategies/detail.hpp>
#include <boost/geometry/strategies/distance/detail.hpp>
#include <boost/geometry/strategies/length/services.hpp>

#include <boost/geometry/strategies/spherical/distance_haversine.hpp>


namespace boost { namespace geometry
{

namespace strategies { namespace length
{

template
<
    typename RadiusTypeOrSphere = double,
    typename CalculationType = void
>
class spherical
    : public strategies::detail::spherical_base<RadiusTypeOrSphere>
{
    using base_t = strategies::detail::spherical_base<RadiusTypeOrSphere>;

public:
    spherical() = default;

    template <typename RadiusOrSphere>
    explicit spherical(RadiusOrSphere const& radius_or_sphere)
        : base_t(radius_or_sphere)
    {}

    template <typename Geometry1, typename Geometry2>
    auto distance(Geometry1 const&, Geometry2 const&,
                  distance::detail::enable_if_pp_t<Geometry1, Geometry2> * = nullptr) const
    {
        return strategy::distance::haversine
                <
                    typename base_t::radius_type, CalculationType
                >(base_t::radius());
    }
};


namespace services
{

template <typename Geometry>
struct default_strategy<Geometry, spherical_equatorial_tag>
{
    using type = strategies::length::spherical<>;
};


template <typename R, typename CT>
struct strategy_converter<strategy::distance::haversine<R, CT> >
{
    static auto get(strategy::distance::haversine<R, CT> const& s)
    {
        return strategies::length::spherical<R, CT>(s.radius());
    }
};


} // namespace services

}} // namespace strategies::length

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGIES_LENGTH_SPHERICAL_HPP

/* spherical.hpp
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
*/