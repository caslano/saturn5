// Boost.Geometry

// Copyright (c) 2020-2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_STRATEGIES_SPHERICAL_HPP
#define BOOST_GEOMETRY_STRATEGIES_SPHERICAL_HPP


#include <boost/geometry/strategies/area/spherical.hpp>
#include <boost/geometry/strategies/azimuth/spherical.hpp>
#include <boost/geometry/strategies/buffer/spherical.hpp>
#include <boost/geometry/strategies/convex_hull/spherical.hpp>
#include <boost/geometry/strategies/distance/spherical.hpp>
#include <boost/geometry/strategies/envelope/spherical.hpp>
#include <boost/geometry/strategies/expand/spherical.hpp>
#include <boost/geometry/strategies/io/spherical.hpp>
#include <boost/geometry/strategies/index/spherical.hpp>
#include <boost/geometry/strategies/is_convex/spherical.hpp>
#include <boost/geometry/strategies/relate/spherical.hpp>
#include <boost/geometry/strategies/simplify/spherical.hpp>


namespace boost { namespace geometry
{

    
namespace strategies
{


template
<
    typename RadiusTypeOrSphere = double,
    typename CalculationType = void
>
class spherical
    // derived from the umbrella strategy defining the most strategies
    : public strategies::index::detail::spherical<RadiusTypeOrSphere, CalculationType>
{
    using base_t = strategies::index::detail::spherical<RadiusTypeOrSphere, CalculationType>;

public:
    spherical() = default;

    template <typename RadiusOrSphere>
    explicit spherical(RadiusOrSphere const& radius_or_sphere)
        : base_t(radius_or_sphere)
    {}

    static auto azimuth()
    {
        return strategy::azimuth::spherical<CalculationType>();
    }

    static auto point_order()
    {
        return strategy::point_order::spherical<CalculationType>();
    }
};


} // namespace strategies


}} // namespace boost::geometry


#endif // BOOST_GEOMETRY_STRATEGIES_SPHERICAL_HPP

/* spherical.hpp
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
*/