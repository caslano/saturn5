// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.

// This file was modified by Oracle on 2016-2020.
// Modifications copyright (c) 2016-2020, Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_STRATEGIES_INTERSECTION_HPP
#define BOOST_GEOMETRY_STRATEGIES_INTERSECTION_HPP


//#include <type_traits>

#include <boost/geometry/policies/relate/intersection_policy.hpp>
#include <boost/geometry/policies/robustness/segment_ratio_type.hpp>

#include <boost/geometry/strategies/intersection.hpp>
#include <boost/geometry/strategies/intersection_result.hpp>
#include <boost/geometry/strategies/side.hpp>
#include <boost/geometry/strategies/cartesian/intersection.hpp>
#include <boost/geometry/strategies/spherical/intersection.hpp>
#include <boost/geometry/strategies/spherical/ssf.hpp>


namespace boost { namespace geometry
{


/*!
\brief "compound strategy", containing a segment-intersection-strategy
       and a side-strategy
 */
template
<
    typename Tag,
    typename Geometry1,
    typename Geometry2,
    typename IntersectionPoint,
    typename RobustPolicy,
    typename CalculationType = void
>
struct intersection_strategies
{
private :
    // for development BOOST_STATIC_ASSERT((! std::is_same<RobustPolicy, void>::type::value));

    typedef segment_intersection_points
    <
        IntersectionPoint,
        typename detail::segment_ratio_type
        <
            IntersectionPoint, RobustPolicy
        >::type
    > ip_type;

public:
    typedef policies::relate::segments_intersection_policy
        <
            ip_type
        > intersection_policy_type;

    typedef typename strategy::intersection::services::default_strategy
            <
                Tag,
                CalculationType
            >::type segment_intersection_strategy_type;

    typedef typename strategy::side::services::default_strategy
        <
            Tag,
            CalculationType
        >::type side_strategy_type;

    typedef RobustPolicy rescale_policy_type;
};


}} // namespace boost::geometry


#endif // BOOST_GEOMETRY_STRATEGIES_INTERSECTION_HPP

/* intersection_strategies.hpp
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
*/