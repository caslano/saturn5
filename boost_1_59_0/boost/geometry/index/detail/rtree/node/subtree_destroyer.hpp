// Boost.Geometry Index
//
// R-tree subtree scoped destroyer
//
// Copyright (c) 2011-2015 Adam Wulkiewicz, Lodz, Poland.
//
// This file was modified by Oracle on 2019.
// Modifications copyright (c) 2019 Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle
//
// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_INDEX_DETAIL_RTREE_NODE_SUBTREE_DESTROYED_HPP
#define BOOST_GEOMETRY_INDEX_DETAIL_RTREE_NODE_SUBTREE_DESTROYED_HPP

#include <boost/geometry/index/detail/rtree/visitors/destroy.hpp>

namespace boost { namespace geometry { namespace index {

namespace detail { namespace rtree {

template <typename MembersHolder>
class subtree_destroyer
{
    typedef typename MembersHolder::node node;

    typedef typename MembersHolder::allocators_type allocators_type;
    typedef typename MembersHolder::node_pointer pointer;

    subtree_destroyer(subtree_destroyer const&);
    subtree_destroyer & operator=(subtree_destroyer const&);

public:
    subtree_destroyer(pointer ptr, allocators_type & allocators)
        : m_ptr(ptr)
        , m_allocators(allocators)
    {}

    ~subtree_destroyer()
    {
        reset();
    }

    void reset(pointer ptr = 0)
    {
        if ( m_ptr && m_ptr != ptr )
        {
            detail::rtree::visitors::destroy<MembersHolder>::apply(m_ptr, m_allocators);
        }
        m_ptr = ptr;
    }

    void release()
    {
        m_ptr = 0;
    }

    pointer get() const
    {
        return m_ptr;
    }

    node & operator*() const
    {
        return *m_ptr;
    }

    pointer operator->() const
    {
        return m_ptr;
    }

private:
    pointer m_ptr;
    allocators_type & m_allocators;
};

}} // namespace detail::rtree

}}} // namespace boost::geometry::index

#endif // BOOST_GEOMETRY_INDEX_DETAIL_RTREE_NODE_SUBTREE_DESTROYED_HPP

/* subtree_destroyer.hpp
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
*/