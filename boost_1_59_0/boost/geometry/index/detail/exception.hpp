// Boost.Geometry Index
//
// Copyright (c) 2011-2014 Adam Wulkiewicz, Lodz, Poland.
//
// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_INDEX_DETAIL_EXCEPTION_HPP
#define BOOST_GEOMETRY_INDEX_DETAIL_EXCEPTION_HPP

#include <boost/core/no_exceptions_support.hpp>

#ifndef BOOST_NO_EXCEPTIONS
#include <stdexcept>
#include <boost/throw_exception.hpp>
#else
#include <cstdlib>
#include <boost/geometry/index/detail/assert.hpp>
#endif

namespace boost { namespace geometry { namespace index { namespace detail {

#ifndef BOOST_NO_EXCEPTIONS

inline void throw_runtime_error(const char * str)
{
    BOOST_THROW_EXCEPTION(std::runtime_error(str));
}

inline void throw_logic_error(const char * str)
{
    BOOST_THROW_EXCEPTION(std::logic_error(str));
}

inline void throw_invalid_argument(const char * str)
{
    BOOST_THROW_EXCEPTION(std::invalid_argument(str));
}

inline void throw_length_error(const char * str)
{
    BOOST_THROW_EXCEPTION(std::length_error(str));
}

inline void throw_out_of_range(const char * str)
{
    BOOST_THROW_EXCEPTION(std::out_of_range(str));
}

#else

inline void throw_runtime_error(const char * str)
{
    BOOST_GEOMETRY_INDEX_ASSERT(!"runtime_error thrown", str);
    std::abort();
}

inline void throw_logic_error(const char * str)
{
    BOOST_GEOMETRY_INDEX_ASSERT(!"logic_error thrown", str);
    std::abort();
}

inline void throw_invalid_argument(const char * str)
{
    BOOST_GEOMETRY_INDEX_ASSERT(!"invalid_argument thrown", str);
    std::abort();
}

inline void throw_length_error(const char * str)
{
    BOOST_GEOMETRY_INDEX_ASSERT(!"length_error thrown", str);
    std::abort();
}

inline void throw_out_of_range(const char * str)
{
    BOOST_GEOMETRY_INDEX_ASSERT(!"out_of_range thrown", str);
    std::abort();
}

#endif

}}}} // namespace boost::geometry::index::detail

#endif // BOOST_GEOMETRY_INDEX_DETAIL_EXCEPTION_HPP

/* exception.hpp
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
*/