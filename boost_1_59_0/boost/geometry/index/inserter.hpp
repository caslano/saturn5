// Boost.Geometry Index
//
// Insert iterator
//
// Copyright (c) 2011-2013 Adam Wulkiewicz, Lodz, Poland.
//
// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_INDEX_INSERTER_HPP
#define BOOST_GEOMETRY_INDEX_INSERTER_HPP

#include <iterator>

/*!
\defgroup inserters Inserters (boost::geometry::index::)
*/

namespace boost { namespace geometry { namespace index {

template <class Container>
class insert_iterator
{
public:
    typedef std::output_iterator_tag iterator_category;
    typedef void value_type;
    typedef void difference_type;
    typedef void pointer;
    typedef void reference;

    typedef Container container_type;

    inline explicit insert_iterator(Container & c)
        : container(&c)
    {}
    
    insert_iterator & operator=(typename Container::value_type const& value)
    {
        container->insert(value);
        return *this;
    }

    insert_iterator & operator* ()
    {
        return *this;
    }

    insert_iterator & operator++ ()
    {
        return *this;
    }

    insert_iterator operator++(int)
    {
        return *this;
    }

private:
    Container * container;
};

/*!
\brief Insert iterator generator.

Returns insert iterator capable to insert values to the container
(spatial index) which has member function insert(value_type const&) defined.

\ingroup inserters

\param c    The reference to the container (spatial index) to which values will be inserted.

\return     The insert iterator inserting values to the container.
*/
template <typename Container>
insert_iterator<Container> inserter(Container & c)
{
    return insert_iterator<Container>(c);
}

}}} // namespace boost::geometry::index

#endif // BOOST_GEOMETRY_INDEX_INSERTER_HPP

/* inserter.hpp
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
*/