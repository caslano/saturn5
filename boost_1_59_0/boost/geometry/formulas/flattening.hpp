// Boost.Geometry

// Copyright (c) 2014-2016 Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_FORMULAS_FLATTENING_HPP
#define BOOST_GEOMETRY_FORMULAS_FLATTENING_HPP

#include <boost/geometry/core/radius.hpp>
#include <boost/geometry/core/tag.hpp>
#include <boost/geometry/core/tags.hpp>

#include <boost/geometry/algorithms/not_implemented.hpp>

namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DISPATCH
namespace formula_dispatch
{

template <typename ResultType, typename Geometry, typename Tag = typename tag<Geometry>::type>
struct flattening
    : not_implemented<Tag>
{};

template <typename ResultType, typename Geometry>
struct flattening<ResultType, Geometry, srs_sphere_tag>
{
    static inline ResultType apply(Geometry const& /*geometry*/)
    {
        return ResultType(0);
    }
};

template <typename ResultType, typename Geometry>
struct flattening<ResultType, Geometry, srs_spheroid_tag>
{
    static inline ResultType apply(Geometry const& geometry)
    {
        // (a - b) / a
        return ResultType(get_radius<0>(geometry) - get_radius<2>(geometry))
                    / ResultType(get_radius<0>(geometry));
    }
};

} // namespace formula_dispatch
#endif // DOXYGEN_NO_DISPATCH

#ifndef DOXYGEN_NO_DETAIL
namespace formula
{

template <typename ResultType, typename Geometry>
ResultType flattening(Geometry const& geometry)
{
    return formula_dispatch::flattening<ResultType, Geometry>::apply(geometry);
}

} // namespace formula
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_FORMULAS_FLATTENING_HPP

/* flattening.hpp
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
*/