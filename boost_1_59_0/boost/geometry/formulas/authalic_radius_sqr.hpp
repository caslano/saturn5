// Boost.Geometry

// Copyright (c) 2017 Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_FORMULAS_AUTHALIC_RADIUS_SQR_HPP
#define BOOST_GEOMETRY_FORMULAS_AUTHALIC_RADIUS_SQR_HPP

#include <boost/geometry/core/radius.hpp>
#include <boost/geometry/core/tag.hpp>
#include <boost/geometry/core/tags.hpp>

#include <boost/geometry/formulas/eccentricity_sqr.hpp>

#include <boost/geometry/util/math.hpp>

#include <boost/geometry/algorithms/not_implemented.hpp>

#include <boost/math/special_functions/atanh.hpp>

namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DISPATCH
namespace formula_dispatch
{

template <typename ResultType, typename Geometry, typename Tag = typename tag<Geometry>::type>
struct authalic_radius_sqr
    : not_implemented<Tag>
{};

template <typename ResultType, typename Geometry>
struct authalic_radius_sqr<ResultType, Geometry, srs_sphere_tag>
{
    static inline ResultType apply(Geometry const& geometry)
    {
        return math::sqr<ResultType>(get_radius<0>(geometry));
    }
};

template <typename ResultType, typename Geometry>
struct authalic_radius_sqr<ResultType, Geometry, srs_spheroid_tag>
{
    static inline ResultType apply(Geometry const& geometry)
    {
        ResultType const a2 = math::sqr<ResultType>(get_radius<0>(geometry));
        ResultType const e2 = formula::eccentricity_sqr<ResultType>(geometry);

        return apply(a2, e2);
    }

    static inline ResultType apply(ResultType const& a2, ResultType const& e2)
    {
        ResultType const c0 = 0;

        if (math::equals(e2, c0))
        {
            return a2;
        }

        ResultType const e = math::sqrt(e2);
        ResultType const c2 = 2;

        //ResultType const b2 = math::sqr(get_radius<2>(geometry));
        //return a2 / c2 + b2 * boost::math::atanh(e) / (c2 * e);

        ResultType const c1 = 1;
        return (a2 / c2) * ( c1 + (c1 - e2) * boost::math::atanh(e) / e );
    }
};

} // namespace formula_dispatch
#endif // DOXYGEN_NO_DISPATCH

#ifndef DOXYGEN_NO_DETAIL
namespace formula
{

template <typename ResultType, typename Geometry>
inline ResultType authalic_radius_sqr(Geometry const& geometry)
{
    return formula_dispatch::authalic_radius_sqr<ResultType, Geometry>::apply(geometry);
}

} // namespace formula
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_FORMULAS_AUTHALIC_RADIUS_SQR_HPP

/* authalic_radius_sqr.hpp
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
*/