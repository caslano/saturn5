// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2015, Oracle and/or its affiliates.

// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_POLICIES_IS_VALID_FAILURE_TYPE_POLICY_HPP
#define BOOST_GEOMETRY_POLICIES_IS_VALID_FAILURE_TYPE_POLICY_HPP

#include <boost/geometry/algorithms/validity_failure_type.hpp>


namespace boost { namespace geometry
{


// policy that simply keeps (and can return) the failure type
template <bool AllowDuplicates = true, bool AllowSpikes = true>
class failure_type_policy
{
private:
    static inline
    validity_failure_type transform_failure_type(validity_failure_type failure)
    {
        if (AllowDuplicates && failure == failure_duplicate_points)
        {
            return no_failure;
        }
        return failure;
    }

    static inline
    validity_failure_type transform_failure_type(validity_failure_type failure,
                                                 bool is_linear)
    {
        if (is_linear && AllowSpikes && failure == failure_spikes)
        {
            return no_failure;
        }
        return transform_failure_type(failure);
    }

public:
    failure_type_policy()
        : m_failure(no_failure)
    {}

    template <validity_failure_type Failure>
    inline bool apply()
    {
        m_failure = transform_failure_type(Failure);
        return m_failure == no_failure;
    }

    template <validity_failure_type Failure, typename Data>
    inline bool apply(Data const&)
    {
        return apply<Failure>();
    }

    template <validity_failure_type Failure, typename Data1, typename Data2>
    inline bool apply(Data1 const& data1, Data2 const&)
    {
        m_failure = transform_failure_type(Failure, data1);
        return m_failure == no_failure;
    }

    validity_failure_type failure() const
    {
        return m_failure;
    }

private:
    validity_failure_type m_failure;
};


}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_POLICIES_IS_VALID_FAILURE_TYPE_POLICY_HPP

/* failure_type_policy.hpp
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
*/