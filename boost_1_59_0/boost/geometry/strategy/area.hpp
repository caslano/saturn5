// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2012 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2012 Mateusz Loskot, London, UK.
// Copyright (c) 2017 Adam Wulkiewicz, Lodz, Poland.

// This file was modified by Oracle on 2020.
// Modifications copyright (c) 2020 Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_STRATEGY_AREA_HPP
#define BOOST_GEOMETRY_STRATEGY_AREA_HPP


#include <boost/geometry/core/coordinate_type.hpp>
#include <boost/geometry/core/static_assert.hpp>

#include <boost/geometry/util/select_most_precise.hpp>


namespace boost { namespace geometry
{


namespace strategy { namespace area
{


#ifndef DOXYGEN_NO_DETAIL
namespace detail
{

// If user specified a CalculationType, use that type, whatever it is
//   and whatever the Geometry is.
// Else, use Geometry's coordinate-type promoted to double if needed.
template
<
    typename Geometry,
    typename CalculationType
>
struct result_type
{
    typedef CalculationType type;
};

template
<
    typename Geometry
>
struct result_type<Geometry, void>
    : select_most_precise
        <
            typename coordinate_type<Geometry>::type,
            double
        >
{};

} // namespace detail
#endif // DOXYGEN_NO_DETAIL


namespace services
{

/*!
    \brief Traits class binding a default area strategy to a coordinate system
    \ingroup area
    \tparam Tag tag of coordinate system
*/
template <typename Tag>
struct default_strategy
{
    BOOST_GEOMETRY_STATIC_ASSERT_FALSE(
        "Not implemented for this coordinate system.",
        Tag);
};


} // namespace services

}} // namespace strategy::area


}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGY_AREA_HPP

/* area.hpp
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
*/