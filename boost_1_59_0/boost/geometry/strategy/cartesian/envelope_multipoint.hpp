// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2018-2020, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_STRATEGY_CARTESIAN_ENVELOPE_MULTIPOINT_HPP
#define BOOST_GEOMETRY_STRATEGY_CARTESIAN_ENVELOPE_MULTIPOINT_HPP

#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>

#include <boost/geometry/core/tags.hpp>

#include <boost/geometry/algorithms/detail/envelope/initialize.hpp>

#include <boost/geometry/strategy/cartesian/envelope.hpp>
#include <boost/geometry/strategy/cartesian/envelope_point.hpp>
#include <boost/geometry/strategy/cartesian/expand_point.hpp>


namespace boost { namespace geometry
{

namespace strategy { namespace envelope
{

class cartesian_multipoint
{
public:
    template <typename MultiPoint, typename Box>
    static inline void apply(MultiPoint const& multipoint, Box& mbr)
    {
        apply(boost::begin(multipoint), boost::end(multipoint), mbr);
    }

private:
    template <typename Iterator, typename Box>
    static inline void apply(Iterator it,
                             Iterator last,
                             Box& mbr)
    {
        geometry::detail::envelope::initialize<Box, 0, dimension<Box>::value>::apply(mbr);

        if (it != last)
        {
            strategy::envelope::cartesian_point::apply(*it, mbr);

            for (++it; it != last; ++it)
            {
                strategy::expand::cartesian_point::apply(mbr, *it);
            }
        }
    }
};


#ifndef DOXYGEN_NO_STRATEGY_SPECIALIZATIONS

namespace services
{

template <typename CalculationType>
struct default_strategy<multi_point_tag, cartesian_tag, CalculationType>
{
    typedef strategy::envelope::cartesian_multipoint type;
};


} // namespace services

#endif // DOXYGEN_NO_STRATEGY_SPECIALIZATIONS


}} // namespace strategy::envelope

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_STRATEGY_CARTESIAN_ENVELOPE_MULTIPOINT_HPP

/* envelope_multipoint.hpp
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
*/