// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2014 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2014 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2014 Mateusz Loskot, London, UK.
// Copyright (c) 2013-2014 Adam Wulkiewicz, Lodz, Poland.

// This file was modified by Oracle on 2013-2018.
// Modifications copyright (c) 2013-2018, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle
// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DISPATCH_DISJOINT_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DISPATCH_DISJOINT_HPP

#include <cstddef>

#include <boost/geometry/core/coordinate_dimension.hpp>
#include <boost/geometry/core/tag.hpp>
#include <boost/geometry/core/tag_cast.hpp>
#include <boost/geometry/core/tags.hpp>
#include <boost/geometry/core/reverse_dispatch.hpp>

#include <boost/geometry/algorithms/not_implemented.hpp>


namespace boost { namespace geometry
{


#ifndef DOXYGEN_NO_DISPATCH
namespace dispatch
{


template
<
    typename Geometry1, typename Geometry2,
    std::size_t DimensionCount = dimension<Geometry1>::type::value,
    typename Tag1 = typename tag_cast
        <
            typename tag<Geometry1>::type,
            segment_tag, box_tag, linear_tag, areal_tag
        >::type,
    typename Tag2 = typename tag_cast
        <
            typename tag<Geometry2>::type,
            segment_tag, box_tag, linear_tag, areal_tag
        >::type,
    bool Reverse = reverse_dispatch<Geometry1, Geometry2>::type::value
>
struct disjoint
    : not_implemented<Geometry1, Geometry2>
{};


// If reversal is needed, perform it
template
<
    typename Geometry1, typename Geometry2,
    std::size_t DimensionCount,
    typename Tag1, typename Tag2
>
struct disjoint<Geometry1, Geometry2, DimensionCount, Tag1, Tag2, true>
{
    template <typename Strategy>
    static inline bool apply(Geometry1 const& g1, Geometry2 const& g2, Strategy const& strategy)
    {
        return disjoint
            <
                Geometry2, Geometry1,
                DimensionCount,
                Tag2, Tag1
            >::apply(g2, g1, strategy);
    }
};


} // namespace dispatch
#endif // DOXYGEN_NO_DISPATCH


}} // namespace boost::geometry


#endif // BOOST_GEOMETRY_ALGORITHMS_DISPATCH_DISJOINT_HPP

/* disjoint.hpp
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
*/