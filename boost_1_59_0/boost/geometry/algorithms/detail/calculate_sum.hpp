// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2012 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2012 Mateusz Loskot, London, UK.
// Copyright (c) 2014 Adam Wulkiewicz, Lodz, Poland.

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// This file was modified by Oracle on 2016-2020.
// Modifications copyright (c) 2016-2020 Oracle and/or its affiliates.
// Contributed and/or modified by Vissarion Fysikopoulos, on behalf of Oracle
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_CALCULATE_SUM_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_CALCULATE_SUM_HPP

#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>

namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail
{


class calculate_polygon_sum
{
    template <typename ReturnType, typename Policy, typename Rings, typename Strategy>
    static inline ReturnType sum_interior_rings(Rings const& rings, Strategy const& strategy)
    {
        ReturnType sum = ReturnType(0);
        for (typename boost::range_iterator<Rings const>::type
                it = boost::begin(rings); it != boost::end(rings); ++it)
        {
            sum += Policy::apply(*it, strategy);
        }
        return sum;
    }

public :
    template <typename ReturnType, typename Policy, typename Polygon, typename Strategy>
    static inline ReturnType apply(Polygon const& poly, Strategy const& strategy)
    {
        return Policy::apply(exterior_ring(poly), strategy)
            + sum_interior_rings<ReturnType, Policy>(interior_rings(poly), strategy)
            ;
    }
};


} // namespace detail
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_CALCULATE_SUM_HPP

/* calculate_sum.hpp
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
*/