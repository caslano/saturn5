// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2014, Oracle and/or its affiliates.

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_TURNS_DEBUG_TURN_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_TURNS_DEBUG_TURN_HPP

#ifdef BOOST_GEOMETRY_DEBUG_TURNS
#include <iostream>
#include <string>

#include <boost/algorithm/string/predicate.hpp>

#include <boost/geometry/io/wkt/write.hpp>
#include <boost/geometry/algorithms/detail/overlay/debug_turn_info.hpp>
#endif // BOOST_GEOMETRY_DEBUG_TURNS


namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail { namespace turns
{


#ifdef BOOST_GEOMETRY_DEBUG_TURNS
template <typename Turn, typename Operation>
inline void debug_turn(Turn const& turn, Operation op,
                       std::string const& header)
{
    std::cout << header
        << " at " << op.seg_id
        << " meth: " << method_char(turn.method)
        << " op: " << operation_char(op.operation)
        << " of: " << operation_char(turn.operations[0].operation)
        << operation_char(turn.operations[1].operation)
        << " " << geometry::wkt(turn.point)
        << std::endl;

    if (boost::contains(header, "Finished"))
    {
        std::cout << std::endl;
    }
}
#else
template <typename Turn, typename Operation>
inline void debug_turn(Turn const& , Operation, const char*)
{
}
#endif // BOOST_GEOMETRY_DEBUG_TURNS


}} // namespace detail::turns
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost:geometry


#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_TURNS_DEBUG_TURN_HPP

/* debug_turn.hpp
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
*/