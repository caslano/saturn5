// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2014, Oracle and/or its affiliates.

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle


#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_TURNS_FILTER_CONTINUE_TURNS_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_TURNS_FILTER_CONTINUE_TURNS_HPP

#include <algorithm>
#include <boost/geometry/algorithms/detail/overlay/turn_info.hpp>

namespace boost { namespace geometry
{

namespace detail { namespace turns
{


template <typename Turns, bool Enable>
struct filter_continue_turns
{
    static inline void apply(Turns&) {}
};


template <typename Turns>
class filter_continue_turns<Turns, true>
{
private:
    class IsContinueTurn
    {
    private:
        template <typename Operation>
        inline bool is_continue_or_opposite(Operation const& operation) const
        {
            return operation == detail::overlay::operation_continue
                || operation == detail::overlay::operation_opposite;
        }

    public:
        template <typename Turn>
        bool operator()(Turn const& turn) const
        {
            if ( turn.method != detail::overlay::method_collinear
                 && turn.method != detail::overlay::method_equal )
            {
                return false;
            }

            return is_continue_or_opposite(turn.operations[0].operation)
                && is_continue_or_opposite(turn.operations[1].operation);
        }
    };


public:
    static inline void apply(Turns& turns)
    {
        turns.erase( std::remove_if(turns.begin(), turns.end(),
                                    IsContinueTurn()),
                     turns.end()
                     );
    }
};


}} // namespace detail::turns

}} // namespect boost::geometry



#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_TURNS_FILTER_CONTINUE_TURNS_HPP

/* filter_continue_turns.hpp
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
*/