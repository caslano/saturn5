// Boost.Geometry

// Copyright (c) 2019 Barend Gehrels, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_MAKE_MAKE_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_MAKE_MAKE_HPP

#include <boost/geometry/geometries/infinite_line.hpp>
#include <boost/geometry/core/access.hpp>

namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail { namespace make
{

template <typename Type, typename Coordinate>
inline
model::infinite_line<Type> make_infinite_line(Coordinate const& x1,
    Coordinate const& y1, Coordinate const& x2, Coordinate const& y2)
{
    model::infinite_line<Type> result;
    result.a = y1 - y2;
    result.b = x2 - x1;
    result.c = -result.a * x1 - result.b * y1;
    return result;
}

template <typename Type, typename Point>
inline
model::infinite_line<Type> make_infinite_line(Point const& a, Point const& b)
{
    return make_infinite_line<Type>(geometry::get<0>(a), geometry::get<1>(a),
        geometry::get<0>(b), geometry::get<1>(b));
}

template <typename Type, typename Segment>
inline
model::infinite_line<Type> make_infinite_line(Segment const& segment)
{
    return make_infinite_line<Type>(geometry::get<0, 0>(segment),
        geometry::get<0, 1>(segment),
        geometry::get<1, 0>(segment),
        geometry::get<1, 1>(segment));
}

template <typename Type, typename Point>
inline
model::infinite_line<Type> make_perpendicular_line(Point const& a, Point const& b, Point const& c)
{
    // https://www.math-only-math.com/equation-of-a-line-perpendicular-to-a-line.html
    model::infinite_line<Type> const line = make_infinite_line<Type>(a, b);
    model::infinite_line<Type> result;
    result.a = line.b;
    result.b = -line.a;
    // Lines with any result.c are perpendicular to a->b
    // Calculate this result such that it goes through point c
    result.c = -result.a * geometry::get<0>(c) - result.b * geometry::get<1>(c);
    return result;
}

}} // namespace detail::make
#endif // DOXYGEN_NO_DETAIL


}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_MAKE_MAKE_HPP

/* make.hpp
IsjDuvZjcPiplhc2DMqGxV/6smg+37k016Dsn7y1RocM+0+oK8nzpJZXsQuTqt5GxGSXmgzolYT0DVSVzLb+5dWBf0ZRxczIr/k+ZVul/KDwfiANmYq7FomxjYzqcVyrUjky+H1WvmFElKDXxaXlH5tL4s8jrmUVs8Bmla1HwCFQavkN9EPBi1bWNf6KGjg1VFRjCUHoNegm/VE7/qSvlChJA1Jmd5ohabP72fokDm5zdIjsXue/4VPDA4ptHPj5TbYeV4+EmASZaHkkKL9z27Q0OcqgjAYc7ULFmiG6Vmno9LzFpqy3cfjCwLyYqllauokqpqiyyEC0X5VjrD2XDgD5XrmqO4SC8UDZsBz2JUw3jTwx97fJkEB8m1ctEIWKgapyjPvu4KHkmeLl29if5Y/LcTBaY0Vy9xrpFdN6/Uf2+gmaeOPPX4fS/acsrGdlkOLDQrXdXB8LC64vy/ar3wRs17/a6mxhy3NqCCxjMYL/RLq7eTmW11/54WTsZ5nVaBY2MoOk6bbRoSxP5aAvLYrNjcZirDnJo1a1UPFcbstc8jaQLH89ScH+2EHRnuSjg2/ELOx7nIJDtfWATMi8bI+2+4XlWVttD3SD0KbmXUL1j3UpqDzfMN/1H9r68AAALP/Ti+4zQ7hQDXeFXgKS7DP6GZvOdcAq2SjuvItzJpBdWBBSMHP3K3jMab5ApCY3fl7ajffz1dYKz1pNc40sGNTdviYi0FNVsjL8Lwti9kJdpMl/u5+kso/Du7m017h5ML31z3d3YNYA7jlFjAz1DCupHHFXx9oubkdKpaZhM4s63AxjqVy2qXPNtxJmMKI8LCfDuIYGtSnC31EL4aVXPVrhuoWplHcLSI5f3v8MqsdYFSeTWlmHtMJrin+nY8mPJTaFZK0rg/89Top3VWG9eT88ip/rBeNQI2uLPg/166BVBjDs2NHdJiSWBvpHJJaCA9pKLNLzif+G3sbEUkM/S8X8GHAaSfouGCWnLNkZE8a1UW4b8sdAC8p7J8teCf3pN0v6tuxSFMZhysiQawTYq91xgozb5Tkscol4kiJzizhD++/epBD2WPa3GY1NFuR7wFvHifB8xIOqWhbAI452emBwL5aqdlQn+iMEABdl6HlhvAhldkaR/rrBNr0rTCOX3drhdNbnoOxpA2F/h2Y+YM/PD7KCz/rgN4grL0jzlc5o9nB0GfCPO0vEVZoawO+qrjt8wrMnhrMAa9iFFcJp7MLp4kHc1jxxuOsR/sCeAvYJu8FCVVNFOKz2HMA3GiY37NLS9vXeKrIzMVrELzsQXUGmLYKnxIZGFPykywZ0CGf641s5+7EXBerKkyjLGhwlKzJV6OWyfOuKQCIKG3GwXt/pJoknyyoScgb+Czvfisso8/HzKjMo+JU5KRpRt8nk1YwY/r39jV3MS/AYh2vbfyoJ1lgkikNbHRb6hLu5hQVEg/5leRtNOPNgSJGrh0u0SU7ZMN5lF5oJRE9YN8ajOD1onrCWxJyLzjKliiN0Qfhnvkrt4J8+JHYZrSsmaGlixkaMOT0xcW9m4FzY0TJsl8LBQ9gxqVGHU/Wv+1guU1nSnaLFXWdvjCKxKYVtmu34hZ9804DpnPBwx5KICrdOrbh0GV/ebBfGocI9G5lis9co1SlramZep8zgMHMQs4Op3cohs1TuPPEYCwWfheI/K3cINjlKTT4VS3fYNBGoR4OVcKKb77UwDvKZWz08HkTTgGqUngclrYlUM82sOH3cOsXb9fHBBUlenEFGPPYLkQNlN/AKrlJHPTTu8sv3UcI6iUss/Muw1K4aRYVrNyWvX3WVcFzZ2sIY34GMa2fX4znCX+Cm6N+B3LwOAHsw01FFLZpXuSslNdsEqqto6jl2/kuI52QP4E45bnvBeyhd6Mz59CLo8qwtGQ0dT0AHPDd7b2pKcBM0YRcGGY+2niPN/BpgIyXPFfnZUj7fj6TMKmdvmhdrdeHbAQcCA+yJGeVXqLpGzhfKB7zvtSJSxYAZtk53PKWsgkKuSXKovMHBTRMAdGMzLkWrGTj6SnsrXOeXK4trWSEdkh6xARGgJEF/diD4PAX1drAQPKipuT6iFbhXIY/3m2L6WR3WtMB8vCIEnbdQjDm+ziM04VwUm0JM+Z3OktEcMeUe3izs01m4ElLt1Ef8ipjo8D0KbTZR+BCT5gK7GqUHC8BTgMx0o77GyLOYV1vqyz4veVRExBNuFaLsEGrWtiXKONKzhitrwnomI5xPAGpIF187Cc89SD9w/gXM7WjmnYp7rr5IYW8JjywJb53n6zjH5RVY8kVUu+NOM9P/sBeVNaFayw9MAGseAmtfAn48Ls1//fz8AFUCAAD/AvkF+gvsF/gviF+Qv6B+/fkF/QvmF+wvuF9/f8H/QviF+AvpF/IvlF+ov9B+of/C+IX5C+sX9i+cX7i/8H7h/yL4RfiL6BfxL5JfpL/IfpH/ovhF+YvqF/Uvml+0v+h+0f9i+MX4i+kX8y+WX6y/2H6x/+L4xfmL6xf3L55fvL/4fvH/Evgl+Evol/AvkV+iv8R+if+S+CX5S+qX9C+ZX7K/5H7J/1L4pfhL6ZfyL5Vfqr/Ufqn/0vil+Uvrl/YvnV+6v/R+6f8y+GX4y+iX8S+TX6a/zH6Z/7L4ZfnL6pf1L5tftr/sftn/cvjl+Mvpl/Mvl1+uv9x+uf/y+OX5y+uX9y+fX36//su94iW7KHrBVLPyk0wBs85rPqFHixB2gQMm2L+KeQXIasOdZfHD+RqBj/ZYSvaOmVmbQIN8I4gifX5cGxxznKiXkJWGiY/wifY3iut08Lf+JDcNWs/13q+icH/cFlAxUyclisba8B+EEozXiQlm0VZQ9WSRHtIYCnnNZO1LuMxnZWLeXpVHqytWPuD82eW52mEAaTlMO31mvL5qOUtWR9qC1SPv+5LWlapzUKTTzU2fEu61qqsBsYhtr94+HEpXhmmrWs0qT1UYHMXAnPK+AovbfxhI2MEjiujUmyjZL9daftCaxjZe5d7hyWjZXzQZtjIghcL6rkaFrQ6GFJ3JsEtYlRLcrOHxrQEjAT+Fm0NtPQNDii2tp7t+E1A8P2qLTfvVq4SwZKcMVrug1WDLMNhnEtUGL83rl9Arj0TWK/eRjf2No6t9c7DoWWLaLKeVdE5eBpm4sle1O5Q4n+WqM5yQ65mQs/45fpClxdSAzQHpGRb3CIsLTV/PzFeXnKoGTBjX1oxrgNRIi2vLK8p/jABeHaG3YU3dQ2q0FshGtRgydGVaxFQPloqx25tNUj+53HCCLrDMc0/tcOVoCCx4YBe5gCBC7gCq9Hj2/QwYT73AOD1SjqQLfelOMyR+7o/ODQ1d1W9fdIbxwS5sde94Yc/+zGFvfwoBacobW2+WEs/zEsSzD2qBUPnTF/FB5KbcFQFmfZuu4MkVznCuPeGaC7IQg7uMzyc+j9i5lBjV8k44mXsR2ysHqJrPl1Og6mE8D2ujrKl5HjSXNukk6du2xQl6+dPPC6H38OTIomws6cXhPE1rjArXBZNJutHZhEvSS0oe+qw8i26h1aggvGr176WDKoGAaRbSiOBDv8flRee3u0mUwdr596uAfAwVdpglRDMiepOu/wOHnuC0OZScb94z9tmenJnBINdPx+YUNKJmjrZGfCfaqrL6VFgZzzxYg+OKdprOuG5hUlMtbpshax7UtmpJHmNjBhg4c+qpjnLNgeRAdGUMAz8eS9MLaNZckOqVqw4a3fwq2uPRfit7lA7TtadOJ6bUe+pHWTH06/Q3quV+WKJvKLuIPbMjNONzb6k/Ckryvk7X9DTSSnKAQdxrmmEvhENpBgVJ1KsCWU2jWILM0EGTOj3wgqSWCISbLCWEaKqNDR/NOgYimGtvl3pH0/sYrMvjeOcWzfDWwgar/U5jofaFFHwmHfjwE3cM6aELO+bTqXajx94GfdUTaNMfWCfMWWzlREqJFB7cZV6XuCX1C8A4eQl/flKJjJTnDzwpXVh1b86LNvyj5m0ALDwCsQyoeWG0eX50PYBjFaDpGrkPXSYcZijhJvyFeAWP9HlmgmfjGhmcQTxIF7PosD7orPdT7juIRLc0sj23zDtfhbmcThTMZ6HrLVw+BDf6PEr2wNKV4VF1Pujsl9JzBYrwFTgSbp2X5BMt+8mUOOmXGHLEOc3WL7zV7yCDtPFaQV/pr8bPHFtQn8tjbk6/OAL0+V5emDEj41195UQH4eCavS3/SpOAZ6BrX+arVMVZuAxDxOOMx5OZ1qngvISt6UMNj3pgeFey07vMont5ZbSOYMN/Z/D1roTX+pxAqIp5jsZVDAonXD3/3C5LrgpYZFn/YXgEhIJYuuLJwl4YPn9pYztAM30S4Jw4U7brL6Z2qIvjOi/oSHNzhbkoOo7vwlwZKD5l4aMzNhNLBfLyAeJjWPpEGLaAUTvsgDNIW6B0Fc4dQmYqcL2SviIOUramY02t8N7UPEUFQFEth2lakUnKzTg1taSQW44pttzi8A1OWAAdGKzlR40XwryQGYmqdIleWBtKLtuQ9aeZNXvkOm25SHzLh6zPnNJdUq/QIJ/V/HrguVineVOAOrHIiiWhoqkyIftKlTe4gW8ZfHQRFn19NjeOL8MuiFksweDFVhGGdwenbn+J1rkHl8/ThBm47P2UehACfRnCHKfHSu3QdA6sQeoDqSKFEOwoiR5BBYzqqI1rnXzhc/tWUEuvTH33AoeepJivYGRah6IxuIXFdwwH63Eug/ivoFMOlDVtyvZg4uZt5CixU5Zw2+wlILX2BWOOvdvJdaRHUyT7bfw6dxw0j/NkL/6tEYJsKOBtS/2ZkZzSJfwHDXZYg8o4VI+5VcvtoUIqFnRN8jMEauPe6iSbyAYMSLh4GP4zMz38Nv5RmYYkrdYR/fIGttf3XyNXgWvapKLW9Mxv8GaVW4zVqQRtQ/kQB3u3L5Nh+bgTw6SvthtUTMRKomaREHRwE1UFwGph2KG+2QR617FrW/1Vs9W5CMSUQdrSEKKwpkuuC+ny3mA62FqmLpivVYwMlhT4UxGkuW2XyVZiRN9crE1aA/0V7JQ/y6Q+L0IU5b6LhCJjWfgobLHCQ3Il1U+tH4mNJF0mZRkvwUdJVj9FnG4nj/LNfvjjW6d6oWHjPXY+JNyqQWYsWlS8CtMpGdG6WsQTmxdPYdp2vmvw6EfMLPmxPuI3U2I69Xp3u4S3chlGm7TPoZq9TZG+nxTKFJ0ZmClxBK93Bmb+o0LeieaV/3ZXulFmvrt/qLwZwmpZwpOItx/CLrKBD1R1aqtEtB6UHgujRpmGtB+xoj6E9txhJYf2fRQg1BnsJtQ/oRy2YMMu7CnouSzwAGYCSLhO3R3sVSSLKalRltU45eacvwWLAyRVLpiyIPrTt/Ag3Ns/Ervu5C8pnwZ9Kzr7cvmM0anEo4yR/CRBmkGSiIAtqONntuqO4TXahQRRsIHGyLiyFV/LWDQPJ3lQxKCIjjyLU96/3k9ZV5P2LwX3Q203zAWhcK5quG1YTXHzZ4Y0PGNx0E1S/Qhkgkoj7CfFVSqNpLpmwmZ57amnVSi0L2mE1Mm8882WbzsPGvHr+rCAU+bqgbj8qTe9sLzZEu3fhFtvFbs4xBuSGHQHcD4EgrvK8vq7lcxPXFzy3JcX7lDKSP9YQ/7lHhl8DfucClXRKqd5RW1EBxcfxXw9DkRbjr4/ZRGoV8Td9jXHqltf1YoiMrlbAgs9MzyENQARPm7olP+U2+jrJRzsYjqTQOck0zTiIMuA1vqnZ1OaHfQiqU8EYxhauNOQ9Jjqx9zYMonqLGbmFmg2H8hpR414wM+ttGJax/olZkF6uUGo001nc4KnbqOwzrZfuApkcxVceVS6Zkb61cIyxQ9Phz06alkSUWRpPiX9EUD+dh3T4UF4Y/bgr8WpkZGd/PJcphiHRH2B+pjtFfjx1eERN9LJlISmwsxPWOfQbGgfbIGtNwWnqHX1j1drteTJrZ/p7jmil37zDIS0IyI+oKDRI8MORtKAEal848xqXX0w+CVr0RxiKZ5pKgUkRw4drgwHk7tCHE4fF0MCNIloiIPryXwLW3C8i6jNu+aoUKfONDdLkL/4ZjGjN2uzZ6x8s3AngYTlkwH9L9GQ+bhC0+wxRTN1xWJEwr+PwaQ4x/v1rjcmUqqKnrkBYXGdu6M3JtHktdKf7zzFhj/W1wYb2uCEK2Eo4yE1PjRDpHtrJUOYFd1zefokLvOsl7Ytt40ucl72IisnILxhLwsUL2wFx857CRxTshUGD+jVyGBrHnicWsD3bY9hOfV3ZgxLJPFini68pOrU0xkUTYUKjdPVWDzh4axHSSe9yTtyR6YlZSo8sLVDAFwvaJkvmZsx+DMFDtjNNlk6pGEsmK1aTaVS1BSqkSjlwpKNwBbyRRpKxDyhb4hL7rFlCXZLUuvdPq+kgTlHVOSiPXFFAZkxctk+r4zdSyRpdk35UlVkqpQo5cijbfkKVaUInZxI/c6dGkzIGsDCa3zZnAClPbGidFzgNvuaEza9z8KUp3xQ/zDqww93TstTMTL3ysUIbOymkTTkmZZmnqxGgktLkbnbNZiIHcJZTPNRv8UWJKNT5ZEQxVl1ju3rw5mccQubHweq9yZpmUzzcdIZhV9O8qiFjUFxmng0q1zLn8QtvFFqRyjnFz1CNeLylmWVLx6W3qWafDr9h9V5Bato5S9SgN5N6zToJatucylPlJSpwoI/aNL/IsAWLKiU5Ou3IcnNLaWuV40k2GSoZEp7S3cpciFzK0/mFgzJNI2ia0y76AzRbZNnl0bfieUj00wfwXZgv6Fs6KlpQTe6Vq3mobD3DyFyoT2uYUkmPZgNHQi2mKijVAgfzOz/+zDiL0be6HouqifSyryCx+UWu1evWyD8jgBP79qHgR17CtMleZwVjBft7Mcnmu4ZhUs0QeQtdB88+Ny9C9PlWp16T6WSLNiG553erxG85ZahT/seZv0HwdrdRbpCCRRuJ5RU6E1+mcklWXirmzGLecsqnbnfg2OfD/h37I9Bl1uDxtRBDRtVS0hx13in4FvIQVejYbOr56Ct+XRIBfaDuYOhK9xSwqN7Npp422z+TbXGQXDEmYPHElmfpXlj5U6hfs+TuJETpaOCuXoZlYhNSabNlp8dvU2ouCSwpAYt+WutSKLiHXBmWI+nT/lQNzU67qwFSbPFwSzTgJfSG2bnD0RlWVkrb6p1g61lCdJGaKF6oeydKt8Y9Aw9EUANPPue0b5A1+No94DpNwc6K4CnmJLLjSpOgbCSANbsU489XT5UB3UJkB1kgRzgIIouDegg8P6ULifVNff6X2O0I+KuaaF56JteLcrEZn3nemHtRQxhjsLaJKW1KyVIa9tDAraJCKNijV67Rh5Wd98pHANFAy6quLCvK5cyfc6P1FXj4k9KBZHtJRNcZN+wD4/dq4VSSgM+CI2DSWdWuPasqyjAHGlg/DLH3Xq2SJWjS+hYDtPkFBb84BmslNKmaYa7ZzKrZqLJ1fvnvkGm+PKtzqDC/rL1qaRHUt11u32/pa2yKABIIyeAFd4qlGF2pUwcrJZgyyxmAGuLndN0nfwo+PcpPWbibry6DEa7qnSTAFcB6TDnwNWhnTJBHOuUNyFpN7712QDDeRM2S7RW
*/