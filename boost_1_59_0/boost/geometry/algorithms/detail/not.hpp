// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2015 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2015 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2015 Mateusz Loskot, London, UK.

// This file was modified by Oracle on 2015, 2017.
// Modifications copyright (c) 2015-2017, Oracle and/or its affiliates.

// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_NOT_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_NOT_HPP

namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail
{



/*!
\brief Structure negating the result of specified policy
\tparam Geometry1 \tparam_geometry
\tparam Geometry2 \tparam_geometry
\tparam Policy
\param geometry1 \param_geometry
\param geometry2 \param_geometry
\return Negation of the result of the policy
 */
template <typename Policy>
struct not_
{
    template <typename Geometry1, typename Geometry2>
    static inline bool apply(Geometry1 const& geometry1,
                             Geometry2 const& geometry2)
    {
        return ! Policy::apply(geometry1, geometry2);
    }

    template <typename Geometry1, typename Geometry2, typename Strategy>
    static inline bool apply(Geometry1 const& geometry1,
                             Geometry2 const& geometry2,
                             Strategy const& strategy)
    {
        return ! Policy::apply(geometry1, geometry2, strategy);
    }
};


} // namespace detail
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_NOT_HPP

/* not.hpp
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
*/