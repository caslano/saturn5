// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2018-2019 Barend Gehrels, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_BUFFER_BUFFER_BOX_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_BUFFER_BUFFER_BOX_HPP

#include <cstddef>

#include <boost/geometry/core/coordinate_dimension.hpp>
#include <boost/geometry/core/coordinate_type.hpp>
#include <boost/geometry/core/access.hpp>


namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail { namespace buffer
{

template <typename BoxIn, typename BoxOut, typename T, std::size_t C, std::size_t D, std::size_t N>
struct box_loop
{
    typedef typename coordinate_type<BoxOut>::type coordinate_type;

    static inline void apply(BoxIn const& box_in, T const& distance, BoxOut& box_out)
    {
        coordinate_type d = distance;
        set<C, D>(box_out, get<C, D>(box_in) + d);
        box_loop<BoxIn, BoxOut, T, C, D + 1, N>::apply(box_in, distance, box_out);
    }
};

template <typename BoxIn, typename BoxOut, typename T, std::size_t C, std::size_t N>
struct box_loop<BoxIn, BoxOut, T, C, N, N>
{
    static inline void apply(BoxIn const&, T const&, BoxOut&) {}
};

// Extends a box with the same amount in all directions
template<typename BoxIn, typename BoxOut, typename T>
inline void buffer_box(BoxIn const& box_in, T const& distance, BoxOut& box_out)
{
    assert_dimension_equal<BoxIn, BoxOut>();

    static const std::size_t N = dimension<BoxIn>::value;

    box_loop<BoxIn, BoxOut, T, min_corner, 0, N>::apply(box_in, -distance, box_out);
    box_loop<BoxIn, BoxOut, T, max_corner, 0, N>::apply(box_in, distance, box_out);
}

}} // namespace detail::buffer
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_BUFFER_BUFFER_BOX_HPP

/* buffer_box.hpp
y0Nr6uWg904WHXKJo5FInLlSID5505GD+Iwk7E2DMl6tpWjNHlN8lDqQiaoqSMKGuiy5cG5Roa0S06JtMt3apG2S+Nkraz/k5ebj9avbx9MnZuQmhidm5OHujuPEcfpNa+aMK9ORR3BZ+fhRbYeuwyHPYG8kYRgHb3/j57t/nurJeppyf/p73fNpi1QV7NuTtXT86Pi7oWlIG5gm6PTI9l6Kfgn3Mtug1eMgPP0xWrkDrjLV0eNeGXYtYJFetZGieVpn1rXm3S4G9WUrwTkQh726g/XidjKxnU7zAv6ppDD1CReFx0M8xdb/oJnqlXLbXd9rqi4esIjUWrWIdIPjm8PQcb8R1PhFJBsqFeP9zGkBv6MoMUW6ktNr2nsjpK1Lsb4+gXRsvNgLQ3mOyani6QyxOPgMc087hwQLmzfDxmE3y6/8JlFqY9W9WmZqeWc7udD/5Af+4cbzTPqJMNO9K+KxsFPGdBJ6kWs69SNoOs0UDRWXnZODbNPKRE5IyChyLVLdZA5fOHUqjE7RVZYB+iRsRES1xTHn5MX+5P2j5X4fDL3b7vIurv9z2d5GH+sgoOul5XlDWT1IVONDT1/8wlVUX//C1UOf/+LxrCoL3VTztFnKyc0i78hhie3j7eqZG/+kMdrrZBJGmTu7VYqHJv4wr5h8y8zq2dNevcBIf1u4ipHRklq8T6Qq5alrU9XiY1jPZ0mcMbHqRyWlEC4+fTCx6mD573Kb01EzlbMJN2dZ07ZYz5ULle5nuq+FkoUF9daXfLzIt1HReyveAMCYNIMru+H5dLymy9KgTHx0dLASp1i81HeItaOo9sOT9WgAm3McUYBExc/3EOPSS7CBCbnyDsT7fbPTBkxZsvLDk/kkEfksCRsZidgTe5rpTAq35hO/wsVK8YG9pHX+ifCMFbdPPf9Fvdh5pOJHxAL7mtCMBfeDuGesyEW9OCNGSRRiSULLz8zpz5Te/ISGwogtyfK8cCIBOHlokHVNszXljQm1218E+lBRBrg8JKfWoJBZptpkKX1YDzZ9Cv88IS6kOuQ2sgHhz+CQWY8FDYYAbpTbPiYQQqg7MSEKB7lIB61earHgTXAqPXDSVz0OAXp8y9hwK5Q9Jpp9rGv+ho4mIwhLNj5AfKkAwolSo05ETnuIo9ZATlcYakJLcXySWj8cb4hhz8o+Z6N8iKXWMLTTJ703fXjS1z8I+qkxbER/gUPkgimY8jE1hit9VvnheEEIgSRjI4HJhFFp8hGnXMGysis5V/kBdQP16Jf1SR3k4CSXgxAblTe6KS/gl8iESQTU0ce0N57ziC8lw8SE6S2UP3A5HjZNoURf89/qkv4hJpHxkTQTIkoEGlBs0iE10wWi4XHVx9vs40jEhhkNEoDoYMBiY+Qe5SUtBkKTCfIw1MLVhfbDvArCgasNIKSbfU9ItAdKoBwANBsSG9ABf9uNmK32o6y73voeCdEzxAYOQQwotfbDgZm12RIz52MVjQ7JEBGgyacC6o7uhQLSCao2bhp25cIdjQpjLf9Fy0uFcoEJgYXJCwF3qSoEU8oDWVuNdpIzAPvM9YV974XgiLUrWZNoD44gG8YjIgSERvQ7swsBfs+jXLzbyJlklKgFD1MD8mntB/zS870qtv5Io/1Q2n04oc4gpYJHqe39nTYgaH0Y2kHHDddh7DpcTLZAgkwRXCx7aPi8bQNip2BAqVlw4F0I9s29CIDJIc9BfdzmP6iYo8N/UXJRSuSjwDb7gUt5jTl7Mb704Nk9EXzpqIRwlv+CnrEFMizmI7bcIpzPrLLQ+RFf7oK4vBIiONLj34kJUDDERRgo5cNFtUaZzn5nXIEhPwbgotwK/DkWCFMj+gNpPipCEy4XLKHFB2yzB9hIlB2jD+kRGYztiRjaFtqHVCkIxWAHIMwWZsGUhxmPNaN+Gu5dGwLEA8GHkawHTWEPjDjzQouvg36EAQAs1jrkqA/sL71ebD7blIzHJxuzAgATAl5MgDGn5i9UuIcwLh8B1sj3AZsdsgcAWqxPg2aIqxAXQrHJx6iRWzTjyFC5B8Ib+AfrbtUf5rDPz81KbzPSdDblLrU2hPKTDhhRzd/IKBcgyazXWoxr5GIAKNpOFCKRbllP/VYua4VtMQ9JeHTYmYgvjG7Sl/awNgiyUb9YIyfWTnBEgyME6fAPbFioCJ3n398Z68PQnpsPsg7iWHTgHYp80SM0QPQru+01U+uHSG9dSFsRX8wHaRvlY9jPE6Lj0gOHNtvXIU3GbiIb+ktEiEcP0afkygfHmSoATr3eKbKPVC7n+8+KnyofAYY3Mpg58raVcCKMki1MUEwYCY0Qyu/WF9lKD8qaa9kgIx9ReVQQKx4hxgykF/hrtTo5EjY36BjuErlUBLA+Lpw6dMATpB8cajUPPzI3wDR9E9xmF0eGAN7YqsLTSA9aRSAMIdNk45VexrQ9KlQQxX8PGPy3xxyuw1yse0gU8oFSl0JAiRCCAJ5/RsyX6vpdC5cnXjh8VBcpnygvktqdniQkW/NO2tyL/nXrkAfgHg+cAqWUeevuv7leP9zd36wPs2KYJi1SRthBvtwd37kb+0QOoQQasrMcQB/uodAcqP4jr1J9DqD8pMevkAsT+cclX3MZ7Xc76PEKQj46aK4lhNw4oYYHE8BKUAcILh/Aezu88iRhGdnLWwvBeYtKcwBpRHqRdIwRGQYxQFF4gEGzT/Mos0RpvRsEIPQHEVzOH/8WGi9P0a1rHmpgL5pPSB8zPjaCQUuQsd17wNmXNj8uUCtTELlRtqHSTpAMKTacSykfEV5vtNnZl9fEEPU5H+DkDnpyDf1yN1I8NaBoNdyLze9mDuTKdo1WD1K0VZ9CIM5XKnEXyIa/3ACPDsBBShhkvw73ww7/3XTVdjf8D9Uwy+E+DNYteKHFs/LjCMgncEQtMDuZCGr1LitXkA3sAzRrZwSoWhSV0i46l0DJuruxLYz/71CBOuyhePMG1tyNdVv10FT0WGX2SP/tsmH5xt32/gvUp8eabsJlvRL8mOX5vBnAvxqR/K+0EQDq08A+AN9QC/5GJoprs9/39mxY7mWG/50gOAJ9NaL0XyNScMroMv3bAQKr/hO2cOhXZPedOx4EQnrQvdV77Y+6VZ5G+B/84C2ciLfX4yRDhoePifHSjpSfI/r3/QbK8hg3tX55QUWHz4qryQpD1G9Dr2H4ugZIOMuvvlW+KIKjw5v1a1PDY2Vj5Mcd3ERb9otKKvVijpD8apsDshj9OMKZsWRqha/rr/6CJPWimyJS83FWi81Sb11nZkdXN9uYM8f0YS/6ydaRwIsm0A9qk2eNOK8dygWHo5f3hpn2xYxLtQeviek6S9T7ki1a7Kp5e15HLl3K7TezUptnf8Bo9yi4Cn+RqMo46gU3b7yjSkjYpJvl0WaSpizso2D+DXAViQ20mafi2ZdAnbvnFB804WVXHxY3+f151gKWrLdKhrH+HjMBkxBfbW9uWhUjnOYHXceuBsX5dGhTk+6i7qeGTh5QdjR+Q8dlT4vVR9fJeV3kAeT0lTaK5Yoc8nOnymNF+690S1tXpMplRd5vF+uyninWLarA5duubeOFYIs10xX1bEhQZOag5OfprSS750irHmxuB9NvkaoeR50rJsG3NdUOpsmX+wpqVN61uxP8YS48652KgvTZDnyv2YGnCU6dteKbLHYOzsdac9fMhrmZlqOhBN4etMenfNMT+CuNektF0RMvFs5IIPALq+7Kn+nmopxHF/UvealjpYkH73uENMGWmxbp1TouEp4KFUext70qyK4HKS7nmdmnlA+qGKVNr3P870aVZqcolNYqAuuDaXMS1WUmZtfrb67bvKY1v55rnQlKZtp0VhuvuVhfqBXdle25t4cDwgKBYXx6TvfxD0++rOCFsCR81+2n9YwVfkqjQOnTMLkPPw/c+yzH98wextOQ3iDa5YeIqzKSx4gYlS4z3DxOSGtOz+zoMKcmqx/Z8odxby4J0dYeGgPolhuqxuBZW4gq0sY8tp/0mgAALP/Tm5ri/sdhgReUdbHTagFsiC1JM+S8HZT2DrYfARfk9pDZdoEe6sa2WTQBS6guCtY3O524Ou/v6eYvj6JZysBodPeA2YkgGlydTtKP+4kDRv5W76bZi6DsI3dB6pKZiQNdbTa8FagF1m8jz8vebIu1ujweh7NAoqHup635aB3uJ3gYqw6v3JehvJ3xCuOJbfMMfOaub3pWWPdz2/t8a6fnMlYesrAxpmVdzcXluiw8mnpOGZ+lZaz+p4nAi4rPKalr0MdFXY90PO5+Cucf3yyvS0ujt/IHAY9FbakN24RHC9KxjBDSC6WJeYvT3mlQc20FEtOegSf8Zu2foHRNSZUfLPV2VG6LbNvnN/jgdrZuLfz3HtlKN5YCEWfPonOuYBu4ItsodpZ3gSirJ4hiXhVrz/z9ZX9R4aV6J/vyo6nz+zY7n7e6qYERT01KTetyjpmbuwQvVOBgz40aleQWLScejSY8/mCOE/jssqQqTGlVrQgI98Oc2bVuleQnv/PMCNx5SarozG7Or6O7HhlXHjWqR6M8XkQOnVNiAVu0d8a8FoivvWvrLIL25XHnKv2vwimmLRKtHIJH5zwXiK+yWcmg6z//WmezAnVo/mXOMgZtk/3zn/0K1PnzuCEADl1F2yh1qiPQQ9pYNmsZqEP5aJGHDpVF9aiSpwqBS/EokXcC0SV22qAcsbCZvDSu4lXEobpN98aetxB45gLdJXoqlfcClUX8r3m2IQgOkUPkNCbQW/cUIA846Fvr9F9eDwKH4KlB3gtkFukjYh48hJfc6YAAPhKH6iltEA1Cu9wpQV4P0nvq7EgQDbIGlunb5VIPrTJtD65yTefPvsOS6IDyAbIM8gCuQblx3XP5SqBMjCyqJg7sETNVV6ozFvpT1OyRgCrEV9Us7TdYJEzG0/0U1AARKzp8jCrN3bMdJufazRGo4rBH1IvD3UfNRYlUvcfPEqec9M3lZ31WFzcq3oFOxxcRvq0tPHZQjc/FI1TbQ0WLqbf/gEnPZUz+QD8h4ToH0z8TqX+p0odS29LsHlJYNandZpUC16dmnMv6uf1zS067u33T1cAhsJgc/3KrrlbrmpsFDwVH4PA+xx7vEOXn4hiVdZPTULkHr5tesCZjSk4oJ3i3Fx6anug5XWWUVkUfNGjrNmbvvgcVT4wroN12lj/S25BXWE29L1UW38x/EFJINScXdWyZo1Y0tc2i0klZRdSpHta5Cq+zxvZMY1xpbw4ZXfSeVhezt2RxPy1tNzX7v9Kgq3i4zIyqv6iHnodowOvHc4I9LIWOdSu2ThJPELy5l6ZdJUsAdUBRxxOuLWc+2nVhMXnIbvc+tqI1Pk/dTv3ewGwrrqb33L5q/uEYnjfX1wRFf9zowkJKy9RVtbZPHU1U0YT1oJv9mHX2et7gt2tkj7CkYePeOLVGBN++4gZ+v6W8L25c2EZ9PI5kxGT4qOLctE3aBT5sQtUUbIlIL5ypnD7mM3ZErVeei1VkSnag471o/RQPPbqc8G7+O577tN9q4XFm3y4xN+0tc8ClfULuY9adkRukQB6Hy2j9nnWTutO0PJGyl3nNXVswdWb9UP8xupHYNWxffxEz0OWxgM4hJuZPSlZQDhw2QiQQh1SGjRsVCx4jYNxbui/zojUo405GI7eAP86WMopnmUxkeR6sbo6ZDa0SfuM92Z4kYmzj17xayfF5+OBmf+Ey3dl+4T7JTnNbZbmTeUoHvAxwSb/sPMxO3Xu7WzrV5vFmHO95Xls+lrbc3Kzz8d4fD/Q9g22n5X7NQYQfoYDLTP0a0IopisESrZnoaG1YXMdW7WhbUba5VUrRcXcK1nfKSBD/m8GYNFbwzwX96fRHeL7brw163pIsJQqGI/vxOWH19DsN2sSZ5V1W44f54/hLUpIb/JiHaVP1afXpYdsL1schNH3ps2KkpUVXyQZ6mqOhVWDrgRCNh+qk7aB8hGpgdlvXWbqr6bVOsb8AWRRYJVlj1kZy8H2oKZ90k3elLn/GKE/lCKptZKb27YGb0IXpSdtVi/fEbiuraAc6Ui5R8eeS2S3K9njNcC1D4YPYOvSDZcJR5bSv9HPiIAqfWaorTWV5xHEqWASbdcGd1CuFtbmta0OtjdFa2EKk4tMZl6LpEULrtdfxQbQkI2XN5Ulfz6wz+Udiyl2UGzJPXekc1y+wJkY+B7osX3PaBn8bw+zsb6KrDDsNbwZLdwpVsIvDPLLicawL+gYXrU+i8MuMacLzMuR4RZY0eVIkQTnsaD55qAfUtdgfaLHSVMGDvXq1BowVoOyUmzWrdmeODI7MseJx9Poyrs8EyRO5r0srd+jbL/nwDgrajExbY0XDRepacThQYEaA8jTBCT9tPrRbBLuKJEHAXjI9WDuAVvjW5em/Pn+QMOCtQKIBj7IcS3Fn0TEUfZ34oOhe9Fm63sgyFORZt23gHzVp/wBaZ57Zx9vk89xsTxfvoRc+W1FnCMK1rT0+xEut72cIfyGBuBf9yCOqP8GFeW/Dd9YQaBzOovTO+3T2ZKA+upx2Jsxs7Xh26jx/b4P/RFzbFok2ckh8ChUzkGigoxfMle4LbZkceZSBXYS/J9Gnp7YSfG+fxygLDwAbLs61E3x356W7KiP6rMhVSbzn8dZl4pXLb9vnyXteUbjFdvGS0TBpVBxDogZwJYT52ET5LMf+3DnZqNf4QVRoCKSS9muFBwqjq79QIxxrCbS7QzxQIjUXibVLQHw0BtaKjscPOCA2FwTWKkJ0KAqogfWvowd6QXebcV/NdGpZno4dkseGpPBNlF+Yo+yHkFsbr+C97jwn3sMLZT6EJqBaYY/wE8udQPgtwyCawWXPBEIumtWimAq18nmJeMqW2d04yyKz88yE+58kYNIM1YCvQB7dsnitTTVnPnQDPZ3SzLLkesL7gQHGjcjMe7d26MYdvvFF8U3X+TNLE72GjVY07DQ8lK8oIjw4iKSviS0Q766ZT79Lmj8rLyzE76QGxx5LFrrR3q6ZDz/HzzMJYgGaa7nzck5dwxcyBVBcmB/S+cEBpPi+WzzW4bbAb75LNGc6l/J5O2sB8zFKc7ssD9N/P9AKc52aT/a0N4n4KPbmbW2Z6E7ilCzT3s64yxmr3SSNcB1LWTQ4a8DaJhkGXIrictreIzWLcGOtaJ50V3jmcACD/3veEWHdebPzGCTZmgdHJglh82jIq8AvpL7aX8MzFpmYFKZpcKCUOMhENOSc7pg4PVP5p8/thYAHc52yF6TFh3NM38peF7RpzOUjryGLzRyUKYgyDHIK9q2n9Pcm/PMLANfuYImlMTiYzOU8eJuyY9m03Fu1py+kGOcqncPz0+ci8xodTa2hAeHrGW1miD2BBa6c202vjb3vusBxIClsIWXz26T4+76JfisDjrd7twuWvOHalm3xTNRY9jcKO2mKMzi0lpiZZBCTbRmGpivOusoNDXJcHD8pWotzou0ffTYNL4he4ghNrmrOzzOkRHEKnbYpdHJXeOk1VtzIO550ME9ZgKxbPqSuN3DwoZm2abyd/jg18i1dMezn1H9hepKnebr/gF/sRNcAwbwWGm2cjZkRDuXjYo3+RV2PhWnUpeVKwXPBv1tZl15q4VOp
*/