// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_OVERLAY_DEBUG_TURN_INFO_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_OVERLAY_DEBUG_TURN_INFO_HPP

#include <boost/geometry/algorithms/detail/overlay/turn_info.hpp>
#include <boost/geometry/algorithms/detail/overlay/visit_info.hpp>


namespace boost { namespace geometry
{

inline char method_char(detail::overlay::method_type const& method)
{
    using namespace detail::overlay;
    switch(method)
    {
        case method_none : return '-';
        case method_disjoint : return 'd';
        case method_crosses : return 'i';
        case method_touch : return 't';
        case method_touch_interior : return 'm';
        case method_collinear : return 'c';
        case method_equal : return 'e';
        case method_start : return 's';
        case method_error : return '!';
        default : return '?';
    }
}

inline char operation_char(detail::overlay::operation_type const& operation)
{
    using namespace detail::overlay;
    switch(operation)
    {
        case operation_none : return '-';
        case operation_union : return 'u';
        case operation_intersection : return 'i';
        case operation_blocked : return 'x';
        case operation_continue : return 'c';
        case operation_opposite : return 'o';
        default : return '?';
    }
}

inline char visited_char(detail::overlay::visit_info const& v)
{
    if (v.rejected()) return 'R';
    if (v.started()) return 's';
    if (v.visited()) return 'v';
    if (v.none()) return '-';
    if (v.finished()) return 'f';
    return '?';
}



}} // namespace boost::geometry


#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_OVERLAY_DEBUG_TURN_INFO_HPP

/* debug_turn_info.hpp
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
*/