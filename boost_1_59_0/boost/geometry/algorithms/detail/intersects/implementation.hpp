// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2014 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2014 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2014 Mateusz Loskot, London, UK.

// This file was modified by Oracle on 2013-2020.
// Modifications copyright (c) 2013-2020, Oracle and/or its affiliates.

// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_INTERSECTS_IMPLEMENTATION_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_INTERSECTS_IMPLEMENTATION_HPP


#include <deque>

#include <boost/geometry/algorithms/detail/intersects/interface.hpp>
#include <boost/geometry/algorithms/detail/disjoint/implementation.hpp>

#include <boost/geometry/algorithms/detail/overlay/self_turn_points.hpp>
#include <boost/geometry/policies/disjoint_interrupt_policy.hpp>
#include <boost/geometry/policies/robustness/no_rescale_policy.hpp>

#include <boost/geometry/strategies/relate/services.hpp>


namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail { namespace intersects
{

template <typename Geometry>
struct self_intersects
{
    static bool apply(Geometry const& geometry)
    {
        concepts::check<Geometry const>();

        typedef typename geometry::point_type<Geometry>::type point_type;
        typedef typename strategies::relate::services::default_strategy
                <
                    Geometry, Geometry
                >::type strategy_type;

        typedef detail::overlay::turn_info<point_type> turn_info;

        std::deque<turn_info> turns;

        typedef detail::overlay::get_turn_info
            <
                detail::overlay::assign_null_policy
            > turn_policy;

        strategy_type strategy;

        detail::disjoint::disjoint_interrupt_policy policy;
    // TODO: skip_adjacent should be set to false
        detail::self_get_turn_points::get_turns
            <
                false, turn_policy
            >::apply(geometry, strategy, detail::no_rescale_policy(), turns, policy, 0, true);
        return policy.has_intersections;
    }
};

}} // namespace detail::intersects
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_INTERSECTS_IMPLEMENTATION_HPP

/* implementation.hpp
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
*/