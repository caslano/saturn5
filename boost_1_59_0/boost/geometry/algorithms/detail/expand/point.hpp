// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2015 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2015 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2015 Mateusz Loskot, London, UK.
// Copyright (c) 2014-2015 Samuel Debionne, Grenoble, France.

// This file was modified by Oracle on 2015-2020.
// Modifications copyright (c) 2015-2020, Oracle and/or its affiliates.

// Contributed and/or modified by Vissarion Fysikopoulos, on behalf of Oracle
// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_EXPAND_POINT_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_EXPAND_POINT_HPP


#include <boost/geometry/algorithms/dispatch/expand.hpp>

#include <boost/geometry/core/tags.hpp>


namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DISPATCH
namespace dispatch
{


// Box + point -> new box containing also point
template
<
    typename BoxOut, typename Point
>
struct expand
    <
        BoxOut, Point,
        box_tag, point_tag
    >
{
    template <typename Strategy>
    static inline void apply(BoxOut& box,
                             Point const& point,
                             Strategy const& strategy)
    {
        // strategy.expand(box, point).apply(box, point);
        using strategy_t = decltype(strategy.expand(box, point));
        strategy_t::apply(box, point);
    }
};



} // namespace dispatch
#endif // DOXYGEN_NO_DISPATCH

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_EXPAND_POINT_HPP

/* point.hpp
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
*/