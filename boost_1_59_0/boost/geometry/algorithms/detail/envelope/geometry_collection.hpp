// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_ENVELOPE_GEOMETRY_COLLECTION_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_ENVELOPE_GEOMETRY_COLLECTION_HPP


#include <boost/geometry/algorithms/detail/visit.hpp>
#include <boost/geometry/algorithms/dispatch/envelope.hpp>
#include <boost/geometry/algorithms/is_empty.hpp>

#include <boost/geometry/core/tags.hpp>


namespace boost { namespace geometry
{


#ifndef DOXYGEN_NO_DISPATCH
namespace dispatch
{


template <typename Collection>
struct envelope<Collection, geometry_collection_tag>
{
    template <typename Geometry, typename Box, typename Strategies>
    static inline void apply(Geometry const& geometry,
                             Box& mbr,
                             Strategies const& strategies)
    {
        using strategy_t = decltype(strategies.envelope(geometry, mbr));
        
        typename strategy_t::template state<Box> state;
        detail::visit_breadth_first([&](auto const& g)
        {
            if (! geometry::is_empty(g))
            {
                Box b;
                envelope<util::remove_cref_t<decltype(g)>>::apply(g, b, strategies);
                strategy_t::apply(state, b);
            }
            return true;
        }, geometry);
        strategy_t::result(state, mbr);
    }
};


} // namespace dispatch
#endif // DOXYGEN_NO_DISPATCH


}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_ENVELOPE_GEOMETRY_COLLECTION_HPP

/* geometry_collection.hpp
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
*/