// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2015 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2015 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2015 Mateusz Loskot, London, UK.
// Copyright (c) 2017 Adam Wulkiewicz, Lodz, Poland.

// This file was modified by Oracle on 2015.
// Modifications copyright (c) 2015, Oracle and/or its affiliates.

// Contributed and/or modified by Menelaos Karavelas, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_THROW_ON_EMPTY_INPUT_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_THROW_ON_EMPTY_INPUT_HPP


#include <boost/geometry/core/exception.hpp>
#include <boost/geometry/algorithms/is_empty.hpp>

#include <boost/throw_exception.hpp>


// BSG 2012-02-06: we use this currently only for distance.
// For other scalar results area,length,perimeter it is commented on purpose.
// Reason is that for distance there is no other choice. distance of two
// empty geometries (or one empty) should NOT return any value.
// But for area it is no problem to be 0.
// Suppose: area(intersection(a,b)). We (probably) don't want a throw there...

// So decided that at least for Boost 1.49 this is commented for
// scalar results, except distance.

#if defined(BOOST_GEOMETRY_EMPTY_INPUT_NO_THROW)
#include <boost/core/ignore_unused.hpp>
#endif

namespace boost { namespace geometry
{

#ifndef DOXYGEN_NO_DETAIL
namespace detail
{

template <typename Geometry>
inline void throw_on_empty_input(Geometry const& geometry)
{
#if ! defined(BOOST_GEOMETRY_EMPTY_INPUT_NO_THROW)
    if (geometry::is_empty(geometry))
    {
        BOOST_THROW_EXCEPTION(empty_input_exception());
    }
#else
    boost::ignore_unused(geometry);
#endif
}

} // namespace detail
#endif // DOXYGEN_NO_DETAIL


}} // namespace boost::geometry


#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_THROW_ON_EMPTY_INPUT_HPP


/* throw_on_empty_input.hpp
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
*/