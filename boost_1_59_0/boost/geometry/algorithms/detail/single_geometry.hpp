// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.

// This file was modified by Oracle on 2013-2020.
// Modifications copyright (c) 2013-2020, Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GEOMETRY_ALGORITHMS_DETAIL_SINGLE_GEOMETRY_HPP
#define BOOST_GEOMETRY_ALGORITHMS_DETAIL_SINGLE_GEOMETRY_HPP

#include <type_traits>

#include <boost/geometry/core/assert.hpp>
#include <boost/geometry/core/tag.hpp>
#include <boost/geometry/util/range.hpp>

namespace boost { namespace geometry {

#ifndef DOXYGEN_NO_DISPATCH
namespace detail_dispatch {

// Returns single geometry by Id
// for single geometries returns the geometry itself
template
<
    typename Geometry,
    bool IsMulti = std::is_base_of
                    <
                        multi_tag,
                        typename geometry::tag<Geometry>::type
                    >::value
>
struct single_geometry
{
    typedef Geometry & return_type;

    template <typename Id>
    static inline return_type apply(Geometry & g, Id const& ) { return g; }
};

// for multi geometries returns one of the stored single geometries
template <typename Geometry>
struct single_geometry<Geometry, true>
{
    typedef typename boost::range_reference<Geometry>::type return_type;

    template <typename Id>
    static inline return_type apply(Geometry & g, Id const& id)
    {
        BOOST_GEOMETRY_ASSERT(id.multi_index >= 0);
        typedef typename boost::range_size<Geometry>::type size_type;
        return range::at(g, static_cast<size_type>(id.multi_index));
    }
};

} // namespace detail_dispatch
#endif // DOXYGEN_NO_DISPATCH

#ifndef DOXYGEN_NO_DETAIL
namespace detail {

template <typename Geometry>
struct single_geometry_return_type
{
    typedef typename detail_dispatch::single_geometry<Geometry>::return_type type;
};

template <typename Geometry, typename Id>
inline
typename single_geometry_return_type<Geometry>::type
single_geometry(Geometry & geometry, Id const& id)
{
    return detail_dispatch::single_geometry<Geometry>::apply(geometry, id);
}

template <typename Geometry, typename Id>
inline
typename single_geometry_return_type<Geometry const>::type
single_geometry(Geometry const& geometry, Id const& id)
{
    return detail_dispatch::single_geometry<Geometry const>::apply(geometry, id);
}

} // namespace detail
#endif // DOXYGEN_NO_DETAIL

}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_ALGORITHMS_DETAIL_SINGLE_GEOMETRY_HPP

/* single_geometry.hpp
0AbRwR40/we/0hegbR8y2n2wee3MCFcsZ3GLPeD/Ana7H3aAHgHk78evHBCJnIBEPirvETIoAgTO7g7BezjK5EuMt79RgEeiO9dOcCUPIHbaXTzkrZZao5X7klx6HMeoojaGu4gYJ1ddfitkrdbazKnuVuHiSdZpOC2GJSv9PhfyymUv9zky+gkWFe2SdmLjF1wkrJTbs7rLhrki28ZnDPXsZFRRD5YpK73+145iyGk2rkLDPJ4frBQ7qeKR646X7NiwhbMMa5toatNs0rZ7u3y3LZMJGvbHWt4LQa1oi/ysallO6JcpMHJMtejkJTc2pWl+IyF2x5LuduGSyIYcC3iiD/5oiAYrvT80UxMT+sHpH2yLtT4QWqex6IhvMW9aaOyTFn9IrbMEbNRPvah1+g0wUrv8xV/stj4wVvp+j6rtlBNaJ3e8f2x1/7GlYS7XbLM36ifBStWRdpqAoa/1gZGqJV6Ia+kBY6f1gbrH7w3E3x4bCcL/o4Ivrlemgm9uAfQHfa31BBTRb55G8iZV/s/w87CD9BCgfVe/i4gdFiJm13rYAwz9iVBZBUv12vIbwRW7MsaCPthpcoahRhW3yYd476izMMkvG+HtRoOf1npA6DkrpxOu8DDoK8bTH9OwrEP/jUpINaXHY0FU6y07Gfa2+Z/CavLqO8EO+tYqrP+pP9bTWHBjvjfwq77e9984E2AbT7/b6VOSYZ2pLm1V10Foj1r9oT0bGvqtGP2hlT9sT3TYaKeMjQPTjYDQKblrZ7KM9wa8VFjXNLel9wbUsjnBR4O71df1TJ1Z/aFZPBKgPxsb+r+cWfyhD50PrIDRZ4yMgZE5M/qCsb45POiA0Q8aGvwht6X2BrSuf1RGzjpNaYdM/uNI7wvm9AyANm38B2v/g7leMdFX/if7z6S0dv6wJ5GQWntA6Gt6Lf+s+rbx7atMe3TB/59TPVKg/5keuU2uSteWczJv1fr/rFtvP/gXBqTvhyi1AEkrQkP+rC+cfYHbv1MYkg/8Su4IWmtvAJYpEbadtE3wLKq9D/RfrGpyybXNnQ+cfytppWXzsx6lz1kFRp1MM9FuJf6Psgj0cvCHttID+hccoLT/7Gm1N/B60f/vMn8miBS7jZ5vU7U3/2QgCqaBcDYI7b8bu/C0VdME2A9SZnX+0KsXTzegnxsvpnXbIULIC9Z7A19Rjvq+YJrWYqyE62C0U7Ps6IyMayaCgZDlrHb73Zzeve+Jv9cHA1swLWtzRgIFsFpp25PnjS332D9O2FjSYo3+0I2eadDpmFLN+etBxP86bHXN1Qqb0cuAlRqr/wfukFldyf7TFFT9X3u+2/ai/tDdmFs2wMAP/1TX5QE/Pr/ANaW9mtlTwZ76kcLe8HwwTQO3bkyB9rRO64h1H7Dt27Rmd2ftFfS4fYKbWTwdCu6erdK0SrMYKHoNzLQO87TxBARSD4IU/H9G3+pHDKT/z+i6FBTVxeAB/B2aJkoARPksYFR7Pi3HSdDarFJs/rBaYpFcO+Vtdb+7oeWsVgz/3YiI5jgGwibN6AOjJR4K/efRwfh1/X86jrR5tKRDm9TT/2Oq8x0CbcROt7s2AEbfeIlti+O5zIb9Tf8nwrzMgc6pZda6P2MaDKtlxoU/G6yFrmHNXu/zjzXjYTbYCn3Dil3/n9/ifrLTob1pm9bsFkBY7fKHQWif2uJsBpFJ/7kH9t+EmAxWws5h/teZ2RgdeoeWWOM+LPJaX/BTl0P+bDAK9s5/kFiNI61Txz8fQv4nVc4TBt1Na9WsnwBpNddZOtt3CIS+YJ1mJtAJ++Gms7sPhN6yRr8eZIL99OB5wFUW094XDMtqRZ+/DMbDMwpMa6cfCZspZdZE6CJ7Cp6IKFm/wvS/nz9pu2fJLn/2DiL4JBnRTGJsBk1xvOZ0ZnmyDsKQbhqlJ1EbnjBJmsx7mYzETewgKBDT/CGlfFBOeWpG/iNhJkcZnD9MNxAXcet4K7Wk+nwR21OrGvmZPrs9657zmHXq3rtrehL7jh9r+ZLL7lt7P8Ci88bkOKgbj/xjvmUXjf7j8+4VjV5zP5CbjP0zkXUnexBi6fa7Wf+zqktv+3/sDoO7/sg/FFt2sL+1Q0ufmv34372LNf9hbSOwvnQyb5uOgmEu5w7VTc++XdU2YwUNnslN5YQbMTUaGSllxpbqGgg94xoxaCXPS0hNUm0vM0B31LA3v129MhrFLcffjRqEiXSvp9ba+dGrtKgaJYNkUpEh3hOzX5Toq0A7m2XK81ghA3500SGVIHUJ5c3g+Iz9uX6sQ6/EWDcmg8oG6brld17kWc5+n+d2s48ynRW3xGedPSs1Vba1s4Qb9L44FHOBq4uSd8ssIPhQpr0mPBKXELwiydGHEp95vqh+haZ88C/iGthui54pwNbaNEi8gt+y2DSFVa9Duc87I70zbRYz3L+H/b8SG6nHkt+xr9Ug+fC13a3Dwu7zLycjjafP2UCzVH6lgXvZWm2vl5mrL6PXYBjuWSJfEEcf91LAuwv5u1+5Qi8ev+bn2XWVVT8au6otui9UtFDBSOwjgrHAeviFz36NatWdK7A1hvq7gDPd1tJnq+jdY2YaxtdHeNcP8v1XySMwBS+6rKVJrzevIJHrxjkpJlIAHjNBVjMBrjfPu/z0PnTQXYZRJ+5LMp2IN62vpqZhupCDfZkgbVBJxm90ppKiboYISiGtxhbSebH41iKf7Qlnn4xDsduxTO+b97/f77vSlY/InqqmMMFegsa6yNQXda0TFgCDp6zsG3VsEwYT+iuCX2rJG2NBDKW/xFCYe/MAa57uDH2xyP6GCbnw5RrsTddAt8Vv1TU1fNdslguPZFeuQu8uvjkdqc/xKieHsQxjX7g9Lf6uD9/3vBDPWECO+/t6SF3nw5+vU+/4LL5ilW7J3785w1SOZfyfnKmOzIP41jH4nvD9id5Cso+F8hGKOaKQvBrB/FcO3pviPdtGfLKHXxgn/Vw5otc+DyP4LD1mvTKH/QIvdEoFJSzLAFXNOndNSe4L3ro1R7bHc0T53IQYMEYwEvhoKbnxOZgo++3r6Tb0DCxx8QhdNEQ0DFxUaclZjpoGKiGZCFNmiaGDg4xIjIsJwP1Zb39d6GmoFIMOWcm1VCqR0EYcGxwDOerTx9V7G9kKm3CbYMCQHBsXHUKStQezr/q82/VI4lBSs1NSU/DEIEHo+L7OD9O8zDKAY5wgj0AXBhe6uyFkIUZMToxh4YxCQ49LhElIwQL2pB0EPOgRaN2Papl7DLgfVqsfx3LfJ4jo4LFq3I9i75Ps5e3l5+frtzlfzhVdHno7ViosN+BkqfIy5f5whk4cdrRRiLTh9iDzheUOW947exjy8OOX9xaVYhxGn4vk3+fYj7FbJxFFcAuRJpaOazWENdFvpmdPAZ4gPAI6prwHvLe7T3Db6jBqU81cmMLWh2gsVruvgK+IX4JXdmiP2ljDN+w2qHI0m0NvJP5k+vylak/hGsq+sbF/7USTNKRrTL4yfAHlmrWqeUPSEQyCJo6JEHoP+fqLl8I3tgJVqZZchlaBWiHUTzDAbB3PhxbOKIe3EUk5YAbSAw4/UP4GiTG97dGQU8tXMbuyu9R6jhrNCca2gQ0e9SgifIAgs5FgthB+FA/UkJJFwJaesr4+xQQ9NXgSTR8xvsJwaXkZQJOlVjp0LutoBpgtpZu3vEVK62C4DdhzG7gueSWtEi3qMH675/0Owptbe2Q4jIdI+Dl571CiRejtNz8ykM86xAE5Oyh5L55VusrygYkcfRIUt29ErM6/82c0XJ+RaWSKOTSdabr9RMSx132hy0ylyULtsOrHBbs0cHE0/bBrXynv0ty5tZ5rdBv4/nKo5tD7DaYncRWZRshR/MirXSonHt0o7CLvYJlBmVIAeg/BnzOPmhmFxy8l7/iMKEyD5o4yTPSA7Y73i2OGmZfRhoyfMYZbnDURfoxjYUfL3Ca0TMt2uelCc7pKzLKNZZHT6nhz8irRheOUVZRD3Yk7W6h0Ud2J1zu6psB2wUBDwLK9epuc7QytXXQbq4pjcCsRL6Nl6LUQHssPaq7QjEQjNKawVh4Wx//1sPENCa8a/ZLEg6WwxD4S0WbLgmBsSHkEshC0f4gkUJw1XQDpuz0D+B7T6rq1Yo3lWsTFlmsWzxZ9QzuL2zSrsd9cWHCbyQZkcd2NNZvGhGqNdyUy9nTx3aAnoHe2cJi8XvgKvdo4CmZMoF3bh7A3PvXI6DnIQ/haTtfDHrvMPHFPDnQ7okDOlxk/W8jx3qJLSre8dmVV0Ka7+HbO1X/09Jl/RKtwCIKEwQh6XdIinWlK4LEs3epYbZJmMqZldB01O0PGtnSM44A5UIym0NQ8h2tl+8pFr3sNuYrVdgK4Kyg0AkOeOCbM5Ic7J9ndomrj6p2xqMmHK0/nDNKJzMgDj7aP7sDYDZh2IHc/sq3dJ9u+cH77zJJbz4no/siHEYqSdWmoxHh0Dfi62CVe2yqUfZUfj+RD3mPFHNaRLbBHAn7+sakFe//FGXnL65Vw7PZ2C8Gk0eUKkDWEZ+SkbnZ99QpcJfk1REr28N0LdneI70DUzTKeQGGItF76Cnn4j0JGQ/cVoekk+pFCu/xOnkU5qYQqfLm9RUZGZY+KaXd91FJTBQHVZCFWHDggilDhfOeZtxOGdyBGzMC2vW9ZUuodaRfubpXoZeEzkDft3gJFd/v8Bjl9CcYsFnR0ok+X7R9vMd8EeIjmZC/ZifTvaWKmTRxjGwbXNHwAzub6sOXpC+vpBhfBGoTNZq51143ZDcdrkhdOrqXyA2ZnDQ7+U2HTesVglVLYc2vm2Jg85HPFJyYPHMYAACz/03YgJa8sz1rP3M4VnmsdJ6p6Mxc+7GGTeoEXEuhTRO4M15PYx2sv9N+A3AMlowic+snc4cWBeAWXeO9jnLTZZwcqIWKNbTjMFiVruc4uNaln3yaNM7QxRnALR5iMYKh5TCX4UeAM2LncldMz7GdBjzR9zGyYY6IRrYYcMxNrpgErIx6z6uaIqsMVspZLGFcT9sfs5Rm4U6JTpKhSuKhSTGtp2IsFGie66gu0Nk/hhqnEyGO4dlG8OBZlIhbB7jyVSmmL1tNZHOlMyNBbhH5cO/ys6Eh7SFYn1dgFrstV7Oj+SDPDvPq+NZMsJgUA/tcENT3g4yGO8RmIU/uwIw3TWseVd76NtA3mlJI5/SdEj6CdPd4DFf166nTvSU4HWg/BoB6UwSOh9ywtoPYGVbTJiApeI0myZd3jsnALuL1vOGct7bsvDYUIfeX50DLQEjdCH2S2Fevel4AR3CK6caCtDYEdMt34xSOgo28Yxx5zdcwV4rAZecvo7mle/dA5iyZaawkiikJcM/iN2BLAjtiny3vrjky8vNSza5uGzslmwGndU1M30Pm/R4AZno6vMV8SFpcsvtUPnA12zDeRbAcRHhU96nxlbEwJ0S8qsp8yp55k6BakfaL31V75fqmuyR8+wBXRWHklZbBTjQKvAPC7kTeCr4X2ZkgeWx4TGYY0dWjAOlUtrOqbNHDLq+HOwE5tmbAGrwIjPFMlDaZrj1fkXP02x5hfHGOtDgV/mxJarogSj74f7N+jtmDUWqDTHsO4AcNc+BmXFbdL8e7kjuQofqCYcaRFM+fxmBFMD8LjNHMvm2FHz6y5zbhNr0BWasWw4nSMuOsOTR7w2tef2sqr16evzHnBrOYWGKtlVOAtUey+KS0D/9W/XvMdcGs98duzPnN4lrdNdBveWeQf9N4BNcWfZ5AfgZqxsIbw9UAtgeZfJj9/foPwD0vdSeIpoYYJ76PrjJqsaqScQ7HKTyqPL5IWZDwssWpZqZcgSfKl/RDwFpH/9hqEeTbklPaW+Bargrno6nvpe9na9QWkkLKJps0CAnXZytRZbE5fIZU9KpXOUZyYttNwRu4DjcOoE8dOjEj419yhNLSyJpQxcUY+3JN/0fsgoWObRnkpCMUk0C8yF2Na7+jzgnA046DItg1fDb9YfBrq9SO1AllOgWRCPCr4vx58uzHKnia+M/ek9w6+AkqkICcLOepH6BQIBU1o5n2MiFd7lEtHleSh0qOP+52Oe9T8UB4tYGqD48wyjWA5Rq1GUxaBNLTXcuxqWES37NYZZp3LHYL/BW8qyFU4vnHRbPCq+8HQ7Fupn7Zi44KuKFLLQkU+AnvPHqog2rtVcZYx1yfccKrDhMTKg7jgArUoi9kR9lXYrWBjOQGcXSEJPoIJZy3NFJ0SecHbi3Twi+sYzEYxLW4cXz+5si+Zb3eCPWuTPcfc2Lneh3Np3A62cVeJbDbxXsNzSWM5mmY/uHaD0x3TPbx8Y/XxJwsz5cfERUUHjc8dz6HME6m01tEuVMhtKfQuoyqLt5IrnN1bpO8M2cGntGziFdYtWyWSHgPQ+xUVk3WMc89th0ObL62OcAE5i5MqZczT8uSMmAmh1JHUbO/o3IoOzVCfjlDzxgObwurXDBQN4sp6bOnTJXo3/JL2wVujkhiKkPVr3wHLFidAV3n3KHeyqSi4KCOtiLwopC/bgGBW0M1HPx99pv6bbuCQs2XTY40W+OG9s2O06vInq6UPs5TfldkutBN6y9jvDz6gYZJh698T1UO025HWu++v3QL/K7JSQHyrFMVlvL2hW55Me8INzR0JGBpBwzshuUPYZ0IPuLI1xLxxomgtwyD7/jOBgzzazzjPMdIyyc0s0xp6waoKFZ45k3uVgGSoic+q5aGVa/cXSxfkUSdOzsksQxlcTjCLum7sW15QHe/LkIZLdZRLoC2ftGwDsNh91wfQL+Jefm5ql7BZIfY6lb+8f0zHVv/6E5VJgCUjAVN2ceWNa1fkYhUpKHdMqLhbgCxduv29TF0Wea5fAAvpw0Jih1UGD3lbImftAALDr+NtlqhC0FwXvTLNcpdx1isBy+Namat+wrE+jzFN/JvffCT4LqQrKIs8GxbRkJFFkJtCN3kcNwhEXaXiuRx6QU8/oHpRVBsuwN2xcAGY8QLsJSZ8bgYxwf9uBoIV3lKoXce4FgtX4NJGRW+ONtP/7gaSE9x6YFtfEnqR/FTh4dxdoqNaC6+WoIN2y/MB+C0pl7dlZrqlP8UGF/hR9Xcjzr/POVXMN8zV8FJkDnHRT5q3CHo78Iatpt/Dj9diyrCdtE6NcJGQNmcG8t6+l6Qgr201b1TfeOB5/+OPd+1PRf3KmmkWC317ZFQTsyf93gn1p+6LiGet9iKhjPFKBEm96JpACw7CI0rleO4pdn4M7f2EAIDrC/K4AavSEuDYDlPe5+Z45zGV3wcDPV27RVJGHp5i4xLac0wtg8DXLoWWEKw9MndUF/QHM/oKHNc7no/fauizSpAZUZhdPhZn+M0fPA9ZpEBhuS26kTDRYSkGySnk2jBUg8A1ChdBHxxksr+bSinLx9MN8dwH5cccO7ZMzNUY3ZF8IW8rrLcNJ+u6f7XZZVhcmclvw72gyoowv8z3qoPz8E3DQQ0w935a6ReVjamPNAHrVlnd5XquHr3DWmDgbAud2xJ0zJgZPNkLs8VnEmcMXPGqMFXrYRFS/7jE4Zr+zs74s1b3Xz6Q1mExte9du7vKVQQChDa+Q9S1ooyoyzIHaNzC1WPDFHqIM8fjGuGsZUGh9QKVdJEL
*/