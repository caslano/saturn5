// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2012 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2012 Mateusz Loskot, London, UK.

// This file was modified by Oracle on 2020-2021.
// Modifications copyright (c) 2020-2021 Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)


#ifndef BOOST_GEOMETRY_GEOMETRIES_CONCEPTS_MULTI_POINT_CONCEPT_HPP
#define BOOST_GEOMETRY_GEOMETRIES_CONCEPTS_MULTI_POINT_CONCEPT_HPP


#include <boost/concept_check.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/value_type.hpp>

#include <boost/geometry/core/mutable_range.hpp>

#include <boost/geometry/geometries/concepts/concept_type.hpp>
#include <boost/geometry/geometries/concepts/point_concept.hpp>


namespace boost { namespace geometry { namespace concepts
{


/*!
\brief MultiPoint concept
\ingroup concepts
\par Formal definition:
The multi point concept is defined as following:
- there must be a specialization of traits::tag defining multi_point_tag as type
- it must behave like a Boost.Range
- its range value must fulfil the Point concept

*/
template <typename Geometry>
class MultiPoint
{
#ifndef DOXYGEN_NO_CONCEPT_MEMBERS
    typedef typename boost::range_value<Geometry>::type point_type;

    BOOST_CONCEPT_ASSERT( (concepts::Point<point_type>) );
    BOOST_CONCEPT_ASSERT( (boost::RandomAccessRangeConcept<Geometry>) );


public :

    BOOST_CONCEPT_USAGE(MultiPoint)
    {
        Geometry* mp = 0;
        traits::clear<Geometry>::apply(*mp);
        traits::resize<Geometry>::apply(*mp, 0);
        point_type* point = 0;
        traits::push_back<Geometry>::apply(*mp, *point);
    }
#endif
};


/*!
\brief concept for multi-point (const version)
\ingroup const_concepts
*/
template <typename Geometry>
class ConstMultiPoint
{
#ifndef DOXYGEN_NO_CONCEPT_MEMBERS
    typedef typename boost::range_value<Geometry>::type point_type;

    BOOST_CONCEPT_ASSERT( (concepts::ConstPoint<point_type>) );
    BOOST_CONCEPT_ASSERT( (boost::RandomAccessRangeConcept<Geometry>) );


public :

    BOOST_CONCEPT_USAGE(ConstMultiPoint)
    {
    }
#endif
};


template <typename Geometry>
struct concept_type<Geometry, multi_point_tag>
{
    using type = MultiPoint<Geometry>;
};

template <typename Geometry>
struct concept_type<Geometry const, multi_point_tag>
{
    using type = ConstMultiPoint<Geometry>;
};


}}} // namespace boost::geometry::concepts


#endif // BOOST_GEOMETRY_GEOMETRIES_CONCEPTS_MULTI_POINT_CONCEPT_HPP

/* multi_point_concept.hpp
zw9y087uKrJYgjUbK0/byxvyaBKRpJJQ8YmUtlFYT9198KRkhX9ZQe1Eul0vG4DGx1ngqHegF/IuQwRQC0+TlKVVGQzw5mdwOwbS/FstqpLd4q3yD8tGJb6HFpCQ+Ssivh+zHfihjjsplvVd6luzmpbeEAU3emIoTchflo2V0Es2dT9iK8l7yxwq0IwWiT0uS+Ns86OMe3IIMOY8RE3QL2JJjRv1L5bNyEcWnMe9y7dPaeDnnLuaZF5kXVJ9xoOqOiz3zQ/COLbPdU8Va7hyyfwChLLe8wX0lt9tXrdJ2y5sN5DFC2txy2nUd9eKeBUsYSMsGDos0HpCrG1BlK7SPMk+VES1y/Egy3ENsXMtovE/Uzw/eX0FnGcti8pjVbnYc64iwbkSsKXAipKiNVIDPZFVmhjRCPeRf//sO3D4hG0Ro5AklsJzWY6ALClZp7QcF+CmTofq8QkUHUtEhztc/yVmzPX0W6jX4EOjVB4A04NG+o1ZUJnOm5Br8WV6vue9bL8zld/brxCAh4oTy3VGPKNlq2mpdzI9+3zqJbOXzh2YzK0y8wjIhcB6yufHs8dU/759umINZnDlrmVIVIkNXzzECWsCQQYF1fNfLBvgpVR8qcwTf/kbzsw5Y6vEhgx7/HihoowFxDZzEogrKex/kWw6/xvJNlQoZHkmZQf2m6T2H5Kt6/9GsuGWg/QGxkSGSF4CbPhWZsty9mxY1hH+kmxs/02yofsiHlMOct9TUXPgnvwNpoMI8+6Fqv4hT0H1AtTTdoSRm4ypSGO2GeGUihQjGQdZAbyaBHgqE2lk1TjhqUbkl1PSKEk42rONLHENoSyqciiVkUdulimomfjqR0Le3vwad+IP3JMeHWdRVbKSx24c/iea7mxu4CZNPsA0JQoA5m1FRES2YPxPMJ3gGAZvkZdP9LtkSgN0htysU0avRlbpoWQfHo4U4bs8INcR9w1zzy0zR16zZCVydWf5E3ekgsys2GqtkJRQBk9FbwNeGUw1hAiAvXfcz6hoFnHw2nU15LgOr5QY72znwqG7XLZvb+cCXPNnIJDgiG+So8XhUi2MUypZCY42Z03gfeXe3orKG2u89fTx6ITb3Bpl7S1FnfK4JuxECpUR14grboG9oLqJC8LKJQ/FnLQ97B+wXQdq9aruJ972KOK7NWTIMx7rihm2cXBwcLnD+aiKUA9+dP43nq6tY2qEvtuc309MqXiwguoysBzYhEi4DpayWz3EnWouvWcAc+GpXa5VM3rDzv3leqf/gn0QqLRXqtFJLKfg4q9WdKgK5D8sm+u9XjibZ5RmCi/wW4xESEgJqwYtPamKHlBPeN7Zm1+myuVmp/eX89PlBkdfpfZUQEHxKiMbCPW2pBto5qbr+Wxg8hxt8LFTfyvBlquu5/E/MNvW/x+YrZ8zVrgL7uVjSc/7AozlzZvPZ7jzW0wjgb/+X62ol1SO+1OawwY7cM9W5/2HQOrzC4WrUvEG08vZFViA/E1lwE7x5eeV/udtmj60/9uG/3OS/sd88ec5CcHLsnm2g0QnhTEWvp13SJUIx+bX0pXPEQ+sg88OCsHbsvkjTGylDYGHVTDEWjaHncBbBqkAxnBETIdmv1QpPxBji9LoZCqBnXrZmkwdQLZ+kBXWwsoL48cttW4l8ws/WPKn6GzQIWq+oSC1Yy5WT2zMFHZSIg/kXQc/YOa6g/RnFBlQYqDi2F0i5UH3SFg8uC5niG0/cFsg63em8kzOoBYbtPh2FOI7E31mIZCQtwvgRNOmS+Df8EoMxxNqQGIEIEqPG2AJ5C9r/Yj+89S5F9vxHTIFgPQC3fvnOTWgmP5nIikCWWQnUAy3fsZP//KAMEeP7T54QchS4KAuUyi44G65Xzn5tkPBTF71AV5xTzvLPzUxAD+HZwzd11S5+BTborbAFDj2hnquxcsDfp0l/qaMIEIr5loGy3Ct2Cuh6w004YixOO8rskeLV0byNHGIF+xdOfUhBWzP6DrIT8EItmE2Idg1Qw9/h5tF0fMFCElm4BBtWqJNiw2txbMnhgG+/9pYtmGfYoOhXLadsYv3wVR5dN1gmSjTMedwDuLgI/PMc7RBVyS0m1SQKop8DDOppzZf5AMzBAkgikO2cuNP3Bf7xsi4Fr987UM6bCyfaCzWprDiGjMpkfiOyKOgHE8qOHtvYJ2fh8BNVa7zI0w2V1OQgwc5pFAD/hfo7GpKfAh9jH62MRdIjWXq/nA8EyNiQb4tDvGMp9zapXD5XUIBKm9qL2WJZpVmCghWQQQqANJmLWw6L14YO6yUmUAoP6BibOBVdC3790JVSMi22MFoF3OMbFJAIsKEn6QJPI7Wo4jzsTI+l/VKWDJB48gL4nGMTEl/NhzVgciENKRJMa+gACJhorFtWlMvvbGBw/4Q7J81Bifv5kAs2c171ztXtlHjTfEFAaKQrPVh+bZnhA7koR256u3IQQcUKljbBWURflqNxClEP42QVdOfG2Yke1W4Fm9RldpduYJu7y3cFaUJqpjD194wp6Lzpt3mkIlHookC4+cflUJ/Mo4jr+akFbBl0dRrh8yIvfDCCEZpX1GpDMemjDsq2mie+AhBS+kY97OjsoQlbx84Nhr3Z26b2jgAAn6Q4y03Qg8X9t79hsrzsihZyWNamAt7CVM3ajUbsuXhHO6MD8KcI8lbC5My/O46WEYZb+NG6JXsNfByKVKbNxZma0H5TQgvk99mMayA39ggoAhKdc33kegXQ1IfeOGq2x1y4qEk0Bp/Ex3RUs0ZSRvwsRMHK10e5QW9O0g2OKLgdV3c8oXbhLQF5q7DigQvX+m63b5buy26okDshxuHktBAmPhmt//fGMhp+7cEyJemT7fvf7G1MP52Q9wmEdnadbmoYNfBt6crDizbr7WvFxiC9euhdv6iNxGC49cNawFPmC+ns1KGJsjjE5ivagber4jizxsBPXB+2NsBDP13GID+29FS9ksKhWtCnN8x++fTpXfz5p3Cle4uggDPJ2QPBySAoet5Vx/4GXt1s+umkMH3ZAoE0PHxuDaV8C46ZkHKBwF4P+ToflGv7v58zfkcPPI7qzMVbO73uAsXeN/Rh0jU/8ra+gpuh/ccC8j2fpz8J1TzDAhgt9G2UH4hTCI4rixla7e+3AhfIruXkIoJ9Gve4aABMiLTCpokF2jJYIwjcgHmQsYCfP+8NlOo3lHwN8C+uanzl9M6VFcn+p/jd7cJbYM//dsJ6RhMlyCFpEG1XzUHDadPDW5LnquGaLbp2sPXRnI2Fk5dHkHFLvqGoj1vw9IBXiqQPd6xhZ19PxJkhd9WgR20B22iOmYUCt00cgk8HiqhjfwERGp49lVkaTAM1oFFlwCnb6fjL7sWgeViq1LFwjglNf1u1mKmPax8pi34hlxGEupunHCQQzOWELj0D7nm9W9yzas0UxdjMAM/6PZMGHpulLBDvIFuukVDs8w1haRCK6rcNwVHnG85Zu/DOt8J3mXS+rdTBbpCGz8tRjXSWMLmjRaXGsTIn0J4txs+UBW1HF+OYGVkhVjUFgzxgwfisbYE01YpVZlfi9bBd1moNkXbyVe/jA92oMMktqp9/UxSUIpWumNPIVN1qxY+FKzWqgWRdHTuJEOt5HsRpAxtV2Zetb3TYs4RjTY8KbjrlhXTcK11uGrGeojn3p6d79UPXrMmedRE+3eQ80sA10cCwJU6AtlqXAlZ/7GOPpnvkDZfyS5INEQqalqevlX9FrtpGEWizJtaEUshWMkkSNna7HV0fRUEHILSfSMuf3LA/yd9Ts/4GU+mjn9p1RtQg8KBjjwGlXU72yydnMnLc6RIxjDM37kY9S90TUgnb7HxA+Itucj7R3VeWX1dzN1zZ0XkgYWLIjieKBwokZXXhTzPw3rPxwNpMXr2appfe52D63iXZLwNn2y59Zp4r9P8P+RaJDt8sxJ4vdfEtcTyeebHvnyyCG+xk+bGuaQIZfC2xmZDJpfDKRfi/RBsVIedie+l67UfO+dfck2i07OtybeE16PZ5wBNw7L159sqtb2OQPiZrIN0+IFGlV6BjkTdcj5f9ZwzSBaYFJ7rjyh6PreUlTBKkZ+M5bSjtDe518NoFBlPK1wEv8ufkSfoJpY0U0I9jBazFXUdfnq2yyK0zMZbddM9Vr4USzj2nfEPcX6bVFLiTkMgO9G4FXIlQcBpAQWmS4oYZZQ3y3aFWI5c3umxUU9FeDg/KqhvyGrvf6xHpJfsQ99eV/q2ro43tDBQkJLNEYzLeNemDGsJPOjcUCkKPQ9rsSJp3Kj37mMIsVHk+3byAz3n28Pz6hFfqrPg9XsbqW2CnXodkQCp4TmOTwRwpnfMRlp87H7WEL81FZHjrN3PUebuuZcPnQZbaisJh9hqm5QVH+QF6o1rpl/2eKL/kGtKsPm/vplbtAfkTdwskAL3K20UNVjSEU9zE+Jx5AzAX2DImFVmBqnsiAoV874ZoMpVUPwDrhFi66o2Kif/G1x7Kpet3ufFey15FHE1UcM2Ku+c7Cf0LnrhzvkJy3eFYuhapYo3hDZYvjGsqUp/Emxp9hdcc+Gp55C7m1PdWp6/U4Wx2ZmG2fntglw6q11sXc1bYfQ4GJxnjzy1jGgNtbA5B78wzEYw1Nnxu5cKYbZN/5faHEzS7ZIa+v2EuVtamrMGfFIoiyuXulsZVUwJjr0qZweoOcuG+UWmxCZQE4EQ7gJatYetmVNtfMBMIkPWEouAa7C3oQjvbhTnE+/TfHyZsb7czTb/k+lOBQWH5oCV+VhotRwQ8BLxv8k1nipzDgjTZRMRHXYvBquagVa1G9SHDFpmOYlhaS0xJcUm2+w245xLhJfff8m1x0JXl6rdUg2Wf8g1KBejZlH2VJ4hjK7SEhxP4p/V2fJCaTLcMIR9QkA53vDJDWKAqEYAx9D1WDtE+E2GBs8/6FqsThs0FWQ6rJnI5tc3qOPjRpRKUuOeQJJDJU/bm4txjYg5Lop8LkI0OoX0jF6dEQQ0HKO2PGE6st7G44C7YUL0RseJU5F+G8hww0mhiChwKqxO3iOmgSYL5+89t+0opX7p78uQxYwTm16QIZRo9JcS/yu7xtI0dWotZXQYX17XXpE6Ds+uuxUXrl7d9Xrqru//8YCR/fJc3cnKUKOyEqnaxEY1iI9iVTZSWfY7PaiPeN6R9j3x8R/XaHgc+MbX1dd7J4/7pU8c4Pq0vNqv+eoNY/q6acWm6+lEwf/V3R9cK049TzQbdOP/VO4cTO1/c2vr6moDU61PXWWnTVmOiW6Skpim5CbAe6ARRMGYpDURrDBmCXwwqbRmIF8ApWFoqAg2ZBr2+hH4iINomzEgKuy6gN+MCWFAMcm/I3hqN9y+yq7an2pKqJ8QJIQIC8Or5hO0tj5TVXQfSu8ufZ+yrAwKU9S0LP+fJ59puzsZNOpV79gjW2DXyAESUvzA27QBbtIeboAOqhMCev2u90mR+KUq3beLsrbn+zmFr7e7KQF/vdklQCZZK7wBnOC7AMQ6xPWl91Xn08xEBod+RVnzn3Y5pdnhOUbmNRhD3+dGAgcHR6HjJYmHJ2dzRqDJ8aE+aXFJ5ESu1dFunkLY1qbiiCHSxNl56AlyrYMjBveYJ8vP3/674dZu6dAqypbfTuhQtudhelbzlt9b+59fqwsFoKi61eX38brEwc4++fGhnSGwitPCgWWpIrJc5coyWCN+/WlQU3ualIXH39SkRgH3fHJZJfdnozlqWbVp9xuW9mwew17v53tt/meber5XzexdYNtYUkkQ8om4Ml64AWS2Pm60BKEIM2XhYvrWpyRRm9MoK15nkokUl2Znl29Q9phG+zsGcWXfD/let5EqmtLQAX5YPXukQ+FpZx6bJqfrkHGgfHQ2mBz34g+OHvYkZ4bHixU08WtzlllYMfLjExcn86hm5B7JQxZB2/MiKUyURjnfGZsSRoF4gQ3wepCGRzqCq6rl3jsCfVGP8ReHJsIZD0LYGwTth12iXIyBOZkkOViwOvLa+zJDeyRjduxEmmoiS7VZGQ9jnHpdt/c7XqIpJiZxVjK04wQJ0tva4SprM4j6V1QpyetA0IB8ZwI6g2V/QOPbLQZaGHvAocda2aBnoZuhkYUWkOhI2AF+c74jud8TenO2ZTwcHtudG0pizkZLEUslFzDgJrKkY3UI2ge590hMYm4LqXEiXqKnf9/7s5pkHdgUZ8rlubwLwoNn0omZRk/hd+D4HowrUkCkA7J438Q2JSfcTnI+iyCosmFB0v67L14gLt2nFqK1SxHSBt6GpaVoWDnKOTwNsGUYqFJAlqBuUXqgqkN4qyJ6VTwmAE+vSnQYS/Y5jyIWXqTJUy4y9jDkxSeCc1oKE4jEsiAxRL12XJFU4deLBlp08sR6gTI0SWYQhu0hJerJtQjZPH4QaWlGDjyBaE24sYOWfdVlQ17ow/dTw+OJCi2RnyQfoNw2xJXI/LDXeaNeRF4SsJ3EqraS4mW/KLSuIo/8LC+s7xIeAEqzRoDqyo115z2DMCKNTjbYQ2zxRW9nnL7pfE0CuW8TfAcfMOEmfWGyOegVCGidiCJqGej5dauMua5UZdP184faGQwt6ChxU4bWx1YnismKZpSIagO/NL1mYHdC8zLc62F5gChgaqidupnr1MuD4EbYS34hzyh/U62M+lZKXgp4DqKJbTzNgzGkGpYU+cbMMpJ4ndevreGVIlepNYzsB7zB1jvphEabZHt8ACVW2pE4o/ptYFiJhkgSPjwu3PEYFxzQTLNgYSJFPlvggtFfoifqoiJOPJ5LlXL6MnCV5CB9S10jk5ectk0mVtZhUKWStK0KDWg+Mt6YNByufHnIfyneYXXBGYU6u5RO6sM9icjEpv7+6wEF+4xbpYH+BxotUXUIxkG6C1G+qDoRKVZAHIC3c1tLcDNbf+uqUL8wz5tImpIDjiyZaM6ASzUFJcVMLGuYkJHnSkklpdBMW9PUMxB+pG5aUBO6KD1JAOy6EmwJ+Dbp5eGIyneOu7PkV605FWUykmUp6DdLRG/0c9ApTbDvrGiQI9DXiTohUrlKQDORTgABgXFX3NsPWdlIaWgwVayEAqpC1jLSSKhAycz7CCdwMWHaXkBbmUaQCKtQURCIx1c9IcbYQz8ydiGioriKFJlZAmLvL1JEimxo3IA+UcV4KUIwEEsyLKA5G8jna8wl6fJ115T2Kqcl1cu2UV311jNqd92Dqv8ufI0a061vleuPn6jIEJmId0CLBxUEHs+c+s3L/Q4ieNBr/KhJtcUr7xjOWk5FN9uWt52yrYjWuS2yaLGKVYj9qdBqjWVAnorD9n088tdDYOdI7jcNjuBMwnlVMBp0zRrgYWqQXmDJeNUcz1skACYg3YRFtFc30UR4pmJcUbX+CBbAQmO2EcBPmQF9PrB4R5j6Pr7ORsY/rBuYkGz2aym+Etc0IJEaExU0PC/NEpz1ywE36IzQmUlIPBBQArbs6M7mPA6wTOCtwTCrtY+U3M29FEveT5UszewcJa2Bpu2TOYDyjm+nbwEGfGvka9+2M42RYitUgc8D0WXktqCCD4pglibqLUMNAg6CiUyUzZ3q2Z+FdYKP/tnuHt8nRJ4sK/YjWjrAUlRIlgMegBLboDRaR5paIhqBXA6wBJc21US7
*/