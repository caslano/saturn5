// Boost.Geometry (aka GGL, Generic Geometry Library)

// Copyright (c) 2007-2012 Barend Gehrels, Amsterdam, the Netherlands.
// Copyright (c) 2008-2012 Bruno Lalande, Paris, France.
// Copyright (c) 2009-2012 Mateusz Loskot, London, UK.

// This file was modified by Oracle on 2020-2021.
// Modifications copyright (c) 2020-2021 Oracle and/or its affiliates.
// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Parts of Boost.Geometry are redesigned from Geodan's Geographic Library
// (geolib/GGL), copyright (c) 1995-2010 Geodan, Amsterdam, the Netherlands.

// Use, modification and distribution is subject to the Boost Software License,
// Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)


#ifndef BOOST_GEOMETRY_GEOMETRIES_CONCEPTS_MULTI_POLYGON_CONCEPT_HPP
#define BOOST_GEOMETRY_GEOMETRIES_CONCEPTS_MULTI_POLYGON_CONCEPT_HPP


#include <boost/concept_check.hpp>
#include <boost/range/concepts.hpp>
#include <boost/range/value_type.hpp>

#include <boost/geometry/geometries/concepts/concept_type.hpp>
#include <boost/geometry/geometries/concepts/polygon_concept.hpp>


namespace boost { namespace geometry { namespace concepts
{


/*!
\brief multi-polygon concept
\ingroup concepts
\par Formal definition:
The multi polygon concept is defined as following:
- there must be a specialization of traits::tag defining multi_polygon_tag
  as type
- it must behave like a Boost.Range
- its range value must fulfil the Polygon concept

*/
template <typename Geometry>
class MultiPolygon
{
#ifndef DOXYGEN_NO_CONCEPT_MEMBERS
    typedef typename boost::range_value<Geometry>::type polygon_type;

    BOOST_CONCEPT_ASSERT( (concepts::Polygon<polygon_type>) );
    BOOST_CONCEPT_ASSERT( (boost::RandomAccessRangeConcept<Geometry>) );


public :

    BOOST_CONCEPT_USAGE(MultiPolygon)
    {
        Geometry* mp = 0;
        traits::clear<Geometry>::apply(*mp);
        traits::resize<Geometry>::apply(*mp, 0);
        polygon_type* poly = 0;
        traits::push_back<Geometry>::apply(*mp, *poly);
    }
#endif
};


/*!
\brief concept for multi-polygon (const version)
\ingroup const_concepts
*/
template <typename Geometry>
class ConstMultiPolygon
{
#ifndef DOXYGEN_NO_CONCEPT_MEMBERS
    typedef typename boost::range_value<Geometry>::type polygon_type;

    BOOST_CONCEPT_ASSERT( (concepts::ConstPolygon<polygon_type>) );
    BOOST_CONCEPT_ASSERT( (boost::RandomAccessRangeConcept<Geometry>) );


public :

    BOOST_CONCEPT_USAGE(ConstMultiPolygon)
    {
    }
#endif
};


template <typename Geometry>
struct concept_type<Geometry, multi_polygon_tag>
{
    using type = MultiPolygon<Geometry>;
};

template <typename Geometry>
struct concept_type<Geometry const, multi_polygon_tag>
{
    using type = ConstMultiPolygon<Geometry>;
};


}}} // namespace boost::geometry::concepts


#endif // BOOST_GEOMETRY_GEOMETRIES_CONCEPTS_MULTI_POLYGON_CONCEPT_HPP

/* multi_polygon_concept.hpp
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
*/