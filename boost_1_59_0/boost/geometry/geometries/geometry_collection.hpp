// Boost.Geometry

// Copyright (c) 2021, Oracle and/or its affiliates.

// Contributed and/or modified by Adam Wulkiewicz, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#ifndef BOOST_GEOMETRY_GEOMETRIES_GEOMETRY_COLLECTION_HPP
#define BOOST_GEOMETRY_GEOMETRIES_GEOMETRY_COLLECTION_HPP

#include <vector>

#include <boost/geometry/core/tag.hpp>
#include <boost/geometry/core/tags.hpp>

namespace boost { namespace geometry
{

namespace model
{

/*!
\brief Basic geometry_collection class representing a container of DynamicGeometries.
\ingroup geometries
\tparam DynamicGeometry Type adapted to DynamicGeometry Concept.
\tparam Container \tparam_container
\tparam Allocator \tparam_allocator
*/
template
<
    typename DynamicGeometry,
    template <typename, typename> class Container = std::vector,
    template <typename> class Allocator = std::allocator
>
class geometry_collection
    : public Container<DynamicGeometry, Allocator<DynamicGeometry>>
{
    typedef Container<DynamicGeometry, Allocator<DynamicGeometry>> base_type;

public:
    geometry_collection() = default;

    geometry_collection(std::initializer_list<DynamicGeometry> l)
        : base_type(l.begin(), l.end())
    {}
};

} // namespace model


#ifndef DOXYGEN_NO_TRAITS_SPECIALIZATIONS
namespace traits
{

template
<
    typename DynamicGeometry,
    template <typename, typename> class Container,
    template <typename> class Allocator
>
struct tag<model::geometry_collection<DynamicGeometry, Container, Allocator>>
{
    using type = geometry_collection_tag;
};

} // namespace traits
#endif // DOXYGEN_NO_TRAITS_SPECIALIZATIONS


}} // namespace boost::geometry

#endif // BOOST_GEOMETRY_GEOMETRIES_GEOMETRY_COLLECTION_HPP

/* geometry_collection.hpp
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
*/