//
// Copyright (c) 2016-2019 Vinnie Falco (vinnie dot falco at gmail dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//

#ifndef BOOST_BEAST_DETAIL_BUFFERS_REF_HPP
#define BOOST_BEAST_DETAIL_BUFFERS_REF_HPP

#include <boost/beast/core/buffer_traits.hpp>
#include <iterator>
#include <memory>

namespace boost {
namespace beast {
namespace detail {

// A very lightweight reference to a buffer sequence
template<class BufferSequence>
class buffers_ref
{
    BufferSequence const* buffers_;

public:
    using const_iterator =
        buffers_iterator_type<BufferSequence>;

    using value_type = typename
        std::iterator_traits<const_iterator>::value_type;

    buffers_ref(buffers_ref const&) = default;
    buffers_ref& operator=(buffers_ref const&) = default;

    explicit
    buffers_ref(BufferSequence const& buffers)
        : buffers_(std::addressof(buffers))
    {
    }

    const_iterator
    begin() const
    {
        return net::buffer_sequence_begin(*buffers_);
    }

    const_iterator
    end() const
    {
        return net::buffer_sequence_end(*buffers_);
    }
};

// Return a reference to a buffer sequence
template<class BufferSequence>
buffers_ref<BufferSequence>
make_buffers_ref(BufferSequence const& buffers)
{
    static_assert(
        is_const_buffer_sequence<BufferSequence>::value,
        "BufferSequence type requirements not met");
    return buffers_ref<BufferSequence>(buffers);
}

} // detail
} // beast
} // boost

#endif

/* buffers_ref.hpp
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
*/