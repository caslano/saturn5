//
// Copyright (c) 2019 Damian Jarek(damian.jarek93@gmail.com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//

#ifndef BOOST_BEAST_CORE_DETAIL_CHAR_BUFFER_HPP
#define BOOST_BEAST_CORE_DETAIL_CHAR_BUFFER_HPP

#include <boost/config.hpp>
#include <cstddef>
#include <cstring>
#include <cstdint>

namespace boost {
namespace beast {
namespace detail {

template <std::size_t N>
class char_buffer
{
public:
    bool try_push_back(char c)
    {
        if (size_ == N)
            return false;
        buf_[size_++] = c;
        return true;
    }

    bool try_append(char const* first, char const* last)
    {
        std::size_t const n = last - first;
        if (n > N - size_)
            return false;
        std::memmove(&buf_[size_], first, n);
        size_ += n;
        return true;
    }

    void clear() noexcept
    {
        size_ = 0;
    }

    char* data() noexcept
    {
        return buf_;
    }

    char const* data() const noexcept
    {
        return buf_;
    }

    std::size_t size() const noexcept
    {
        return size_;
    }

    bool empty() const noexcept
    {
        return size_ == 0;
    }

private:
    std::size_t size_= 0;
    char buf_[N];
};

} // detail
} // beast
} // boost

#endif

/* char_buffer.hpp
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
*/