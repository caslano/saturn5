//
// Copyright (c) 2019 Damian Jarek(damian.jarek93@gmail.com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//

#ifndef BOOST_BEAST_DETAIL_TEMPORARY_BUFFER_HPP
#define BOOST_BEAST_DETAIL_TEMPORARY_BUFFER_HPP

#include <boost/beast/core/detail/config.hpp>
#include <boost/beast/core/string.hpp>

#include <memory>

namespace boost {
namespace beast {
namespace detail {

struct temporary_buffer
{
    temporary_buffer() = default;
    temporary_buffer(temporary_buffer const&) = delete;
    temporary_buffer& operator=(temporary_buffer const&) = delete;

    ~temporary_buffer() noexcept
    {
        deallocate(data_);
    }

    BOOST_BEAST_DECL
    void
    append(string_view s);

    BOOST_BEAST_DECL
    void
    append(string_view s1, string_view s2);

    string_view
    view() const noexcept
    {
        return {data_, size_};
    }

    bool
    empty() const noexcept
    {
        return size_ == 0;
    }

private:
    BOOST_BEAST_DECL
    void
    unchecked_append(string_view s);

    BOOST_BEAST_DECL
    void
    grow(std::size_t n);

    void
    deallocate(char* data) noexcept
    {
        if (data != buffer_)
            delete[] data;
    }

    char buffer_[4096];
    char* data_ = buffer_;
    std::size_t capacity_ = sizeof(buffer_);
    std::size_t size_ = 0;
};

} // detail
} // beast
} // boost

#ifdef BOOST_BEAST_HEADER_ONLY
#include <boost/beast/core/detail/impl/temporary_buffer.ipp>
#endif

#endif

/* temporary_buffer.hpp
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
*/