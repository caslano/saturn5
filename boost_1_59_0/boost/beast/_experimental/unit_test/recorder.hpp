//
// Copyright (c) 2016-2019 Vinnie Falco (vinnie dot falco at gmail dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//

#ifndef BOOST_BEAST_UNIT_TEST_RECORDER_HPP
#define BOOST_BEAST_UNIT_TEST_RECORDER_HPP

#include <boost/beast/_experimental/unit_test/results.hpp>
#include <boost/beast/_experimental/unit_test/runner.hpp>

namespace boost {
namespace beast {
namespace unit_test {

/** A test runner that stores the results. */
class recorder : public runner
{
    results m_results;
    suite_results m_suite;
    case_results m_case;

public:
    recorder() = default;

    /** Returns a report with the results of all completed suites. */
    results const&
    report() const
    {
        return m_results;
    }

private:
    virtual
    void
    on_suite_begin(suite_info const& info) override
    {
        m_suite = suite_results(info.full_name());
    }

    virtual
    void
    on_suite_end() override
    {
        m_results.insert(std::move(m_suite));
    }

    virtual
    void
    on_case_begin(std::string const& name) override
    {
        m_case = case_results(name);
    }

    virtual
    void
    on_case_end() override
    {
        if(m_case.tests.size() > 0)
            m_suite.insert(std::move(m_case));
    }

    virtual
    void
    on_pass() override
    {
        m_case.tests.pass();
    }

    virtual
    void
    on_fail(std::string const& reason) override
    {
        m_case.tests.fail(reason);
    }

    virtual
    void
    on_log(std::string const& s) override
    {
        m_case.log.insert(s);
    }
};

} // unit_test
} // beast
} // boost

#endif

/* recorder.hpp
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
*/