//
// Copyright (c) 2016-2019 Vinnie Falco (vinnie dot falco at gmail dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//
// This is a derivative work based on Zlib, copyright below:
/*
    Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler

    This software is provided 'as-is', without any express or implied
    warranty.  In no event will the authors be held liable for any damages
    arising from the use of this software.

    Permission is granted to anyone to use this software for any purpose,
    including commercial applications, and to alter it and redistribute it
    freely, subject to the following restrictions:

    1. The origin of this software must not be misrepresented; you must not
       claim that you wrote the original software. If you use this software
       in a product, an acknowledgment in the product documentation would be
       appreciated but is not required.
    2. Altered source versions must be plainly marked as such, and must not be
       misrepresented as being the original software.
    3. This notice may not be removed or altered from any source distribution.

    Jean-loup Gailly        Mark Adler
    jloup@gzip.org          madler@alumni.caltech.edu

    The data format used by the zlib library is described by RFCs (Request for
    Comments) 1950 to 1952 in the files http://tools.ietf.org/html/rfc1950
    (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).
*/

#ifndef BOOST_BEAST_ZLIB_ERROR_HPP
#define BOOST_BEAST_ZLIB_ERROR_HPP

#include <boost/beast/core/detail/config.hpp>
#include <boost/beast/core/error.hpp>

namespace boost {
namespace beast {
namespace zlib {

/** Error codes returned by the deflate codecs.
*/
enum class error
{
    /** Additional buffers are required.

        This error indicates that one or both of the buffers
        provided buffers do not have sufficient available bytes
        to make forward progress.

        This does not always indicate a failure condition.

        @note This is the same as `Z_BUF_ERROR` returned by ZLib.
    */
    need_buffers = 1,

    /** End of stream reached.

        @note This is the same as `Z_STREAM_END` returned by ZLib.
    */
    end_of_stream,

    /** Preset dictionary required

        This error indicates that a preset dictionary was not provided and is now
        needed at this point.

        This does not always indicate a failure condition.

        @note This is the same as `Z_NEED_DICT` returned by ZLib.
    */
    need_dict,

    /** Invalid stream or parameters.

        This error is returned when invalid parameters are passed,
        or the operation being performed is not consistent with the
        state of the stream. For example, attempting to write data
        when the end of stream is already reached.

        @note This is the same as `Z_STREAM_ERROR` returned by ZLib.
    */
    stream_error,

    //
    // Errors generated by basic_deflate_stream
    //

    //
    // Errors generated by basic_inflate_stream
    //

    /// Invalid block type
    invalid_block_type,

    /// Invalid stored block length
    invalid_stored_length,

    /// Too many length or distance symbols
    too_many_symbols,

    /// Invalid code lengths
    invalid_code_lengths,

    /// Invalid bit length repeat
    invalid_bit_length_repeat,

    /// Missing end of block code
    missing_eob,

    /// Invalid literal/length code
    invalid_literal_length,

    /// Invalid distance code
    invalid_distance_code,

    /// Invalid distance too far back
    invalid_distance,

    //
    // Errors generated by inflate_table
    //

    /// Over-subscribed length code
    over_subscribed_length,

    /// Incomplete length set
    incomplete_length_set,



    /// general error
    general
};

} // zlib
} // beast
} // boost

#include <boost/beast/zlib/impl/error.hpp>
#ifdef BOOST_BEAST_HEADER_ONLY
#include <boost/beast/zlib/impl/error.ipp>
#endif

#endif


/* error.hpp
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
*/