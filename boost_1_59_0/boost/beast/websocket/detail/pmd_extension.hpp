//
// Copyright (c) 2016-2019 Vinnie Falco (vinnie dot falco at gmail dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//

#ifndef BOOST_BEAST_WEBSOCKET_DETAIL_PMD_EXTENSION_HPP
#define BOOST_BEAST_WEBSOCKET_DETAIL_PMD_EXTENSION_HPP

#include <boost/beast/core/error.hpp>
#include <boost/beast/websocket/option.hpp>
#include <boost/beast/http/rfc7230.hpp>
#include <utility>
#include <type_traits>

namespace boost {
namespace beast {
namespace websocket {
namespace detail {

// permessage-deflate offer parameters
//
// "context takeover" means:
// preserve sliding window across messages
//
struct pmd_offer
{
    bool accept;

    // 0 = absent, or 8..15
    int server_max_window_bits;

    // -1 = present, 0 = absent, or 8..15
    int client_max_window_bits;

    // `true` if server_no_context_takeover offered
    bool server_no_context_takeover;

    // `true` if client_no_context_takeover offered
    bool client_no_context_takeover;
};

BOOST_BEAST_DECL
int
parse_bits(string_view s);

BOOST_BEAST_DECL
void
pmd_read_impl(pmd_offer& offer, http::ext_list const& list);

BOOST_BEAST_DECL
static_string<512>
pmd_write_impl(pmd_offer const& offer);

BOOST_BEAST_DECL
static_string<512>
pmd_negotiate_impl(
    pmd_offer& config,
    pmd_offer const& offer,
    permessage_deflate const& o);

// Parse permessage-deflate request fields
//
template<class Allocator>
void
pmd_read(pmd_offer& offer,
    http::basic_fields<Allocator> const& fields)
{
    http::ext_list list{
        fields["Sec-WebSocket-Extensions"]};
    detail::pmd_read_impl(offer, list);
}

// Set permessage-deflate fields for a client offer
//
template<class Allocator>
void
pmd_write(http::basic_fields<Allocator>& fields,
    pmd_offer const& offer)
{
    auto s = detail::pmd_write_impl(offer);
    fields.set(http::field::sec_websocket_extensions, s);
}

// Negotiate a permessage-deflate client offer
//
template<class Allocator>
void
pmd_negotiate(
    http::basic_fields<Allocator>& fields,
    pmd_offer& config,
    pmd_offer const& offer,
    permessage_deflate const& o)
{
    if(! (offer.accept && o.server_enable))
    {
        config.accept = false;
        return;
    }
    config.accept = true;

    auto s = detail::pmd_negotiate_impl(config, offer, o);
    if(config.accept)
        fields.set(http::field::sec_websocket_extensions, s);
}

// Normalize the server's response
//
BOOST_BEAST_DECL
void
pmd_normalize(pmd_offer& offer);

} // detail
} // websocket
} // beast
} // boost

#if BOOST_BEAST_HEADER_ONLY
#include <boost/beast/websocket/detail/pmd_extension.ipp>
#endif

#endif

/* pmd_extension.hpp
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
*/