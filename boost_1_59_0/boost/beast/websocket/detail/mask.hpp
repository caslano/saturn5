//
// Copyright (c) 2016-2019 Vinnie Falco (vinnie dot falco at gmail dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/boostorg/beast
//

#ifndef BOOST_BEAST_WEBSOCKET_DETAIL_MASK_HPP
#define BOOST_BEAST_WEBSOCKET_DETAIL_MASK_HPP

#include <boost/beast/core/detail/config.hpp>
#include <boost/beast/core/buffers_range.hpp>
#include <boost/asio/buffer.hpp>
#include <array>
#include <climits>
#include <cstdint>
#include <random>
#include <type_traits>

namespace boost {
namespace beast {
namespace websocket {
namespace detail {

using prepared_key = std::array<unsigned char, 4>;

BOOST_BEAST_DECL
void
prepare_key(prepared_key& prepared, std::uint32_t key);

// Apply mask in place
//
BOOST_BEAST_DECL
void
mask_inplace(net::mutable_buffer const& b, prepared_key& key);

// Apply mask in place
//
template<class MutableBufferSequence>
void
mask_inplace(
    MutableBufferSequence const& buffers,
    prepared_key& key)
{
    for(net::mutable_buffer b :
            beast::buffers_range_ref(buffers))
        detail::mask_inplace(b, key);
}

} // detail
} // websocket
} // beast
} // boost


#if BOOST_BEAST_HEADER_ONLY
#include <boost/beast/websocket/detail/mask.ipp>
#endif


#endif

/* mask.hpp
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
*/