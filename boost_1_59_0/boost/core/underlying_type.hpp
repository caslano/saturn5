//  underlying_type.hpp  ---------------------------------------------------------//

//  Copyright Beman Dawes, 2009
//  Copyright (C) 2011-2012 Vicente J. Botet Escriba
//  Copyright (C) 2012 Anthony Williams
//  Copyright (C) 2014 Andrey Semashev

//  Distributed under the Boost Software License, Version 1.0.
//  See http://www.boost.org/LICENSE_1_0.txt

#ifndef BOOST_CORE_UNDERLYING_TYPE_HPP
#define BOOST_CORE_UNDERLYING_TYPE_HPP

#include <boost/config.hpp>

// GCC 4.7 and later seem to provide std::underlying_type
#if !defined(BOOST_NO_CXX11_HDR_TYPE_TRAITS) || (defined(BOOST_GCC) && BOOST_GCC >= 40700 && defined(__GXX_EXPERIMENTAL_CXX0X__))
#include <type_traits>
#define BOOST_DETAIL_HAS_STD_UNDERLYING_TYPE
#endif

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

namespace detail {

template< typename EnumType, typename Void = void >
struct underlying_type_impl;

#if defined(BOOST_NO_CXX11_SCOPED_ENUMS)

// Support for boost/core/scoped_enum.hpp
template< typename EnumType >
struct underlying_type_impl< EnumType, typename EnumType::is_boost_scoped_enum_tag >
{
    /**
     * The member typedef type names the underlying type of EnumType. It is EnumType::underlying_type when the EnumType is an emulated scoped enum,
     */
    typedef typename EnumType::underlying_type type;
};

#endif

#if defined(BOOST_DETAIL_HAS_STD_UNDERLYING_TYPE)

template< typename EnumType, typename Void >
struct underlying_type_impl
{
    typedef typename std::underlying_type< EnumType >::type type;
};

#endif

} // namespace detail

#if !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && !defined(BOOST_DETAIL_HAS_STD_UNDERLYING_TYPE)
#define BOOST_NO_UNDERLYING_TYPE
#endif

/**
 * Meta-function to get the underlying type of a scoped enum.
 *
 * Requires EnumType must be an enum type or the emulation of a scoped enum.
 * If BOOST_NO_UNDERLYING_TYPE is defined, the implementation will not be able
 * to deduce the underlying type of enums. The user is expected to specialize
 * this trait in this case.
 */
template< typename EnumType >
struct underlying_type :
    public detail::underlying_type_impl< EnumType >
{
};

} // namespace boost

#endif  // BOOST_CORE_UNDERLYING_TYPE_HPP

/* underlying_type.hpp
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
*/