// Copyright 2019 Hans Dembinski
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt
// or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_HISTOGRAM_DETAIL_TRY_CAST_HPP
#define BOOST_HISTOGRAM_DETAIL_TRY_CAST_HPP

#include <boost/config.hpp> // BOOST_NORETURN
#include <boost/throw_exception.hpp>
#include <type_traits>

namespace boost {
namespace histogram {
namespace detail {

template <class T, class U>
constexpr T* ptr_cast(U*) noexcept {
  return nullptr;
}

template <class T>
constexpr T* ptr_cast(T* p) noexcept {
  return p;
}

template <class T>
constexpr const T* ptr_cast(const T* p) noexcept {
  return p;
}

template <class T, class E, class U>
BOOST_NORETURN T try_cast_impl(std::false_type, std::false_type, U&&) {
  BOOST_THROW_EXCEPTION(E("type cast error"));
}

// converting cast
template <class T, class E, class U>
T try_cast_impl(std::false_type, std::true_type, U&& u) noexcept {
  return static_cast<T>(u); // cast to avoid warnings
}

// pass-through cast
template <class T, class E>
T&& try_cast_impl(std::true_type, std::true_type, T&& t) noexcept {
  return std::forward<T>(t);
}

// cast fails at runtime with exception E instead of compile-time, T must be a value
template <class T, class E, class U>
T try_cast(U&& u) noexcept(std::is_convertible<U, T>::value) {
  return try_cast_impl<T, E>(std::is_same<U, T>{}, std::is_convertible<U, T>{},
                             std::forward<U>(u));
}

} // namespace detail
} // namespace histogram
} // namespace boost

#endif

/* try_cast.hpp
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
*/