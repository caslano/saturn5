// Copyright 2015-2018 Hans Dembinski
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt
// or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_HISTOGRAM_DETAIL_ARGS_TYPE_HPP
#define BOOST_HISTOGRAM_DETAIL_ARGS_TYPE_HPP

#include <tuple>

namespace boost {
namespace histogram {
namespace detail {

template <class T>
struct args_type_impl {
  using T::ERROR_this_should_never_be_instantiated_please_write_an_issue;
};

template <class R, class T, class... Ts>
struct args_type_impl<R (T::*)(Ts...)> {
  using type = std::tuple<Ts...>;
};

template <class R, class T, class... Ts>
struct args_type_impl<R (T ::*)(Ts...) const> {
  using type = std::tuple<Ts...>;
};

template <class R, class... Ts>
struct args_type_impl<R (*)(Ts...)> {
  using type = std::tuple<Ts...>;
};

#if __cpp_noexcept_function_type >= 201510
template <class R, class T, class... Ts>
struct args_type_impl<R (T::*)(Ts...) noexcept> {
  using type = std::tuple<Ts...>;
};

template <class R, class T, class... Ts>
struct args_type_impl<R (T ::*)(Ts...) const noexcept> {
  using type = std::tuple<Ts...>;
};

template <class R, class... Ts>
struct args_type_impl<R (*)(Ts...) noexcept> {
  using type = std::tuple<Ts...>;
};
#endif

template <class FunctionPointer>
using args_type = typename args_type_impl<FunctionPointer>::type;

template <class T, std::size_t N = 0>
using arg_type = std::tuple_element_t<N, args_type<T>>;

} // namespace detail
} // namespace histogram
} // namespace boost

#endif

/* args_type.hpp
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
*/