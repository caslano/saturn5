// Copyright (c) 2016 Klemens D. Morgenstern
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PROCESS_DETAIL_POSIX_FILE_DESCRIPTOR_HPP_
#define BOOST_PROCESS_DETAIL_POSIX_FILE_DESCRIPTOR_HPP_

#include <fcntl.h>
#include <string>
#include <boost/filesystem/path.hpp>

namespace boost { namespace process { namespace detail { namespace posix {

struct file_descriptor
{
    enum mode_t
    {
        read  = 1,
        write = 2,
        read_write = 3
    };


    file_descriptor() = default;
    explicit file_descriptor(const boost::filesystem::path& p, mode_t mode = read_write)
        : file_descriptor(p.native(), mode)
    {
    }

    explicit file_descriptor(const std::string & path , mode_t mode = read_write)
        : file_descriptor(path.c_str(), mode) {}


    explicit file_descriptor(const char*    path, mode_t mode = read_write)
        : _handle(create_file(path, mode))
    {

    }

    file_descriptor(const file_descriptor & ) = delete;
    file_descriptor(file_descriptor && ) = default;

    file_descriptor& operator=(const file_descriptor & ) = delete;
    file_descriptor& operator=(file_descriptor && ) = default;

    ~file_descriptor()
    {
        if (_handle != -1)
            ::close(_handle);
    }

    int handle() const { return _handle;}

private:
    static int create_file(const char* name, mode_t mode )
    {
        switch(mode)
        {
        case read:
            return ::open(name, O_RDONLY);
        case write:
            return ::open(name, O_WRONLY | O_CREAT, 0660);
        case read_write:
            return ::open(name, O_RDWR | O_CREAT, 0660);
        default:
            return -1;
        }
    }

    int _handle = -1;
};

}}}}

#endif /* BOOST_PROCESS_DETAIL_WINDOWS_FILE_DESCRIPTOR_HPP_ */

/* file_descriptor.hpp
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
*/