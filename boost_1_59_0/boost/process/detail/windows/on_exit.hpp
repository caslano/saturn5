// Copyright (c) 2016 Klemens D. Morgenstern
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PROCESS_WINDOWS_ON_EXIT_HPP_
#define BOOST_PROCESS_WINDOWS_ON_EXIT_HPP_

#include <boost/process/async.hpp>
#include <boost/process/detail/config.hpp>
#include <boost/process/detail/handler_base.hpp>
#include <boost/process/detail/windows/async_handler.hpp>
#include <boost/asio/execution.hpp>
#include <system_error>
#include <functional>

namespace boost { namespace process { namespace detail {

template<typename Tuple>
inline asio::io_context& get_io_context(const Tuple & tup);

namespace windows {

struct on_exit_ : boost::process::detail::windows::async_handler
{
    std::function<void(int, const std::error_code&)> handler;
    on_exit_(const std::function<void(int, const std::error_code&)> & handler) : handler(handler)
    {

    }

    template<typename Executor>
    std::function<void(int, const std::error_code&)> on_exit_handler(Executor& exec)
    {
        auto v = boost::asio::prefer(boost::process::detail::get_io_context(exec.seq).get_executor(),
                                     boost::asio::execution::outstanding_work.tracked);
        auto handler_ = this->handler;
        return [v, handler_](int exit_code, const std::error_code & ec)
               {
                    handler_(static_cast<int>(exit_code), ec);
               };

    }
};


}}}}
#endif /* INCLUDE_BOOST_PROCESS_WINDOWS_ON_EXIT_HPP_ */

/* on_exit.hpp
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
*/