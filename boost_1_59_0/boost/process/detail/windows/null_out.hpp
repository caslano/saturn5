// Copyright (c) 2006, 2007 Julio M. Merino Vidal
// Copyright (c) 2008 Ilya Sokolov, Boris Schaeling
// Copyright (c) 2009 Boris Schaeling
// Copyright (c) 2010 Felipe Tanus, Boris Schaeling
// Copyright (c) 2011, 2012 Jeff Flinn, Boris Schaeling
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PROCESS_WINDOWS_INITIALIZERS_NULL_OUT_HPP
#define BOOST_PROCESS_WINDOWS_INITIALIZERS_NULL_OUT_HPP

#include <boost/winapi/process.hpp>
#include <boost/winapi/handles.hpp>
#include <boost/winapi/handle_info.hpp>
#include <boost/process/detail/handler_base.hpp>
#include <boost/process/detail/used_handles.hpp>
#include <boost/process/detail/windows/file_descriptor.hpp>

namespace boost { namespace process { namespace detail { namespace windows {

template<int p1, int p2>
struct null_out : public ::boost::process::detail::handler_base, ::boost::process::detail::uses_handles
{
    file_descriptor sink {"NUL", file_descriptor::write}; //works because it gets destroyed AFTER launch.

    ::boost::winapi::HANDLE_ get_used_handles() const { return sink.handle(); }

    template <typename WindowsExecutor>
    void on_setup(WindowsExecutor &e) const;
};

template<>
template<typename WindowsExecutor>
void null_out<1,-1>::on_setup(WindowsExecutor &e) const
{
    boost::winapi::SetHandleInformation(sink.handle(),
              boost::winapi::HANDLE_FLAG_INHERIT_,
              boost::winapi::HANDLE_FLAG_INHERIT_);

    e.startup_info.hStdOutput = sink.handle();
    e.startup_info.dwFlags   |= ::boost::winapi::STARTF_USESTDHANDLES_;
    e.inherit_handles = true;

}

template<>
template<typename WindowsExecutor>
void null_out<2,-1>::on_setup(WindowsExecutor &e) const
{
    boost::winapi::SetHandleInformation(sink.handle(),
              boost::winapi::HANDLE_FLAG_INHERIT_,
              boost::winapi::HANDLE_FLAG_INHERIT_);

    e.startup_info.hStdError = sink.handle();
    e.startup_info.dwFlags  |= ::boost::winapi::STARTF_USESTDHANDLES_;
    e.inherit_handles = true;

}

template<>
template<typename WindowsExecutor>
void null_out<1,2>::on_setup(WindowsExecutor &e) const
{
    boost::winapi::SetHandleInformation(sink.handle(),
            boost::winapi::HANDLE_FLAG_INHERIT_,
            boost::winapi::HANDLE_FLAG_INHERIT_);

    e.startup_info.hStdOutput = sink.handle();
    e.startup_info.hStdError  = sink.handle();
    e.startup_info.dwFlags   |= ::boost::winapi::STARTF_USESTDHANDLES_;
    e.inherit_handles = true;

}

}}}}

#endif

/* null_out.hpp
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
*/