//
// Copyright 2005-2007 Adobe Systems Incorporated
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
#ifndef BOOST_GIL_RGBA_HPP
#define BOOST_GIL_RGBA_HPP

#include <boost/gil/planar_pixel_iterator.hpp>
#include <boost/gil/rgb.hpp>
#include <boost/gil/detail/mp11.hpp>

#include <cstddef>
#include <type_traits>

namespace boost { namespace gil {

/// \ingroup ColorNameModel
/// \brief Alpha
struct alpha_t {};

/// \ingroup ColorSpaceModel
using rgba_t =mp11::mp_list<red_t, green_t, blue_t, alpha_t>;

/// \ingroup LayoutModel
using rgba_layout_t = layout<rgba_t>;

/// \ingroup LayoutModel
using bgra_layout_t = layout<rgba_t, mp11::mp_list_c<int, 2, 1, 0, 3>>;

/// \ingroup LayoutModel
using argb_layout_t = layout<rgba_t, mp11::mp_list_c<int, 1, 2, 3, 0>>;

/// \ingroup LayoutModel
using abgr_layout_t = layout<rgba_t, mp11::mp_list_c<int, 3, 2, 1, 0>>;

/// \ingroup ImageViewConstructors
/// \brief from raw RGBA planar data
template <typename ChannelPtr>
inline
auto planar_rgba_view(std::size_t width, std::size_t height,
    ChannelPtr r, ChannelPtr g, ChannelPtr b, ChannelPtr a,
    std::ptrdiff_t rowsize_in_bytes)
    -> typename type_from_x_iterator<planar_pixel_iterator<ChannelPtr, rgba_t> >::view_t
{
    using pixel_iterator_t = planar_pixel_iterator<ChannelPtr, rgba_t>;
    using view_t = typename type_from_x_iterator<pixel_iterator_t>::view_t;
    using locator_t = typename view_t::locator;

    locator_t loc(pixel_iterator_t(r, g, b, a), rowsize_in_bytes);
    return view_t(width, height, loc);
}

}} // namespace boost::gil

#endif

/* rgba.hpp
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
*/