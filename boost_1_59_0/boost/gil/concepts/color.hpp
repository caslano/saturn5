//
// Copyright 2005-2007 Adobe Systems Incorporated
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
#ifndef BOOST_GIL_CONCEPTS_COLOR_HPP
#define BOOST_GIL_CONCEPTS_COLOR_HPP

#include <boost/gil/concepts/concept_check.hpp>

#include <type_traits>

#if defined(BOOST_CLANG)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wunused-local-typedefs"
#endif

#if defined(BOOST_GCC) && (BOOST_GCC >= 40900)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
#endif

namespace boost { namespace gil {

/// \ingroup ColorSpaceAndLayoutConcept
/// \brief Color space type concept
/// \code
/// concept ColorSpaceConcept<MPLRandomAccessSequence CS>
/// {
///    // Boost.MP11-compatible list, whose elements are color tags.
/// };
/// \endcode
template <typename CS>
struct ColorSpaceConcept
{
    void constraints()
    {
        // Boost.MP11-compatible list, whose elements are color tags

        // TODO: Is this incomplete?
    }
};

// Models ColorSpaceConcept
template <typename CS1, typename CS2>
struct color_spaces_are_compatible : std::is_same<CS1, CS2> {};

/// \ingroup ColorSpaceAndLayoutConcept
/// \brief Two color spaces are compatible if they are the same
/// \code
/// concept ColorSpacesCompatibleConcept<ColorSpaceConcept CS1, ColorSpaceConcept CS2>
/// {
///     where SameType<CS1, CS2>;
/// };
/// \endcode
template <typename CS1, typename CS2>
struct ColorSpacesCompatibleConcept
{
    void constraints()
    {
        static_assert(color_spaces_are_compatible<CS1, CS2>::value, "");
    }
};

/// \ingroup ColorSpaceAndLayoutConcept
/// \brief Channel mapping concept
/// \code
/// concept ChannelMappingConcept<MPLRandomAccessSequence CM>
/// {
///     // Boost.MP11-compatible list, whose elements
///     // model MPLIntegralConstant representing a permutation
/// };
/// \endcode
template <typename CM>
struct ChannelMappingConcept
{
    void constraints()
    {
        // Boost.MP11-compatible list, whose elements model
        // MPLIntegralConstant representing a permutation.

        // TODO: Is this incomplete?
    }
};

}} // namespace boost::gil

#if defined(BOOST_CLANG)
#pragma clang diagnostic pop
#endif

#if defined(BOOST_GCC) && (BOOST_GCC >= 40900)
#pragma GCC diagnostic pop
#endif

#endif

/* color.hpp
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
*/