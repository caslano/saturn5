
// Copyright 2005-2009 Daniel James.
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// On some platforms std::limits gives incorrect values for long double.
// This tries to work around them.

#if !defined(BOOST_FUNCTIONAL_HASH_DETAIL_LIMITS_HEADER)
#define BOOST_FUNCTIONAL_HASH_DETAIL_LIMITS_HEADER

#include <boost/config.hpp>
#if defined(BOOST_HAS_PRAGMA_ONCE)
#pragma once
#endif

#include <boost/limits.hpp>

// On OpenBSD, numeric_limits is not reliable for long doubles, but
// the macros defined in <float.h> are and support long double when STLport
// doesn't.

#if defined(__OpenBSD__) || defined(_STLP_NO_LONG_DOUBLE)
#include <float.h>
#endif

namespace boost
{
    namespace hash_detail
    {
        template <class T>
        struct limits : std::numeric_limits<T> {};

#if defined(__OpenBSD__) || defined(_STLP_NO_LONG_DOUBLE)
        template <>
        struct limits<long double>
             : std::numeric_limits<long double>
        {
            static long double epsilon() {
                return LDBL_EPSILON;
            }

            static long double (max)() {
                return LDBL_MAX;
            }

            static long double (min)() {
                return LDBL_MIN;
            }

            BOOST_STATIC_CONSTANT(int, digits = LDBL_MANT_DIG);
            BOOST_STATIC_CONSTANT(int, max_exponent = LDBL_MAX_EXP);
            BOOST_STATIC_CONSTANT(int, min_exponent = LDBL_MIN_EXP);
#if defined(_STLP_NO_LONG_DOUBLE)
            BOOST_STATIC_CONSTANT(int, radix = FLT_RADIX);
#endif
        };
#endif // __OpenBSD__
    }
}

#endif

/* limits.hpp
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
*/