#ifndef POINTEE_DWA200415_HPP
# define POINTEE_DWA200415_HPP

//
// Copyright David Abrahams 2004. Use, modification and distribution is
// subject to the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// typename pointee<P>::type provides the pointee type of P.
//
// For example, it is T for T* and X for shared_ptr<X>.
//
// http://www.boost.org/libs/iterator/doc/pointee.html
//

# include <boost/detail/is_incrementable.hpp>
# include <boost/iterator/iterator_traits.hpp>
# include <boost/type_traits/add_const.hpp>
# include <boost/type_traits/remove_cv.hpp>
# include <boost/mpl/if.hpp>
# include <boost/mpl/eval_if.hpp>

#include <iterator>

namespace boost {

namespace detail
{
  template <class P>
  struct smart_ptr_pointee
  {
      typedef typename P::element_type type;
  };

  template <class Iterator>
  struct iterator_pointee
  {
      typedef typename std::iterator_traits<Iterator>::value_type value_type;

      struct impl
      {
          template <class T>
          static char test(T const&);

          static char (& test(value_type&) )[2];

          static Iterator& x;
      };

      BOOST_STATIC_CONSTANT(bool, is_constant = sizeof(impl::test(*impl::x)) == 1);

      typedef typename mpl::if_c<
#  if BOOST_WORKAROUND(BOOST_BORLANDC, BOOST_TESTED_AT(0x551))
          ::boost::detail::iterator_pointee<Iterator>::is_constant
#  else
          is_constant
#  endif
        , typename add_const<value_type>::type
        , value_type
      >::type type;
  };
}

template <class P>
struct pointee
  : mpl::eval_if<
        detail::is_incrementable<P>
      , detail::iterator_pointee<P>
      , detail::smart_ptr_pointee<P>
    >
{
};

} // namespace boost

#endif // POINTEE_DWA200415_HPP

/* pointee.hpp
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
*/