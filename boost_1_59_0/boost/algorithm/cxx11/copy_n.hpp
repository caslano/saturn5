/* 
   Copyright (c) Marshall Clow 2011-2012.

   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
*/

/// \file  copy_n.hpp
/// \brief Copy n items from one sequence to another
/// \author Marshall Clow

#ifndef BOOST_ALGORITHM_COPY_N_HPP
#define BOOST_ALGORITHM_COPY_N_HPP

#include <boost/config.hpp>

namespace boost { namespace algorithm {

/// \fn copy_n ( InputIterator first, Size n, OutputIterator result )
/// \brief Copies exactly n (n > 0) elements from the range starting at first to
///     the range starting at result.
/// \return         The updated output iterator
/// 
/// \param first    The start of the input sequence
/// \param n        The number of elements to copy
/// \param result   An output iterator to write the results into
/// \note           This function is part of the C++2011 standard library.
template <typename InputIterator, typename Size, typename OutputIterator>
BOOST_CXX14_CONSTEXPR OutputIterator copy_n ( InputIterator first, Size n, OutputIterator result )
{
    for ( ; n > 0; --n, ++first, ++result )
        *result = *first;
    return result;
}
}} // namespace boost and algorithm

#endif  // BOOST_ALGORITHM_COPY_IF_HPP

/* copy_n.hpp
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
*/