/* 
   Copyright (c) Marshall Clow 2008-2012.

   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
*/

/// \file  iota.hpp
/// \brief Generate an increasing series
/// \author Marshall Clow

#ifndef BOOST_ALGORITHM_IOTA_HPP
#define BOOST_ALGORITHM_IOTA_HPP

#include <boost/config.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>

namespace boost { namespace algorithm {

/// \fn iota ( ForwardIterator first, ForwardIterator last, T value )
/// \brief Generates an increasing sequence of values, and stores them in [first, last)
/// 
/// \param first    The start of the input sequence
/// \param last     One past the end of the input sequence
/// \param value    The initial value of the sequence to be generated
/// \note           This function is part of the C++2011 standard library.
template <typename ForwardIterator, typename T>
BOOST_CXX14_CONSTEXPR void iota ( ForwardIterator first, ForwardIterator last, T value )
{
    for ( ; first != last; ++first, ++value )
        *first = value;
}

/// \fn iota ( Range &r, T value )
/// \brief Generates an increasing sequence of values, and stores them in the input Range.
/// 
/// \param r        The input range
/// \param value    The initial value of the sequence to be generated
///
template <typename Range, typename T>
BOOST_CXX14_CONSTEXPR void iota ( Range &r, T value )
{
    boost::algorithm::iota (boost::begin(r), boost::end(r), value);
}


/// \fn iota_n ( OutputIterator out, T value, std::size_t n )
/// \brief Generates an increasing sequence of values, and stores them in the input Range.
/// 
/// \param out      An output iterator to write the results into
/// \param value    The initial value of the sequence to be generated
/// \param n        The number of items to write
///
template <typename OutputIterator, typename T>
BOOST_CXX14_CONSTEXPR OutputIterator iota_n ( OutputIterator out, T value, std::size_t n )
{
    for ( ; n > 0; --n, ++value )
        *out++ = value;

    return out;
}

}}

#endif  // BOOST_ALGORITHM_IOTA_HPP

/* iota.hpp
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
*/