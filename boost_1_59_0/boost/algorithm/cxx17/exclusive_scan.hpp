/*
   Copyright (c) Marshall Clow 2017.

   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
*/

/// \file  exclusive_scan.hpp
/// \brief ???
/// \author Marshall Clow

#ifndef BOOST_ALGORITHM_EXCLUSIVE_SCAN_HPP
#define BOOST_ALGORITHM_EXCLUSIVE_SCAN_HPP

#include <functional>     // for std::plus
#include <iterator>       // for std::iterator_traits

#include <boost/config.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/value_type.hpp>

namespace boost { namespace algorithm {

template<class InputIterator, class OutputIterator, class T, class BinaryOperation>
OutputIterator exclusive_scan(InputIterator first, InputIterator last,
                              OutputIterator result, T init, BinaryOperation bOp)
{
    if (first != last)
    {
        T saved = init;
        do
        {
            init = bOp(init, *first);
            *result = saved;
            saved = init;
            ++result;
        } while (++first != last);
    }
    return result;
}

template<class InputIterator, class OutputIterator, class T>
OutputIterator exclusive_scan(InputIterator first, InputIterator last,
                              OutputIterator result, T init)
{
	typedef typename std::iterator_traits<InputIterator>::value_type VT;
    return boost::algorithm::exclusive_scan(first, last, result, init, std::plus<VT>());
}

}} // namespace boost and algorithm

#endif // BOOST_ALGORITHM_EXCLUSIVE_SCAN_HPP

/* exclusive_scan.hpp
SJl72qJ/Kb/D2+PotUBTZgZbDl7HD0AdWpbGhHTKZISO91KITLkJ5ehBPyPfKQbHdhSEWr8vPuLfSciaSD6T6BMHP4V5qPD+3V5Oo0dO5b+R5KK3k2YMiZ6wLB2UR97PXDjE/4Rw3JYSkhHGsrHvBSH0XJaqzqGXXpBTF+dIs14dq9z6WUJGxynKFiR/uyr14K9/Ly5RXDg96uk227/F5hx/p+DDOnW9r0wYtLqmvisHmJdcTtPwInV2tY4Tg9BksHK0uQ2MSr4e6Q00a/QQHBh1N9LrrtPgJd4xaq0B6i4ld936nwPLrShm5jB7GILD7W1B+ZVtxB5vzVOC615vqYiupwVCV+VxS8LeX1RuzLEUBOsSejnh4fRFe3CRYBBdH4vz4kfBv3J3zM1AGvAP4vk0sQx90KzKb4SHBr/c0IpYaRVaF4uh2/mmtdn9z1k6/Klrcv3Z/iDCMnNwhL2v8TxPGPlgrvLKmC226iBLKvBYjVN35P2R+K7oW46PmuLchYeBTPBFlHGsPp1NfT2uEPZSz6TjKoI3K9MqCLipFqIf2VgXjbvJMlFY0f8SosU2klv4262qXVs5/K3oyGZ8r/c9wyyl5qHKS7pOavFxoZ1yKf/kgeRn4mXoV89iq/EphsHrklDIktQ29Rrtd2qKve8Vx7TpFisK6Ki3Oqn3GeJP5qfjY1ewFCJOoPNT/OCiVn1mpm105bgqcZLnJubqA+pqWV7kMBSDlB5wICcTZnFpvMLBTYaPwuPaRaI9z18O0x3l/zUsYuvno60oYhVv47gz9BQvljofH6Y5kuJCMGSNqmHj70oLYEoeWEzJ3HzXjS1lYDE6YZMPCkhcwtE3Mf93MpE5WBj/2UxkKGhwGIhnJjLrM9sFAgL2BdRvsPe8mwyFDI2pCAmDgkFsGzuFCmTjl1WIqZkE6dpFVctVbf6Fhrw4OCZVHmUMbkoXP7oKQfpe99KmB9ZqshQUU1ubXq2s2j2GXxytXhT7SZOVkUmMglD0ZVbAkRKu+JKatCrNhCViVvKO/EoB5eDX7IG3dJNWflLUE+5dQ9pQLf1p3QK7qqEL9bfbjS4axTXqlF4u3xzcQ5AwOrMG4LFtfWPbtm3btm3btm2dsW3bto07/03Vk1Rl24vOu0hT25GwYSHRYckwR24xrNxn6w2MNqhy3Yqd1PmZB7nFHEHd4UmWN3Lftr0vEP/u1ty9RCkhnr5Sv7bZyWUrrq3upz0tjURVisnhgXZIuaBH3rGeIEEwOm0NvAruEjUaP0L+xy8ub10S7D9eudajziREFTjjmMkGuowG4oOYaNW3w57i1IXcLlvtpsMOut5qsPLCmfl4At/EstVPRDGP1hS2mHWkMNgo34TqLnmlNVwm2T0AqAG1j33knznyaC/cfXusy9EDVz35DRhOSBShpcnwUoWct+uDtXTQ43ttuFuzwvxhfd6GstHy/E9zhneJbfYwSvUu+x4nqxsf1TEcqGnY71DaIUS3wMc8jytuUcgjduwBWL76y3SFycNISRStpno2RIpgWqqUJY92O0KKcnnjF6X8/RO1agA0b0FO9sTNCm05ALewirv+Vu+XVP5d8iBcmENRiiNhSEbH6faKZlpq87ORWAKLUET0mcHXyG8WljN58Fhvzr1CkEkNOZ2xemwZ/5fzKinwR1YZww6kBMVQh3asrjEhX7HC1/C+XjvHbIyWOih7f3BVRXpRs8Q+PHWh6/4YsTyl7Sk0Im+rxicr6EtMUn2X41YcvXaUdbvzgxn8M45YXMvXoMlnGaWo/pbkieZLlrGIALGHQcFobt/z3wAmJu95rxbBza6Ekanph1/kyJcxlgC/YK//R5DFkzE7z6N0qbyJi4S1FSlFxhFKkeE8fR7FFINKDgbQOocfYFLXxkpX0W0AKc5x5f1I+Jw4QnCA+q1AFY3pAvl/6CgcUvnjnETzUF43YB3z9NQNbbruuhCp07RM50cHXorspvuNFZ27hAzfna27G08UXJ71gbzv0+0yylodVvDtGHGajzKmecYsnCnKGPex/03p1HcyZz12U9cCJ7SF/qd685zAoo3+PM1xY9Wz3sviULbDaaIKzsXCmzRDlq+X6e01CNvAHZlG8DLPJbyU/ejkW3rthpa7hrJ4FCJuxIstl+VURhGHbbsQosAtmBLHB0DwszqNuvmJWU3DB0BYsCxS5KJ4Q1dr9SEu5twmK9XbS5WpMce3jLcERZTwxBrVdVFz9wFYj4umnfpsqf9Pj67TyYLV6peV7rH+OCdL4Hv9q76b9nluM3pfCGfYmnWxgpHr18X108R550qMO6GDF3FmrXQSlUUZYDzwX4ecgwopDk2ykENhlMiL/Mxo1yx1HvNgVCC/1bxiElc4L3xajQ/ePWpUn7XWvGNvwUbkO8xlwyRihI/+lj2sQxmPH8vWfYj5C4tl278yIYuFFXShzHPuf910n+ECYGFEwUhdUv92k0dLpN515bezQnVPSppSoHhPTNuyH2cdirX3P3gCP2MIu5A2lYmTsA2bEIg00ys3mFQ0Ni/9mcB5fF9VlOvXXZUOeEHUJVJ6SofoSz6To4767b9eWICndRqltBJSPOWSo3X3qKuI5aFdl1XGJ06+ifPQJEDKF6h2el6BzgRSiVJW6VVukm2fnJkyF7AdTgIM+ACmXS+BW5RV9BpZDxigg/YeAnFXcCKAvsE1c9jQqjGzek4uaiyLuhRgiUebuCfBO3gNj4C/aylnLq5gr3X07lSKaH4B0kfFmLtfFLXLAdVik8cgt8+ezLMXGdW1KMX5VTRw4Hq3R8KwhjlcIrQsnc5kv8b9cmWm8v6DWFqY7kFVO7SWPJmHdwJBNEGEW3oAmbPvqdMbvGTZGmpDDYqy3Cen/GBUmRkyZEQhvyWuqw6+R91WWd2WvUa2mJD4tWlE6foYBUKuSXkrh7jEGqBp8lYkI39g/AQU0fSAwolnqJhUC2cMwW0QfVnWUVy9q43fWQPp/CmuHh4yUKT1QjvBLzMuKS/FqOnfuENpSsFGjvU+fNMxh+/i4SW2AFpp0WxK2/uHPlfzQnqj3VRpRUOE7j69NJWF0qfFlTbeqITTGyt5M4ODO+7tBV93tVMzAWrK6GkyGopZQ4DxLiSwmYQx3TMDovgvjhfqg2hAXqiNBSqY9ITQGxHpo4g6Ov2eJmf/NbSDCek6+xqkyEVvX2CgJs8rWG3ZWOZMu8ESxhuP1lNt2Rp2eaBAsQ9yNZYOyjA69cYTWVzV7kl8BgrpbfqTgZmX0dvRgnbjX8cAbElYoh5HD7mox4VrPlvIVMQqBurivHmz51Iq2CChxT6tirgTKyQKV08Z242Z8bT09zeE535DRifW4Wf4SbVpt/E6u407F8KiwjoSWxA/6IHAme3ProQ32E9Te+CvoPfPfx0hwe4TRx8WUIKCA0K/rX2gXpWggKDv0t6pLTnBAqN7akstXoI3FMrSSFCgeoypZiuPi56vdMmnrVktThxWv6222wPEJEoG1EdJcZXI8y9DaQwYFFU3JC2TSanLlGU+UP2h6o1kyJVKdKIDMerbE8mqMVEjB+Xd9TIx9W+vdyYtdoVb28y2Crj+d4ODRUojOoXvV216j7Xk2IukW+CaWuc8uu4kju0dvp5eVK7r63ij8kOLTidtpN6e5r0EHuvvWv+Ibwjl7pkkwQPrYFYSMfc23sU1NVUZusi5o1s7E8UWWrU5vrDzaJMx8OMSpw86ZeSPLML+ja23KMDjGwtS6R/0HGto9CjUozhEyDASg6Rhw/eAUKFggeqx1JS5VqRc/PLrwqp6PYHw43nT4R7RbKTtTjBRb8mYLCOaAiosE5u94mnykvcc7laqkUQK4LLiU3G7s4h5Ed9CWFHaVqt6gPL+R2bUlDKQbgF27LQL+E0b62YCvHLC/52ce2YDrJqLYmIwUDUtjM5FV7iYVujDWykjwPQRiX2BfnZOhFnts59jJ23WIkopy2BP1ZCzEIj3PNGxdtuDumSVd4LMANN+O0EtIkt8k5qIt8xdCymPHpW0sG5Z3g0A7e4XC50YFfMBQLtXdToH+hQ/FzCv7zWPXQ3sb9scuNAbixgfBVt1337hz6ocVJzK52cz7+C9T5dvkduF/2rKWRrwCcpqaQFd7ZxWTAHMzWFsqgAlKd7XVw2NZiB/3tKvwxGFqv3aaUgmZJckOR27rwl9Du1MZzx/z5l7gQcghR9s9srZtRq9GuarKgL2X/Nl3ZgkDj2BmETd9b05TDiUH0DjCGIE8FgMToK0NCjiVEPgyx2pW6T2UbRowZS9PP6FWK8wfoZHKBEc1KwEtr+c9JiKXriTr7DCPe76FgzWgQCmIKFOSKFA5E+PMGWbwZ6IYgtG0yr7vHjcmEZz+l28zUkQjZ+MB3rA53qBcarpYoftPn0pvwu8DBkDZ+5LkN4Nw0P95nrlTqWVhjfUtleUSOaqTgueV1EBNgmPEKnAJH/SGndjpprUOg1JgG1iNbvuALrjDA+xWW5WM5OMTDoRKG6r4vtFJN7D+79ItAUMJb5mzwGnlmKfBmSOXmWMz0a4II7DlCGnvvuBa+zQJqrVEdm3FwGFDVNsJKF94LJPYYUiJ9pV4/7cV/zV0Dt36DX9nfIcVokN9HFvl/d8Q9/RVb0ADdYNu0gyClRREs8MUfIHFeF0dwrPnm5lSJrLsQwPGrv/2izL9yfFoWQGrAlyPJaVRBkmOFSXWMsoz5l8kWOF/H6wHlB/7fwKf2VxWcIR32b7RaX79Fw/AAAwyM/KYEbItIPdNYkGhQK+M4Rgg6IL2SNCYyVglOdiYiNyBvANDtLiPqAjOPcvD/0GClLLGTZS0VvrwEvSsvDlHsgTR2Kg8Hq1RKS2lZxRSF+tSSgjR1fbqEyRWI3mXmKco7jwQm8kCmRp5WhJPQKzs4i2wqMOstK0WrfYNi4/1S55ijoX5U5OtqPL8q8zi1ZO3BRy37M6wU+duuR2wC+zG5rfY5icqMxSQ0jG4dDsUIfGr4rYT61Q/qO+mICWosQar00XdaJBFQafCImd1ZCs2hyiSDOSTgkpQ0UFiTQZ9OkrF1PS83old9JY6kxAF9W3oClMOuci38jYUSgqhXPlSrty7U5bIsbEHmtdpSRUmaWdkaOC8yedoKaRCEu4rKBXo/raCvZsIrkeWXLLa20dRlg+3Pu3kb9j+UBOONG88XVu+99oP/1XaFWLWJb7Q4Lv8gXlKdx4/fr6fSGBuv7YQYubG7CatRCEh0BwxMRAdYBvTuD2vY2DZlaH7aP1UCnru3JyrACqVYWh8nt1daNqXdfLJCQJh0XtgTXJigLBZcrcJ92Sh/ql96/qBgv4Jl+EK+zLanfrr/rCt2Bn6FcTPIm4MYShrw7KEpkTPlSkcOw53eamGxt6nhs/pGRgaSyYHKDXTCVX7pWGFchyjCpfpleIL8Sstwpd/30gih2GSChEpTOcxhO2eTbV6o3tyHsiA9CVvypNFp0R2KnUjqBJVUXQZktc/8U0DsN3KTw5rKyg6dHOsiKaHxxOxVvmBanTL456w/4HvxIec0Xk1OrpL0txievICtKqL1dhof3IEtJ2arK6RrPhmeTN+FT3tkhd5UuNaXSWMVtt4VFbuROfyIsGTVZYDuZ3w14d4tYd3B2CnxoYuXN7nab90hkXzRoK1TLBYKqdUbVyCOzl4zC2eVNV2nH4X8ygKXcVCXXKbjqKwIRIpKtj4JFAx3RkTrmqllVK+jRUyEfZDMyI3wM26xwX2EE8xO3cNiE7l3J47PgdlAVqX8q44t99/RFRUNyCFhTqor9EnIVAbOXZ+Tlt91V+0zF+dlOPWD01Pu9uqzM8bhvyEOxFUEJ9Eu40MjT8+Vjq+lWQtiV1XfkNrPXGMrL4zUUs0ONJOjt+Ko2eZnDD4RXGd7v+iDtRcOryKdvIDT65xns/yDt1Gj4GjcbNRg/D1lx77A8mw8sCA0XSDtNaVymzI4FPyA7v0COmymEyXmOKa/II2nsqwIaQV02BUp/N0k2c5YPQOscd1ddiMI7VhpfZ6jrGUMZ2s1M8RBmO4/Ns00jErVBHl7xAGo1w8HzXCV7mvTZ6rHE/5z0vZPVYAcRyBwLKirdQRUc3FOf1xCdFBQHqj4oFruubis5p/PZcA1o8lNLp7TjDZ+mgtOcTSc/dxArsgaGiHYB+0r2zRLsiYqXztYmZri5pmH5c5PkvDQnCZdXbxyJ7e0NusirmnuEbrTHttMWFEEyAT3GwItwyGo4OEVNzHuRXoNkJTXTO7x7n8GBv0itcP8RuIwSDkY14YTGVfi7tPyMwDdfevmLpdZd4e4xLKO9D0kmjimE8btgV1Sv85+kyJ7Fi9DtYuDDSwTsDtFr91tYw5MIW2cbrx59EowCXn4xHkwTcCd2d49h/qQioLMbXiRwBuqXq/y5LrfmVQWU4pPUFU4AjVFUjH4/8R/bR3CgVoppPFAvUKudFqHKiDxw6wMiOFfLx1UBKgpAZ335Oi6nfjeCFfnASRjfWOdkY32CKRuNj3dGLr50nLBTfN4kvQqKuLQ2eWtxaFVwqYBYnE6mJtp0QMmuQkO5q9DhWtgX1Kti/y+Fic9OeRDB701uq0SISvRT/s05NCfL8vmYnEW0j9ug3bamQexITfy04kfboUbR4ZgGmXrkAuVY6fehMcaPDfHFSTTDXmoWn7r6HM2fEuPKa3cJcR/YXgdOezysK5tkfOXzTruOcftBtnTpjzHb97G5iuschNi3MroG5vS6kWn7WZdYKsmSEVtTOnWRN5uk+nDrvsjQ5nDzmG/4scF/DKXH4j0Dk5hEY4aPU/javT8/MwOQz77CuqbEBqgEygp7Rgb6hAaKx4RH6vomJCfKO6QHaHoDjTcQ9oj0EZF1DYz1YHXOdA2QtYEqanzSengmCfAjM0MQUDAr65zesF64GFiCoH9S/XwSoT5c3I7OcDICemhQA4wcWIBoFFUAUEBagqAPIX6ENqM8cD1DfGfWXwu8fxIH+t97Pxy+NX05G0Psv2w/n2mhAs9mPp1RcnQBQ5cN2iwpz/mKSsjbDOwSeNvkp97jWpVhUFPj9axVely6NLjw8fa5b2cpuSPMyGwUvQmtBcTQaQg9FARazAA9NjUxZrdWkv1TmUTJbu/ecIGl7e7BHGj3qnC1Uh2wGpDBXTmz6OuEY9OtXcK3YbUbqbMTjW6tqT4CFNmklb1HDxc+/Ae3zuxazlYU9YN2zxCEPo2CWKrDop3uTpH3fQ6agbcrtl+MMvteMgIjIww/9m6vMSUoacC1EzYAPX+y4DTMOv5INWzk+rZLl8Tr1Mh+v0jAwPfiSL2RcQwZTPnY/8zdpO6/5xqz3JZRgJYSAa6mlLGYQFSwx3gcMqO7JGNSzoE11b1OqWZVWLHSdY1ZlisEtXdAMOxuXe1g71Bj1yJWBm1PtDMP5oh2s68TryQs9dgxQRb3obqbIxDXpzX8OK//Z55Pq+EGnrFpdnW8/uHd6sdgB2kI8tNAKLI2NKJzWCDiXf7YDU3VCbC5T3ydMUnGs29Hy+RSgscZhF6JojcY/NpKJEJQ5aMrNbjgSLbq0szoken3OH/ejtqbH+DFr6ZPPQwXpSc7xGkY/2K/3ebKyLN4OG8+TEWCFtDYC7U9e1Ri+sEK4iPtmziqfz9ki
*/