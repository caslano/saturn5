/*
   Copyright (c) Marshall Clow 2017.

   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
*/

/// \file  transform_reduce.hpp
/// \brief Combine the (transformed) elements of a sequence (or two) into a single value.
/// \author Marshall Clow

#ifndef BOOST_ALGORITHM_TRANSFORM_REDUCE_HPP
#define BOOST_ALGORITHM_TRANSFORM_REDUCE_HPP

#include <functional>     // for std::plus
#include <iterator>       // for std::iterator_traits

#include <boost/config.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/value_type.hpp>

namespace boost { namespace algorithm {

template<class InputIterator1, class InputIterator2, class T,
         class BinaryOperation1, class BinaryOperation2>
T transform_reduce(InputIterator1 first1, InputIterator1 last1,
                   InputIterator2 first2, T init,
                 BinaryOperation1 bOp1, BinaryOperation2 bOp2)
{
    for (; first1 != last1; ++first1, (void) ++first2)
        init = bOp1(init, bOp2(*first1, *first2));
    return init;
}

template<class InputIterator, class T,
         class BinaryOperation, class UnaryOperation>
T transform_reduce(InputIterator first, InputIterator last,
                   T init, BinaryOperation bOp, UnaryOperation uOp)
{
    for (; first != last; ++first)
        init = bOp(init, uOp(*first));
    return init;
}

template<class InputIterator1, class InputIterator2, class T>
T transform_reduce(InputIterator1 first1, InputIterator1 last1,
                   InputIterator2 first2, T init)
{
    return boost::algorithm::transform_reduce(first1, last1, first2, init,
                            std::plus<T>(), std::multiplies<T>());
}

}} // namespace boost and algorithm

#endif // BOOST_ALGORITHM_TRANSFORM_REDUCE_HPP

/* transform_reduce.hpp
bfaZc1o48BKxMBZjSqM1KY+ajJ5/KVYQJkPOzmU0TgqCKxEPP4FxZ2EPOQUcJ25xKihOw7lSTMrmGppKMMPDol66H+KQjCeJl06DdtcgpiA9SXdJjfYHq3+n7D0l2vGD1Y/4ldWP+InV3/2EqtwdzxlawVPX7YyKi1kH48qk9er8MbvTEHVKqiHPDnvb3qxAeT6WWIO41qsAC0tVWAHAcOGkyEnAbFsISyF1UA5jKZ115lSAp8ysmnqRkMtmLdG/96QW221jb56LWXiMVtg0+CS0XQvRdyS42qTAPFML/0CxBMjNPbbdtdvwzOdN1oX2rhigjsCaQKgFFUmcnIqAEJ9HpzlqdQxz3mvQsGqArNZra4ReFobFAq9LfEDNoWkgXno1bp4PWZCvywZ3hSj4Ouor25hAaiYfUaAqVlD5R8v4EWsZc/PaJv8YTNIvcF+BZMAiN5dtU2xR6JCF2SmZBszrv+hoYdvqdVv1E7vXot7lBn8o2iGJWXkeuxRFoUNEQUoqwy24y/UvP8XQNKbvb/F7a/QLoj+7wbzp+PkE8ErLwto25cqqZro/sAGkiLN70pUuWtoopsDE2CDEBFEThgkTp8Sgwn8edfqT+B5SUcOlTc1HQDCmPyLmDKoTXj0ZRa1IbQvtA0xDlkIHSy5VS/zPfP57Qug/lNCn/xM9FOh3jFsvhD7QTxnuwAAwIBBw6Fe/q2AnUp5GQROQV/T9gegzMvHr2zvGVG/+fzH6r9rtPUtn7t0X5PtopDf4wU0E66ou7Oqtl3NGjJydKsCYPGFw3RyqJlisbosPbqLrMhS2TNopDl/vTrE88B2ATL/+ylcvjvSYv/kNYEqxdphte7oddD4Azqk4KzuSo1uW9jgg9mFhV0Gg7VTHx3TctTTMb+1N21nYMyyV4PrhV/AM5bkYSUfXqa5ku+MyavRliRN5jxrKlkKQ5PZQuDx2NVGNUC9llIfBFFsaOwq4gwMAYlvBUoXrGtH+CfOpt+p7ySh9URge5bS2hhiaYbCSTbcZ2sSV1+NFG11owyGCXabcmqKsd7LyijZrM4L1TNbcxrR4tdj7M1ouQm8RqdqMMwgOn0fDNiTPkL0mXK/gV4IOOZkXcGPweyXO4BGc35oIn+XfBDGtPYFcb96nkpGqWKaHiZVw1XPFKG8iEy/a96Arb8NT1Fl4ZS5XoHkzFtsoaKVEPNpbNcVr4TH0sf6M5rckuZhYN4YX9syqo5KJ/aHG9j/T07B+l8wHBvvxLF6Sny6Tg4IA/Q2ZzwCKJI9MSPT9cx7j+/u6duoec+Mka+rqFu7Kqd/5nkxx02c+7zbfTGY0Arw42nmDnQ8vg6ZexO33HHNURVzCOku2EJz5zhBmpSs0nz4rVWSdoHoat2ENyLvuotrIlzmj+8ir7P5SnJmk43giLszScbwXlX3T9vkqLCzsHajGI2mT0a8/TFkRw/EOqOrfO+pjdJ3GtqqJ/lJhc+9slLb9JLV2dTjEMXCf3HowF+sY9ZUpO9vPP1atkUxQEAyCpNpGJjAQCk7cYDURDQ3wiqW0j1Ha4otUnEabImmhCM1aaf1+SjpGo0vFQo6Fk8HacqtO+Fwuys1rkyfMUhGKU4mxeyaVcMXVhNQrxdye2+O//FBSUgJwWwpL1vaIRpgVu7iZfSlHpZ2ARXb6DEMzMtOezCZj173azrUU93NF0sFsokLUiKthoYK6BB/NWmS6uDH5Y6OLogAl1MgrlMlQv5ruHzR+VcyxJ97PQw7+n4vGZ2L7VzR+vOUHPwKEwOw2k4qs5A/ztXgnBnukXd++2ab6t85lEF+174HQp0G4YZq82beuNGFSyOQ4OwLwCU5IJi6qIq1QwF81bWCwBdELBrnCn26VzRtpm0warsTqpZHfxcE6UZaUQ+qTK0G4oTqtODXZQliG5fvxaQhKQttprWtHTJmvmvEDDwzmiR9POFfnMQRTQm5UAsc6pxfvSZqaXRbE8wuQhs1OAdGOP5Patat8QX+1NvbJJftT31nnGB9I8VDTvrsiQnhabnyCXDrebI9gdjtEGPzMI5uZXekXDDfY3sI7LFadOAh3g5Qofksk7hFNrsG7SvmJV0TLVMC9n4C5KHNBl85jKG4hSwxVGkurDK61h2Uw0BjJxugdBj5Yzu62Ptyo20mH2oQG+e3zaMPupGp+pHlf+u3dsWDmQ2StlAYa7x3+vbr6nq/v+rXDNYgGFGrDnwrW/1fHPkEFIraHHvLxG7K0KB2H0RIcZcMec7K4vnmr3i57AUgvNZEU5MA1QSk4M5ykV44sehYe0ObYGV5eeBgCHV6nJUj0p0PT7IUMNNKtynGxT3znEthX5zwT2qWexvRf6Uv8DOzBNSBVK+x7U/iq9AeoVvFbFlNis43r6bTYVMzaKe8sQYArju3ACIe3mQM6QvXRvwReMQC59NZFytZonriDWiok9ege+qaT1TJ84p9gK9VCoClAGl+QRbKYzqUgrFki9wSd4KunMEoIornvPWL22t65eWVdodZBOjVjsyXwiaEnAGJgGFUWWJV59KtWHTlpZGagfbd/uMXOq5yQCVHyTAjIqLbQ8nl4r6QW92lpHnnA0Ow7BcNX/RCCuLpVxVmC8WI2ibHJpZUXAkAeiZqXF3PLQ5d+RwSm4+PlWhOvkh6cJ6y0sJdf7+Nk1Q6OlXmgK0YwOJGdFGZC8+q7eTX1O7Otusj59Cpmn1zO19io2IEsxM742jIu6kFQ4av2U+KgBy1oqJBe1WjZXBDZCo/jHffpNgfThn6rIIS0+zJRev4elFzGmy5QU38L31+5DZuu822cdTHun4PXZ/i/4/WF2PnZ6AXZOb7/B8vGLMLCKsAswMLByi8kwixAz8TIJshL8H0VemZmDjYhegFhfhEGRmEOVgEBQRZmYUE2EWH+7+v/L/H6CQAgCHkAENQGAAjeEwCEYgIAwqgGAOF5AYCISwBApLkAIIpYABBVJACI5hQARJv5z3l9DiaW//L6/1Nen4GN5V/y+lyR2mww2l0r/kcocBRfVgrFDyihk0gD0gmk3x3zxguFeDjy4HV2NyPxBQXF72Uu8NHV0CF8u+iIwq/UffsNSNfngYu3ayFyFnOrR5Xgpvoe0cwQqIFX7rVvs8WkcznCqn4GP6v2Q/RQ/0EUe8QijWvLyvIri/CcHjg2qahV6/RTSKGiS2bmoy9McmDOOKaA5kpUZ4mNgAAWVZ2PdEoo0xPV5LgMl5wf+4jT1MZmyCTycd2NDauIK9siUAgvaQNHNe9pSdvNCzHV7U9X9TJPJVq4WyjZApPL88/00oRUGozmba3STMA+y3K9bitTVkcx1cBc/5jguoOa3xXZVvPKBYDnnup4TxvYZqhZajCdjIuX1gqGm1myLaNt2qbcB916qG1GkUud6Dd8U/4XS73m5z45ZyEG9XTFtDM87B+WepUflvrSYeWziIiZ/PDlF0v9xPOz29OXkaNKBlA7GF9bRxitnJrXmQzgSl6S0w1Fq6yblG1D9ZmJe1nlkmgN1IEKGa8aJKoQcTyuZcxam0cM9G0NP2X90MtnuL9te+YGrU/NOm0VnAxMFZf7UN4sNBDqnDy7zv2KEwMkrYKqLmD4w9cajFpIRdSBm35S/uwEV2YVNKb9uL5um40AlXjj6hr3PW/k2bCsJKwa8AGzrZj5NjEv2OQ3rSQzEcwrQMJe6eafknxBGtOJRKh2b+TsMwgX84Qh3DyuyuzPSnhQQeWn23RG4flTzBWDmVIv9M5AcePz858jhfnF/IYbxSw9cVTjsbAdnNKs4l+jaruXxtl8RROspuJBi2Pd23nUSNNU679aazfdwTNVvUQupgbH2VVf7t0TJnq3hGhaSGDMaiwvZOfd7m05y0sXjJwPZUSnwnpIej24IvBYShdGCE1YOUgWF+Zb5KVjiv6Zd/mborNf3ZqbfB/E9Xw4Nu6wWEVkn4Lc3cd6FflASoZc7r8/TKnoQ8VwvUvK6SUGi26RMd837RAvzyXJb/xlacM5ZnJFuGYXxDvULRyIcI3NMycmS2Q3cTBVfL39sl+tD++DaSz2gsYwuCs05k1GDaAzZv7tpUwAibR/MbWpJUUvgQT42LfxRixLOGDzJkm/ZCvoggZpJxkO5q2PuuC41/RM66y5crGGkF/bEjQlYj61UcH12zeeuMplL7NCj2F9Pvp8fm10mzHoleCXMhCfCedPdakOFXkje17d/YYMn5Qhw63JxYA7nhQ8l9NJX5EmVPCTLReF06llv/9785ShQMdkHT+n/bver00G1hbB6uYVObXMQu1iuJW7IQEkZno0y6kh80ZYF0Idk2fQCW5ZUZcFXR0Ri54oLUttNESsmF94l5rM446IQOLmOgkl1th4BohpdYtDfN6KUoCLKTnktGFTEI1kC+LBx6h7q9TlPxCQthLhEVrD8wsMIk627wJCDt7cqSYJNhyRmJvTL35SQlwIY50SnnZHV8IpXGg5g/tkeBlpxv4eh+rjt8iqE9FgN1eiITwlUK4cAec6W11E1BE+0bBd8umSmAqsvrPGhW8lCZvb/8Xg/51zdna2/xxXPAgQ8K/6auCXW7Z/deEKAIKIxABKxI9MKK+YQ6ygb+8bU/13T117fHn/yjunnw6JG7PzdOKX/V40Pn7GN0nq4ur+7MtU2zpxBXl8evkEzMXV9g3wJvJH2+To4HKkmAFTuCm4NcxoRNFOIDF7v53JX1UrKCgQkTKWFqsA/JuYMJVnSwH8q5jhJYfK7whOYQLiz7/Oa822rzG0/X64KzelJtTZMDNj/OVBRhkW9b0UtDUPqy5+3V83yAoQzfuq6vNAhmmAab+/IqIxQ3VBLp49JCIiEr67fS8TzJKZ0XND9PgoQCaENTGh/xDj40OInANr+rnqqc/rZvH5jOAx8+y96oR31OkF/NDzrfBfKuvq6l7+ncQ8hVr6UQ9hw3Hf/H4os6+iMZ4dSK0Wfpu8BjWiPkvfF4aYicyVrW7JGYhRbcC0Zfz6NdFfXm//QF87O8d/kK8dCAT4V9IcGAAKAgEC9jcfeEJ+IgZ5UGQUJkV9e+KcLgXf7Orf6AKvxPfjpkirQDIK8+YBjrNXKZ1wHhnRoy6dggwrQDADVqBMuOf0o66dPQwbILDwNDDM3HX0kxeTo6Oj/cwYZxiThm2G/JEXLtUaQzoebx1+s7Q3qp17EFKn/uozhSbJo1sn+DqjcpkwdkL1BGHItPQ6+NDEmCOShAFjE1dqtJChN5AYh7g4OX6PPbrX8H0hw+lrjih7ilHP4JxQomxfGCAIQ0S5zkCAf3VwkZ4ggH9xiEcpB40lgqf574PeEos3Ye9qehoJn4V+N5SkfC+XG52oDJktSkhdgigQKcC+nVRea4Jd3DmqslQLO/vJhMpqKfDQjsnR0cF6wKFimAk/vYPxdyJ6Gar0FruoUeTQzzZpxJegW80rhZCPwxISUmpLqqvRoH0RCd5DgJ8LCeWbp+j4NE26K9mx9W083du7jdAPTowqjUFNWl4Nm29tAp0c03E+i3LQstQvkurZdW6//4C1fIxMz65n3y0ZYe3yKgmHnn2TRSFBMElPnOwupVgie5SeJO5xTClfbg8DSfzZZG/vMyNb8AnmQIJO6FtF56fCf1Z6Ab178fTG/YBAEYO5u9JBgSGJEdz9OVpLW9livlJeLX5S/TRuc3g6tuMt0c7KjnrLlNrSWuuOr1ApHQnmA8PtLJlfamyaSxgUWexUb1V2ZUT/ZY42sTwhIzwQjzcu32AEXlgQHl98uto4KCc7KCrvQK2mZ0quM/+pUFLUUWUfHtkrPUvheSY/t7nUCSLko8wkxVvz6anVuRaQ3g0y81+06q/+PvgDcW8CDlam/xDcm/qn69jAIJAgf2tVRyFk4JfXtwdDJmISUIztYsz+8o+06pVQL1r1zRetetvPWnW8WBfUlUPiaZnuVm8hDynlig553lpUy8pZ2bI+jaOvyEd47zMw7Qwn43poYTyQ3Iy7Iqawc9iEWJ11CrA5KxVh01WLQyvVFWKMCfAAZPOU7cYSwvHv3ACZaiVfEyjQFIA+AXvrbX68fQTFYdvAf+cf+LB9jsxL95EPiGnr15BNpKQG1wgJo8I+fMsmQtmIc5CEQWsbs3cNq2TQOVrMoLmfKXjXiRsEpyLonWHC5DnMp0rbqzVOi2duGajrbwDpmYLK7d5f68RTHhkTDKM9/Ektz4eVI/kPYZIreyhUOCCKGGRd+RGqhbcbwxXXJoWo5d1OtlFunBChUXS43Lo0t0WShPQolXha4C+gNrCYu4mBFLJPJt9Gq9xOFSBiQCXA2/g/Rkl+CkWVBeah8yNX5oa8+giZrXROfOL9Q51e3OtdWcfkKO3szB5V/5NWvRBJ1lyD927RyQqTrK4c3+uYkxUmblkl6qMLLja4eJ076dROqmiopajHYXu8BW97h7202Zm2ak2E6ELjKUU57lHJtXzR/fXTqKSoxfjql/Oo1d46l7KTCXzIv6qymdp2icKucxcOSE1dFq3iYAyDZmOri9JzMEZ7kaPjde6Mj+gsUb4T25H5zVK8oa4tb0VDR8G6nI48vSJ0vDtJb7ELBlRmQdhUX4reSi8QmMwyp7aqAIOVXhAILiKFEvcNOLUM05b+VK2wYBGgL6TfS4qT1azIGYBRzT4RElSfvwtvKTmMN/8hPiegRHEEaCherl7CXY+DMRStWJYaghS9jb59M+DsxXh+JzK9MRVcLtVBvqx5/6JC38WWfCsi9NDLR92Ykox8hvBYs25hJNsmeDHiXpwivZ2ZqDqanLfOcWfsNfRL0RrLmKNoObXTKXGqQDElorgNQvzXqnjPHvKbQPkzmD8UsKb/U6E0/0SAzvIDsIaAAv/LTbQflCQoBCL6D76a8AdgXfsTYe2gmFMT85uskseZOA4Gx1A7vMgFyzUpEivpzMDRJCYVaepp07xp07JRDbvPcJQOorJkjs2HViTh35snukxKKEzieEjjeEwMJw0wAo6IfIaNLtzls2NhOSgGxackfuKrf2s/Z6q+6cCn+XudORe+55eLv9eZ/5uru7EW3T8wHhCQGZpXRlK3iEG+UMYUz2L6owYT/HDYwlhyJhq95ndQ8DsiEt8AZIdYPgL+dzAJz7Kz4kAWSKOj007ppCLGYq/QsEM+LeceHY/k+damRxR8ZK85IHDJmVCUZC+8IwzC6OplfI0KrhQTnPUeExEtW5jJKD45BfqNBaIwmGhzaKx0yiuKyfrMWxK1UN+vEuIURDRvgEW2ftk3q88/7xxu0S97109vL7gqUouimlyieJzJ8A3QeQM8r5fJJFy6PfyGRAsA/i86C3kGz4jv4/NxapAPocRMicSQgBWpJ2OSicuZmOiRqAEgqselVoQnljo9uNMrAthiGlh9sAVsxjiUmMTx/OXxahiOFIPYYhRPOd25tcdzbUmsrB5ZM5iYZwSZY/ZZEI+IsRYD8TxGdGuShTIkLI1qZSRqppUmf8Kmo6hRddQNMEMLI45ZdDANcEZnvE/JRmXtim8vupR3EwlK3NZ7lDcTCcbY1re8em+gfu4A9fP6MP/W6vZ/JDXNyPHnmnz8BrUD/z4GgP50E537ZfLxfSICAgoBAfaXXLPvM5Mf6Wby08hE+mT2tVMoCspx8Tld6IyK72Oz
*/