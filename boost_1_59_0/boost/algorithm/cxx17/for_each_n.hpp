/*
   Copyright (c) Marshall Clow 2017.

   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
*/

/// \file  for_each_n.hpp
/// \brief Apply a functor to the elements of a sequence
/// \author Marshall Clow

#ifndef BOOST_ALGORITHM_FOR_EACH_N_HPP
#define BOOST_ALGORITHM_FOR_EACH_N_HPP

#include <utility>      // for std::pair

#include <boost/config.hpp>

namespace boost { namespace algorithm {

/// \fn for_each_n(InputIterator first, Size n, Function f);
/// \return first + n
///
/// \param first    The start of the first range.
/// \param n        One past the end of the first range.
/// \param f        A functor to apply to the elements of the sequence
/// \note           If f returns a result, the result is ignored.
template<class InputIterator, class Size, class Function>
InputIterator for_each_n(InputIterator first, Size n, Function f)
{
    for ( ; n > 0; --n, ++first )
        f(*first);

    return first;
}

}} // namespace boost and algorithm

#endif // BOOST_ALGORITHM_FOR_EACH_N_HPP

/* for_each_n.hpp
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
*/