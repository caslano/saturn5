/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   logger.hpp
 * \author Andrey Semashev
 * \date   08.03.2007
 *
 * The header contains implementation of a simplistic logger with no features.
 */

#ifndef BOOST_LOG_SOURCES_LOGGER_HPP_INCLUDED_
#define BOOST_LOG_SOURCES_LOGGER_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/sources/basic_logger.hpp>
#include <boost/log/sources/features.hpp>
#include <boost/log/sources/threading_models.hpp>
#if !defined(BOOST_LOG_NO_THREADS)
#include <boost/log/detail/light_rw_mutex.hpp>
#endif // !defined(BOOST_LOG_NO_THREADS)
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

namespace sources {

#ifdef BOOST_LOG_USE_CHAR

/*!
 * \brief Narrow-char logger. Functionally equivalent to \c basic_logger.
 *
 * See \c basic_logger class template for a more detailed description.
 */
class logger :
    public basic_composite_logger< char, logger, single_thread_model, features< > >
{
    BOOST_LOG_FORWARD_LOGGER_MEMBERS(logger)
};

#if !defined(BOOST_LOG_NO_THREADS)

/*!
 * \brief Narrow-char thread-safe logger. Functionally equivalent to \c basic_logger.
 *
 * See \c basic_logger class template for a more detailed description.
 */
class logger_mt :
    public basic_composite_logger< char, logger_mt, multi_thread_model< boost::log::aux::light_rw_mutex >, features< > >
{
    BOOST_LOG_FORWARD_LOGGER_MEMBERS(logger_mt)
};

#endif // !defined(BOOST_LOG_NO_THREADS)
#endif // BOOST_LOG_USE_CHAR

#ifdef BOOST_LOG_USE_WCHAR_T

/*!
 * \brief Wide-char logger. Functionally equivalent to \c basic_logger.
 *
 * See \c basic_logger class template for a more detailed description.
 */
class wlogger :
    public basic_composite_logger< wchar_t, wlogger, single_thread_model, features< > >
{
    BOOST_LOG_FORWARD_LOGGER_MEMBERS(wlogger)
};

#if !defined(BOOST_LOG_NO_THREADS)

/*!
 * \brief Wide-char thread-safe logger. Functionally equivalent to \c basic_logger.
 *
 * See \c basic_logger class template for a more detailed description.
 */
class wlogger_mt :
    public basic_composite_logger< wchar_t, wlogger_mt, multi_thread_model< boost::log::aux::light_rw_mutex >, features< > >
{
    BOOST_LOG_FORWARD_LOGGER_MEMBERS(wlogger_mt)
};

#endif // !defined(BOOST_LOG_NO_THREADS)
#endif // BOOST_LOG_USE_WCHAR_T

} // namespace sources

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_SOURCES_LOGGER_HPP_INCLUDED_

/* logger.hpp
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
*/