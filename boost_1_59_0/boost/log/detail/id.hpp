/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   id.hpp
 * \author Andrey Semashev
 * \date   08.01.2012
 *
 * \brief  This header is the Boost.Log library implementation, see the library documentation
 *         at http://www.boost.org/doc/libs/release/libs/log/doc/html/index.html.
 */

#ifndef BOOST_LOG_DETAIL_ID_HPP_INCLUDED_
#define BOOST_LOG_DETAIL_ID_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

namespace aux {

//! Generic identifier class
template< typename DescriptorT >
class id
{
public:
    //! Native type of the process id
    typedef typename DescriptorT::native_type native_type;

private:
    native_type m_NativeID;

public:
    BOOST_CONSTEXPR id() BOOST_NOEXCEPT : m_NativeID(0) {}

    explicit id(native_type native) BOOST_NOEXCEPT : m_NativeID(native) {}

    native_type native_id() const BOOST_NOEXCEPT { return m_NativeID; }

    bool operator== (id const& that) const BOOST_NOEXCEPT
    {
        return (m_NativeID == that.m_NativeID);
    }
    bool operator!= (id const& that) const BOOST_NOEXCEPT
    {
        return (m_NativeID != that.m_NativeID);
    }
    bool operator< (id const& that) const BOOST_NOEXCEPT
    {
        return (m_NativeID < that.m_NativeID);
    }
    bool operator> (id const& that) const BOOST_NOEXCEPT
    {
        return (m_NativeID > that.m_NativeID);
    }
    bool operator<= (id const& that) const BOOST_NOEXCEPT
    {
        return (m_NativeID <= that.m_NativeID);
    }
    bool operator>= (id const& that) const BOOST_NOEXCEPT
    {
        return (m_NativeID >= that.m_NativeID);
    }
};

} // namespace aux

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_DETAIL_ID_HPP_INCLUDED_

/* id.hpp
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
*/