/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   singleton.hpp
 * \author Andrey Semashev
 * \date   20.04.2008
 *
 * \brief  This header is the Boost.Log library implementation, see the library documentation
 *         at http://www.boost.org/doc/libs/release/libs/log/doc/html/index.html.
 */

#ifndef BOOST_LOG_DETAIL_SINGLETON_HPP_INCLUDED_
#define BOOST_LOG_DETAIL_SINGLETON_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/utility/once_block.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

namespace aux {

//! A base class for singletons, constructed on-demand
template< typename DerivedT, typename StorageT = DerivedT >
class lazy_singleton
{
public:
    BOOST_DEFAULTED_FUNCTION(lazy_singleton(), {})

    //! Returns the singleton instance
    static StorageT& get()
    {
        BOOST_LOG_ONCE_BLOCK()
        {
            DerivedT::init_instance();
        }
        return get_instance();
    }

    //! Initializes the singleton instance
    static void init_instance()
    {
        get_instance();
    }

    BOOST_DELETED_FUNCTION(lazy_singleton(lazy_singleton const&))
    BOOST_DELETED_FUNCTION(lazy_singleton& operator= (lazy_singleton const&))

protected:
    //! Returns the singleton instance (not thread-safe)
    static StorageT& get_instance()
    {
        static StorageT instance;
        return instance;
    }
};

//! A base class for singletons, constructed on namespace scope initialization stage
template< typename DerivedT, typename StorageT = DerivedT >
class singleton :
    public lazy_singleton< DerivedT, StorageT >
{
public:
    static StorageT& instance;
};

template< typename DerivedT, typename StorageT >
StorageT& singleton< DerivedT, StorageT >::instance =
    lazy_singleton< DerivedT, StorageT >::get();

} // namespace aux

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_DETAIL_SINGLETON_HPP_INCLUDED_

/* singleton.hpp
Du/A7P7ILQeVVIz79qSC1kHYLzKYF94EvsOgismH+glFM/rJM8tdGhgGk4jRjon6JylePrQ4stzjwAWPa2yd707T2Z3j1U2f0muXHAmw6ZG5axj/yOk16wYCzkYGkgPgDl6fcqh3XN8cPdlftOyB5BhuPwB15NMuKwXJ2euMOJ4uZDaB4L4LhyyvbN/5eAmz300hPgL+9LSlwIcvvstL+MkG8d1E5Epmvz6f+KcG++TS+z+w8jJfoHa2QhoRWXPcCeGnrJbidZJtsv9QGmt/hdfeV3549JDgxuZEL0467hAbDHFOJ19JK5ZV0kF1kgP0IybuTpCGBbTssuW+g2u5voo+BbkDSJ49Es/oKNTuwr7OjCzZUtcH6KIiKsQpQBCnpzzkOM320Z0yR32uTuDj0LYSUBRyiQuUwsNIpQDSwFu9z7QDNyollEKARqCMiyzx8B2BfMgll+qg+EW45IuGLM/KwtnC2eWhaH35ELCQVCJoRBjVNGxOFgo7LWcmTq41QtB9xRcwnZnhnyaCSnU94mfDSyzORPILwD1WWkE7gDkYf5S0lwK5TvK9eoHZ31UIToz8x7J1gdYS5MX46SUjLggdpDeUHLdwmQzCcfPXugYnTmj5X6VquoXps8J0kSgecaI1itpy6B/H3RdnZQFtMJhrgLGeWJ3AyAzh5TXdDuIoj8GCApMJINRtx4p5s2gGuK1mMbrMIsZ5yr7JbXarvdgMANilWTlrK1AIDmx6fy2PL6uPsSB5ky/vFpbGMbRj+tX9R+puZLd3Fh1jojOu0pPdZJjoQpAD42qsErJD5xdMQtLgaZGkFfhGXiJxcnPO1525f8AXP44vzL6JXMiEHxacxgzeeM2zt/+9iOz/h8sANOJgkHDw2jw4xS00QhADdyLFH6hKGvPAM/Avdlw++HjYEONQbK5wxjSeJUbhrORD9QoWI6RKb+pOAyJbFEyACHlgwVwInZhaelRdTiiCMzHOF3XN6rwbLVULmjEp0cpaYHt7rSEmOHRjIbMpG/w4ZYLgV6oyUrF6YFKuNZzKn9lU95p17CmhLhMLH6/+LttNvIC9z4sDCbdQ46BMuhcl1FmjpM0pY2TUZ9xUKQ13jdTBMlxlTatDX8KVfYVJQlJn4OB+fTmUdCcmXUQFmJDVCE53NqwTiwznHsk/AdoiSpX/o1wcVe9kmjaeMsValMPVdghNc4YdvHlsoNiMhhoyT0SZocbjKLDX37vGgOGRbYd53VkRtblBsYTFY1Kzt+obqDfMAe8IP1vskIHrrMKVyt086Bgz6w6msgWxPYWHF9ou4hZnvjrHYuVNs8an7S/4e6MUHXIbfhsAOstigqD+3HMjbguQdauBrL9xDFNV8fQOQYLLPgt5Q1UBZUYdsMrbVV7/1eZyv5hBI/QSid164DU2Ly1i3/1Una/McFpeIPVpCibw0s0ncosQHciaB3iXLx5P50DMITh+MWE2Rh61ppvxvsF5Fri6ke595p35owo3zsJMkcK81Oeu6CXV9kQLYZdhObAm8Bgq0Lr94aA1En/YnxyDPVTiSYHcPj37IeCh6qYZLVMVJ+dmth5lr4zqgAuCQrdyxRGnjFDP4laZCpAB9nO+M5fUOZrUgUvmRLjkS8GDFYtXStxbFxuMEF9B911W5do1U4+qnKpfPHyEg2sj2sSbS1BXmVdQ6xJ8bHZYBR6Jef/pNUG36JwRGHJnPXKyuXa2+KnS9Hvl5qleueYABiz505yQdk2oaCMNxl7FIPLgE7HiN9SNg8bEl3ygYBswpP4UiR8ScAQE7NdDuMJ1+HixKi/V2Oyjy/o32VElnrsPzoD7D1mvSrm68MtlnjWXXYsTruvnZ3Zf/95WIfT9Mts98oTbX5rAAJyF05f5k1nTrSg0mHosD0r7aEFH4+HPNLVDFB9oRDvb3Y5Ze/gtRBFsin9pak18yBxqgHnyegLzTLzyXWY5hMT9cN5yUUXHXElub9ZISJcAG9WFu67AaIfhLRKUkzXEH2ZAr+5bwN597PUgnA2As30ioen4bdUsHQoAkiNjvAmsmyOr5s7H/iBXRxqe7WuSYjqRUx8qYnzU9H0D8pL0LZwGKuWLhnzCpYyHQsxDcHqrojgnQtRd3uldGIS8hjmEgMyqJEP+Yn7hvV0VPFG3ia6jXYqi8zuiXXwCGfyD6KO+qluyQvgPpIzCMp6ldFPZ4IaA5fgn5/SAQ8WccdyIT6TQZew/N9sSVdlzwXSTWQ7RYcyZEgSG+yYIBW+oTfvMmcvr/mwN2DEDowpOL+vJQAgQO3JYGe+ST5QWUXlyGcISghW+qXNJv4pn1GrBa9MEHaECsjb7wxuY0LZwodXN910tDYacRA7rhNdybwfFh7vmjindoijd7hDQh7hG8H6SRBaK0LL4B03zM4PnZuan+1iTHAD3KseSDu2MwofrE/4t60v63obF/91YDygl3gfIuBdT5OI6TEM3ZPHPCnQZgteTGqmDyUnh5oR+qAl9ez86nTHkox24Bp+Oht9VPLJWJJjkply4RnJtzpEG3OR3InplUINQO3tZKXXcqxYb5JIVRr5b10igJpjSGsccGBpyHVWV6ckEpKUZBKbL1PE3X8Ud5cU8omwSoBZYaca9jJ993iLoAdQUma0JGI94CMoOVr2m19n5zx7Rl+o49nV85M7jyGBZp9pk19EbJjjkFYKkAOTvdFui+OGZpcLOoteMak2s0XQg/ENE/c+XeFToOrgtjl9OkPGHToxQ83oaFzt/vmqBObM67IPm6/kYcWB4/StGhRORkH4xVwTMI2Je5b+PnFr7fWDzbbQ0yrvbwNpnqMoRvDpG9uS/I0ix/9uo/8EXNxrxBkguCIPxixMwXB03JjlCR08rllTQAQiMOO+QZ2CuihcBLYieaAKvSWRE/W5c5LGT3mB7jElZaZrn1bucVgT/p6G6aHghZS4jCO9AcqoBoQ7NtOyYChuPSWMGR5soNE0svk6DbooqyvbzsMvoaxh04yq6ZtNMMRiDa/ZPzozuHCWEvTXEdfWOWkrCpp0nNqIwWQZzJtTCrLopro6EpRoPSx/svfA6ZPR+hy2zvMmu+TKKL2IqAmcxJnMJDM99JW9orUaVVKuuxcKMFw13SGUPIXrUK15We2xtZtnK4Wa4feg2JPOuT+jBrLrThINfNDEtARFU8CBM7T2QS0F6+AhjO4JSrIFCDYDh44RLQq3fakDCNwSVZTwtHCYpo84ssS4LN16oAOGX7zK+GFzwmxrCiInwZx13/NIGjaRuYMOVgrIQutPeQz5Dpda7SBt2OHcUSz6eNnBl1DkBJOzz9Tocf9H/a4fky40toqbLL5z+C/TmLSXYqBJX3KvyPXwIv4u4vS7ZADZyR/KihJSnLnJtuF5qQ6ppl4gV2+ktUIv0HNoLMJST9VFZMHYzHVYQdMQa+ZKQizEfbf+Vbg+b823v4vS2BnEz4/OXjM6PebpDQtWrZNwyicaVoEE9qR9vT8zMdE1iERtkcKgn6l8FvRxdcUKTSh/fOylHafr5R4fu+JdDTXQ31fLfboRjP2rMSsPytsoXEVRv1rDdhE/35sKbHn98fCMOZeDz+O3tDIJj5UoSy9HJL26RcHo5fD8lMpgcjas9acT8D5yBz+XkPEKM7tMBryMbavIuLF+acbPSd33seZuq4jBGxXX/XaIXva7j7JODEw6QgaDDjmKQWO+cerAp9DzxAop+4EOP+Wxnl0fZm7MqW9bNP3JRrdZ+njIt6Xf0893Zo0aX3lVG1/e8QSfpo7FvaayrYvW14JRbGkF3a3yitMyPmDWM747kBsD7nl90ZGSCQMK6esqfTI828Sctl63+dJ451GwvLDRtn+DeLCcxaMrk/TuUHTasbb/7R6g4j/ZjgXBGGv5+lF24g4nPKZnPZ+C/n+89tG4xXqTfzn4fRH9vReRz1qmRW39XxbTlMgUeFf8ujTSt9zyYqdOJPpYtq4NZmMZie5u9QczRu8isn/CdBDvXEylPkdZ7P4lPvLfSysbfJplNFCDYNcMEKoVJmkA4NYQO/1QBwYyWUpBEKhR7viGMeYapkI+yFDrldt2iLrgcpx7kMmtrozoCIhdkygMKiMHKctDKf+NbEefaqMmMnDe377ynZO37u1srs+TT0+2n3K/ZTrMeM4/Zj9y7ZZBaIAlqnOpNvvHTXb8aYt32AESQgS3cH8wA/ZtbuOlMljplmuRLHYPFYSENEjVcx+U7LkR+mEOPyZALQ/5vgyxd1bElIvCi5ob3AqnQ9I/vgdAN7HVbhYpQBT79lgR9/Mm3sLdG82ccFUruipVqnbHBZqnNHbFHfIuRFJThxJotTMbdlBcMnyz6U5awOmyWXi0/lEo+8QLjkUz5v64D/klQupXAPFrn1fNs9QIDlaNrpaFCaPODXHtu2CWyjDmW2A3YFVC5mlbu+vzaDvRqvwYQaPEh0gtfj8jqx86WqLLnkXP6SSNyC3cRxhaYEUHC/YTHMDml3nKTFpW1IkRtrK4xB2zmuZoe6g3VzzfUYdvwacCSEgVFntk0Bv3HiDdVPg7aSAMvvT+AeQ+vcjl58tu87K76YwFjo9sJNrLldzdyC4eB9xRB34dK/t93kWU/kQUp+kbyM3yjGLi8IWrp0gdzZZDAcXjzz8nf7enNCh0FIRIrz2LUNoVXYuOD9g41DkzxbRypdqFXtLPKCxB4r7wn9SNDBSqVtoDzoFhEomZpVlptujDbxurc3x6Ium0xoSQvLA0SS7FxJBVtTRKz71zSesQ0l/MbraTY6j8cyqWh27YBZ6XLLlYqOrz7Na3/xN6esPDqXZtDFG402dfKgsU/t3k6ZA/YaFNtEwD6B20cmFTQN1bbUr/T9V67VvMqMS8aQbN7VW3cVWo2C1auVS935C81lzkPSL0qai2FwMmQS5cIc7V0mK+LkUYQxsQGipqun36zEJ6cmquQAznHP+Yr1QyaA+o9f1FVoy7DH/D4pJQ0D3fRPnOD4UwXa9GUtElaQeB9JHiw/JYM2+9FL1qhm3CP5QbWCLbUQLqvvL/FbMJO5sqmSTltMhcwe4VTZw4XdDrLn+yQS2Iw0sc68vB6s7MIdd/mTBOSTlUsa9RF+ERQXQZa8nHJ1lPhLpJ5vD6ZKms3AcOBVhlwMBtBCZw2DeQMqbC32LZoyWyMoV12tKY/ALt3LGl8em8TXpZrdSRn1HI9MCf8Sw/z+sPn7lOEp0z9PFfUNgdWJ/wt5m13iFB2YGlcYJfSKXTNuvA6FL525PGRUGL+M+uCPEPNUzwpH1Xg3SxFAQUirGMrnnwzBDCnshbAyeqPIOmg9v2Q9RuC+AkYkjkxBZ2dHBpn/q44RNC1x2xTf1jfrUsDp67t7goNrqZdLUqi2rm2YxfvdWmPxvi9sxWODnvDuED2CRbAxvaU6T8MuQ1H/Ni+R8K6g7BHF/l8PWdYfu6AP/m2wRMPgCwfQTE8WkfAnVaPraKhFBYbO1U0ZnkBrQCUHyM5KRZuTRpLIlsSS/1YAp8J+Vh7AVhb5176dHGdRgLeMdmBFq0HW7mPedXQ3+hYq2DZIUcV9+z1AZJAtYp9++wYglwCZW+hjF6ib6J4HwJgggW1oezwm71aO14lN6rY+IY5JSQyYP+6KyDyJhtmW3nEctEtj9O74lnSM8wycWIGpUJZEPn2DJonHQAqt3ttBQFUo0TjTgZ4lROBxoSqO7La6XfW/3o0uyvt9e7shfzFscMMc1g4PMBP/g3VG2xt9Ea25kj23Sj6d4hw6iMMQ0F3fYHBLRjd9wjjHI2hqpfwWui8NIDV8gjHA4oTCxFYBhBmlgeEE2u0oH+cywQYFvfmAcT+FZ1BYu8OZ0YFAULi7M6/tlvkMdS3r/oXo8r8B2OoWrV/okh820aE0AnqFinKcC5hfj+QsQTBiEYCKpYGBJZcNgVbUuHn4r43PUoIbmYPNZ40ZqMCZb4cAp64IMNXdfdePRz8F8O2M9w7FyxvALmXqT0plMbI6DqBqzjrK3iIfMN1kFhm+uYaPm8LPZc5bUlUY4xmsuNJ/ZDv6i30Qa/rBccc0iN4cazr0ie9qCbmGuoKV12iPgcXIiJLfdmnjL4iXXkVeT53IFxVuV8jxMnZRdo7+Tngf/Z07exzt/BR0vTC0qVy35gEhsSt38k7Ds3snk+VtluiDcUD4xKhqHkLmmwOHtEVDw2/rzHQw2Y56RiP2zBso6PmmvQnMcGH81Uc5dln44Viw4tmsxmJfu5lDYWNw+d0ShHnG77SmFE2GCV3iQKg2A2Z22vXxGSw2kf3IqK1NG2SNDAGBWOhhC58CuxCRbz/lfVCNj0ZId95jwSZLUynL1WVWn/isyu1OIy9tFFuhio1LotDJuwrRw6mRaxbaUgkmio+d/ktSlWGIRIOjbui328aCBFxvLCkV94QtaFXwA4zg1GJd1CvbIFqkhYiXkhGqFqJxW9CYY/pMhnm2Q1d7mRacH/AkIo4XARo8EM7Jnd6Dc7aTzV8/leo2mC1N7OakyqvEIWes3EaJw8IR4wCg0JKhIDCXD30qx2q5GsgHHuF1vtLK1dGN++eFYAhzvd2zDCE7+iYrANnQKM7OK+BwPrPlwwcvMuxsJwF5yVx7UAuM9bSLsKtZ/bxkDGxfS/iXG5hoZITc715tij0UP21jqTaqrierai+t+eN4uKR6SltgbTnoxlwfZhMEYAG7ryt95UNqZ7nFDyd13DSNnUukF3CykIAXrsRG4yGhHF9mcKwuyq6jGJHe3IRxBf2oIAgeynwcSfwYdHqzWXVDCR6c3V7fKagqQXc4LEOe5zNQGzPsv6SKt/O3sBDaBvmFX6Bus/vIctugnA9SrnUguOsAXmLvARe3CvJyvFN3q4sbLhR4Xi6XL9NeTec6iA5WrWiyj1P+29KqNHpjOtOHh3/S1kFREIyLEmm71S/8SYmDK1VutRVvNRc6lDz0ArWO+Xq3XfVUhgetWX5AmKbFA7mQIFtHVBAF8h2T9B0Q4eTUKgzf7LIMEeF3xV69kUYMGHWhMGVsqE7+QbuZFO3NplXsWRW99rIzHGG7xcJOLEFnwhTsxLFB32sBttTt3/QAoYJ+4A6rCmfZlU2gw/dFcW+9bTGqTusZr2mvQJFIN5FQBZTgJeT7Q4zLb8n+gR+x8MrNLNQIGl3PabvjPMFdfsNMv1cnDzqhLj3UaZu6BafJJQBQRY9jlcwBJvzZi38D8lifkwT6KtFP2FZvkPZNn4Dhg2bJ/JXwY16GUOtHxq5PR4MSOGV8wCthh47n+A3SlvKNVh0GlI4Cz0bRLrcPXDoYgy7ibciK4EotDuODcBbqshI1MxEfQPjbQEuxj+PLzAP3/CHflcllqLIm2RCMCjtUATlSH5iRAUHKmpa/fgSbfhZ3czw1ZiMk2qCINPePkUveohyk+SHm3HwAXV3bMzuJo4oy4FrbqUrvqcHnPJkggXCEQsPTzy29T1bHkRAeze82JxpJFvNO65h5BOLeM4Fm37eQwZCroV2S62muUWjL+Pdecku35tVoZP5Bsr8g83M3rjMfHkBy4d4VbPrPmqIdfKl9x5BHSz9rtwL1MWvU+2mw/KmW1Plsx7utt6HhfEZFiJH7AH/RSlJG7szQtH3qTOD0RokKOZCMsxVsbFlDE85
*/