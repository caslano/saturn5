/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   fun_ref.hpp
 * \author Andrey Semashev
 * \date   30.03.2008
 *
 * This header contains function object reference adapter. The adapter stores a reference to external
 * function object and forwards all calls to the referred function.
 */

#ifndef BOOST_LOG_UTILITY_FUNCTIONAL_FUN_REF_HPP_INCLUDED_
#define BOOST_LOG_UTILITY_FUNCTIONAL_FUN_REF_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

//! Reference wrapper for function objects
template< typename FunT >
struct function_reference_wrapper
{
    typedef typename FunT::result_type result_type;

    explicit function_reference_wrapper(FunT& fun) : m_Fun(fun) {}

    result_type operator() () const
    {
        return m_Fun();
    }

#if !defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)
    template< typename... ArgsT >
    result_type operator() (ArgsT const&... args) const
    {
        return m_Fun(args...);
    }
#else
    template< typename T >
    result_type operator() (T const& arg) const
    {
        return m_Fun(arg);
    }

    template< typename T1, typename T2 >
    result_type operator() (T1 const& arg1, T2 const& arg2) const
    {
        return m_Fun(arg1, arg2);
    }
#endif

private:
    FunT& m_Fun;
};

template< typename FunT >
BOOST_FORCEINLINE function_reference_wrapper< FunT > fun_ref(FunT& fun)
{
    return function_reference_wrapper< FunT >(fun);
}

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_UTILITY_FUNCTIONAL_FUN_REF_HPP_INCLUDED_

/* fun_ref.hpp
KmPYbFrdChpcrJ+Jjqehu6m90vUNtmdOnlfryqlY9ctg2UoR3ta7cZ5DsXwJ79b37W6C3Xeyr/vAlzBRzz9M1wX9j9owJC8YeDyHnVv5cyqxToeLbURkXV8fFeEBcE3g0BqOh6CiGqcYqy1QxIEd6u2f2dSyqOVtpfvD8+6jMGw9uhm8+rb96+HzcvXp6uy75wz0SYznw8CMFdgum+O+x4QTfhzfjTevaPxlvrx4y1zTfwwnps8WElrOFsJ5MX7rTqmb7gFf3wtZ982LXPx+nMVvn3EldO6l91huC+Mn2i3Xo1ZZDScNxaBWnrQbD5oP9T+PohRMUAUWCvSmLwKnUv/QSwVLXwx4hF5KCFVW4QtaOYLx/M/r8a9XBomSwV/E+zAa8tmFaoRyp+JH4Hhci4kaUbCGcF6/uW6/zPCD1QDz9Pa+NyghuuaQc/t4yf8o7/ny0ciuG+z74dKsLpMTNgIty9QEVi7kC2+APdL2HqifBn8I5UImQJgEbhLfenhAXMHgBfDd0GogPgJmNPh/I7t3A9/yQrCU+XOjHdoC65qR9doDM4EDV+8R3GC98qG+4oVcKHbSQx7aAemo7fHeEiC/sFH6m9CNtsJ34wNuCwssw/SiAXoL+4+g9H4AziaTELPAHHZCNhJ/zDHT+wY/WtBjHW6HMAbY5IJ+wIHwOejXGPh7MK/eUL36Yq6yIDG4+cvpAYPB37ZbEQgZOSrgfarHWuoP/YGNuuFRiYDSp9SA9XsYeyF6TQbHVcT9I70nyVhZfstPPKUmNDq+yzytC1xxhvSaDex2R/1I+CagJ2p7nJ8RzADeitJbavjKA9ud0lvqPa9e9A4Sjn/ANx2Of+LpkDKA+lDg/hDwQZwsTvqpDgeJfOR/armrALfJFzCS8R13d8X0F5+4PAjm1YMOYvi+O1CmMCQDahaGgH7XQEVQzJsfXJZQn2FdSWLJeFAG3ZSGJNLgr6NCpf/mRKB12+hkhL2RrkkwyEUPIp46FH5aElMFYaYRwkJBNIZdnZxJL8xA0VHkmmGh/uoHhXa5bEgvAOdhzWISUSLqATU50blEEyUR5z2kvzcLmuUuj0fzUFGugc14uKNL0V8V4XHSSehw87xqmSJ5s/InGYQFAnqwg3KiprpABiS1ExzDFR68UHkROrt8LqW6cg/kfW9qwdU/FgatfyYkifMnS5L66QPll4IdmvRyRrA+zqlZHRkpY6iQuG6Q5OSkKANURCy74t3Ub1kHI98SZ6ggT5D+8hWPkXI4voL9EWl8BYjXOPSvLfnTD/xDTfUCkVgViHLhkS9b15KrfiuqPo4uT1omrzrI9ao1tPLSEFAlG1mlEne0o38u4YXWDPgzHlmggkiXEtwBKRKThHS04zMXGUZ91FbEilb4EIAHLkuzmNgWmT/AVFds9u4y0Zqa9pc7SIJ9KUUV0oITpbMG/L6pFjfeIV9FzDSPyvCSPcg4E/sCYjzAC1cvqEiqPLJH+6gqZ+FtfQzkDeUbIliHeA1JA5YW4dBM9OiCmcJY72ZE4Wjg4cw+Dlah8WMYtTnUnurwgfldKbARg+I2rtINzF+CJ3L0aaKxXvJpmkWccmcXqtPHiFVhHo07BCalMdrJnVoeMBv1nuFi1F0DZsVpb0MmAy1BmgL6TVKQTwtYRp2CQr5NLb5/gljB+0lDo5ezN87VIMUbePQlMz9UXX4MJQ4QLowpGuvbCdPjHB7sBGUau/GfL4LItCKSZJZaRH6DSaVpohTFpffdZH5gDQLoJ0N63LyQ8buAXlVKluDe+59d8sWVtn3Jm2hkI+1JdcMf3w4NhtZVf481PYPtpik9WBp0yjqUaVjGEu9u+molRhFcfiLKpcoRgxKf7wgodfYV9gKqKqUcH/WgodCyRrDPSiGGiIIgdVZMsfFXbuvr4irWaJAEOtKEkH/+N3LUpFDalnzD7ZtEf5X5dpSClcupWMAH6T71wlHlbcpnnwg8YwxXTrCVj2glVjRAA+vsyPhDbvUYlhIsGRqkfbUkLVYEWd0h7WW/Kmq9QbHR6JgR7+qQpx1SMjd27TPaCuNVSTUFVYh3kvW52rLo52Qnln5wEFT+koyye1oxCxEzTK6MK4yBqIdVNMoQFlIa5/pbAWY9oz44IRVLVmBww91UaeAHE0WJtq795cqj6bev8lCPAutekkDdmUFJshS3cq+bZKBUzw4TNE5IHHUkKlIy8N0zYqMAKrCQmiwqx9VOY/pkWqITMmm9buebV/LXTGB6sPJoJtfVLidWzYydF1CcjJPqRx131G+VrMtSyd1XQ2T1rurKXJRaNzmJXzOEPEOzGhUxxOJXq1/HWkV5c2U9yrBPFW2rUy/AX8SYlxQodiO47bI2chLjUmkIsXVOHmegnkGgluZenfe3GqqlSEE7RaZ+GgbJCkqR4CsHNUUHGZZ5NYyhhWWwYSwYP9JjkiVHje22/R2hDbOf+s0+pOgzfcTN/t4ucmazYwpQK1oH6ixKQANhOYTj68AB+6bbW+8SfCtaafdOkM1ZLxnDj77HHVKterBAkaFOqmMQhe5EarzNhAuZ5pD+1OZNTbXvVNvNT41VsLYuonpX1Zru51BQtbUoVjFpWIKo1L5cQ9QaTM8K7SGciO7rqFFMK19RslibKD/ZHy1GGyd932yeEVIsLwDK2Mvy91NGaQ1q1OugutA8dgdiaHvsMjbVK0rIJLwPNaE6Re0Bq1aMUFMQ/YHYCJf/8327kXEj1Suv7pyUxkcNk/GJUCD5jD+lkqxK/PW8PTKZ56rF4YWLCKxAMsAUaZ4HGmYYpS9NybCd55t3qC0QTVlILINyO1J3vOW2heDCXG+ZiulThjD7K4xlRx7WGfae1xiHyjdq5Piwe8ie9a8dBiwHSjWaY0kSMtMjBeG5Ia839MzRbT6+tnxti8ybN+TCBRqBZJEdgaVE3QGVqqDv3PlVhw7dP0bVU1L39BsvDUHdxt3OSZZ5/ikFbfXeJEfDPe9HMAYqRcPDH6a20FraB7bGahi/oZKLcQT0IOfQbwcIWBrSLgDcsbXOGb8UZrxRspR72BqM+4WMURkRP1wKEvosKQjon/GxSOifSPam6Ea4AgdvO4yhdtmTnT8uV2L2ctC1zK5Xep/UU3bzIibGmUPtuXYHBUpRevLvqf8q552b/pgDCdWl60e6CXjg2MI+9RQ/Kj1oEszc24nup5gA5tVpKPxsjwQEFcsMv+uUpd5CG59TXlJ624UvIPcBYZhw7inJBr/9PGqKt8+eEfkT30JKPNL6Yv69SQyRtvm07AaqyxvyXlDew+JHD6NA276FzVsUW0T47vmjGwYM2bCneI2+yO3/b8dZSc0kUAnlfi0LRHYneHIQH23EbTJEHu4RbTO2mZDc8tAnBb6IEGUHgN0cRkIK1Sh4Eq51Dorqw7wGE0wnAZt1ABaHuD4guK4R+OsZJri1IaIwPiIUiIUtvbY0fsmAJYkhIBWGOOKPSBwgKfZ53Un82GUd/aAiyFUujG1+XilirUUjBq4cfO2dJ7aDcAV2pViU/gKzqXkjF49a2lJgV5J9aEiJWAdp0EWURRlF0lAgL1aMMT/Wj7u7biEuwB25DfyIWSJb1qY/aJ6MloqOFpDHCaByw4Lh1K4Q1B+60ijpSScuHDXm569BcKwZq0Y2B1hWOGTv3mwKucKpbfMphuV4+lXNSOvgAfaYqudhsUKXhAzc76tnDp0Sz4q6uW3jF4wAyrq4DX4IQLsFmGtrTMkl3W/7KnKwEfDKTBwx+YoFDbsa9imrB40tzM14nLC5SFTCowOWLO0/dH/YUGPUkrBf29ejSzyTthL6lrwoMVPqmgClGTx4lktM4RUnImbIR45Pz0HZNldlPDJ9hmxHhg5rPTXoGAzBzAYDewmmBksw1Hj5uJuHAG9pYwBi/Us0ZWPEosaMMsPepP71wQKPo4V1FLetnfWXFmZhy9D9M1RLq+HSqnxEOIe5fsT5LtJs1pw7LGAdX4RAa2wEpOrYABbDzjOyrvfEykaTOjBZ2gdD3Lajo16UZN7MAGcL1lrVdzGxNzvEcJC1ARGzVIrm7DUUjMLVbsfUD5LwBztaM3brqKNGZWeZ2SABMWU3eLgbdriT08T8o8RYdawfiDbiXbjRjWFbUp9lS60xeW1RGHJgazG+iySVbborQIXIaAOGrguWuKn2z21gvEAkm+073BMvK8taYPCp/3DlcjrQFPwKfYe1jgvkj3lMX9XK2jmBy8oVo4dW/vZ9GCC7Jq2rMpg6zeh0ZnpL/6wU+T37pZJXTEwroLH9lwN4vLKidbadzcONvPVsLsC5hoy+pW1orL+1gglueBlo5AYoG/F1jMI0UcIfsDEIldmH2k7Qn5FtbbGhJtuNvxx9W1X/dhEI4nev+2jdCdzt3chbkSXsX3avr+EINWp/HzWRxlVdK+sXm25+my/rnFddqWJYqjvpedFz4vg+KhWcDqYoYIpD/HQioM3gbyufkPS7jOjCH3qtjHUApJGg6X0Crv4/+ezA1AN66Dx7wYj3b34a/s+f4KkyuQJjEBnQT/JqP5GIEFY9/rduyLzCXuS3JRoCBcwAtQw/1EGXGL139U0tHyFGOv6cFEW79NjfbYLI0j5O4LNvV5WCFgBM4DMAofThLYLWoKEzNdKXACyB9CzmmACpcAS+oD3Gvn2SHxN40cAKSpnaAT2kELVOdbMNTC0HQBrY65n+83GhiMbPfUNYhy4AU1E7af6f0JkiO1DBmFi4Wrdz344U0Lf0+i8BMn43n3oNgvWfZhGvFQOCzi8vq8qfRppvXhCj33PnO/OHQ0kBDU/I2AFM6CqPNII9/m9X+AQgYzBs7ECMHzd2e4HgP6LOuzjv+ob6AI6T9HLAiFATP9eofgwop1h9pVa9OLdptP5Q8YQcS5iA8qTvbldvA02e+lYMkXkEMp8zyp9yIEJHeohgC9c7BbIfVpPLGI/L+C9sPxmqPwrreRAH+OqEryu3O+gGnyvxdVWoEGkEvPqGv3f3Y0G177f2s92fRMUAsLLHb+ZFBeear5CJkeFvEn6EHJ93/1XzQQa0oR0A8Ire/sbrDlD2OVjTI/8d9xfsdsSJQCDiSP+FmuMZgOFnDXj1m1Y7T0kYnaawd9LczByyW28IkQRVRbAGJzoG9qpXdFBoZvDegtzVT1I+HgS4bfAz4qf3wX9+bhaNB/FqYWLHA1rJWQ0NTR/38ST1EudRENIUHOD7Dg2hstyfLX/iSsd/l//pOyy34SPp6rsy7ufQ571H43Mn+BwSxU+2yG/FS2l3r4d3G/Iwhdw8gBRWInwtM73DH0J0BTG5WR7wm156YkFrt6K35geMqWNnIF/4WxU+qH7rULKU4WfktoeXdA9/RuzxBPVHiYnMdZc3MOVSD8yvbELvfX4QLR8cam1hZcrPQkZsdOWH2mq2yLQH47NmPhlRaY8+7Wsd1xzdj8Id2F70AzwB/jhjh00+/GeF04/8cyHZb1GH4eGHqh2t3TS0x5mZI8Y3gW41GQuFRhs5XukNfOTbEF0cWTu+vBY44MpiEqIRujaJYumniZIh8meSGbiitEkwa/4HoHxR3nS5OR/2osNfqX/udgZn+UuHRfAepchRwNXvz7vgCmK2qpgY2TtZfiUoejr5HBgX/SlJvvou8w9X9LXdEjYc5XMUSJ5twLs604+ivx7f1R0p9EjPEQsx1N9xO9kXs8wfRWcXABYArV5oAGJ/QAFAAnAFYGc9cwCBEFSBBxRZLRQRzFskP8qQaIBMvaZ4NKQPeItXL215v308pBf1KJDYgrbqKkYOBTQCCYF9Cs1zrKD3FD2fcXxa7KIMjNGl3fIPvZywo6eLH+WTAJEfp5Ee9BBjIPGdzcH7slKntw0d6p5yZnOBmVv1LPBAkL+PNd/RCQmISGCfKkwSIm2lbINwn3AhnUFfOx8C9mFgJa7xepVPlc42sARlfWp2qMU/8S8Eto0gwpf8MHc/DJ9xiEgMybk4zyJvBNmYX9hsBIgmAhwsc8B1SdDGj8oRAN826r3kJ0A/TugE718uuT2KN8oiPzIA8aPfS8hfZbgKCIoIfdBfmYgqQ4+5GhibW5/bXd/4HT8/+mtE7y8P618x/FCEfj6RBqCOwOkrV714H15WleCBgV92tfP+qZ6R5ByJjX6kfj7UVkl6zq/Q035cX3HtjyMHrt+FlEA9RnDnpwJDkN6u2sLECgo0T7B+8o9WbtHxt1I9ZP4kCu81poEkieDieDz6L4A4mTtt8KnurvEyPxXwirmOd2mVP7Cj/Pzife9fK8TOgKmhcj0O4JRPy/OTSIu434lxz3TL8vg2n+JzzY61La7ujlUDO/xwbw9BaGISjzst29/fGGAquN8/1ad+DdSB6ktNTSC0Tz/XuJccP+4XGO4gYiBFR7sFvVbE/nnrIWDfM++YICAqtZ2VHFBEhK+YKhR2JCIofjtE5N+P7iKvyzi3xOUEVyhDIQRSYuEtfcqY0OMQQgLJ4kRbZ4E3b4Cn0hTjAgKtSoIC7h+CApv+2/fbgf72+qH+qx7wgH2o8IABZjmb+b3AuhtaQltwQEBNwJ/AEcLEZ7BaRs8x4fn1Dc/fQlfk+4IwPyaMECqGZmY4fMa4+CpIMeXUKodgL2b4kRWlLJO6uw5j5GnNV1OsjiOsvPGRGDC4EiNvwR5jxXA+W8u5iwTtq1m8uC6rOe3snT2cN5+KNmA/px5uT/fX1+vXo0cBSO0KxekKxSpZLRJd86fne9/NlZXRGSMHw9/nhn5y5Lc6hQdfX1Jup75uFNvf1sV3fKOGfkYcFn5m9fY/2rGLtQ63JyjmhlWeGzjxFndCUeLENR+qa2djWn7RB8saYBvbQkZX9rOxU8cSkSeM5oFt3xjnbY5fupO+ggd56iMVHzvQyc/cnwkSjntzEleF1+7hHjoVeDbw6Fm4NfLLvGmFeVE/twGh5NbM4wY0N7UP36cOXopfiHhTjLzmp95unrZN7InaWO3EfjTZ4V9kCH/3gc0JozaifKLasKL0s1XM9/NDxMjJseWyUBO04EoHRKMklLaxV837O2utLkbCvKK2IZCiFmIMopZyb3ebnJeZkiI2seJbFBjHRCpz2FEDD2Rh/p6divBg+CafQQFz3kECwDAABh91up2K7PC/FFCCSv4DAhsdRmEkYEyUAx4j5Sw2d5GJsZo0o44PoMVHYrBJNcqL8C6NIBsOPcZkp8+wqNTyNKApk9R/xk1E+zRNou27FsnFWQiR0HAJCNB/FgQjBrHmon08HL4elWA6Ca4zV+M0UlhKYVHrQRizkoR6tQ0nOGRhYeomM9R3ipJ0YaTyZAFW6gaKTwKrPleSAegVmkqUe38DJhoOZmovEIsc86EhaZdcyD2L99NT3y8fLxhEX10BJ+4oPopLNF8/rwitWlJRFr1XG2mc0zSWEiwJO+ZcjI6Lk4afng49bWjAkQPXkka3tJ9jZZqSSoM5MyQg3+tpEZ7k2cLxCY6KxQg0yv9UQ5YNKwVMoDWkjvszPKbc1lDNqlupeWExF0rdz3bXtd0CDyXwdlaY6/8j1U8ni89AgRnAdupFrI5Szb6oQWMMJaiQXvM22dhvHQHhP0SsDQKgMqKjvJzmEk/qbndiHcw0gCRi/RIpfBPlz4+d6FYJYglB
*/