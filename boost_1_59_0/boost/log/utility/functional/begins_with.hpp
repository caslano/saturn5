/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   begins_with.hpp
 * \author Andrey Semashev
 * \date   30.03.2008
 *
 * This header contains a predicate for checking if the provided string begins with a substring.
 */

#ifndef BOOST_LOG_UTILITY_FUNCTIONAL_BEGINS_WITH_HPP_INCLUDED_
#define BOOST_LOG_UTILITY_FUNCTIONAL_BEGINS_WITH_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

//! The \c begins_with functor
struct begins_with_fun
{
    typedef bool result_type;

    template< typename T, typename U >
    bool operator() (T const& left, U const& right) const
    {
        typedef typename T::const_iterator left_iterator;
        typedef typename U::const_iterator right_iterator;

        left_iterator left_it = left.begin(), left_end = left.end();
        right_iterator right_it = right.begin(), right_end = right.end();
        for (; left_it != left_end && right_it != right_end; ++left_it, ++right_it)
        {
            if (*left_it != *right_it)
                break;
        }
        return right_it == right_end;
    }
};

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_UTILITY_FUNCTIONAL_BEGINS_WITH_HPP_INCLUDED_

/* begins_with.hpp
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
*/