/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   bind_output.hpp
 * \author Andrey Semashev
 * \date   30.03.2008
 *
 * This header contains a function object that puts the received value to the bound stream.
 * This is a lightweight alternative to what Boost.Phoenix and Boost.Lambda provides.
 */

#ifndef BOOST_LOG_UTILITY_FUNCTIONAL_BIND_OUTPUT_HPP_INCLUDED_
#define BOOST_LOG_UTILITY_FUNCTIONAL_BIND_OUTPUT_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/utility/functional/bind.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

//! The function object that outputs its second operand to the first one
struct output_fun
{
    typedef void result_type;

    template< typename StreamT, typename T >
    void operator() (StreamT& strm, T const& val) const
    {
        strm << val;
    }
};

template< typename StreamT >
BOOST_FORCEINLINE binder1st< output_fun, StreamT& > bind_output(StreamT& strm)
{
    return binder1st< output_fun, StreamT& >(output_fun(), strm);
}

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_UTILITY_FUNCTIONAL_BIND_OUTPUT_HPP_INCLUDED_

/* bind_output.hpp
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
*/