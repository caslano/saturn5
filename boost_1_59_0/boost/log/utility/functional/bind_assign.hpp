/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   bind_assign.hpp
 * \author Andrey Semashev
 * \date   30.03.2008
 *
 * This header contains a function object that assigns the received value to the bound object.
 * This is a lightweight alternative to what Boost.Phoenix and Boost.Lambda provides.
 */

#ifndef BOOST_LOG_UTILITY_FUNCTIONAL_BIND_ASSIGN_HPP_INCLUDED_
#define BOOST_LOG_UTILITY_FUNCTIONAL_BIND_ASSIGN_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/utility/functional/bind.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

//! The function object that assigns its second operand to the first one
struct assign_fun
{
    typedef void result_type;

    template< typename LeftT, typename RightT >
    void operator() (LeftT& assignee, RightT const& val) const
    {
        assignee = val;
    }
};

template< typename AssigneeT >
BOOST_FORCEINLINE binder1st< assign_fun, AssigneeT& > bind_assign(AssigneeT& assignee)
{
    return binder1st< assign_fun, AssigneeT& >(assign_fun(), assignee);
}

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_UTILITY_FUNCTIONAL_BIND_ASSIGN_HPP_INCLUDED_

/* bind_assign.hpp
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
*/