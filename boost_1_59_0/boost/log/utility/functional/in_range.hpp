/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   in_range.hpp
 * \author Andrey Semashev
 * \date   30.03.2008
 *
 * This header contains a predicate for checking if the provided value is within a half-open range.
 */

#ifndef BOOST_LOG_UTILITY_FUNCTIONAL_IN_RANGE_HPP_INCLUDED_
#define BOOST_LOG_UTILITY_FUNCTIONAL_IN_RANGE_HPP_INCLUDED_

#include <utility>
#include <boost/type_traits/is_integral.hpp>
#include <boost/type_traits/integral_constant.hpp>
#include <boost/log/detail/config.hpp>
#include <boost/log/utility/functional/logical.hpp> // make_common_integral_type
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

//! The in_range functor
struct in_range_fun
{
    typedef bool result_type;

    template< typename T, typename U >
    bool operator() (T const& value, std::pair< U, U > const& rng) const
    {
        return op(value, rng, integral_constant< bool, is_integral< T >::value && is_integral< U >::value >());
    }

private:
    template< typename T, typename U >
    static bool op(T const& value, std::pair< U, U > const& rng, false_type)
    {
        return (value >= rng.first && value < rng.second);
    }
    template< typename T, typename U >
    static bool op(T const& value, std::pair< U, U > const& rng, true_type)
    {
        typedef typename aux::make_common_integral_type< T, U >::type common_integral_type;
        return (static_cast< common_integral_type >(value) >= static_cast< common_integral_type >(rng.first))
            && (static_cast< common_integral_type >(value) < static_cast< common_integral_type >(rng.second));
    }
};

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_UTILITY_FUNCTIONAL_IN_RANGE_HPP_INCLUDED_

/* in_range.hpp
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
*/