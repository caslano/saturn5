/*
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   ends_with.hpp
 * \author Andrey Semashev
 * \date   30.03.2008
 *
 * This header contains a predicate for checking if the provided string ends with a substring.
 */

#ifndef BOOST_LOG_UTILITY_FUNCTIONAL_ENDS_WITH_HPP_INCLUDED_
#define BOOST_LOG_UTILITY_FUNCTIONAL_ENDS_WITH_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

//! The \c ends_with functor
struct ends_with_fun
{
    typedef bool result_type;

    template< typename T, typename U >
    bool operator() (T const& left, U const& right) const
    {
        typedef typename T::const_reverse_iterator left_iterator;
        typedef typename U::const_reverse_iterator right_iterator;

        left_iterator left_it = left.rbegin(), left_end = left.rend();
        right_iterator right_it = right.rbegin(), right_end = right.rend();
        for (; left_it != left_end && right_it != right_end; ++left_it, ++right_it)
        {
            if (*left_it != *right_it)
                break;
        }
        return right_it == right_end;
    }
};

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_UTILITY_FUNCTIONAL_ENDS_WITH_HPP_INCLUDED_

/* ends_with.hpp
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
*/