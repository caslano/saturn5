/*
 *             Copyright Andrey Semashev 2019.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          https://www.boost.org/LICENSE_1_0.txt)
 */
/*!
 * \file   utility/manipulators/auto_newline.hpp
 * \author Andrey Semashev
 * \date   23.06.2019
 *
 * The header contains implementation of a stream manipulator for inserting a newline, unless there is already one inserted.
 */

#ifndef BOOST_LOG_UTILITY_MANIPULATORS_AUTO_NEWLINE_HPP_INCLUDED_
#define BOOST_LOG_UTILITY_MANIPULATORS_AUTO_NEWLINE_HPP_INCLUDED_

#include <boost/log/detail/config.hpp>
#include <boost/log/utility/formatting_ostream_fwd.hpp>
#include <boost/log/detail/header.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

namespace boost {

BOOST_LOG_OPEN_NAMESPACE

/*!
 * Stream manipulator for inserting a newline character, unless the last character
 * inserted into the stream is already a newline.
 */
struct auto_newline_manip {}
BOOST_INLINE_VARIABLE const auto_newline = {};

/*!
 * Stream output operator for the \c auto_newline manipulator
 */
template< typename CharT, typename TraitsT, typename AllocatorT >
inline basic_formatting_ostream< CharT, TraitsT, AllocatorT >& operator<< (basic_formatting_ostream< CharT, TraitsT, AllocatorT >& strm, auto_newline_manip)
{
    typedef basic_formatting_ostream< CharT, TraitsT, AllocatorT > stream_type;
    typedef typename stream_type::char_type char_type;
    typedef typename stream_type::string_type string_type;
    if (BOOST_LIKELY(strm.good()))
    {
        string_type* str = strm.rdbuf()->storage();
        if (BOOST_LIKELY(!!str))
        {
            strm.rdbuf()->pubsync();
            if (str->empty() || *str->rbegin() != static_cast< char_type >('\n'))
                strm.rdbuf()->push_back(static_cast< char_type >('\n'));
        }
    }

    return strm;
}

BOOST_LOG_CLOSE_NAMESPACE // namespace log

} // namespace boost

#include <boost/log/detail/footer.hpp>

#endif // BOOST_LOG_UTILITY_MANIPULATORS_AUTO_NEWLINE_HPP_INCLUDED_

/* auto_newline.hpp
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
*/