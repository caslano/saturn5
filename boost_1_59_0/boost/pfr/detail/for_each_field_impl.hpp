// Copyright (c) 2016-2022 Antony Polukhin
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_PFR_DETAIL_FOR_EACH_FIELD_IMPL_HPP
#define BOOST_PFR_DETAIL_FOR_EACH_FIELD_IMPL_HPP
#pragma once

#include <boost/pfr/detail/config.hpp>

#include <utility>      // metaprogramming stuff

#include <boost/pfr/detail/sequence_tuple.hpp>
#include <boost/pfr/detail/rvalue_t.hpp>

namespace boost { namespace pfr { namespace detail {

template <std::size_t Index>
using size_t_ = std::integral_constant<std::size_t, Index >;

template <class T, class F, class I, class = decltype(std::declval<F>()(std::declval<T>(), I{}))>
void for_each_field_impl_apply(T&& v, F&& f, I i, long) {
    std::forward<F>(f)(std::forward<T>(v), i);
}

template <class T, class F, class I>
void for_each_field_impl_apply(T&& v, F&& f, I /*i*/, int) {
    std::forward<F>(f)(std::forward<T>(v));
}

template <class T, class F, std::size_t... I>
void for_each_field_impl(T& t, F&& f, std::index_sequence<I...>, std::false_type /*move_values*/) {
     const int v[] = {0, (
         detail::for_each_field_impl_apply(sequence_tuple::get<I>(t), std::forward<F>(f), size_t_<I>{}, 1L),
         0
     )...};
     (void)v;
}


template <class T, class F, std::size_t... I>
void for_each_field_impl(T& t, F&& f, std::index_sequence<I...>, std::true_type /*move_values*/) {
     const int v[] = {0, (
         detail::for_each_field_impl_apply(sequence_tuple::get<I>(std::move(t)), std::forward<F>(f), size_t_<I>{}, 1L),
         0
     )...};
     (void)v;
}

}}} // namespace boost::pfr::detail


#endif // BOOST_PFR_DETAIL_FOR_EACH_FIELD_IMPL_HPP

/* for_each_field_impl.hpp
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
*/