// Copyright 2004 The Trustees of Indiana University.

// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  Authors: Douglas Gregor
//           Andrew Lumsdaine
#ifndef BOOST_GRAPH_CIRCLE_LAYOUT_HPP
#define BOOST_GRAPH_CIRCLE_LAYOUT_HPP
#include <boost/config/no_tr1/cmath.hpp>
#include <boost/math/constants/constants.hpp>
#include <utility>
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/iteration_macros.hpp>
#include <boost/graph/topology.hpp>
#include <boost/static_assert.hpp>

namespace boost
{
/**
 * \brief Layout the graph with the vertices at the points of a regular
 * n-polygon.
 *
 * The distance from the center of the polygon to each point is
 * determined by the @p radius parameter. The @p position parameter
 * must be an Lvalue Property Map whose value type is a class type
 * containing @c x and @c y members that will be set to the @c x and
 * @c y coordinates.
 */
template < typename VertexListGraph, typename PositionMap, typename Radius >
void circle_graph_layout(
    const VertexListGraph& g, PositionMap position, Radius radius)
{
    BOOST_STATIC_ASSERT(
        property_traits< PositionMap >::value_type::dimensions >= 2);
    const double pi = boost::math::constants::pi< double >();

#ifndef BOOST_NO_STDC_NAMESPACE
    using std::cos;
    using std::sin;
#endif // BOOST_NO_STDC_NAMESPACE

    typedef typename graph_traits< VertexListGraph >::vertices_size_type
        vertices_size_type;

    vertices_size_type n = num_vertices(g);

    vertices_size_type i = 0;
    double two_pi_over_n = 2. * pi / n;
    BGL_FORALL_VERTICES_T(v, g, VertexListGraph)
    {
        position[v][0] = radius * cos(i * two_pi_over_n);
        position[v][1] = radius * sin(i * two_pi_over_n);
        ++i;
    }
}
} // end namespace boost

#endif // BOOST_GRAPH_CIRCLE_LAYOUT_HPP

/* circle_layout.hpp
6fZ9D/0n6bqGvrCcZCA7tW6s4E0tMnPYsnhVyOZe+wbDHrqSmtR3+zTGL9/SQ2fzAhZPyygVLovHwKPY05PqpianIbHo4+uv3jLU4P3+6CocMbDOajtPmm9iKwF2USK4g8bhEz33oW6WeSdwoXp54okdnVbN2Uz/29OQYvVWQfcW2bOIrsHUU13RZ+1xZxVl/3Vpz33uDQR4SOykorWdu4De8cYdYLxnNeq+vOY6ttl0lX53O1YtULlLLdaHq8s+HQ1GS13ndWkBYuqllGeam2SetPphbRC6qfTgluc0rPD+glbW/FqvxwpOITrA/EkMQ4yKXIlH42bOFuTGpk/lwph6ESevYrmno3tVG2huzEfDKyV2fBF93axxqjv3aQFPFcRcP0xFlc8uL1t7mSud+GZBHBIs/Uqef6XdDYDvJmhYY2AnGVFTEOcOFNBMjCd1iCjlVZf9U/zS2aqqJwppspOj/V7jI5nYl7zQEvZ17LWQNjHkHd2NpU1o826fko5rSlOJ7XvXSrRQYfLglvaU3DMUCWGw6SBLwv1yoPNRcC0ksqIo45Px44JHaTPtPT77qKl09gdX4+em9N8JhkYJgXv8qnvKh+xPly0jSo59toKRNyEd86qTUQHCE+JW/IWSzNHRybLTq3lUoG+SC8eWikZLKo91eR/VUIRf3fKrFQ2L4K21CB5cU1i4hh3vXduIvpFvfQ/iIIJjvHOr7WEgv6jN5NC5E0qNuEhj9xTmXGkE9fuHVX1c2TQtiCOGiwJfpJIb7o7DjkXiFwF4yxnOueE8K0/+go0M/dzu2jtiaGmPb6INNFSHz/vr85liUqZzQNbIsu5T40sAeLwtrWGtge9Pyb0Iz1OOi8bhd+UsRNhqNjLWNOXGqRd115PlKcy+KwlCnb73puWzVhLzTHTRVfIxnmXwZoiEZyMcp/wLDgrb5CmM+VJeP3UJI9BbC6QzqLXqR0/H1dvOXQcykmZ8zIxCkqO3o1OYSMGgz7ePZZtwf1zWuZWN7ISpatDk3e3O9aiHThsSWpplOUuUxw9O96Xmq6RJuQmQ1V3AQJOu1T3zcvFHYKy55flKuuwRL96ZolZEVb7L200uKk0OWGo2AhEB2DEuub3ry5oTve9rgE3McHZ9gWtmQKohbjSVhCpXg+gZGWbdd1i2Lzd1FhE+vvmI3UD2ot2wPHhWtZKxTdZMuu7P/h9g6Di+hmMrZa/AWqqUB8H3jufXR58gW6bnOOJHGWMYRToZZs1BOmm6OtcJjlPBdN8uxLwuHNgUgka/bPM1Eregeu6y4q9PUkDLVVTtDtTkS+fX0MzvhavbeJurse3UCNVNKJVViIOzmn3Nx9IO0wSHJKIMOF1U9LZYlidq4giL1q0eSzS2ZAiTBtxbXhtB3vpGlrgRsmmEA5QdZZxaDe9EWXJDXN9NhbHM3lqHay+XYQHOQoVbD4g+Sv47fVWB7nByUV7fdREW39I4jtfMxhBG6mZqaYYVuC2kmqtrWcccuDWrrEYV2GupmPINXvIzauslGp4eOMOjmzlpVyXlDMhgTa22EGKuH2xXgk0Livg5ZD2Vv4ga490e8QiWU6Q+CVcEH++OvRpt9OuSR0Zfg7JjGC2PQuvDI149xBeOJV8P66rall8bEozs4fMxgjGLVEktjhCx9a1tJMmumrFsi8u+IaDGIE8uGMvpi0XzFKZb3wcOD9ST4R/nxe3fDMQMQniO9paPU14T1/w39xc7HNd4CjwqEI5CdmM4w81qUlzkk49fOqnRvi0+RZlKD47frgRoI4iltedv/Vj0YM1yjoTAOENhvcQIDRpbQ30ivWwl9OzEOD9P02NqXDizZUjjHcrWmBgc96KPnlles8Q5Pb8TsKthmv4kgLASl8vtDPV+AF35EzmkQcI8lEFHkEy7XeoV0EBiY2tbK8crgIr/Dp5R70vyxiXU01Wvb+JN/73mGcxEhXlA8ckiWYyYRUx2ngIVVC351kXVLIOHia6lGt15c1mxlM1hkaFb/qW7M4uf8QzVgEbcyaoyviLPmgjH5g7182jaxE3ac74dd8Lzd/fZF0f7e16893uU/XfEUHJ1p6lRLxeXtac+RIdDBiwITjL7p824r69Z3gVM9aVQyaKlAflr0YZT5NaMcykOsrDcJuJCSKIIEKUIZCSqs8eDMX+h7YHIzrHujFUb8/OttwKystSr8HZXUi0yya6MNJoH5d7Ts8YKT7udu+VAkaQj1JMhS0jrPo3vFbUnnNhHJFRXSr3hlMK2JuhSJcE6XMTw8amq1TXGmdP2zL7bLM0hfpp8ZlaQ6gEGeQhb9/ZTV1Ev/OEWj9O7Mp2B7SqLwVyYT0r/7d2f7zm/lOVDX7RuV430hk9fmXtMFQdkFzJ3fEctCeqenyq06XG5Z9pNTkWK0/fiC9xhqzISgo6kuiaGsUzeDnz6Z/qeWD/4z2wVX8Wc1fCciRtjGK6V0ravU82a5e3stmjPDmjk4mb3J7wJPPMeM6z8pxOHhzMbrfGdPOj1/S2Me9ED5UuOb4ZKX2qav1/O3yt396pk7n+Fdi4Ue1BuZFNTCuEkhnGzs8UxkhSkMaqkemOwdEU4xtLhjOd0GtDiWm+hFuHs3LeOadqsPjAHyfEpB8z0SHMezbNWQl9MXVFN1vWfgvUbJA+R26sOrDychVc2KuRNH18uecwlxg7YIME/xKdq7QFrfzSMSdiL1gYHIv6ObXauTuBwxfjMH2fiHvlEuTt/GhTtN1wdidZn15r1ZqNx1TunjIWVIcIim4tHXYlI9/E3d839zVxqnTnaSf79VQKdSb1XQEo8oCuz7Kon+vG8CsWCdUdTVQwxX7WM481FtUuUFm9yfb2Gm6+WmseF1xdTKarRBeuxWdnVI6bFo6Ql6u5XN9bczr21Tped59lnWvOrUCrMpWy48uJSC79BVPW5w4qxQ44oVu47jtAlaTNa8RzqKQn0bwLtef+6kdE34Jo6yle1MTVmMA04fKTUhNA10Gb4guBUJ+zwnOk5GZl9m91pieaN980WeLrQjM2O2u6QJ1poAJq/OzqvrqhlF8zLJ/S3uVFOPW5P7WVFPgvOmf4PC4D0fweB/WZWofFG6ks2MMiLFB4SP0zz2by+UWN8GtH8robbbcwvZ5uv13P4sTWOroNfdw/n37LtjB4n/FpP/xnD1j3jtpx83j9ICes/KlARUQvDcH/YO/hVyKJnO9DZvyDtfFDAfrVuZxq75j6QPU+ZJK3IzPbM/ehXr45C+i5n1m6Ytjbl3Yw3LkdJR6iamio9tt3te1Jjh3cN3C1KiJ/tfqZIWeE5P618s3rREKjimraUsV2yfMfFKM6HDEWcFeTp+mQg7ErdHSXxIYv0695KCnwI8RaXHzRgpsoBlQz6Fca399b9rOdZ9JJjpr0876Xv8zz/MqYNusdHSwdD68YFDhjj0elLS/HNz0z88oelI41H9IKsI4corj7bTOUjz+cxDx1M8//zSWPgj//R6sWzTJE4nBdJAKUsL98bM+BfCGa053ewqfXNr+q0/eql4DcpReTmVq5J7iO6b3utprWCVV/sY7dWWe605RnJFvYSup2z8o9hg5oVSRd6W+Q+LbnijftjHbyBOPT8fz7+ZUIP+yTMFDEPGi5TnYsLSOv/vCFYlbfM/HlFMhmEsa5hHdDKBfV8SnQ+HHjcMVZDhC58MsolihRuyMusf3VQ3psY7mwhYKW76m/1bU+NqfUDEEgdjDiX5/KwzrpbIcpQzdjaTUe7o4dMnV1KwhNjUt8BH4xjxA9xR53KCtbpFucC5cJT+7e5MqTel4eOvH5mubUx0ODA1fvCf2fk/uETEaXaXzxdSi4HiLw5hsSJS/pnTX15yUN8ZktrnQFaAn+3kWYwxLRNbcSM7yMP4XQGm3vu+rdLX15sN3UrxecmTwbsoOhHbSd1rs668zSG7W9N14X3daGYlVDX6T0O35uHofmhIu5CZZpFH+hDUHRfZiszOgM3Zt5pCMiwg1+RfL65/LIrB5pcG7lobRUSCeUEuVUZMthRJv1Uo4jK1Is1rhGlcpsY2jr6INLv5dsX/HIqcwRL55SCojMx4FX+84fvUHZA+v6LbxpBTl4mV4MRGVSmnFu3ng7U5UV8N4W0jykdGaRxfmAULnB66C79sVyeUsHmmoH6R1Fw+6LbQysrr6L6NC1JGoHe/34zTn1OFv4gSrrU9oirPQzzVO/0d3QJ2MBIi1aiVhwlsGwnP3IbGM0i93r9ueK1nZKh4lgjH0/qeVyi0J7/q7YugmZuuVxTMnTbtSRMyfe7fcHrZ/56UDduZ9vA8sY3295Cru4rFixuJZKjNl+93clfNJ8osA6V7tQLu7Qdyqq/ybzwRSUMrxcNOClU0PctctjpfHPBpOUPAVbjUrfP8yoUHwAQ06m8fPdvr3+MKT0Inm+y3hhz3viepsBBKnhl1iprKSAHVujR9yup8jDv+c093JVM/XdJSoqhT/+C3tOxZjfseYRXW/y5R4sVf5UfwvdefX3Z4n57BEXJi5eSCi6cBhNoL+y30ufWJp5FBtT1PwtmKpN57carPL9g1xjU/uKfknjdLvvqnVerP/Oz6404eW6q0MBAXU3c27vrR42QRU2TnJ8Y35DsZFfvAKaQndObLlI2N3T62752A/xMMembt8Q2ru9SLh1t7rc34wnz7CxhLx2gi8yTY47dPRmQr6oevd+HVe+Eh6CHCmhSFmQGnIbtPiQqXlTaTKNvZ26Z1bvefVkKzzVqIr3T6Mj61uaE3COo/a+n0cbbl+y/TUT9N/zwjWTyvpF6ViW69pit1oS3u8gbxSDL5FXN2XqF1YzdaRjKPfSTaBr3eCdaqu9F1db8ltu6wn9TuTe6F/efCc3efSr2LXB8r1Lw5ucbPzTxJ3RuN/aN7qq160px654J5dtDq/OJtyu9M4I/nt/CeMT8Tuza15w4enS65Wge9L505GK68u+60uTjkmdudUkSwfmSh4GXCrTjceglqyg/v9zcZOE3wpu6m9hFjH3qZtEOv9bgCmNcxH+uH5c/mQTb4lP9pNRJy55BuXbHhTMYh053NJuSI26LavxN88+L4v71K5U134261SwPfPuHloXAwcPQy9sG2LZot48JJuFK9BZtpJI/nu/jJfvQQvO1RBWpU86GYdZmhjvcX80562aVXo+PLO6uPOCI1P5lIB0xtKzMo81+WCWUYKJfd5QAFd2J57ZgusO9q7PXeLBHdsnDIRQZUGbtd2X2lPRdbCTm1eLB9kFYwX8M+8R9SJPHDNdjZWMapvKz9O968qT0Cwc5tTmb0n6UlQ83wuTT9BCT9i9rOz2mNH7LOblEdpDuuw8shx1lrY2spjhUdUf+kntlZlcgVDZ56ghPdqIpaNBEl/qFOkODmi4fKBBv07sd7ckwMzMd+c9G/xKgfFTweWVFbn09SGyV8F/FekJZeRrqvjS1U3ODs48PqGL3rvCLFwMZR/RuJTqSjVZ18xLxsbfqok26Zp39TH8ZlcdJFRUHbrPmPPbP9F/2r+hbnl8MzHP76WIoxGSV0GZu/G00fqqcOqnJP0q6/3z4md3aaJGK2R3CxtVYzIzxdSP5rHO9dftW1XO1l/bV7DhByQL2dwnUoX8ttElGEjUatDrdEraPRw727s8EP6Hgoujj47VWPU10HnAr/J3/9b/b8yNL3H+5DCw+rvI8C213ZtkE1MIHRwMHuo+u3RwWJLRKuzuTZ212M4a+JsRFhbPe6erIbdJ5GZvNhiN55Z+Ebq3Gjj4+k/8V/Aqr+bolMizSPr5OVuYXv9gzxYGETL8gfLPWRPpYdA9GU//nQ5Tf6tLbwyP0V55nmKU/Vj3xfGGtWMM8XvKN3N/Ffq5aoVSK6MOL3mYtDue0NRb2xrLhREiOarNFcjd/x83c/qsTJVLVQ19aaeNLy0QFwVtkhi9TPEPu+u7/xaR3v+CwKWthYG5+Xiw6fYeFbbWOd1KhZEYmZyat3SpBSunugwk7GJeO/MyhDeYT1P1sa7e+8cpd4/t3t0t/Q2q/Z3/3H++XFMtmfnSXgQu3ZqsKou8kWy/bhSYaYxk3n5nNye6GfbmXRsGwl5i8otRccbYgnGYrxYJ6XHsQmNv5ib4Y0/SI6KvkyyX97x9mAkReB43Ejm5MsloImz8tPC5TF02msiGZODG7dwjOuS4prC2urpvfsfik6K43+d0N5s2MNvhT7BYZgHDUgNsS3gJqqkCXenzTW1Lh5v8SGT4eWUZVTMvLJaIi2hJYZZ4fIuLSSln/5tDGN2rDRTJRPGksCtKj23/r5WXf5xOr31nfWOz2dP6VvzN8yl3LtW7Wn92cuva836frxDkoG25KbvrxYYg7/095GyPPa/FXmLk1nY47z85q9OeVbkti4lyeLiSMRiTOmf5iUtpVKCW6J5rF6rZJ1Iop/tlb4b3tXLQBvVXcRfQhXXRf9/75A2XIHEotX+CinPq+GTszv3KZ0r105f64c3f2uvBF+4LQ+aO3QDUla5839Y8/VlUv85642cZYDn5LIEVaLHk5t6BahfqmF1/SPPipt4WS49T9L4PKpX+Ks7Be2TVRanooRJ1PbJUHaVLGinsg8ESnJSRd6yNb5ub9d9eIANyPg+kvuoFK5ajjb5rlvyd5BUafpcK3DIUH33Y5Rk3wJ/iXfvcy+5M7+c73q+BQfAaW+L9vrySguu9q27gfKKPj3okv5PmsC3tzq+SkCzElZMynHOTV++2+EnluJ8/BEcKS+OsHTWGuCzT0SW1uY7ddzH0nH9rmiF+1p8jPV+elgu9Hzo2Z4M+g2LYUGj8NquAqN5kLSXwQ+9xgjnVFGl+yw7BFj1xTOQPvvYEokndH9SWM9k1j/MgPf6oqTMfK/yrKM1VMPpBil5AulZ5+5tY4kMeKVFYctQ17mcIjl9UoRBuwKtguh5t4TGqbTztx53hnTUNzR5tr77YU0IBBpD0GqB+z05bSkKTVCBlQhN3QUe6HXbzbaukkeedWZ+PSl9bM91O24o4v9/h+yIhpICW+NGj5Dim45C+1rXipLIJF1jebKtZ2u5fm2WB+g1IBzccSzkZnVLQvzux8Ou08sE7XFx7w7HKkOIZ2kiKzv/ppIRftAw2x+Uavd+EJvtpbo225lx6rb9XiHPCy/TUip9j/ClM8aC4/EXdw6BQOO0yjWp4cG59cjI6a8PSn5pF17ffQp3X7L0n1cpz/bo/qhPMmP9j1+PvGa+xbDB9zKxa8iD14VKuZuKn8fJaBdulPcuqLGNPjhqD1oq5H5Q2dQ8KkyqHrEq6KnUktpfvNWwMwHqxV32Mu3WHikNIFZ3zswnhfxhVNuTi0pff9vnec5bw3u8+XgjT5NryTguFNcnus3gnv7MrHvC97EzaQEgFI+evsN8Rd8zl9NYPxoiCes3sSVUEeIwnvBzZ4+N/5qA7pR+mh0G8nWkXZQEI/2phL7ev5HXRkI5SeGYXPO5Xt8Sd48Fv1rCw4sAmJIH/ulHNlUlVMvTj0XVqL1Z2wqVR6xupH5gsdfvi6dEZMxqyItu1ZnDdJ9Zjs2VYfm3V1u/vhHQ6D5D4dc68cydiRuw+2qsx/99XNe9YqWdPiIqN9p5++XCigMtsTbcvigrFnRu89kbcffuU9Z+Q9p46snHVI
*/