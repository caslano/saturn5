// Copyright (C) 2004-2008 The Trustees of Indiana University.

// Use, modification and distribution is subject to the Boost Software
// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

//  Authors: Nick Edmonds
//           Douglas Gregor
//           Andrew Lumsdaine
#ifndef BOOST_DISTRIBUTED_FILTERED_GRAPH_HPP
#define BOOST_DISTRIBUTED_FILTERED_GRAPH_HPP

#ifndef BOOST_GRAPH_USE_MPI
#error "Parallel BGL files should not be included unless <boost/graph/use_mpi.hpp> has been included"
#endif

#include <boost/graph/parallel/process_group.hpp>
#include <boost/graph/filtered_graph.hpp>

namespace boost {
  namespace graph {
          namespace parallel {
      /// Retrieve the process group from a filtered graph
      template<typename Graph, typename EdgePredicate, typename VertexPredicate>
      struct process_group_type<filtered_graph<Graph, EdgePredicate, VertexPredicate> >
        : process_group_type<Graph> { };

      template<typename Graph, typename EdgePredicate, typename VertexPredicate>
      struct process_group_type<const filtered_graph<Graph, EdgePredicate, VertexPredicate> >
        : process_group_type<Graph> { };
    }

  }

  /// Retrieve the process group from a filtered graph
  template<typename Graph, typename EdgePredicate, typename VertexPredicate>
  inline typename graph::parallel::process_group_type<Graph>::type
  process_group(filtered_graph<Graph, EdgePredicate, VertexPredicate> const& g) {
    return process_group(g.m_g);
  }

  /// Forward vertex() to vertex() of the base graph 
  template <typename Graph, typename EdgePredicate, typename VertexPredicate>
  typename graph_traits<Graph>::vertex_descriptor
  vertex(typename graph_traits<Graph>::vertices_size_type i, 
         filtered_graph<Graph, EdgePredicate, VertexPredicate> const& g)
  { return vertex(i, g.m_g); }

}

#endif // BOOST_DISTRIBUTED_FILTERED_GRAPH_HPP

/* filtered_graph.hpp
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
*/