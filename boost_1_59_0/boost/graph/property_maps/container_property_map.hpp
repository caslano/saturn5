// (C) Copyright 2007-2009 Andrew Sutton
//
// Use, modification and distribution are subject to the
// Boost Software License, Version 1.0 (See accompanying file
// LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_GRAPH_CONTAINER_PROPERTY_MAP_HPP
#define BOOST_GRAPH_CONTAINER_PROPERTY_MAP_HPP

#include <boost/graph/detail/index.hpp>
#include <boost/property_map/property_map.hpp>

namespace boost
{
// This is an adapter built over the iterator property map with
// more useful uniform construction semantics. Specifically, this
// requires the container rather than the iterator and the graph
// rather than the optional index map.
template < typename Graph, typename Key, typename Container >
struct container_property_map
: public boost::put_get_helper<
      typename iterator_property_map< typename Container::iterator,
          typename property_map< Graph,
              typename detail::choose_indexer< Graph,
                  Key >::index_type >::type >::reference,
      container_property_map< Graph, Key, Container > >
{
    typedef typename detail::choose_indexer< Graph, Key >::indexer_type
        indexer_type;
    typedef typename indexer_type::index_type index_type;
    typedef iterator_property_map< typename Container::iterator,
        typename property_map< Graph, index_type >::type >
        map_type;
    typedef typename map_type::key_type key_type;
    typedef typename map_type::value_type value_type;
    typedef typename map_type::reference reference;
    typedef typename map_type::category category;

    // The default constructor will *probably* crash if its actually
    // used for referencing vertices since the underlying iterator
    // map points past the end of an unknown container.
    inline container_property_map() : m_map() {}

    // This is the preferred constructor. It is invoked over the container
    // and the graph explicitly. This requires that the underlying iterator
    // map use the indices of the vertices in g rather than the default
    // identity map.
    //
    // Note the const-cast this ensures the reference type of the
    // vertex index map is non-const, which happens to be an
    // artifact of passing const graph references.
    inline container_property_map(Container& c, const Graph& g)
    : m_map(c.begin(), indexer_type::index_map(const_cast< Graph& >(g)))
    {
    }

    // Typical copy constructor.
    inline container_property_map(const container_property_map& x)
    : m_map(x.m_map)
    {
    }

    // The [] operator delegates to the underlying map/
    inline reference operator[](const key_type& k) const { return m_map[k]; }

    map_type m_map;
};
}

#endif

/* container_property_map.hpp
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
*/