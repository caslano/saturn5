#ifndef POSIX_PTIME_HPP___
#define POSIX_PTIME_HPP___

/* Copyright (c) 2002,2003 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the 
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland 
 * $Date$
 */

#include <boost/date_time/posix_time/posix_time_system.hpp>
#include <boost/date_time/time.hpp>
#include <boost/date_time/compiler_config.hpp>

namespace boost {

namespace posix_time {
 
  //bring special enum values into the namespace
  using date_time::special_values;
  using date_time::not_special;
  using date_time::neg_infin;
  using date_time::pos_infin;
  using date_time::not_a_date_time;
  using date_time::max_date_time;
  using date_time::min_date_time; 

  //! Time type with no timezone or other adjustments
  /*! \ingroup time_basics
   */
  class BOOST_SYMBOL_VISIBLE ptime : public date_time::base_time<ptime, posix_time_system>
  {
  public:
    typedef posix_time_system time_system_type;
    typedef time_system_type::time_rep_type time_rep_type;
    typedef time_system_type::time_duration_type time_duration_type;
    typedef ptime time_type;
    //! Construct with date and offset in day
    BOOST_CXX14_CONSTEXPR 
    ptime(gregorian::date d,time_duration_type td) :
      date_time::base_time<time_type,time_system_type>(d,td)
    {}
    //! Construct a time at start of the given day (midnight)
    BOOST_CXX14_CONSTEXPR 
    explicit ptime(gregorian::date d) :
      date_time::base_time<time_type,time_system_type>(d,time_duration_type(0,0,0))
    {}
    //! Copy from time_rep
    BOOST_CXX14_CONSTEXPR 
    ptime(const time_rep_type& rhs):
      date_time::base_time<time_type,time_system_type>(rhs)
    {}
    //! Construct from special value
    BOOST_CXX14_CONSTEXPR 
    ptime(const special_values sv) :
      date_time::base_time<time_type,time_system_type>(sv)
    {}
#if !defined(DATE_TIME_NO_DEFAULT_CONSTRUCTOR)
    // Default constructor constructs to not_a_date_time
    BOOST_CXX14_CONSTEXPR 
    ptime() :
      date_time::base_time<time_type,time_system_type>(gregorian::date(not_a_date_time),
                                                       time_duration_type(not_a_date_time))
    {}
#endif // DATE_TIME_NO_DEFAULT_CONSTRUCTOR

    friend BOOST_CXX14_CONSTEXPR
    bool operator==(const ptime& lhs, const ptime& rhs);

  };

  inline BOOST_CXX14_CONSTEXPR
  bool operator==(const ptime& lhs, const ptime& rhs)
  {
    return ptime::time_system_type::is_equal(lhs.time_,rhs.time_);
  }


} }//namespace posix_time


#endif


/* ptime.hpp
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
*/