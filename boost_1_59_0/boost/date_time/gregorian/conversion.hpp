#ifndef _GREGORIAN__CONVERSION_HPP___
#define _GREGORIAN__CONVERSION_HPP___

/* Copyright (c) 2004-2005 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst
 * $Date$
 */

#include <cstring>
#include <string>
#include <stdexcept>
#include <boost/throw_exception.hpp>
#include <boost/date_time/c_time.hpp>
#include <boost/date_time/special_defs.hpp>
#include <boost/date_time/gregorian/gregorian_types.hpp>

namespace boost {

namespace gregorian {

  //! Converts a date to a tm struct. Throws out_of_range exception if date is a special value
  inline
  std::tm to_tm(const date& d)
  {
    if (d.is_special())
    {
        std::string s = "tm unable to handle ";
        switch (d.as_special())
        {
        case date_time::not_a_date_time:
            s += "not-a-date-time value"; break;
        case date_time::neg_infin:
            s += "-infinity date value"; break;
        case date_time::pos_infin:
            s += "+infinity date value"; break;
        default:
            s += "a special date value"; break;
        }
        boost::throw_exception(std::out_of_range(s));
    }

    std::tm datetm;
    std::memset(&datetm, 0, sizeof(datetm));
    boost::gregorian::date::ymd_type ymd = d.year_month_day();
    datetm.tm_year = ymd.year - 1900;
    datetm.tm_mon = ymd.month - 1;
    datetm.tm_mday = ymd.day;
    datetm.tm_wday = d.day_of_week();
    datetm.tm_yday = d.day_of_year() - 1;
    datetm.tm_isdst = -1; // negative because not enough info to set tm_isdst
    return datetm;
  }

  //! Converts a tm structure into a date dropping the any time values.
  inline
  date date_from_tm(const std::tm& datetm)
  {
    return date(static_cast<unsigned short>(datetm.tm_year+1900),
                static_cast<unsigned short>(datetm.tm_mon+1),
                static_cast<unsigned short>(datetm.tm_mday));
  }

} } //namespace boost::gregorian

#endif

/* conversion.hpp
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
*/