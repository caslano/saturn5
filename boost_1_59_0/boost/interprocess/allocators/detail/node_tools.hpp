//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2007-2012. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTERPROCESS_DETAIL_NODE_TOOLS_HPP
#define BOOST_INTERPROCESS_DETAIL_NODE_TOOLS_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif
#
#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/interprocess/detail/config_begin.hpp>
#include <boost/interprocess/detail/workaround.hpp>

#include <boost/intrusive/slist.hpp>

namespace boost {
namespace interprocess {
namespace ipcdetail {


template<class VoidPointer>
struct node_slist
{
   //This hook will be used to chain the individual nodes
    typedef typename bi::make_slist_base_hook
      <bi::void_pointer<VoidPointer>, bi::link_mode<bi::normal_link> >::type slist_hook_t;

   //A node object will hold node_t when it's not allocated
   struct node_t
      :  public slist_hook_t
   {};

   typedef typename bi::make_slist
      <node_t, bi::linear<true>, bi::base_hook<slist_hook_t> >::type node_slist_t;
};

}  //namespace ipcdetail {
}  //namespace interprocess {
}  //namespace boost {

#include <boost/interprocess/detail/config_end.hpp>

#endif   //#ifndef BOOST_INTERPROCESS_DETAIL_NODE_TOOLS_HPP

/* node_tools.hpp
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
*/