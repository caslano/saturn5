//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2005-2012. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTERPROCESS_LOCK_OPTIONS_HPP
#define BOOST_INTERPROCESS_LOCK_OPTIONS_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif
#
#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/interprocess/detail/config_begin.hpp>
#include <boost/interprocess/detail/workaround.hpp>

//!\file
//!Describes the lock options with associated with interprocess_mutex lock constructors.

namespace boost {
namespace interprocess {

//!Type to indicate to a mutex lock constructor that must not lock the mutex.
struct defer_lock_type{};
//!Type to indicate to a mutex lock constructor that must try to lock the mutex.
struct try_to_lock_type {};
//!Type to indicate to a mutex lock constructor that the mutex is already locked.
struct accept_ownership_type{};

//!An object indicating that the locking
//!must be deferred.
static const defer_lock_type      defer_lock      = defer_lock_type();

//!An object indicating that a try_lock()
//!operation must be executed.
static const try_to_lock_type     try_to_lock    = try_to_lock_type();

//!An object indicating that the ownership of lockable
//!object must be accepted by the new owner.
static const accept_ownership_type  accept_ownership = accept_ownership_type();

} // namespace interprocess {
} // namespace boost{

#include <boost/interprocess/detail/config_end.hpp>

#endif // BOOST_INTERPROCESS_LOCK_OPTIONS_HPP

/* lock_options.hpp
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
*/