 //////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2011-2012. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTERPROCESS_DETAIL_WINAPI_WRAPPER_COMMON_HPP
#define BOOST_INTERPROCESS_DETAIL_WINAPI_WRAPPER_COMMON_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif
#
#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/interprocess/detail/config_begin.hpp>
#include <boost/interprocess/detail/workaround.hpp>
#include <boost/interprocess/detail/win32_api.hpp>
#include <boost/interprocess/errors.hpp>
#include <boost/interprocess/exceptions.hpp>
#include <boost/interprocess/detail/timed_utils.hpp>
#include <limits>

namespace boost {
namespace interprocess {
namespace ipcdetail {

inline bool do_winapi_wait(void *handle, unsigned long dwMilliseconds)
{
   unsigned long ret = winapi::wait_for_single_object(handle, dwMilliseconds);
   if(ret == winapi::wait_object_0){
      return true;
   }
   else if(ret == winapi::wait_timeout){
      return false;
   }
   else if(ret == winapi::wait_abandoned){ //Special case for orphaned mutexes
      winapi::release_mutex(handle);
      throw interprocess_exception(owner_dead_error);
   }
   else{
      error_info err = system_error_code();
      throw interprocess_exception(err);
   }
}

template<class TimePoint>
inline bool winapi_wrapper_timed_wait_for_single_object(void *handle, const TimePoint &abs_time)
{
   //Windows uses relative wait times so check for negative waits
   //and implement as 0 wait to allow try-semantics as POSIX mandates.
   unsigned long time_ms = 0u;
   if (ipcdetail::is_pos_infinity(abs_time)){
      time_ms = winapi::infinite_time;
   }
   else {
      const TimePoint cur_time = microsec_clock<TimePoint>::universal_time();
      if(abs_time > cur_time){
         time_ms = static_cast<unsigned long>(duration_to_milliseconds(abs_time - cur_time));
      }
   }
   return do_winapi_wait(handle, time_ms);
}

inline void winapi_wrapper_wait_for_single_object(void *handle)
{
   (void)do_winapi_wait(handle, winapi::infinite_time);
}

inline bool winapi_wrapper_try_wait_for_single_object(void *handle)
{
   return do_winapi_wait(handle, 0u);
}

}  //namespace ipcdetail {
}  //namespace interprocess {
}  //namespace boost {

#include <boost/interprocess/detail/config_end.hpp>

#endif   //BOOST_INTERPROCESS_DETAIL_WINAPI_WRAPPER_COMMON_HPP

/* winapi_wrapper_common.hpp
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
*/