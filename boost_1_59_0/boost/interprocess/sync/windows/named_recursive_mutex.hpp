 //////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2011-2012. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////
#ifndef BOOST_INTERPROCESS_WINDOWS_RECURSIVE_NAMED_MUTEX_HPP
#define BOOST_INTERPROCESS_WINDOWS_RECURSIVE_NAMED_MUTEX_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif
#
#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/interprocess/detail/config_begin.hpp>
#include <boost/interprocess/detail/workaround.hpp>
#include <boost/interprocess/sync/windows/named_mutex.hpp>

namespace boost {
namespace interprocess {
namespace ipcdetail {


class winapi_named_recursive_mutex
   //Windows mutexes based on CreateMutex are already recursive...
   : public winapi_named_mutex
{
   #if !defined(BOOST_INTERPROCESS_DOXYGEN_INVOKED)

   //Non-copyable
   winapi_named_recursive_mutex();
   winapi_named_recursive_mutex(const winapi_named_mutex &);
   winapi_named_recursive_mutex &operator=(const winapi_named_mutex &);
   #endif   //#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED

   public:
   winapi_named_recursive_mutex(create_only_t, const char *name, const permissions &perm = permissions())
      : winapi_named_mutex(create_only_t(), name, perm)
   {}

   winapi_named_recursive_mutex(open_or_create_t, const char *name, const permissions &perm = permissions())
      : winapi_named_mutex(open_or_create_t(), name, perm)
   {}

   winapi_named_recursive_mutex(open_only_t, const char *name)
      : winapi_named_mutex(open_only_t(), name)
   {}

   winapi_named_recursive_mutex(create_only_t, const wchar_t *name, const permissions &perm = permissions())
      : winapi_named_mutex(create_only_t(), name, perm)
   {}

   winapi_named_recursive_mutex(open_or_create_t, const wchar_t *name, const permissions &perm = permissions())
      : winapi_named_mutex(open_or_create_t(), name, perm)
   {}

   winapi_named_recursive_mutex(open_only_t, const wchar_t *name)
      : winapi_named_mutex(open_only_t(), name)
   {}
};

}  //namespace ipcdetail {
}  //namespace interprocess {
}  //namespace boost {

#include <boost/interprocess/detail/config_end.hpp>

#endif   //BOOST_INTERPROCESS_WINDOWS_RECURSIVE_NAMED_MUTEX_HPP

/* named_recursive_mutex.hpp
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
*/