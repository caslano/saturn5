//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2005-2012. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////
#ifndef BOOST_INTERPROCESS_NULL_INDEX_HPP
#define BOOST_INTERPROCESS_NULL_INDEX_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif
#
#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/interprocess/detail/config_begin.hpp>
#include <boost/interprocess/detail/workaround.hpp>

#include <boost/interprocess/offset_ptr.hpp>

//!\file
//!Describes a null index adaptor, so that if we don't want to construct
//!named objects, we can use this null index type to save resources.

namespace boost {
namespace interprocess {

//!Null index type
//!used to save compilation time when
//!named indexes are not needed.
template <class MapConfig>
class null_index
{
   #if !defined(BOOST_INTERPROCESS_DOXYGEN_INVOKED)
   typedef typename MapConfig::
      segment_manager_base    segment_manager_base;
   #endif   //#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED

   public:
   typedef int * iterator;
   typedef const int * const_iterator;

   //!begin() is equal
   //!to end()
   const_iterator begin() const
   {  return const_iterator(0);  }

   //!begin() is equal
   //!to end()
   iterator begin()
   {  return iterator(0);  }

   //!begin() is equal
   //!to end()
   const_iterator end() const
   {  return const_iterator(0);  }

   //!begin() is equal
   //!to end()
   iterator end()
   {  return iterator(0);  }

   //!Empty constructor
   null_index(segment_manager_base *){}
};

}}   //namespace boost { namespace interprocess {

#include <boost/interprocess/detail/config_end.hpp>

#endif   //#ifndef BOOST_INTERPROCESS_NULL_INDEX_HPP

/* null_index.hpp
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
*/