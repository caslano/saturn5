//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2005-2012. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////
#ifndef BOOST_INTERPROCESS_CONFIG_INCLUDED
#define BOOST_INTERPROCESS_CONFIG_INCLUDED
#include <boost/config.hpp>
#endif

#ifdef BOOST_MSVC
   #pragma warning (push)
   #pragma warning (disable : 4702) // unreachable code
   #pragma warning (disable : 4706) // assignment within conditional expression
   #pragma warning (disable : 4127) // conditional expression is constant
   #pragma warning (disable : 4146) // unary minus operator applied to unsigned type, result still unsigned
   #pragma warning (disable : 4284) // odd return type for operator->
   #pragma warning (disable : 4244) // possible loss of data
   #pragma warning (disable : 4251) // "identifier" : class "type" needs to have dll-interface to be used by clients of class "type2"
   #pragma warning (disable : 4267) // conversion from "X" to "Y", possible loss of data
   #pragma warning (disable : 4275) // non DLL-interface classkey "identifier" used as base for DLL-interface classkey "identifier"
   #pragma warning (disable : 4355) // "this" : used in base member initializer list
   #pragma warning (disable : 4345) // behavior change: an object of POD type constructed with an initializer of the form () will  be default-initialized
   #pragma warning (disable : 4503) // "identifier" : decorated name length exceeded, name was truncated
   #pragma warning (disable : 4511) // copy constructor could not be generated
   #pragma warning (disable : 4512) // assignment operator could not be generated
   #pragma warning (disable : 4514) // unreferenced inline removed
   #pragma warning (disable : 4521) // Disable "multiple copy constructors specified"
   #pragma warning (disable : 4522) // "class" : multiple assignment operators specified
   #pragma warning (disable : 4675) // "method" should be declared "static" and have exactly one parameter
   #pragma warning (disable : 4710) // function not inlined
   #pragma warning (disable : 4711) // function selected for automatic inline expansion
   #pragma warning (disable : 4786) // identifier truncated in debug info
   #pragma warning (disable : 4996) // "function": was declared deprecated
   #pragma warning (disable : 4197) // top-level volatile in cast is ignored
   #pragma warning (disable : 4541) // 'typeid' used on polymorphic type 'boost::exception'
                                    //    with /GR-; unpredictable behavior may result
   #pragma warning (disable : 4673) //  throwing '' the following types will not be considered at the catch site
   #pragma warning (disable : 4671) //  the copy constructor is inaccessible
   #pragma warning (disable : 4250) //  inherits 'x' via dominance
#endif

#if defined(BOOST_GCC) && (BOOST_GCC >= 40600)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

/* config_begin.hpp
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
*/