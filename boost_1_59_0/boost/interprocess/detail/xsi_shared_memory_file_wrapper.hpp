//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2009-2012. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTERPROCESS_XSI_SHARED_MEMORY_FILE_WRAPPER_HPP
#define BOOST_INTERPROCESS_XSI_SHARED_MEMORY_FILE_WRAPPER_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif
#
#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/interprocess/detail/config_begin.hpp>
#include <boost/interprocess/detail/workaround.hpp>
#include <boost/detail/workaround.hpp>

#if !defined(BOOST_INTERPROCESS_XSI_SHARED_MEMORY_OBJECTS)
#error "This header can't be used in operating systems without XSI (System V) shared memory support"
#endif

#include <boost/interprocess/creation_tags.hpp>
#include <boost/interprocess/exceptions.hpp>
#include <boost/interprocess/detail/utilities.hpp>
#include <boost/interprocess/detail/os_file_functions.hpp>
#include <boost/interprocess/detail/shared_dir_helpers.hpp>
#include <boost/interprocess/interprocess_fwd.hpp>
#include <boost/interprocess/exceptions.hpp>

#include <boost/interprocess/xsi_shared_memory.hpp>

//!\file
//!Describes a class representing a pseudo-file implemented on top of xsi shared memory.

namespace boost {
namespace interprocess {

class xsi_shared_memory_file_wrapper
   : public xsi_shared_memory
{
   #if !defined(BOOST_INTERPROCESS_DOXYGEN_INVOKED)
   BOOST_MOVABLE_BUT_NOT_COPYABLE(xsi_shared_memory_file_wrapper)
   #endif   //#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED
   public:

   xsi_shared_memory_file_wrapper() : xsi_shared_memory() {}

   xsi_shared_memory_file_wrapper(create_only_t, const xsi_key &key, mode_t , std::size_t size, const permissions& perm = permissions())
      : xsi_shared_memory(create_only_t(), key, size, perm.get_permissions())
   {}

   xsi_shared_memory_file_wrapper(open_or_create_t, const xsi_key &key, mode_t , std::size_t size, const permissions& perm = permissions())
      : xsi_shared_memory(open_or_create_t(), key, size, perm.get_permissions())
   {}

   xsi_shared_memory_file_wrapper(open_only_t, const xsi_key &key, mode_t, const permissions& = permissions())
      : xsi_shared_memory(open_only_t(), key)
   {}

   xsi_shared_memory_file_wrapper(BOOST_RV_REF(xsi_shared_memory_file_wrapper) moved)
   {  this->swap(moved);   }

   xsi_shared_memory_file_wrapper &operator=(BOOST_RV_REF(xsi_shared_memory_file_wrapper) moved)
   {
      xsi_shared_memory_file_wrapper tmp(boost::move(moved));
      this->swap(tmp);
      return *this;
   }

   //!Swaps two xsi_shared_memory_file_wrapper. Does not throw
   void swap(xsi_shared_memory_file_wrapper &other)
   {  this->xsi_shared_memory::swap(other);  }
};

}  //namespace interprocess {
}  //namespace boost {

#include <boost/interprocess/detail/config_end.hpp>

#endif   //BOOST_INTERPROCESS_XSI_SHARED_MEMORY_FILE_WRAPPER_HPP

/* xsi_shared_memory_file_wrapper.hpp
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
*/