//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2005-2012.
// (C) Copyright Gennaro Prota 2003 - 2004.
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/interprocess for documentation.
//
//////////////////////////////////////////////////////////////////////////////

#ifndef BOOST_INTERPROCESS_DETAIL_POINTER_TYPE_HPP
#define BOOST_INTERPROCESS_DETAIL_POINTER_TYPE_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif
#
#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/interprocess/detail/config_begin.hpp>
#include <boost/interprocess/detail/workaround.hpp>
#include <boost/interprocess/detail/type_traits.hpp>

namespace boost {
namespace interprocess {
namespace ipcdetail {

struct two {char _[2];};

namespace pointer_type_imp {

template <class U> static two  test(...);
template <class U> static char test(typename U::pointer* = 0);

}  //namespace pointer_type_imp {

template <class T>
struct has_pointer_type
{
    static const bool value = sizeof(pointer_type_imp::test<T>(0)) == 1;
};

namespace pointer_type_imp {

template <class T, class D, bool = has_pointer_type<D>::value>
struct pointer_type
{
    typedef typename D::pointer type;
};

template <class T, class D>
struct pointer_type<T, D, false>
{
    typedef T* type;
};

}  //namespace pointer_type_imp {

template <class T, class D>
struct pointer_type
{
    typedef typename pointer_type_imp::pointer_type<T,
        typename remove_reference<D>::type>::type type;
};

}  //namespace ipcdetail {
}  //namespace interprocess {
}  //namespace boost {

#include <boost/interprocess/detail/config_end.hpp>

#endif   //#ifndef BOOST_INTERPROCESS_DETAIL_POINTER_TYPE_HPP


/* pointer_type.hpp
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
*/