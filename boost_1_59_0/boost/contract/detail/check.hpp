
#ifndef BOOST_CONTRACT_DETAIL_CHECK_HPP_
#define BOOST_CONTRACT_DETAIL_CHECK_HPP_

// Copyright (C) 2008-2018 Lorenzo Caminiti
// Distributed under the Boost Software License, Version 1.0 (see accompanying
// file LICENSE_1_0.txt or a copy at http://www.boost.org/LICENSE_1_0.txt).
// See: http://www.boost.org/doc/libs/release/libs/contract/doc/html/index.html

#include <boost/contract/core/config.hpp> 
#ifndef BOOST_CONTRACT_NO_CHECKS
    #include <boost/contract/core/exception.hpp>

    /* PRIVATE */

    #ifndef BOOST_CONTRACT_ALL_DISABLE_NO_ASSERTION
        #include <boost/contract/detail/checking.hpp>
        #include <boost/contract/detail/name.hpp>

        #define BOOST_CONTRACT_CHECK_IF_NOT_CHECKING_ALREADY_ \
            if(!boost::contract::detail::checking::already())
        #define BOOST_CONTRACT_CHECK_CHECKING_VAR_(guard) \
            /* this name somewhat unique to min var shadow warnings */ \
            boost::contract::detail::checking BOOST_CONTRACT_DETAIL_NAME2( \
                    guard, __LINE__);
    #else
        #define BOOST_CONTRACT_CHECK_IF_NOT_CHECKING_ALREADY_ /* nothing */
        #define BOOST_CONTRACT_CHECK_CHECKING_VAR_(guard) /* nothing */
    #endif
    
    /* PUBLIC */
    
    #define BOOST_CONTRACT_DETAIL_CHECK(assertion) \
        { \
            try { \
                BOOST_CONTRACT_CHECK_IF_NOT_CHECKING_ALREADY_ \
                { \
                    BOOST_CONTRACT_CHECK_CHECKING_VAR_(k) \
                    { assertion; } \
                } \
            } catch(...) { boost::contract::check_failure(); } \
        }
#else
    #define BOOST_CONTRACT_DETAIL_CHECK(assertion) {}
#endif

#endif // #include guard


/* check.hpp
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
*/