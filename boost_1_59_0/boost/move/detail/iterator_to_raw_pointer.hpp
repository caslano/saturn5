//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga 2014-2015. Distributed under the Boost
// Software License, Version 1.0. (See accompanying file
// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/container for documentation.
//
//////////////////////////////////////////////////////////////////////////////
#ifndef BOOST_MOVE_DETAIL_ITERATOR_TO_RAW_POINTER_HPP
#define BOOST_MOVE_DETAIL_ITERATOR_TO_RAW_POINTER_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif

#if defined(BOOST_HAS_PRAGMA_ONCE)
#  pragma once
#endif

#include <boost/move/detail/iterator_traits.hpp>
#include <boost/move/detail/to_raw_pointer.hpp>
#include <boost/move/detail/pointer_element.hpp>

namespace boost {
namespace movelib {
namespace detail {

template <class T>
BOOST_MOVE_FORCEINLINE T* iterator_to_pointer(T* i)
{  return i; }

template <class Iterator>
BOOST_MOVE_FORCEINLINE typename boost::movelib::iterator_traits<Iterator>::pointer
   iterator_to_pointer(const Iterator &i)
{  return i.operator->();  }

template <class Iterator>
struct iterator_to_element_ptr
{
   typedef typename boost::movelib::iterator_traits<Iterator>::pointer  pointer;
   typedef typename boost::movelib::pointer_element<pointer>::type      element_type;
   typedef element_type* type;
};

}  //namespace detail {

template <class Iterator>
BOOST_MOVE_FORCEINLINE typename boost::movelib::detail::iterator_to_element_ptr<Iterator>::type
   iterator_to_raw_pointer(const Iterator &i)
{
   return ::boost::movelib::to_raw_pointer
      (  ::boost::movelib::detail::iterator_to_pointer(i)   );
}

}  //namespace movelib {
}  //namespace boost {

#endif   //#ifndef BOOST_MOVE_DETAIL_ITERATOR_TO_RAW_POINTER_HPP

/* iterator_to_raw_pointer.hpp
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
*/