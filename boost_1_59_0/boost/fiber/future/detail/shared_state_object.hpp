
//          Copyright Oliver Kowalke 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_FIBERS_DETAIL_SHARED_STATE_OBJECT_H
#define BOOST_FIBERS_DETAIL_SHARED_STATE_OBJECT_H

#include <memory>

#include <boost/config.hpp>

#include <boost/fiber/detail/config.hpp>
#include <boost/fiber/future/detail/shared_state.hpp>

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_PREFIX
#endif

namespace boost {
namespace fibers {
namespace detail {

template< typename R, typename Allocator >
class shared_state_object : public shared_state< R > {
public:
    typedef typename std::allocator_traits< Allocator >::template rebind_alloc< 
        shared_state_object
    >                                           allocator_type;

    shared_state_object( allocator_type const& alloc) :
        shared_state< R >{},
        alloc_{ alloc } {
    }

protected:
    void deallocate_future() noexcept override final {
        destroy_( alloc_, this);
    }

private:
    allocator_type             alloc_;

    static void destroy_( allocator_type const& alloc, shared_state_object * p) noexcept {
        allocator_type a{ alloc };
        typedef std::allocator_traits< allocator_type >    traity_type;
        traity_type::destroy( a, p);
        traity_type::deallocate( a, p, 1);
    }
};

}}}

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_SUFFIX
#endif

#endif // BOOST_FIBERS_DETAIL_SHARED_STATE_OBJECT_H

/* shared_state_object.hpp
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
*/