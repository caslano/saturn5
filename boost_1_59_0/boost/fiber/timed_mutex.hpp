
//          Copyright Oliver Kowalke 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_FIBERS_TIMED_MUTEX_H
#define BOOST_FIBERS_TIMED_MUTEX_H

#include <chrono>

#include <boost/assert.hpp>
#include <boost/config.hpp>

#include <boost/fiber/context.hpp>
#include <boost/fiber/detail/config.hpp>
#include <boost/fiber/detail/convert.hpp>
#include <boost/fiber/detail/spinlock.hpp>
#include <boost/fiber/waker.hpp>

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_PREFIX
#endif

#ifdef _MSC_VER
# pragma warning(push)
# pragma warning(disable:4251)
#endif

namespace boost {
namespace fibers {

class condition_variable;

class BOOST_FIBERS_DECL timed_mutex {
private:
    friend class condition_variable;

    detail::spinlock            wait_queue_splk_{};
    wait_queue                  wait_queue_{};
    context                 *   owner_{ nullptr };

    bool try_lock_until_( std::chrono::steady_clock::time_point const& timeout_time) noexcept;

public:
    timed_mutex() = default;

    ~timed_mutex() {
        BOOST_ASSERT( nullptr == owner_);
        BOOST_ASSERT( wait_queue_.empty() );
    }

    timed_mutex( timed_mutex const&) = delete;
    timed_mutex & operator=( timed_mutex const&) = delete;

    void lock();

    bool try_lock();

    template< typename Clock, typename Duration >
    bool try_lock_until( std::chrono::time_point< Clock, Duration > const& timeout_time_) {
        std::chrono::steady_clock::time_point timeout_time = detail::convert( timeout_time_);
        return try_lock_until_( timeout_time);
    }

    template< typename Rep, typename Period >
    bool try_lock_for( std::chrono::duration< Rep, Period > const& timeout_duration) {
        return try_lock_until_( std::chrono::steady_clock::now() + timeout_duration);
    }

    void unlock();
};

}}

#ifdef _MSC_VER
# pragma warning(pop)
#endif

#ifdef BOOST_HAS_ABI_HEADERS
#  include BOOST_ABI_SUFFIX
#endif

#endif // BOOST_FIBERS_TIMED_MUTEX_H

/* timed_mutex.hpp
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
*/