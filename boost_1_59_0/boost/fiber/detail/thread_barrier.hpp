
//          Copyright Oliver Kowalke 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_FIBER_DETAIL_THREAD_BARRIER_H
#define BOOST_FIBER_DETAIL_THREAD_BARRIER_H

#include <cstddef>
#include <condition_variable>
#include <mutex>

#include <boost/assert.hpp>
#include <boost/config.hpp>

#include <boost/fiber/detail/config.hpp>

#ifdef BOOST_HAS_ABI_HEADERS
# include BOOST_ABI_PREFIX
#endif

namespace boost {
namespace fibers {
namespace detail {

class thread_barrier {
private:
	std::size_t             initial_;
	std::size_t             current_;
	bool                    cycle_{ true };
    std::mutex              mtx_{};
    std::condition_variable cond_{};

public:
	explicit thread_barrier( std::size_t initial) :
        initial_{ initial },
        current_{ initial_ } {
        BOOST_ASSERT ( 0 != initial);
    }

    thread_barrier( thread_barrier const&) = delete;
    thread_barrier & operator=( thread_barrier const&) = delete;

    bool wait() {
        std::unique_lock< std::mutex > lk( mtx_);
        const bool cycle = cycle_;
        if ( 0 == --current_) {
            cycle_ = ! cycle_;
            current_ = initial_;
            lk.unlock(); // no pessimization
            cond_.notify_all();
            return true;
        }
        cond_.wait( lk, [&](){ return cycle != cycle_; });
        return false;
    }
};

}}}

#endif // BOOST_FIBER_DETAIL_THREAD_BARRIER_H

/* thread_barrier.hpp
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
*/