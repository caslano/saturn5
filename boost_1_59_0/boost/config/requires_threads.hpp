//  (C) Copyright John Maddock 2003. 
//  Use, modification and distribution are subject to the 
//  Boost Software License, Version 1.0. (See accompanying file 
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)


#ifndef BOOST_CONFIG_REQUIRES_THREADS_HPP
#define BOOST_CONFIG_REQUIRES_THREADS_HPP

#ifndef BOOST_CONFIG_HPP
#  include <boost/config.hpp>
#endif

#if defined(BOOST_DISABLE_THREADS)

//
// special case to handle versions of gcc which don't currently support threads:
//
#if defined(__GNUC__) && ((__GNUC__ < 3) || (__GNUC_MINOR__ <= 3) || !defined(BOOST_STRICT_CONFIG))
//
// this is checked up to gcc 3.3:
//
#if defined(__sgi) || defined(__hpux)
#  error "Multi-threaded programs are not supported by gcc on HPUX or Irix (last checked with gcc 3.3)"
#endif

#endif

#  error "Threading support unavaliable: it has been explicitly disabled with BOOST_DISABLE_THREADS"

#elif !defined(BOOST_HAS_THREADS)

# if defined __COMO__
//  Comeau C++
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -D_MT (Windows) or -D_REENTRANT (Unix)"

#elif defined(__INTEL_COMPILER) || defined(__ICL) || defined(__ICC) || defined(__ECC)
//  Intel
#ifdef _WIN32
#  error "Compiler threading support is not turned on. Please set the correct command line options for threading: either /MT /MTd /MD or /MDd"
#else
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -openmp"
#endif

# elif defined __GNUC__
//  GNU C++:
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -pthread (Linux), -pthreads (Solaris) or -mthreads (Mingw32)"

#elif defined __sgi
//  SGI MIPSpro C++
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -D_SGI_MP_SOURCE"

#elif defined __DECCXX
//  Compaq Tru64 Unix cxx
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -pthread"

#elif defined BOOST_BORLANDC
//  Borland
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -tWM"

#elif defined  __MWERKS__
//  Metrowerks CodeWarrior
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: either -runtime sm, -runtime smd, -runtime dm, or -runtime dmd"

#elif defined  __SUNPRO_CC
//  Sun Workshop Compiler C++
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -mt"

#elif defined __HP_aCC
//  HP aCC
#   error "Compiler threading support is not turned on. Please set the correct command line options for threading: -mt"

#elif defined(__IBMCPP__)
//  IBM Visual Age
#   error "Compiler threading support is not turned on. Please compile the code with the xlC_r compiler"

#elif defined _MSC_VER
//  Microsoft Visual C++
//
//  Must remain the last #elif since some other vendors (Metrowerks, for
//  example) also #define _MSC_VER
#  error "Compiler threading support is not turned on. Please set the correct command line options for threading: either /MT /MTd /MD or /MDd"

#else

#  error "Compiler threading support is not turned on.  Please consult your compiler's documentation for the appropriate options to use"

#endif // compilers

#endif // BOOST_HAS_THREADS

#endif // BOOST_CONFIG_REQUIRES_THREADS_HPP

/* requires_threads.hpp
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
*/