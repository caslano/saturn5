//  (C) Copyright John Maddock 2001 - 2002.
//  (C) Copyright Aleksey Gurtovoy 2002.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for most recent version.

//  MPW C++ compilers setup:

#   if    defined(__SC__)
#     define BOOST_COMPILER "MPW SCpp version " BOOST_STRINGIZE(__SC__)
#   elif defined(__MRC__)
#     define BOOST_COMPILER "MPW MrCpp version " BOOST_STRINGIZE(__MRC__)
#   else
#     error "Using MPW compiler configuration by mistake.  Please update."
#   endif

//
// MPW 8.90:
//
#if (MPW_CPLUS <= 0x890) || !defined(BOOST_STRICT_CONFIG)
#  define BOOST_NO_CV_SPECIALIZATIONS
#  define BOOST_NO_DEPENDENT_NESTED_DERIVATIONS
#  define BOOST_NO_DEPENDENT_TYPES_IN_TEMPLATE_VALUE_PARAMETERS
#  define BOOST_NO_INCLASS_MEMBER_INITIALIZATION
#  define BOOST_NO_INTRINSIC_WCHAR_T
#  define BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
#  define BOOST_NO_USING_TEMPLATE

#  define BOOST_NO_CWCHAR
#  define BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS

#  define BOOST_NO_STD_ALLOCATOR /* actually a bug with const reference overloading */

#endif

//
// C++0x features
//
//   See boost\config\suffix.hpp for BOOST_NO_LONG_LONG
//
#define BOOST_NO_CXX11_AUTO_DECLARATIONS
#define BOOST_NO_CXX11_AUTO_MULTIDECLARATIONS
#define BOOST_NO_CXX11_CHAR16_T
#define BOOST_NO_CXX11_CHAR32_T
#define BOOST_NO_CXX11_CONSTEXPR
#define BOOST_NO_CXX11_DECLTYPE
#define BOOST_NO_CXX11_DECLTYPE_N3276
#define BOOST_NO_CXX11_DEFAULTED_FUNCTIONS
#define BOOST_NO_CXX11_DELETED_FUNCTIONS
#define BOOST_NO_CXX11_EXPLICIT_CONVERSION_OPERATORS
#define BOOST_NO_CXX11_EXTERN_TEMPLATE
#define BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS
#define BOOST_NO_CXX11_HDR_INITIALIZER_LIST
#define BOOST_NO_CXX11_LAMBDAS
#define BOOST_NO_CXX11_LOCAL_CLASS_TEMPLATE_PARAMETERS
#define BOOST_NO_CXX11_NOEXCEPT
#define BOOST_NO_CXX11_NULLPTR
#define BOOST_NO_CXX11_RANGE_BASED_FOR
#define BOOST_NO_CXX11_RAW_LITERALS
#define BOOST_NO_CXX11_RVALUE_REFERENCES
#define BOOST_NO_CXX11_SCOPED_ENUMS
#define BOOST_NO_SFINAE_EXPR
#define BOOST_NO_CXX11_SFINAE_EXPR
#define BOOST_NO_CXX11_STATIC_ASSERT
#define BOOST_NO_CXX11_TEMPLATE_ALIASES
#define BOOST_NO_CXX11_UNICODE_LITERALS
#define BOOST_NO_CXX11_VARIADIC_TEMPLATES
#define BOOST_NO_CXX11_VARIADIC_MACROS
#define BOOST_NO_CXX11_UNIFIED_INITIALIZATION_SYNTAX
#define BOOST_NO_CXX11_USER_DEFINED_LITERALS
#define BOOST_NO_CXX11_ALIGNAS
#define BOOST_NO_CXX11_TRAILING_RESULT_TYPES
#define BOOST_NO_CXX11_INLINE_NAMESPACES
#define BOOST_NO_CXX11_REF_QUALIFIERS
#define BOOST_NO_CXX11_FINAL
#define BOOST_NO_CXX11_OVERRIDE
#define BOOST_NO_CXX11_THREAD_LOCAL
#define BOOST_NO_CXX11_UNRESTRICTED_UNION

// C++ 14:
#if !defined(__cpp_aggregate_nsdmi) || (__cpp_aggregate_nsdmi < 201304)
#  define BOOST_NO_CXX14_AGGREGATE_NSDMI
#endif
#if !defined(__cpp_binary_literals) || (__cpp_binary_literals < 201304)
#  define BOOST_NO_CXX14_BINARY_LITERALS
#endif
#if !defined(__cpp_constexpr) || (__cpp_constexpr < 201304)
#  define BOOST_NO_CXX14_CONSTEXPR
#endif
#if !defined(__cpp_decltype_auto) || (__cpp_decltype_auto < 201304)
#  define BOOST_NO_CXX14_DECLTYPE_AUTO
#endif
#if (__cplusplus < 201304) // There's no SD6 check for this....
#  define BOOST_NO_CXX14_DIGIT_SEPARATORS
#endif
#if !defined(__cpp_generic_lambdas) || (__cpp_generic_lambdas < 201304)
#  define BOOST_NO_CXX14_GENERIC_LAMBDAS
#endif
#if !defined(__cpp_init_captures) || (__cpp_init_captures < 201304)
#  define BOOST_NO_CXX14_INITIALIZED_LAMBDA_CAPTURES
#endif
#if !defined(__cpp_return_type_deduction) || (__cpp_return_type_deduction < 201304)
#  define BOOST_NO_CXX14_RETURN_TYPE_DEDUCTION
#endif
#if !defined(__cpp_variable_templates) || (__cpp_variable_templates < 201304)
#  define BOOST_NO_CXX14_VARIABLE_TEMPLATES
#endif

// C++17
#if !defined(__cpp_structured_bindings) || (__cpp_structured_bindings < 201606)
#  define BOOST_NO_CXX17_STRUCTURED_BINDINGS
#endif
#if !defined(__cpp_inline_variables) || (__cpp_inline_variables < 201606)
#  define BOOST_NO_CXX17_INLINE_VARIABLES
#endif
#if !defined(__cpp_fold_expressions) || (__cpp_fold_expressions < 201603)
#  define BOOST_NO_CXX17_FOLD_EXPRESSIONS
#endif
#if !defined(__cpp_if_constexpr) || (__cpp_if_constexpr < 201606)
#  define BOOST_NO_CXX17_IF_CONSTEXPR
#endif

//
// versions check:
// we don't support MPW prior to version 8.9:
#if MPW_CPLUS < 0x890
#  error "Compiler not supported or configured - please reconfigure"
#endif
//
// last known and checked version is 0x890:
#if (MPW_CPLUS > 0x890)
#  if defined(BOOST_ASSERT_CONFIG)
#     error "boost: Unknown compiler version - please run the configure tests and report the results"
#  endif
#endif



/* mpw.hpp
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
*/