//  Copyright (C) Christof Meerwald 2003
//  Copyright (C) Dan Watkins 2003
//
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

//  Digital Mars C++ compiler setup:
#define BOOST_COMPILER __DMC_VERSION_STRING__

#define BOOST_HAS_LONG_LONG
#define BOOST_HAS_PRAGMA_ONCE

#if !defined(BOOST_STRICT_CONFIG)
#define BOOST_NO_MEMBER_TEMPLATE_FRIENDS
#define BOOST_NO_OPERATORS_IN_NAMESPACE
#define BOOST_NO_UNREACHABLE_RETURN_DETECTION
#define BOOST_NO_SFINAE
#define BOOST_NO_USING_TEMPLATE
#define BOOST_FUNCTION_SCOPE_USING_DECLARATION_BREAKS_ADL
#endif

//
// has macros:
#define BOOST_HAS_DIRENT_H
#define BOOST_HAS_STDINT_H
#define BOOST_HAS_WINTHREADS

#if (__DMC__ >= 0x847)
#define BOOST_HAS_EXPM1
#define BOOST_HAS_LOG1P
#endif

//
// Is this really the best way to detect whether the std lib is in namespace std?
//
#ifdef __cplusplus
#include <cstddef>
#endif
#if !defined(__STL_IMPORT_VENDOR_CSTD) && !defined(_STLP_IMPORT_VENDOR_CSTD)
#  define BOOST_NO_STDC_NAMESPACE
#endif


// check for exception handling support:
#if !defined(_CPPUNWIND) && !defined(BOOST_NO_EXCEPTIONS)
#  define BOOST_NO_EXCEPTIONS
#endif

//
// C++0x features
//
#define BOOST_NO_CXX11_AUTO_DECLARATIONS
#define BOOST_NO_CXX11_AUTO_MULTIDECLARATIONS
#define BOOST_NO_CXX11_CHAR16_T
#define BOOST_NO_CXX11_CHAR32_T
#define BOOST_NO_CXX11_CONSTEXPR
#define BOOST_NO_CXX11_DECLTYPE
#define BOOST_NO_CXX11_DECLTYPE_N3276
#define BOOST_NO_CXX11_DEFAULTED_FUNCTIONS
#define BOOST_NO_CXX11_DELETED_FUNCTIONS
#define BOOST_NO_CXX11_EXPLICIT_CONVERSION_OPERATORS
#define BOOST_NO_CXX11_EXTERN_TEMPLATE
#define BOOST_NO_CXX11_HDR_INITIALIZER_LIST
#define BOOST_NO_CXX11_LAMBDAS
#define BOOST_NO_CXX11_LOCAL_CLASS_TEMPLATE_PARAMETERS
#define BOOST_NO_CXX11_NOEXCEPT
#define BOOST_NO_CXX11_NULLPTR
#define BOOST_NO_CXX11_RANGE_BASED_FOR
#define BOOST_NO_CXX11_RAW_LITERALS
#define BOOST_NO_CXX11_RVALUE_REFERENCES
#define BOOST_NO_CXX11_SCOPED_ENUMS
#define BOOST_NO_SFINAE_EXPR
#define BOOST_NO_CXX11_SFINAE_EXPR
#define BOOST_NO_CXX11_STATIC_ASSERT
#define BOOST_NO_CXX11_TEMPLATE_ALIASES
#define BOOST_NO_CXX11_UNICODE_LITERALS
#define BOOST_NO_CXX11_VARIADIC_TEMPLATES
#define BOOST_NO_CXX11_UNIFIED_INITIALIZATION_SYNTAX
#define BOOST_NO_CXX11_USER_DEFINED_LITERALS
#define BOOST_NO_CXX11_ALIGNAS
#define BOOST_NO_CXX11_TRAILING_RESULT_TYPES
#define BOOST_NO_CXX11_INLINE_NAMESPACES
#define BOOST_NO_CXX11_REF_QUALIFIERS
#define BOOST_NO_CXX11_FINAL
#define BOOST_NO_CXX11_OVERRIDE
#define BOOST_NO_CXX11_THREAD_LOCAL
#define BOOST_NO_CXX11_UNRESTRICTED_UNION

// C++ 14:
#if !defined(__cpp_aggregate_nsdmi) || (__cpp_aggregate_nsdmi < 201304)
#  define BOOST_NO_CXX14_AGGREGATE_NSDMI
#endif
#if !defined(__cpp_binary_literals) || (__cpp_binary_literals < 201304)
#  define BOOST_NO_CXX14_BINARY_LITERALS
#endif
#if !defined(__cpp_constexpr) || (__cpp_constexpr < 201304)
#  define BOOST_NO_CXX14_CONSTEXPR
#endif
#if !defined(__cpp_decltype_auto) || (__cpp_decltype_auto < 201304)
#  define BOOST_NO_CXX14_DECLTYPE_AUTO
#endif
#if (__cplusplus < 201304) // There's no SD6 check for this....
#  define BOOST_NO_CXX14_DIGIT_SEPARATORS
#endif
#if !defined(__cpp_generic_lambdas) || (__cpp_generic_lambdas < 201304)
#  define BOOST_NO_CXX14_GENERIC_LAMBDAS
#endif
#if !defined(__cpp_init_captures) || (__cpp_init_captures < 201304)
#  define BOOST_NO_CXX14_INITIALIZED_LAMBDA_CAPTURES
#endif
#if !defined(__cpp_return_type_deduction) || (__cpp_return_type_deduction < 201304)
#  define BOOST_NO_CXX14_RETURN_TYPE_DEDUCTION
#endif
#if !defined(__cpp_variable_templates) || (__cpp_variable_templates < 201304)
#  define BOOST_NO_CXX14_VARIABLE_TEMPLATES
#endif

// C++17
#if !defined(__cpp_structured_bindings) || (__cpp_structured_bindings < 201606)
#  define BOOST_NO_CXX17_STRUCTURED_BINDINGS
#endif
#if !defined(__cpp_inline_variables) || (__cpp_inline_variables < 201606)
#  define BOOST_NO_CXX17_INLINE_VARIABLES
#endif
#if !defined(__cpp_fold_expressions) || (__cpp_fold_expressions < 201603)
#  define BOOST_NO_CXX17_FOLD_EXPRESSIONS
#endif
#if !defined(__cpp_if_constexpr) || (__cpp_if_constexpr < 201606)
#  define BOOST_NO_CXX17_IF_CONSTEXPR
#endif

#if (__DMC__ <= 0x840)
#error "Compiler not supported or configured - please reconfigure"
#endif
//
// last known and checked version is ...:
#if (__DMC__ > 0x848)
#  if defined(BOOST_ASSERT_CONFIG)
#     error "boost: Unknown compiler version - please run the configure tests and report the results"
#  endif
#endif

/* digitalmars.hpp
22EiJ+k2zKXlV0VPND2Q9GokeHBagK72vlUDE4p5QGAJD5R2xJYy9Z952hJ2TWCWFYiItOKCj66LrvQd9POiAUAJjY87yCBUxBvW7qbT8a6o06nAKowz0VS6dt/GnE6wupZ3qXaVxMVRb3/oayajIxdqBnIskDm+cUkKHlAisFuQJ0mT8NHlWiqrFSfpy9YGjjo681yTXGg7LxLULrg7yPZP1DcM1X+wWUx4ubn1plAGFz+flHc1fO6qpKMgb9z9zv2Q3yYKwe0uFw7ZPXl8go2BQWzE4o3vY5acwqXK4YdgP6xpuRIRcqI/GbrYo8VFfTGm6I69MkZIr6ehSj3u3GYCBRM7NRfPE1kJm72DosbTNhART39IFCdTNS+HdOda1FOP17cnEudN4fE1pDEr+QlJOwBvIW9S9LGYNxQZjmZApb2YAx+J2Y9kfEa5xXonv8wECRWJQ7WYf+HVytHk31CWnfIwZFj+c84r96Me/BJmg929qnu4jbhrtDbr8TfrTKkn5fvcvjoAgqEbhTWgI1cGTGNGSvZvlzYXpe99lepGGFu0pffpG5i7n2m95rvaW29AwcxHbIsvuMiNPZZz6thBIM83uOXtrtxnVAdUBEV7Rw9DgJ0RdyuUkCQ3pPMcXPkmRQXi8Df7W1bPgcxxrN7OQQlVunm3/jBeDJn0uT/SP/0UqNC9QfRduKc1LyhXh1gl8hbXRci3oGpcEjK11mNU3zAbcyXiP1H7cBzxOETwSR+x3mFIdbMS7yG2qPXTW5VOu7VjDhPP6TcTIVwCmZI0J6mZV7feaxDCWSjNQqmQgL7XQo0Ndvxqdyz9FmNSs5yMBOTjsabCuWtSKGpXsLKXkHkFQ/B0cIpK1t/v2L2eRKsqctJq743koiVP1U+UTPw3lJOC1fu7CWC1ek9DY0AZNguUHE0Mm7c5YwKGIT2yBoicIJwCLsSK8ZgEmZchgUJg9LHStR5Eg86yN7BmnUjraQyCG5KDlTlp3YS5sLC+dxZQrQczH47N1ftnok/SFaDy0+9VI4UD/fIXAuIyx6wv/cZs0UsZ1QpffxCJUiT9moWZ/Yu5DK4Ug0bD6//A+WLf4XXgfsJZlO5YhEm0awEd5avnY2umSr5xlNEiCuAaefnRjKEAViCxDHtmE0JnqSLusBxcNH2tW+i84VktoF1WDKgWg1DIGaBVOli2R5WzAVmlwEmjYlV2bHBEHmSNDbPItKrQsrS6QiIdt9l265XghkSNZThyUsHYj6Vg9XFYCbmicIsI364mnMK8l55D1d63iUXVV2pWYT1WTkuqxq2vGQ9FyIz6Y1xksONT0lYg5ptcYkh6hQyqHRGfvMcheTeXbg63mskJSn5J5HywLWhObb/CokAOq9T4HWTL6Wprk0xEA381phNTPdVGSgBA64p695xx3eNqxPyJRdeCkaxZtiEogVQCP2FUvWxlS1rL7hwYKxtiw9bLD60yrx6gk21296Bj0bm4uHVy8bEmFVr5LgDQbrTz77XiUWNuTU9wD3eji6oUMBwE1gArNf+3pbe26g98I7oQbpeRdfnhH5uC/8pjwtccXj/9mqOtlDOc7iVh/EKI96cl/clh5o76/dGkAcwRvedgYhU8zBB6V67gaqurUjg1vrw/GiAwOXe2GhW+thjtoMkHSals0LUVppdYW/RA/sMPIRXq83tz9+PfKbcWQgH4yD9v2vspJrF1tHicbLPp4XXWV70XwsWHgG5b7ogCISebrrxuZe/4L4cgJakbDE4RbGYgY7XDXmvCj23qxFROBwh+Xmeds4uWLm3boh8j2pOsHHGE11PepDfG9Kyz9fg2saKQiWBjbGpU3fIhLWebfxvxHxcudh4PFIalUyOSg3zPhJFHMA22bIteSyNrFgLyyTdL+P5mlilklJ9nkfGo9a8zJgdUf2e92KFqrbQQHmkswKsecRIFFaP0xc5su6+DP1Y1fFoXL8POkfexo2Ll77TYHV+N8HdUev6KzcrYA4wjHdkgeG3ctLGFRBWgER+iW5yZqcsE0paTxkpeP98+pzicblbxPMcmbtfhICSchAcpFjeu9zrD39uy7llTJIF61dCXyG5RCEH6HA2bt8JixuCaTCS5/YEoQsfoj0HCqD7WEAQwnIQZNYOY4aYy4jr8Y76Jc+eBatqXit61geGxpxdtAGQDCEhO2LuyYsI0byshZT3Y8JUj4yYW/o/f1PvCbIkCgStCtE5hRB9l9K3GVxFbq2E7SIWq/qz6ImXLi2W2NOri8EZZSzCr1mlzTxL9S6EvDza0yxXnCJSxkNsw9LJ1BPW50NhEBHtQb0tn9wkrojQQtS6rJKZ6Txtb3UyW9uwbJblEQZTn5RmRZVp3n/Fa0M/6lHF2cTa14FaUokUEUIRYr/qYGbShix3qXnMTcbcYZ0zW4d/OyygwfuhrdjONOp/X4dvJ85ijc9T7mo1k01HeGUGJCdiPqL42MVk12pso8Sa63plq/+FJ7jzKcn5sFNF0oU7MfJEOoCJUP+ircjoOIaAOhID2Yu0uamvSFSlZIKm2PRqcUBC3gpOT8mVIWAGT5dsyQO5fVkha1hzukJEgUW6bMXcvdOo6yxiTPbWYvr0D/izPfbbOfdtkHPsYYNBYgtYrFX6Dl1hla8GnuGm0lye29gkuYBy+TvKngdNTL0BOO8iknio25Pjir1ywu8bsaXqsoQtOegTcEINGk+0ghnfL9dlA7RknLAFNU0wCXh3kdFOXLUw2IAVKGAVjCB3pteo0ExF4I60UPw/sNxVf9BZ5xgsY7q5bBc4/JHS0rPrYmeSh85E/MOHqQWEiYf/Py48QBOJpLD42HogdC8Cg/w9d8DyBbHMlYBmOlJGfByDwdI+MoVKEkeBKKkzJ3YXqDmYVPe4MUjuWX8eVwTsUGqWX95FLIWidHZJp80glYNqI66qeVzW9wmG5Zo+m0rF0skLgIfgo8Ga9V3sLu+nTyUUw2Me55P31I4t6wuKGfI+H1HWoi57sT3r/+awkxT8TNsC7UphJ2V4+sD3xv9vdTOhEBXJbHCXjVXnM7yZmWTTFhH3bAwDeMtALOekfr9AjFC90f0GZzMZvE/gr2wYcwbymw8HWsA0zwQW64DVQTQVSnAs8jQgr8CGJMQP/cOrm3Hh4w3NFk8Mmp3vMzAe1w3YptfWnLHyIL7zBbTIGgLZ6fxuG3kldv61gU3PhgAY7d8EMGm9dq50Jzo9O+GlTEu7i0U4qfYF5fKpNzSFKhm2gie/Zg6vUTkmGYpA2mqALdKEQbkeSKAoyUTAHCj5Z0kWtPEcNfayYvmkWyC7CGInvU8fWZJLLsDXlU5rNy3vli1LFAIxAI6I4Gf/JGpY1uGXXO/lMXgDar1Zlfa5LT7PLiioj24EUHEDPuvIPmiEcb1HAdctHLATJvyv6t6pU2YqvJh5gWLAhTzxPPvTt5u8NadIS8Qyzb3WvWDi69UqYfxOZA6DdQ7SLAIY6UlB2yRfipT1qMw891u7+r0NVTT9kpQLbDNfVwJRlF+dWT8krBWdBc6ZVcVHqsEmNjQGUHJEKcMC+RikSv2sRS8Q2jh1+Q5dQGM0ZB4hKn4nQ/4Zwv+7fYXQwPf1LhuvLrU9UwvoqeHL2rR5s3+l7qP2FYAdT6nhVMljktF6nH/cyEVaqEZO+rukQv+I7Sy+S2FlgXrt8uUd+96BPyxmPMrwo4i4EVlsX0ktKRrfjFNrC9iFYRqwjL173U46Vm1U5uvxHSDqyb9vrptQPZOpEI16JU3mmnmxJczmUEkQF5DHrqysqZ6wVhB7H3Hjgv8sLlU0U7R7atQeIrIsEDdVGTrzUUlnqJaxT34+9j3YwHZ3V6PPt/U7ThTUrye3iXRhPhR3YIT4bFH/ecM5is1HfAr0Pd+JFujuvwV0zq1zhbk2SiE/ezOA/5HX/fOBxfcPiHl3WmfNzuVjmW79ac6Nju7esz+W82he/c4j0ex1vUh99eK5fZwMFZNdmCwGnvgcDv3Obr0Nxle8ddkWXGGvhyKb5Bs5k5HEIT/26Alb5WnJjft7bd39OnoafGwsgBg5OCfu1+Fx7343suPni/uEiJJZSH7xJOwkOcXFBDsMFCEjzuGkgE/o9ggs4zZwE5Wqi+LTJgFT/4eYo6CTtno4KnVxcG5YOlDeeAhOJSdc8KH9oUUrOLwDB9yFioxs1ocCLRNKhLxhSb3me6/VCJC1QA5HkvPSv6Qlb8dP0x0t+0d4FGabqbSiwBOg5PpQKZ7ZsKrimDLUd7gBb69H61n2TNhk9ac9dHCzdTT3hcpHqD88xBhWLeKD62NwTg/fMbYghNh4Rw9Up/CPJbk4tvGcoRjkOecnCztulrI+R83AHoGdi3Ey7LqlJqEFJjyiNku6Z9F2M9FTByEGznCaG7veRsnqDU959FrPINEDqRu8ydjUaL3AsIjs7T7VAAvU1qkqLqqQuztB69niVGwpp+lqeKc4r48usSDYuXby/CrZvK0GJKiMY03Gbt3jMZQ8RSEP5SFvGjjELUXSAK6qNFpvrZp3aPa46FNU5HH48ted4J9lB9sruehKZFXofXhf9lo5zmkuaNPg3YpRWLxXlq8ONzPlhVN/4+k+iVxgPJ0TR19l4tFPMpwOLUM9jWx5YzICsZ3Lmt7kWBAsecUxgBiFBjAAGLPnTc3mVfhKtKpW5wwDnnbgifyPSNYIoFEMAIrMqTYxCrSw5ANZDxh83iFTyZqaZRybUJH9xj/Pz9zxlOOHRMDtIxRc+oHVAsm+jG6dyu+hK8U/kwva3CQKSL3+JzXcJjmVhVGbYS4ERqplK1sM6HJ4LwQXNOPy0Q1wmHTJaT6rVCc0UotQoKpOSC4SEicT0cFhSQwxPpL6YhpLGIhojlXp/V4DkkjARWuZ6iY3An7qU6jxYCk5wxc3Jd9Uap+FxR6qGOQJ25dY8GglKmczNlgnVJAfsKiqfu5juE6aWs65YEU0pucKI+9a9bivT8haNTueWou3hC4vdDY0T2cU6HBmzJCQiyQlWl7Jc6xvGU6kE/LqHNhvYWj81LO3OlBWh6eRrYbzJrceVJRwMAEoBfYstjWfHBgTnKgGhdZXA/KF6jLgrR/C5xR2416EonFrlaeiEZqDXAY1i8b8yUjpBRMZZ/55u+NY/Es571BsYRevj8DX29keM82tFbCjctRApMZlHZ0AbtJo9E+w0WSYKlUGTQ6dMusrbuvjT6Wx2K3WTAoxH8ngujeTalrM21H/I4r0dkpK5AVS6DjH+ejumvmy1EznGUMR2/wu7/ouKoYc5MeVEJvs0dSqaeT/JZcQo49O3vBjynMiNBml0aDXNQd6CiXds6UR5daZ4uDjrqhMRkqh9cqRbVOHffFMKKikfyLSx1FZDU8QRmXzOmlZrSkuddO7yU8Mb4/7fP1rXX0pOpNqFtBEjI1HTEdbKiqibosMt2cpWmy3Wmy1UqJvP3Cq7P7XOK7yu1Z0vi93XLS56p0Yn0qsYhS+J7SX6LckK6C334T7WsMazJg1yiIBHj8iF+LiOuOPRVKfJ1AiK1ux+co0lWOlS4G6FzULrKS6XRdCnMa16WwFZ2WJMLULRuFqzi1kbHypqO7Y5TnK5tN1zOxg75rebDF4J3eaLq/17QpvijNWBlk+rBr4gBOn4qwynjzJlDqd4jA6ZUa35utojH7wg/4L/altv8FbsfwE8SfRryj3TDTQExXuPeM+xZ1Bf0jqGIrsbkgX103mSXah/Tjizkpz3tBkSy7Ke/E3t9vGjpFlPOJhabUl0uKSarYE8TlnNwlsXox2tcWzEPF2OyAsdgQsgVJKFbdgErPDXcEmIcgG9G6APOpY2DTqrekZq/Ejqv92tsdbZXTkPpdUi71+X2++DCKEHTLbvd/ti+N66k60XXBItWT8k/NR677mtLFYjyDjYNKV7caYKy4u1EQrD2aRg1gOq5XEywLh6dKzlIryVPyzAnf/aBbt7pet/LJSuvUX0hyi4QKD3keV0FI9RPQTZMxnMOt/7h6A6XIv7/pcfr5+oYNYM9WCj2cmfFqnI/wsgBhztvFaLi+KvDRPTDc8rGE43KS37MEjQsJ8/+6o0n5c1KZYgoO2dVoQ/wrur5I2avJ6vEn04GtsNr1QgaJeTuXyZBgM5sNW79RG8N38uEcFZCAEcSNMSQJAUfrhSzusOXhJhapqUP1cdqAYnKEJebNJq7FReqHAlyBo9oZgKOUeSGBQaQXpvvtuuvxS/f1+mCB3JnV8mtL4MP/Shq85Esbo4Idjtg9fcaG0vod+WSMcc8HkVMM/2MxxpsSkAv76e0hov8f4WWGEkVwbevnODvlYloEe/T4dh6ATcngNkHf8QaNgyaCo7wR+lEFFgpfOAZUaqB6HAL36jrQHD8iLMSJoyfvXDtE/F+sF2+cGiK0oJ9bhmysHJYUioegXN3D1GAQtrLLuda23qLaKQ00HA57bep0E4wuIDL8KbL4Kzr+0JQWJRsXqeekIg9WYfB8DXGg35B0qGz3qDlvEBmDiHa4hR1cKaE2JqwSWIGt+V94Cb0jh+xERwP4fhdjtrHrEfIMeQF2DvePIYlqGQO/Ie1EHSM9Lg8WBoUWZ0AtE8gEC5vKjgfVV/XEds/3BM1FCjUVEp05gHe+H2YdHx68idRfBXsCCiYPsS+DmR8sr4Ive4ZvvEnCD5ZAXFvaFi2qHFkuFQfXIGiyFfjnA5UCpS+WRShg7yunbyM8q6Rso9/RsRYgg/9ZEBrKcAMyAC92QkxmBB4O1/veZ59llB0vLzlkGAPm3ATfZd7U/IhDYJBKAJsAaJQ3mJoJMJUyMJT5Nd0asJzWVKTiSKNGWJ9mrI5luJ6qOK/LbI3JtIPblFceHFiinFn0WyT9BST4xyxwt7pgt2Qx7hUtyMqlj6ZwEwcpZSgYKQMPKGuMLN78aLU78tvVsfHYNqtv8CrX4jpQM8df4IFBzrlOwKJ2ljnk0DfwEDGJd4rYRjZeGI/HATDG4Kb1LqbX0jiekK71YLGK3sZbzd+aAAPR8juDcBhxD5rY1QNRJjuv1IuiO8BsBB3g1Mhi9cyWnBZhaXRr2/KSFE2g/nVAPH2A6H/RYXIE5NeirdOGSd+qxBHmNiKdtWYRBTpayjuM3fo7TmtjjMukTMy8pKSR3EzTB78z6ost0Qk8Bew36Gv7tJmLJoJxchfl62wHtg1GWYmXVXZ+zt4oPPFoYvmlX8J4EcjYRQFHQcp5IKR0ZlXOgzJwWbP2sHYxAwot3SE5c8U+RxS6bxSRq0TFS9MwLnjbJ0rJqYNK9UKXJGMQPLOQpysj63OWJm8cfNQQj9+bGoNdCwpV6PQQGR6S8f/BLbg4CAbBluYq4RG0im22chnXWSykjBBSAZGhJBYAAvfo8DdOtKmaAAF5mGJOgNvrSEdJSG3vPg8hhFNNRnoZk09JYFHRiaPSlH4O2goZdUNYVM/MlHcCkjvs7fcGpjRbZUZBp5JeEVRBpRnTkzS6U38CophdqaT8t0dyzBzjVjhd1FCMikyK1ej/xEarNOJfIrI8VZIMr5/VvaW4VQlmVd9Nsj7jwpZ4jnpcaA6VQlbooxg/msqsxn3NE93x7L5GKk6dQeLgr9twROeh8VyNMwSmaLqmsZt3IqE1MbjH84ogNVEMEla8/J
*/