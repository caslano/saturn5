//  (C) Copyright John Maddock 2006.
//  Use, modification and distribution are subject to the
//  Boost Software License, Version 1.0. (See accompanying file
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for most recent version.

//  GCC-XML C++ compiler setup:

#  if !defined(__GCCXML_GNUC__) || ((__GCCXML_GNUC__ <= 3) && (__GCCXML_GNUC_MINOR__ <= 3))
#     define BOOST_NO_IS_ABSTRACT
#  endif

//
// Threading support: Turn this on unconditionally here (except for
// those platforms where we can know for sure). It will get turned off again
// later if no threading API is detected.
//
#if !defined(__MINGW32__) && !defined(_MSC_VER) && !defined(linux) && !defined(__linux) && !defined(__linux__)
# define BOOST_HAS_THREADS
#endif

//
// gcc has "long long"
//
#define BOOST_HAS_LONG_LONG

// C++0x features:
//
#  define BOOST_NO_CXX11_CONSTEXPR
#  define BOOST_NO_CXX11_NULLPTR
#  define BOOST_NO_CXX11_TEMPLATE_ALIASES
#  define BOOST_NO_CXX11_DECLTYPE
#  define BOOST_NO_CXX11_DECLTYPE_N3276
#  define BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS
#  define BOOST_NO_CXX11_RVALUE_REFERENCES
#  define BOOST_NO_CXX11_STATIC_ASSERT
#  define BOOST_NO_CXX11_VARIADIC_TEMPLATES
#  define BOOST_NO_CXX11_VARIADIC_MACROS
#  define BOOST_NO_CXX11_AUTO_DECLARATIONS
#  define BOOST_NO_CXX11_AUTO_MULTIDECLARATIONS
#  define BOOST_NO_CXX11_CHAR16_T
#  define BOOST_NO_CXX11_CHAR32_T
#  define BOOST_NO_CXX11_DEFAULTED_FUNCTIONS
#  define BOOST_NO_CXX11_DELETED_FUNCTIONS
#  define BOOST_NO_CXX11_HDR_INITIALIZER_LIST
#  define BOOST_NO_CXX11_SCOPED_ENUMS
#  define BOOST_NO_SFINAE_EXPR
#  define BOOST_NO_CXX11_SFINAE_EXPR
#  define BOOST_NO_CXX11_EXPLICIT_CONVERSION_OPERATORS
#  define BOOST_NO_CXX11_LAMBDAS
#  define BOOST_NO_CXX11_LOCAL_CLASS_TEMPLATE_PARAMETERS
#  define BOOST_NO_CXX11_RANGE_BASED_FOR
#  define BOOST_NO_CXX11_RAW_LITERALS
#  define BOOST_NO_CXX11_UNICODE_LITERALS
#  define BOOST_NO_CXX11_NOEXCEPT
#  define BOOST_NO_CXX11_UNIFIED_INITIALIZATION_SYNTAX
#  define BOOST_NO_CXX11_USER_DEFINED_LITERALS
#  define BOOST_NO_CXX11_ALIGNAS
#  define BOOST_NO_CXX11_TRAILING_RESULT_TYPES
#  define BOOST_NO_CXX11_INLINE_NAMESPACES
#  define BOOST_NO_CXX11_REF_QUALIFIERS
#  define BOOST_NO_CXX11_FINAL
#  define BOOST_NO_CXX11_OVERRIDE
#  define BOOST_NO_CXX11_THREAD_LOCAL
#  define BOOST_NO_CXX11_UNRESTRICTED_UNION

// C++ 14:
#if !defined(__cpp_aggregate_nsdmi) || (__cpp_aggregate_nsdmi < 201304)
#  define BOOST_NO_CXX14_AGGREGATE_NSDMI
#endif
#if !defined(__cpp_binary_literals) || (__cpp_binary_literals < 201304)
#  define BOOST_NO_CXX14_BINARY_LITERALS
#endif
#if !defined(__cpp_constexpr) || (__cpp_constexpr < 201304)
#  define BOOST_NO_CXX14_CONSTEXPR
#endif
#if !defined(__cpp_decltype_auto) || (__cpp_decltype_auto < 201304)
#  define BOOST_NO_CXX14_DECLTYPE_AUTO
#endif
#if (__cplusplus < 201304) // There's no SD6 check for this....
#  define BOOST_NO_CXX14_DIGIT_SEPARATORS
#endif
#if !defined(__cpp_generic_lambdas) || (__cpp_generic_lambdas < 201304)
#  define BOOST_NO_CXX14_GENERIC_LAMBDAS
#endif
#if !defined(__cpp_init_captures) || (__cpp_init_captures < 201304)
#  define BOOST_NO_CXX14_INITIALIZED_LAMBDA_CAPTURES
#endif
#if !defined(__cpp_return_type_deduction) || (__cpp_return_type_deduction < 201304)
#  define BOOST_NO_CXX14_RETURN_TYPE_DEDUCTION
#endif
#if !defined(__cpp_variable_templates) || (__cpp_variable_templates < 201304)
#  define BOOST_NO_CXX14_VARIABLE_TEMPLATES
#endif

// C++17
#if !defined(__cpp_structured_bindings) || (__cpp_structured_bindings < 201606)
#  define BOOST_NO_CXX17_STRUCTURED_BINDINGS
#endif
#if !defined(__cpp_inline_variables) || (__cpp_inline_variables < 201606)
#  define BOOST_NO_CXX17_INLINE_VARIABLES
#endif
#if !defined(__cpp_fold_expressions) || (__cpp_fold_expressions < 201603)
#  define BOOST_NO_CXX17_FOLD_EXPRESSIONS
#endif
#if !defined(__cpp_if_constexpr) || (__cpp_if_constexpr < 201606)
#  define BOOST_NO_CXX17_IF_CONSTEXPR
#endif

#define BOOST_COMPILER "GCC-XML C++ version " __GCCXML__



/* gcc_xml.hpp
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
*/