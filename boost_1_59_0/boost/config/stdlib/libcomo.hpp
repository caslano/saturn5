//  (C) Copyright John Maddock 2002 - 2003. 
//  (C) Copyright Jens Maurer 2002 - 2003. 
//  (C) Copyright Beman Dawes 2002 - 2003. 
//  Use, modification and distribution are subject to the 
//  Boost Software License, Version 1.0. (See accompanying file 
//  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

//  See http://www.boost.org for most recent version.

//  Comeau STL:

#if !defined(__LIBCOMO__)
#  include <boost/config/no_tr1/utility.hpp>
#  if !defined(__LIBCOMO__)
#      error "This is not the Comeau STL!"
#  endif
#endif

//
// std::streambuf<wchar_t> is non-standard
// NOTE: versions of libcomo prior to beta28 have octal version numbering,
// e.g. version 25 is 21 (dec)
#if __LIBCOMO_VERSION__ <= 22
#  define BOOST_NO_STD_WSTREAMBUF
#endif

#if (__LIBCOMO_VERSION__ <= 31) && defined(_WIN32)
#define BOOST_NO_SWPRINTF
#endif

#if __LIBCOMO_VERSION__ >= 31
#  define BOOST_HAS_HASH
#  define BOOST_HAS_SLIST
#endif

//  C++0x headers not yet implemented
//
#  define BOOST_NO_CXX11_HDR_ARRAY
#  define BOOST_NO_CXX11_HDR_CHRONO
#  define BOOST_NO_CXX11_HDR_CODECVT
#  define BOOST_NO_CXX11_HDR_CONDITION_VARIABLE
#  define BOOST_NO_CXX11_HDR_EXCEPTION
#  define BOOST_NO_CXX11_HDR_FORWARD_LIST
#  define BOOST_NO_CXX11_HDR_FUTURE
#  define BOOST_NO_CXX11_HDR_INITIALIZER_LIST
#  define BOOST_NO_CXX11_HDR_MUTEX
#  define BOOST_NO_CXX11_HDR_RANDOM
#  define BOOST_NO_CXX11_HDR_RATIO
#  define BOOST_NO_CXX11_HDR_REGEX
#  define BOOST_NO_CXX11_HDR_SYSTEM_ERROR
#  define BOOST_NO_CXX11_HDR_THREAD
#  define BOOST_NO_CXX11_HDR_TUPLE
#  define BOOST_NO_CXX11_HDR_TYPE_TRAITS
#  define BOOST_NO_CXX11_HDR_TYPEINDEX
#  define BOOST_NO_CXX11_HDR_UNORDERED_MAP
#  define BOOST_NO_CXX11_HDR_UNORDERED_SET
#  define BOOST_NO_CXX11_NUMERIC_LIMITS
#  define BOOST_NO_CXX11_ALLOCATOR
#  define BOOST_NO_CXX11_POINTER_TRAITS
#  define BOOST_NO_CXX11_ATOMIC_SMART_PTR
#  define BOOST_NO_CXX11_SMART_PTR
#  define BOOST_NO_CXX11_HDR_FUNCTIONAL
#  define BOOST_NO_CXX11_HDR_ATOMIC
#  define BOOST_NO_CXX11_STD_ALIGN
#  define BOOST_NO_CXX11_ADDRESSOF

#if defined(__has_include)
#if !__has_include(<shared_mutex>)
#  define BOOST_NO_CXX14_HDR_SHARED_MUTEX
#elif __cplusplus < 201402
#  define BOOST_NO_CXX14_HDR_SHARED_MUTEX
#endif
#else
#  define BOOST_NO_CXX14_HDR_SHARED_MUTEX
#endif

// C++14 features
#  define BOOST_NO_CXX14_STD_EXCHANGE

// C++17 features
#  define BOOST_NO_CXX17_STD_APPLY
#  define BOOST_NO_CXX17_STD_INVOKE
#  define BOOST_NO_CXX17_ITERATOR_TRAITS

//
// Intrinsic type_traits support.
// The SGI STL has it's own __type_traits class, which
// has intrinsic compiler support with SGI's compilers.
// Whatever map SGI style type traits to boost equivalents:
//
#define BOOST_HAS_SGI_TYPE_TRAITS

#define BOOST_STDLIB "Comeau standard library " BOOST_STRINGIZE(__LIBCOMO_VERSION__)

/* libcomo.hpp
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
*/