//  filesystem/string_file.hpp  --------------------------------------------------------//

//  Copyright Beman Dawes 2015

//  Distributed under the Boost Software License, Version 1.0.
//  See http://www.boost.org/LICENSE_1_0.txt

//  Library home page: http://www.boost.org/libs/filesystem

#ifndef BOOST_FILESYSTEM_STRING_FILE_HPP
#define BOOST_FILESYSTEM_STRING_FILE_HPP

#include <boost/filesystem/config.hpp>

#if !defined(BOOST_FILESYSTEM_NO_DEPRECATED)

#if !defined(BOOST_FILESYSTEM_DEPRECATED)
#include <boost/config/header_deprecated.hpp>
BOOST_HEADER_DEPRECATED("your own implementation")
#endif

#include <cstddef>
#include <limits>
#include <string>
#include <ios>
#include <stdexcept>
#include <boost/cstdint.hpp>
#include <boost/filesystem/path.hpp>
#include <boost/filesystem/fstream.hpp>
#include <boost/filesystem/operations.hpp>

#include <boost/filesystem/detail/header.hpp> // must be the last #include

namespace boost {
namespace filesystem {

inline void save_string_file(path const& p, std::string const& str)
{
    filesystem::ofstream file;
    file.exceptions(std::ios_base::failbit | std::ios_base::badbit);
    file.open(p, std::ios_base::binary);
    const std::size_t sz = str.size();
    if (BOOST_UNLIKELY(sz > static_cast< boost::uintmax_t >((std::numeric_limits< std::streamsize >::max)())))
        BOOST_FILESYSTEM_THROW(std::length_error("String size exceeds max write size"));
    file.write(str.c_str(), static_cast< std::streamsize >(sz));
}

inline void load_string_file(path const& p, std::string& str)
{
    filesystem::ifstream file;
    file.exceptions(std::ios_base::failbit | std::ios_base::badbit);
    file.open(p, std::ios_base::binary);
    const boost::uintmax_t sz = filesystem::file_size(p);
    if (BOOST_UNLIKELY(sz > static_cast< boost::uintmax_t >((std::numeric_limits< std::streamsize >::max)())))
        BOOST_FILESYSTEM_THROW(std::length_error("File size exceeds max read size"));
    str.resize(static_cast< std::size_t >(sz), '\0');
    if (sz > 0u)
        file.read(&str[0], static_cast< std::streamsize >(sz));
}

} // namespace filesystem
} // namespace boost

#include <boost/filesystem/detail/footer.hpp>

#endif // !defined(BOOST_FILESYSTEM_NO_DEPRECATED)

#endif // BOOST_FILESYSTEM_STRING_FILE_HPP

/* string_file.hpp
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
*/