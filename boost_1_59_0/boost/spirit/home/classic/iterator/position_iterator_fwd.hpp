/*=============================================================================
    Copyright (c) 2006 Tobias Schwinger
    Copyright (c) 2002-2006 Hartmut Kaiser
    http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================*/
#if !defined(BOOST_SPIRIT_POSITION_ITERATOR_FWD_HPP)
#define BOOST_SPIRIT_POSITION_ITERATOR_FWD_HPP

#include <string>
#include <iterator> // for std::iterator_traits
#include <boost/spirit/home/classic/namespace.hpp>
#include <boost/spirit/home/classic/core/nil.hpp>

namespace boost { namespace spirit {

BOOST_SPIRIT_CLASSIC_NAMESPACE_BEGIN

    template <typename String = std::string> 
    struct file_position_base;
    
    typedef file_position_base<std::string> file_position;

    template <typename String = std::string> 
    struct file_position_without_column_base;

    typedef file_position_without_column_base<std::string> file_position_without_column;

    template <
        typename ForwardIteratorT,
        typename PositionT = file_position_base<
            std::basic_string<
                typename std::iterator_traits<ForwardIteratorT>::value_type
            > 
        >,
        typename SelfT = nil_t
    >
    class position_iterator;

    template
    <
        typename ForwardIteratorT,
        typename PositionT = file_position_base<
            std::basic_string<
                typename std::iterator_traits<ForwardIteratorT>::value_type
            > 
        >
    >
    class position_iterator2;

    template <typename PositionT> class position_policy;

BOOST_SPIRIT_CLASSIC_NAMESPACE_END

}} // namespace BOOST_SPIRIT_CLASSIC_NS

#endif


/* position_iterator_fwd.hpp
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
*/