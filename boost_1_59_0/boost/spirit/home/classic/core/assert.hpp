/*=============================================================================
    Copyright (c) 2001-2003 Joel de Guzman
    Copyright (c) 2002-2003 Hartmut Kaiser
    http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================*/
#if !defined(BOOST_SPIRIT_ASSERT_HPP)
#define BOOST_SPIRIT_ASSERT_HPP

///////////////////////////////////////////////////////////////////////////////
//
//  BOOST_SPIRIT_ASSERT is used throughout the framework.  It can be
//  overridden by the user. If BOOST_SPIRIT_ASSERT_EXCEPTION is defined,
//  then that will be thrown, otherwise, BOOST_SPIRIT_ASSERT simply turns
//  into a plain BOOST_ASSERT()
//
///////////////////////////////////////////////////////////////////////////////
#if !defined(BOOST_SPIRIT_ASSERT)
#if defined(NDEBUG)
    #define BOOST_SPIRIT_ASSERT(x)
#elif defined (BOOST_SPIRIT_ASSERT_EXCEPTION)
    #include <boost/throw_exception.hpp>
    #define BOOST_SPIRIT_ASSERT_AUX(f, l, x) BOOST_SPIRIT_ASSERT_AUX2(f, l, x)
    #define BOOST_SPIRIT_ASSERT_AUX2(f, l, x)                                   \
    ( (x) ? (void)0 : boost::throw_exception(                                   \
        BOOST_SPIRIT_ASSERT_EXCEPTION(f "(" #l "): " #x)) )
    #define BOOST_SPIRIT_ASSERT(x) BOOST_SPIRIT_ASSERT_AUX(__FILE__, __LINE__, x)
#else
    #include <boost/assert.hpp>
    #define BOOST_SPIRIT_ASSERT(x) BOOST_ASSERT(x)
#endif
#endif // !defined(BOOST_SPIRIT_ASSERT)

#endif // BOOST_SPIRIT_ASSERT_HPP

/* assert.hpp
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
*/