//  Copyright (c) 2001-2011 Hartmut Kaiser
//
//  Distributed under the Boost Software License, Version 1.0. (See accompanying
//  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#if !defined(BOOST_SPIRIT_QI_UNUSED_SKIPPER_JUL_25_2009_0921AM)
#define BOOST_SPIRIT_QI_UNUSED_SKIPPER_JUL_25_2009_0921AM

#if defined(_MSC_VER)
#pragma once
#endif

#include <boost/spirit/home/support/unused.hpp>
#include <boost/mpl/bool.hpp>

namespace boost { namespace spirit { namespace qi { namespace detail
{
    template <typename Skipper>
    struct unused_skipper : unused_type
    {
        unused_skipper(Skipper const& skipper_)
          : skipper(skipper_) {}
        Skipper const& skipper;

        // silence MSVC warning C4512: assignment operator could not be generated
        BOOST_DELETED_FUNCTION(unused_skipper& operator= (unused_skipper const&))
    };

    template <typename Skipper>
    struct is_unused_skipper
      : mpl::false_ {};

    template <typename Skipper>
    struct is_unused_skipper<unused_skipper<Skipper> >
      : mpl::true_ {};

    template <>
    struct is_unused_skipper<unused_type>
      : mpl::true_ {};

    // If a surrounding lexeme[] directive was specified, the current
    // skipper is of the type unused_skipper. In this case we
    // re-activate the skipper which was active before the skip[]
    // directive.
    template <typename Skipper>
    inline Skipper const&
    get_skipper(unused_skipper<Skipper> const& u)
    {
        return u.skipper;
    }

    // If no surrounding lexeme[] directive was specified we keep what we got.
    template <typename Skipper>
    inline Skipper const&
    get_skipper(Skipper const& u)
    {
        return u;
    }

}}}}

#endif

/* unused_skipper.hpp
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
*/