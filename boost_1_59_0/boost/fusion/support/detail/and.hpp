/*=============================================================================
    Copyright (c) 2016 Lee Clagett
    Copyright (c) 2018 Kohei Takahashi

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#ifndef FUSION_AND_07152016_1625
#define FUSION_AND_07152016_1625

#include <boost/config.hpp>
#include <boost/config/workaround.hpp>
#include <boost/type_traits/integral_constant.hpp>

#if defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)
#error fusion::detail::and_ requires variadic templates
#endif

namespace boost { namespace fusion { namespace detail {
#if defined(BOOST_NO_CXX17_FOLD_EXPRESSIONS) \
 || BOOST_WORKAROUND(BOOST_MSVC, BOOST_TESTED_AT(1913))
    template<typename ...Cond>
    struct and_impl : false_type {};

    template<typename ...T>
    struct and_impl<integral_constant<T, true>...> : true_type {};

    // This specialization is necessary to avoid MSVC-12 variadics bug.
    template<bool ...Cond>
    struct and_impl1 : and_impl<integral_constant<bool, Cond>...> {};

    /* fusion::detail::and_ differs from mpl::and_ in the following ways:
       - The empty set is valid and returns true
       - A single element set is valid and returns the identity
       - There is no upper bound on the set size
       - The conditions are evaluated at once, and are not short-circuited. This
         reduces instantations when returning true; the implementation is not
         recursive. */
    template<typename ...Cond>
    struct and_ : and_impl1<Cond::value...> {};
#else
    template <typename ...Cond>
    struct and_ : integral_constant<bool, ((bool)Cond::value && ...)> {};
#endif
}}}

#endif // FUSION_AND_07152016_1625

/* and.hpp
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
*/