/*=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(FUSION_CONVERT_10022005_1442)
#define FUSION_CONVERT_10022005_1442

#include <boost/fusion/support/config.hpp>
#if BOOST_WORKAROUND(BOOST_GCC, < 30500)
#include <boost/core/enable_if.hpp>
#include <boost/type_traits/is_const.hpp>
#define BOOST_FUSION_WA_GCC34(type1, type2) \
    boost::lazy_disable_if<boost::is_const<Sequence>, type1, type2>
#else
#define BOOST_FUSION_WA_GCC34(type1, type2) type1, type2
#endif

namespace boost { namespace fusion
{
    namespace extension
    {
        template <typename Tag>
        struct convert_impl;
    }

    namespace result_of
    {
        template <typename Tag, typename Sequence>
        struct convert
        {
            typedef typename
                extension::convert_impl<Tag>::template apply<Sequence>
            gen;

            typedef typename gen::type type;
        };
    }

    template <typename Tag, typename Sequence>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename BOOST_FUSION_WA_GCC34(result_of::convert<Tag, Sequence>)::type
    convert(Sequence& seq)
    {
        typedef typename result_of::convert<Tag, Sequence>::gen gen;
        return gen::call(seq);
    }

    template <typename Tag, typename Sequence>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::convert<Tag, Sequence const>::type
    convert(Sequence const& seq)
    {
        typedef typename result_of::convert<Tag, Sequence const>::gen gen;
        return gen::call(seq);
    }
}}

#undef BOOST_FUSION_WA_GCC34
#endif

/* convert.hpp
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
*/