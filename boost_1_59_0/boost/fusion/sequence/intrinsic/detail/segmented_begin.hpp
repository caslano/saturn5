/*=============================================================================
    Copyright (c) 2011 Eric Niebler

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(BOOST_FUSION_SEGMENTED_BEGIN_HPP_INCLUDED)
#define BOOST_FUSION_SEGMENTED_BEGIN_HPP_INCLUDED

#include <boost/fusion/support/config.hpp>
#include <boost/fusion/sequence/intrinsic/detail/segmented_begin_impl.hpp>
#include <boost/fusion/iterator/segmented_iterator.hpp>
#include <boost/fusion/view/iterator_range.hpp>
#include <boost/fusion/sequence/intrinsic/begin.hpp>
#include <boost/fusion/sequence/intrinsic/end.hpp>
#include <boost/fusion/sequence/intrinsic/empty.hpp>
#include <boost/fusion/container/list/cons.hpp>

namespace boost { namespace fusion { namespace detail
{
    //auto segmented_begin( seq )
    //{
    //    return make_segmented_iterator( segmented_begin_impl( seq, nil_ ) );
    //}

    template <typename Sequence, typename Nil_ = fusion::nil_>
    struct segmented_begin
    {
        typedef
            segmented_iterator<
                typename segmented_begin_impl<Sequence, Nil_>::type
            >
        type;

        BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
        static type call(Sequence& seq)
        {
            return type(
                segmented_begin_impl<Sequence, Nil_>::call(seq, Nil_()));
        }
    };

}}}

#endif

/* segmented_begin.hpp
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
*/