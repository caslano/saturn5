/*=============================================================================
    Copyright (c) 2005-2012 Joel de Guzman
    Copyright (c) 2005-2006 Dan Marsden

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(BOOST_PP_IS_ITERATING)
#if !defined(BOOST_FUSION_SEQUENCE_DEQUE_DETAIL_DEQUE_KEYED_VALUES_CALL_04122006_2211)
#define BOOST_FUSION_SEQUENCE_DEQUE_DETAIL_DEQUE_KEYED_VALUES_CALL_04122006_2211

#if defined(BOOST_FUSION_HAS_VARIADIC_DEQUE)
#error "C++03 only! This file should not have been included"
#endif

#include <boost/preprocessor/iterate.hpp>
#include <boost/preprocessor/repetition/enum_shifted_params.hpp>
#include <boost/preprocessor/repetition/enum_shifted.hpp>
#include <boost/preprocessor/repetition/enum_binary_params.hpp>

#define FUSION_HASH #
#define FUSION_DEQUE_KEYED_VALUES_FORWARD(z, n, _)    \
   BOOST_FUSION_FWD_ELEM(BOOST_PP_CAT(T_, n), BOOST_PP_CAT(t, n))

#define BOOST_PP_FILENAME_1 \
    <boost/fusion/container/deque/detail/cpp03/deque_keyed_values_call.hpp>
#define BOOST_PP_ITERATION_LIMITS (1, FUSION_MAX_DEQUE_SIZE)
#include BOOST_PP_ITERATE()

#undef FUSION_DEQUE_KEYED_VALUES_FORWARD
#undef FUSION_HASH
#endif
#else

#define N BOOST_PP_ITERATION()

        BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
        static type construct(BOOST_PP_ENUM_BINARY_PARAMS(N, typename detail::call_param<T, >::type t))
        {
            return type(t0,
                        deque_keyed_values_impl<
                        next_index
        #if N > 1
                        , BOOST_PP_ENUM_SHIFTED_PARAMS(N, T)
        #endif
                        >::construct(BOOST_PP_ENUM_SHIFTED_PARAMS(N, t)));
        }

#if defined(__WAVE__) && defined(BOOST_FUSION_CREATE_PREPROCESSED_FILES)
FUSION_HASH if !defined(BOOST_NO_CXX11_RVALUE_REFERENCES)
#endif
#if !defined(BOOST_NO_CXX11_RVALUE_REFERENCES) || \
    (defined(__WAVE__) && defined(BOOST_FUSION_CREATE_PREPROCESSED_FILES))
        template <BOOST_PP_ENUM_PARAMS(N, typename T_)>
        BOOST_CXX14_CONSTEXPR BOOST_FUSION_GPU_ENABLED
        static type forward_(BOOST_PP_ENUM_BINARY_PARAMS(N, T_, && t))
        {
            return type(BOOST_FUSION_FWD_ELEM(T_0, t0),
                        deque_keyed_values_impl<
                        next_index
        #if N > 1
                        , BOOST_PP_ENUM_SHIFTED_PARAMS(N, T_)
        #endif
                        >::forward_(BOOST_PP_ENUM_SHIFTED(N, FUSION_DEQUE_KEYED_VALUES_FORWARD, _)));
        }
#endif
#if defined(__WAVE__) && defined(BOOST_FUSION_CREATE_PREPROCESSED_FILES)
FUSION_HASH endif
#endif

#undef N
#endif

/* deque_keyed_values_call.hpp
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
*/