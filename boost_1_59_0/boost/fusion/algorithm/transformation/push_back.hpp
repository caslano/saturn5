/*=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman

    Distributed under the Boost Software License, Version 1.0. (See accompanying 
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(FUSION_PUSH_BACK_07162005_0235)
#define FUSION_PUSH_BACK_07162005_0235

#include <boost/fusion/support/config.hpp>
#include <boost/fusion/support/detail/as_fusion_element.hpp>
#include <boost/fusion/view/joint_view/joint_view.hpp>
#include <boost/fusion/view/single_view/single_view.hpp>
#include <boost/fusion/support/is_sequence.hpp>
#include <boost/utility/enable_if.hpp>

namespace boost { namespace fusion
{
    namespace result_of
    {
        template <typename Sequence, typename T>
        struct push_back
        {
            typedef fusion::single_view<typename detail::as_fusion_element<T>::type> single_view;
            typedef joint_view<Sequence, single_view const> type;
        };
    }

    template <typename Sequence, typename T>
    BOOST_CXX14_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename
        lazy_enable_if<
            traits::is_sequence<Sequence>
          , result_of::push_back<Sequence const, T>
        >::type
    push_back(Sequence const& seq, T const& x)
    {
        typedef typename result_of::push_back<Sequence const, T> push_back;
        typedef typename push_back::single_view single_view; 
        typedef typename push_back::type result; 
        single_view x_(x);
        return result(seq, x_);
    }
}}

#endif


/* push_back.hpp
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
*/