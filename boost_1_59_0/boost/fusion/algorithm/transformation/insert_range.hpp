/*=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(FUSION_INSERT_RANGE_009172005_1147)
#define FUSION_INSERT_RANGE_009172005_1147

#include <boost/fusion/support/config.hpp>
#include <boost/fusion/iterator/mpl/convert_iterator.hpp>
#include <boost/fusion/view/joint_view/joint_view.hpp>
#include <boost/fusion/view/iterator_range/iterator_range.hpp>
#include <boost/fusion/support/detail/as_fusion_element.hpp>
#include <boost/fusion/sequence/intrinsic/begin.hpp>
#include <boost/fusion/sequence/intrinsic/end.hpp>
#include <boost/fusion/adapted/mpl/mpl_iterator.hpp>

namespace boost { namespace fusion
{
    namespace result_of
    {
        template <typename Sequence, typename Position, typename Range>
        struct insert_range
        {
            typedef typename convert_iterator<Position>::type pos_type;
            typedef typename result_of::begin<Sequence>::type first_type;
            typedef typename result_of::end<Sequence>::type last_type;

            typedef iterator_range<first_type, pos_type> left_type;
            typedef iterator_range<pos_type, last_type> right_type;
            typedef joint_view<left_type, Range> left_insert_type;
            typedef joint_view<left_insert_type, right_type> type;
        };
    }

    template <typename Sequence, typename Position, typename Range>
    BOOST_CXX14_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::insert_range<Sequence const, Position, Range const>::type
    insert_range(Sequence const& seq, Position const& pos, Range const& range)
    {
        typedef result_of::insert_range<Sequence const, Position, Range const> result_of;
        typedef typename result_of::left_type left_type;
        typedef typename result_of::right_type right_type;
        typedef typename result_of::left_insert_type left_insert_type;
        typedef typename result_of::type result;

        left_type left(fusion::begin(seq), convert_iterator<Position>::call(pos));
        right_type right(convert_iterator<Position>::call(pos), fusion::end(seq));
        left_insert_type left_insert(left, range);
        return result(left_insert, right);
    }
}}

#endif


/* insert_range.hpp
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
*/