/*=============================================================================
    Copyright (c) 2011 Eric Niebler

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#ifndef BOOST_FUSION_ALGORITHM_ITERATION_REVERSE_ITER_FOLD_FWD_HPP
#define BOOST_FUSION_ALGORITHM_ITERATION_REVERSE_ITER_FOLD_FWD_HPP

namespace boost { namespace fusion
{
    namespace result_of
    {
        template<typename Seq, typename State, typename F>
        struct reverse_iter_fold;
    }

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_iter_fold<
        Seq
      , State const
      , F
    >::type
    reverse_iter_fold(Seq& seq, State const& state, F f);

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_iter_fold<
        Seq const
      , State const
      , F
    >::type
    reverse_iter_fold(Seq const& seq, State const& state, F f);

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_iter_fold<
        Seq
      , State
      , F
    >::type
    reverse_iter_fold(Seq& seq, State& state, F f);

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_iter_fold<
        Seq const
      , State
      , F
    >::type
    reverse_iter_fold(Seq const& seq, State& state, F f);
}}

#endif

/* reverse_iter_fold_fwd.hpp
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
*/