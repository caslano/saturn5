/*=============================================================================
    Copyright (c) 2011 Eric Niebler

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#ifndef BOOST_FUSION_ALGORITHM_ITERATION_REVERSE_FOLD_FWD_HPP
#define BOOST_FUSION_ALGORITHM_ITERATION_REVERSE_FOLD_FWD_HPP

namespace boost { namespace fusion
{
    namespace result_of
    {
        template<typename Seq, typename State, typename F>
        struct reverse_fold;
    }

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_fold<
        Seq
      , State const
      , F
    >::type
    reverse_fold(Seq& seq, State const& state, F f);

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_fold<
        Seq const
      , State const
      , F
    >::type
    reverse_fold(Seq const& seq, State const& state, F f);

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_fold<
        Seq
      , State
      , F
    >::type
    reverse_fold(Seq& seq, State& state, F f);

    template<typename Seq, typename State, typename F>
    BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
    inline typename result_of::reverse_fold<
        Seq const
      , State
      , F
    >::type
    reverse_fold(Seq const& seq, State& state, F f);
}}

#endif

/* reverse_fold_fwd.hpp
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
*/