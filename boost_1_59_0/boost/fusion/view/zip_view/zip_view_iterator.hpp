/*=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman
    Copyright (c) 2006 Dan Marsden

    Distributed under the Boost Software License, Version 1.0. (See accompanying 
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(FUSION_ZIP_VIEW_ITERATOR_23012006_0814)
#define FUSION_ZIP_VIEW_ITERATOR_23012006_0814

#include <boost/fusion/support/config.hpp>
#include <boost/fusion/view/zip_view/zip_view_iterator_fwd.hpp>
#include <boost/fusion/support/iterator_base.hpp>
#include <boost/fusion/view/zip_view/detail/deref_impl.hpp>
#include <boost/fusion/view/zip_view/detail/next_impl.hpp>
#include <boost/fusion/view/zip_view/detail/prior_impl.hpp>
#include <boost/fusion/view/zip_view/detail/advance_impl.hpp>
#include <boost/fusion/view/zip_view/detail/distance_impl.hpp>
#include <boost/fusion/view/zip_view/detail/value_of_impl.hpp>
#include <boost/fusion/view/zip_view/detail/equal_to_impl.hpp>

#include <boost/fusion/container/vector/convert.hpp>

namespace boost { namespace fusion {
    
    struct zip_view_iterator_tag;

    template<
        typename IteratorSequence, 
        typename Traversal>
    struct zip_view_iterator
        : iterator_base<zip_view_iterator<IteratorSequence, Traversal> >
    {
        typedef zip_view_iterator_tag fusion_tag;
        typedef Traversal category;

        template<typename InitSeq>
        BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
        zip_view_iterator(
            const InitSeq& iterator_seq)
            : iterators_(iterator_seq)
        {}

        typedef typename result_of::as_vector<IteratorSequence>::type iterators;
        iterators iterators_;
    };
}}

#ifdef BOOST_FUSION_WORKAROUND_FOR_LWG_2408
namespace std
{
    template <typename IteratorSequence, typename Traversal>
    struct iterator_traits< ::boost::fusion::zip_view_iterator<IteratorSequence, Traversal> >
    { };
}
#endif

#endif

/* zip_view_iterator.hpp
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
*/