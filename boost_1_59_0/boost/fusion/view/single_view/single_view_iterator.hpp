/*=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman
    Copyright (c) 2011 Eric Niebler

    Distributed under the Boost Software License, Version 1.0. (See accompanying 
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
#if !defined(BOOST_FUSION_SINGLE_VIEW_ITERATOR_05052005_0340)
#define BOOST_FUSION_SINGLE_VIEW_ITERATOR_05052005_0340

#include <boost/fusion/support/config.hpp>
#include <boost/fusion/support/detail/access.hpp>
#include <boost/fusion/support/iterator_base.hpp>
#include <boost/fusion/view/single_view/detail/deref_impl.hpp>
#include <boost/fusion/view/single_view/detail/next_impl.hpp>
#include <boost/fusion/view/single_view/detail/prior_impl.hpp>
#include <boost/fusion/view/single_view/detail/advance_impl.hpp>
#include <boost/fusion/view/single_view/detail/distance_impl.hpp>
#include <boost/fusion/view/single_view/detail/equal_to_impl.hpp>
#include <boost/fusion/view/single_view/detail/value_of_impl.hpp>
#include <boost/config.hpp>

namespace boost { namespace fusion
{
    struct single_view_iterator_tag;
    struct random_access_traversal_tag;

    template <typename SingleView, typename Pos>
    struct single_view_iterator
        : iterator_base<single_view_iterator<SingleView, Pos> >
    {
        typedef single_view_iterator_tag fusion_tag;
        typedef random_access_traversal_tag category;
        typedef typename SingleView::value_type value_type;
        typedef Pos position;
        typedef SingleView single_view_type;

        BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED
        explicit single_view_iterator(single_view_type& in_view)
            : view(in_view) {}

        SingleView& view;

        BOOST_DELETED_FUNCTION(single_view_iterator& operator=(single_view_iterator const&))
    };
}}

#ifdef BOOST_FUSION_WORKAROUND_FOR_LWG_2408
namespace std
{
    template <typename SingleView, typename Pos>
    struct iterator_traits< ::boost::fusion::single_view_iterator<SingleView, Pos> >
    { };
}
#endif

#endif



/* single_view_iterator.hpp
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
*/