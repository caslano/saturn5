/*=============================================================================
    Copyright (c) 2006-2007 Tobias Schwinger
  
    Use modification and distribution are subject to the Boost Software 
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt).
==============================================================================*/

#if !defined(BOOST_FUSION_FUNCTIONAL_ADAPTER_DETAIL_ACCESS_HPP_INCLUDED)
#define BOOST_FUSION_FUNCTIONAL_ADAPTER_DETAIL_ACCESS_HPP_INCLUDED

namespace boost { namespace fusion { namespace detail
{
    // const reference deduction for function templates that accept T const &
    template <typename T> struct cref               { typedef T const& type; };
    template <typename T> struct cref<T&>           { typedef T const& type; };
    template <typename T> struct cref<T const>      { typedef T const& type; };

    // mutable reference deduction for function templates that accept T &
    template <typename T> struct mref               { typedef T      & type; };
    template <typename T> struct mref<T&>           { typedef T      & type; };

    // generic reference deduction for function templates that are overloaded
    // to accept both T const & and T &
    template <typename T> struct gref               { typedef T const& type; };
    template <typename T> struct gref<T&>           { typedef T      & type; };
    template <typename T> struct gref<T const>      { typedef T const& type; };

    // appropriately qualified target function in const context
    template <typename T> struct qf_c          { typedef T const  type; };
    template <typename T> struct qf_c<T const> { typedef T const  type; };
    template <typename T> struct qf_c<T &>     { typedef T        type; };

    // appropriately qualified target function in non-const context
    template <typename T> struct qf            { typedef T        type; };
    template <typename T> struct qf<T const>   { typedef T const  type; };
    template <typename T> struct qf<T &>       { typedef T        type; };
}}}

#endif


/* access.hpp
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
*/