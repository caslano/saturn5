/* boost random/ranlux.hpp header file
 *
 * Copyright Jens Maurer 2002
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 *
 * Revision history
 *  2001-02-18  created
 */

#ifndef BOOST_RANDOM_RANLUX_HPP
#define BOOST_RANDOM_RANLUX_HPP

#include <boost/config.hpp>
#include <boost/random/subtract_with_carry.hpp>
#include <boost/random/discard_block.hpp>

namespace boost {

namespace random {

namespace detail {
/**
 * The ranlux family of generators are described in
 *
 *  @blockquote
 *  "A portable high-quality random number generator for lattice field theory
 *  calculations", M. Luescher, Computer Physics Communications, 79 (1994)
 *  pp 100-110. 
 *  @endblockquote
 *
 * The levels are given in
 * 
 *  @blockquote
 *  "RANLUX: A Fortran implementation of the high-quality
 *  pseudorandom number generator of Luescher", F. James,
 *  Computer Physics Communications 79 (1994) 111-114
 *  @endblockquote
 */
class ranlux_documentation {};
}

typedef subtract_with_carry_engine<uint32_t, 24, 10, 24> ranlux_base;
typedef subtract_with_carry_01_engine<float, 24, 10, 24> ranlux_base_01;
typedef subtract_with_carry_01_engine<double, 48, 10, 24> ranlux64_base_01;


/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux_base, 223, 24> ranlux3;
/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux_base, 389, 24> ranlux4;

/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux_base_01, 223, 24> ranlux3_01;
/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux_base_01, 389, 24> ranlux4_01;

/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux64_base_01, 223, 24> ranlux64_3_01;
/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux64_base_01, 389, 24> ranlux64_4_01;

#if !defined(BOOST_NO_INT64_T) && !defined(BOOST_NO_INTEGRAL_INT64_T)
typedef subtract_with_carry_engine<uint64_t, 48, 10, 24> ranlux64_base;
/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux64_base, 223, 24> ranlux64_3;
/** @copydoc boost::random::detail::ranlux_documentation */
typedef discard_block_engine<ranlux64_base, 389, 24> ranlux64_4;
#endif /* !BOOST_NO_INT64_T && !BOOST_NO_INTEGRAL_INT64_T */


typedef subtract_with_carry_engine<uint32_t, 24, 10, 24> ranlux24_base;
typedef subtract_with_carry_engine<uint64_t, 48, 5, 12> ranlux48_base;

typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
#if !defined(BOOST_NO_INT64_T) && !defined(BOOST_NO_INTEGRAL_INT64_T)
typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
#endif
}

using random::ranlux3;
using random::ranlux4;
using random::ranlux3_01;
using random::ranlux4_01;
using random::ranlux64_3_01;
using random::ranlux64_4_01;
#if !defined(BOOST_NO_INT64_T) && !defined(BOOST_NO_INTEGRAL_INT64_T)
using random::ranlux64_3;
using random::ranlux64_4;
#endif

} // namespace boost

#endif // BOOST_RANDOM_LINEAR_CONGRUENTIAL_HPP

/* ranlux.hpp
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
*/