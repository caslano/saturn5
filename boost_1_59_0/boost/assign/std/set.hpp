// Boost.Assign library
//
//  Copyright Thorsten Ottosen 2003-2004. Use, modification and
//  distribution is subject to the Boost Software License, Version
//  1.0. (See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt)
//
// For more information, see http://www.boost.org/libs/assign/
//


#ifndef BOOST_ASSIGN_STD_SET_HPP
#define BOOST_ASSIGN_STD_SET_HPP

#if defined(_MSC_VER)
# pragma once
#endif

#include <boost/assign/list_inserter.hpp>
#include <boost/config.hpp>
#include <boost/move/utility.hpp>
#include <set>

namespace boost
{
namespace assign
{

#if defined(BOOST_NO_CXX11_RVALUE_REFERENCES)

    template< class K, class C, class A, class K2 >
    inline list_inserter< assign_detail::call_insert< std::set<K,C,A> >, K > 
    operator+=( std::set<K,C,A>& c, K2 k )
    {
        return insert( c )( k );
    }
    
    template< class K, class C, class A, class K2 >
    inline list_inserter< assign_detail::call_insert< std::multiset<K,C,A> >, K > 
    operator+=( std::multiset<K,C,A>& c, K2 k )
    {
        return insert( c )( k );
    }

#else

    template< class K, class C, class A, class K2 >
    inline list_inserter< assign_detail::call_insert< std::set<K, C, A> >, K >
    operator+=(std::set<K, C, A>& c, K2&& k)
    {
        return insert(c)(boost::forward<K2>(k));
    }

    template< class K, class C, class A, class K2 >
    inline list_inserter< assign_detail::call_insert< std::multiset<K, C, A> >, K >
    operator+=(std::multiset<K, C, A>& c, K2&& k)
    {
        return insert(c)(boost::forward<K2>(k));
    }

#endif
}
}

#endif

/* set.hpp
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
*/