/*=============================================================================
    Copyright (c) 2016 Paul Fultz II
    function_param_limit.hpp
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#ifndef BOOST_HOF_GUARD_FUNCTION_PARAM_LIMIT_HPP
#define BOOST_HOF_GUARD_FUNCTION_PARAM_LIMIT_HPP

/// function_param_limit
/// ====================
/// 
/// Description
/// -----------
/// 
/// The `function_param_limit` metafunction retrieves the maximum number of
/// parameters for a function. For function pointers it returns the number of
/// parameters. Everything else, it returns `SIZE_MAX`, but this can be
/// changed by annotating the function with the [`limit`](limit) decorator.
/// 
/// This is a type trait that inherits from `std::integral_constant`.
/// 
/// Synopsis
/// --------
/// 
///     template<class F>
///     struct function_param_limit
///     : std::integral_constant<std::size_t, ...>
///     {};
/// 
/// See Also
/// --------
/// 
/// * [Partial function evaluation](<Partial function evaluation>)
/// * [limit](limit)
/// 

#include <boost/hof/detail/holder.hpp>
#include <type_traits>
#include <cstdint>

namespace boost { namespace hof {

template<class F, class=void>
struct function_param_limit
: std::integral_constant<std::size_t, SIZE_MAX>
{};

template<class F>
struct function_param_limit<F, typename detail::holder<typename F::fit_function_param_limit>::type>
: F::fit_function_param_limit
{};

}} // namespace boost::hof

#endif

/* function_param_limit.hpp
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
*/