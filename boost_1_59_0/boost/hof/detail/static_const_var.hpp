/*=============================================================================
    Copyright (c) 2015 Paul Fultz II
    static_const_var.h
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#ifndef BOOST_HOF_GUARD_STATIC_CONST_H
#define BOOST_HOF_GUARD_STATIC_CONST_H

#include <boost/hof/detail/intrinsics.hpp>

namespace boost { namespace hof { namespace detail {

template<class T>
struct static_const_storage
{
    static constexpr T value = T();
};

template<class T>
constexpr T static_const_storage<T>::value;

struct static_const_var_factory
{
    constexpr static_const_var_factory()
    {}

    template<class T>
    constexpr const T& operator=(const T&) const
    {
        static_assert(BOOST_HOF_IS_DEFAULT_CONSTRUCTIBLE(T), "Static const variable must be default constructible");
        return static_const_storage<T>::value;
    }
};
}

template<class T>
constexpr const T& static_const_var()
{
    return detail::static_const_storage<T>::value;
}


}} // namespace boost::hof

#if BOOST_HOF_HAS_RELAXED_CONSTEXPR || defined(_MSC_VER)
#define BOOST_HOF_STATIC_CONSTEXPR const constexpr
#else
#define BOOST_HOF_STATIC_CONSTEXPR static constexpr
#endif

#if defined(__GNUC__) && !defined (__clang__) && __GNUC__ == 4 && __GNUC_MINOR__ < 7
#define BOOST_HOF_STATIC_AUTO_REF extern __attribute__((weak)) constexpr auto
#else
#define BOOST_HOF_STATIC_AUTO_REF static constexpr auto&
#endif

// On gcc 4.6 use weak variables
#if defined(__GNUC__) && !defined (__clang__) && __GNUC__ == 4 && __GNUC_MINOR__ < 7
#define BOOST_HOF_STATIC_CONST_VAR(name) extern __attribute__((weak)) constexpr auto name
#else
#define BOOST_HOF_STATIC_CONST_VAR(name) static constexpr auto& name = boost::hof::detail::static_const_var_factory()
#endif

#define BOOST_HOF_DECLARE_STATIC_VAR(name, ...) BOOST_HOF_STATIC_CONST_VAR(name) = __VA_ARGS__{}

#endif

/* static_const_var.hpp
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
*/