/*=============================================================================
    Copyright (c) 2015 Paul Fultz II
    callable_base.h
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#ifndef BOOST_HOF_GUARD_CALLABLE_BASE_H
#define BOOST_HOF_GUARD_CALLABLE_BASE_H

#include <boost/hof/detail/delegate.hpp>
#include <boost/hof/detail/result_of.hpp>
#include <boost/hof/apply.hpp>

#ifndef BOOST_HOF_CALLABLE_BASE_USE_TEMPLATE_ALIAS
#if (defined(__GNUC__) && !defined (__clang__) && __GNUC__ == 4 && __GNUC_MINOR__ < 7)
#define BOOST_HOF_CALLABLE_BASE_USE_TEMPLATE_ALIAS 0
#else
#define BOOST_HOF_CALLABLE_BASE_USE_TEMPLATE_ALIAS 1
#endif
#endif

namespace boost { namespace hof { namespace detail {

template<class F>
struct non_class_function
{
    F f;
    BOOST_HOF_DELEGATE_CONSTRUCTOR(non_class_function, F, f)

    template<class... Ts>
    constexpr BOOST_HOF_SFINAE_RESULT(apply_f, id_<F>, id_<Ts>...) 
    operator()(Ts&&... xs) const BOOST_HOF_SFINAE_RETURNS
    (
        boost::hof::apply(f, BOOST_HOF_FORWARD(Ts)(xs)...)
    );
};

template<class F>
struct callable_base_type
: std::conditional<(BOOST_HOF_IS_CLASS(F) && !BOOST_HOF_IS_FINAL(F) && !BOOST_HOF_IS_POLYMORPHIC(F)), F, non_class_function<F>>
{};

#if BOOST_HOF_CALLABLE_BASE_USE_TEMPLATE_ALIAS
template<class F>
using callable_base = typename callable_base_type<F>::type;
#else
template<class F>
struct callable_base
: callable_base_type<F>::type
{
    typedef typename callable_base_type<F>::type base;
    BOOST_HOF_INHERIT_CONSTRUCTOR(callable_base, base)
};

template<class F>
struct callable_base_type<callable_base<F>>
: callable_base_type<F>
{};

#endif

}}} // namespace boost::hof

#endif

/* callable_base.hpp
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
*/