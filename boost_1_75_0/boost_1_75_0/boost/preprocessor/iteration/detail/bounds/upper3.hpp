# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_3
#
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_3_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_3_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_3_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_3 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_3_DIGIT_3, BOOST_PP_ITERATION_FINISH_3_DIGIT_2, BOOST_PP_ITERATION_FINISH_3_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_3_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_3 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_3_DIGIT_2, BOOST_PP_ITERATION_FINISH_3_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_3 BOOST_PP_ITERATION_FINISH_3_DIGIT_1
# endif

/* upper3.hpp
ih84DtMuCuYKVCUWudf9L1YuictcN5xe8uee59SDgufC4zvm/DMC17eDjNAvph6wDyd2FWRN6n3w/1Q7Jqn7+X7SNtcBtCSuwVZpynpsNbEm4EXcQQrF3xu7cun8RumlCh/Qf0by9e6p6UucMIUf/Sh6SQzLp4QJhxdtIhWLIP3f3HmVgXMReGTzSpqh2y8VutwHqa0ZW6jkd+z5E3HwqXA8dUohHJDtWYqL4gwRBYHAWOXZ6zlOvnDiPdGdoeE3BGGFmXxP9qU5ApDvHFj8uCuWETTB5w77JPgilSUAVGQrtCRoouJ4Uoc8c2adLMxc1s7nLhTWFUpDVneT0ZGw8APT37GtsYA5UoHUQvKcgVugBUUg4qv+M3IgTnKPFDCu/eWU/BRvsVteiBUq84z5hhOY1i2zUwqUVuB8Q6fCFQFL+Ogr1qJuA76JFpEHD3M/s7/9YVQKLAYWAmd+0m6Ld85FR5izDzshZcv03avz+TKCHCW/4vkAQkRQYVz+ckoVY/06ez/60ctb3VRjSuHeLfT7hyMZ7D5R3xAZTU9XJpW3fjiiqj04YRqyGEzA+/3nM1eqlShViKpI4qNDlDadr0bIXKSd8kw+MzU2YanGyCDh++srNdXnoyx7HPDhz9jX20XfQzaBLvN3HcZ8N7mZUuw8H/4UWZnvDH32xE+hzfuOkRoIHNTt36fHVtGoZwhinw9SXFVzGw9iG0/e
*/