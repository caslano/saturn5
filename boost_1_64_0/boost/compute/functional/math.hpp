//---------------------------------------------------------------------------//
// Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>
//
// Distributed under the Boost Software License, Version 1.0
// See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt
//
// See http://boostorg.github.com/compute for more information.
//---------------------------------------------------------------------------//

#ifndef BOOST_COMPUTE_FUNCTIONAL_MATH_HPP
#define BOOST_COMPUTE_FUNCTIONAL_MATH_HPP

#include <boost/compute/functional/detail/macros.hpp>

namespace boost {
namespace compute {

BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(acos, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(acosh, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(acospi, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(asin, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(asinh, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(asinpi, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(atan, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(atan2, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(atanh, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(atanpi, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(atan2pi, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(cbrt, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(ceil, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(copysign, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(cos, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(cosh, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(cospi, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(erf, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(erfc, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(exp, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(exp2, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(exp10, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(expm1, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(fabs, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(fdim, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(floor, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(fma, T (T, T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(fmax, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(fmin, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(fmod, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(hypot, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(ilogb, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(lgamma, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(log, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(log2, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(log10, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(log1p, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(logb, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(mad, T (T, T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(nextafter, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(pow, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(pown, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(powr, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(remainder, T (T, T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(rint, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(rootn, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(round, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(rsqrt, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(sin, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(sinh, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(sinpi, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(sqrt, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(tan, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(tanh, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(tanpi, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(tgamma, T (T), class T)
BOOST_COMPUTE_DECLARE_BUILTIN_FUNCTION(trunc, T (T), class T)

} // end compute namespace
} // end boost namespace

#endif // BOOST_COMPUTE_FUNCTIONAL_MATH_HPP

/* math.hpp
GF9/kFjZpow11e+oRQmD/cNYtWKmYMbj5Il7+7EpLtfBXy2nuv1we6zB/hbhg9UezbL8riKNDXAQxwq/Fxi1TrIMjX9oji3DXoRzGRC3gdtI+Rpt/xPf1Zlw/WyXou8zJ6fbtxsTgeuXMbdb3LUt41e7GOF0/j56/Phdp0bpSJi2ogW+aXHju7n/IIO7LdnuwkavkHf/DobwVle7ipc9OMUrOuS7tEhEjotoy+VtZviURukUyXLtxLxkuVoPiXlcLubtngg8UtthiPj9B3mPf+uGnofXLvvFHF7EFGePDcmjY27n/sn72Gm8kLFBayMRh5Qy+z3tStx5my3QHsTcwhlOo34Tw/HZjIQ0Yny1R3orLx1JC6pT6V3W7eu2v6n+TQi1SarnVFfGnb+Z5ZFuKo/0u1RC6S99VPFYh+GIiHXd9s0ll73fqIDrSO+WltMpCoSkp+Cj3XVeZ0Xc3gYdKJIdz3nuWY6rQ7dTMCe/teGwCyTfCb+N4sCz0d9nXMEccts0z1c1Q3rNITwaJWotPWp5NGbdCcIZjMcgl3eevn17/M6tKRIBp1KYU7t6xAkK9wzk444JDolJdc+GcKy9h/HWimVV9jhPv8wWumws5rDocp47qTyLuGytO6V4XDbostt5Hr1XwfkJP86QjnrOjPFt4PopM6y/rs64jdu6K39LP/L9wH7D4rce67CPjsCozZ1oUMhyMX/UDceXHWk0GbdPnrG9NIRDzcXxOiwnfgOQZTXi8tt/0IkpDl3hlO2+n+AUcs6zOPV7u7sW9tpW2R9J8/xjBzna2eBe9ZES4vLWLYe3I/qwv0Rf+rG/gXlmnDEeg+J9Z5l+ofq6Dz2tOcPrO6F5tr7bCk/XtzkpObq+aP8XMcc79Ppbb/QEFpUH5133AG+6FZ4Mo+3z7irtGJn7D7sprt8qhp5PctbUuxT5PRMcntPW0S/3MjwnhNi3z+5tcer88KQEpQN7KMnrF/5+B/KrW54/W8R5mMW1vcDj5b6WxzbDTUP/WM7hdkOG/rqf/Z21CXifbTvF5e1J2lDjttyJuDz/EhH571pePAfzPl/bcON5mO0Xy43nYi5Dius3EP2QzeC/Ovd/uO3SihV2meVj/5NagdZlsHUFL6wt8RoF8bAmvIbk0QQk39GVmPaTp31NiS3b+i1BnzzU8EjYH9Bh26xmcB73XMZNWQ51nk7YpMRiW76u0i+ickJ3RDwuB9r+MYLjz3e4TZnXeGzM421uzrP+hJjnm4ffJw1196+6li7IrpuYs2857Gs+uAHiRsSc4ILFupRjxzSG8X37qXgiw7huB61AX18z5kVvybYSHO5WfrMolSd3L/t7eB6ui7CRNgc71XKkoSbXe9c0PC8vGEM2HTba2F60aTh8A3PBwy2+LHU4+96keL5e8LuwHGvEifXUrOVaY4648D2w3CHvtKF9Ld8YdtBZlmeMO4z3YTxa8iIGjOVYI4/Px6hClsuGHvolxeF15DrGr+UZoxA6IuZhPlNro5jn9T3HnWmlOcWciO09aznaEOX1jh2f5ryzPmXxWOdu2ry0HZJBxzwi4g3to/2YG/XR1iMjTrKPdmJeso9mHxXxkn1Ue3TMs320G3OiPsofk+JwHwVetu15sJin2YITvJrmGYtY6JKYh1doYDdrDlu7Mp2XxpyuvWsbc1SMiIMETnUL/pLcBi9L8lA3tEGahxEGuR3CK8hNpyPSa97e8XxwvpO3nxQ7iPIMLPBILaXWbC2X3z1m2ieOBfOMPGo6Z5HexPnby5njG5vPc17JWDgosb+ffRVzwnssAau/RmCU/aK8V/x6xtxBFfs1bv707ITdlXZLblTGPML3LXynSyRdkc8=
*/