/*
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2018 Andrey Semashev
 */
/*!
 * \file   atomic/detail/string_ops.hpp
 *
 * This header defines string operations for Boost.Atomic
 */

#ifndef BOOST_ATOMIC_DETAIL_STRING_OPS_HPP_INCLUDED_
#define BOOST_ATOMIC_DETAIL_STRING_OPS_HPP_INCLUDED_

#include <boost/atomic/detail/config.hpp>

#ifdef BOOST_HAS_PRAGMA_ONCE
#pragma once
#endif

#if defined(__has_builtin)
#if __has_builtin(__builtin_memcpy)
#define BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCPY
#endif
#if __has_builtin(__builtin_memcmp)
#define BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCMP
#endif
#if __has_builtin(__builtin_memset)
#define BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMSET
#endif
#elif defined(BOOST_GCC)
#define BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCPY
#define BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCMP
#define BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMSET
#endif

#if defined(BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCPY)
#define BOOST_ATOMIC_DETAIL_MEMCPY __builtin_memcpy
#else
#define BOOST_ATOMIC_DETAIL_MEMCPY std::memcpy
#endif

#if defined(BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCMP)
#define BOOST_ATOMIC_DETAIL_MEMCMP __builtin_memcmp
#else
#define BOOST_ATOMIC_DETAIL_MEMCMP std::memcmp
#endif

#if defined(BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMSET)
#define BOOST_ATOMIC_DETAIL_MEMSET __builtin_memset
#else
#define BOOST_ATOMIC_DETAIL_MEMSET std::memset
#endif

#if !defined(BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCPY) || !defined(BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMCMP) || !defined(BOOST_ATOMIC_DETAIL_HAS_BUILTIN_MEMSET)
#include <cstring>
#endif

#endif // BOOST_ATOMIC_DETAIL_STRING_OPS_HPP_INCLUDED_

/* string_ops.hpp
XrSfMXx0J3MqwfWMNMFzKhXRdUV4lGeMJtZVY+dUIrrqdIhXVy/14r7eq6sG70tIEzivUh1dV4RHecZoYl01dl5lUOTZtbN3zFhnP2Ns8epqbIz3zaSNOrdyJOFmzDDxA8cMwgPHDMKijxn9t7jHjMbNraiu93puJaLvqi6uuqn6zgvQt5lfCdY3aYPnDAgLrqMSHlhHCWvaOtrYOYMTIn1fur/OKv10FsuzRhR9VUbXF+FRnjX+S/SVfqhXX69k8N9fvfoy8yzB9Yt0wfMshAXrS8ID9UVY0+qrsfMsEX1ld/Xqa30Gx4P0xVxLFH2RLniuJTu6vgiP8pzRxPpq7FyLGV+7WfIbqvqy8+/MsRWqL/Nd3iHDGrQDqE1zhMh7ZVeHrkxYZyNvtcqb24C8eT5zS4WQ/EVepyzbAmSxPvDIMl+FCZKFNIGyELbvZInU4409LPlNVlnG23XEHls8sjgH8kB5NF22yNOrrUMeE3aypP1T6/p7N2Wb8FM9ezVJXTbhA6Ltw6RxQuZ7+642Y+JmuuIuwe9oPybesa54vDfTZNcD/Zi2ZAegk3r77sy3PPvuIJN3350lPu1waUA7XNnTW3erM3Ce620GxeC5dK27fte6uonrLvl72mFJL68s93bj2n7olSV6O5Q0RpbJ7mfBD5tWFvL3tMOs3l5ZXue6LHXJ4pq4CpRnqUOe7O715VnaxPKQv0eezD7efmWDvfbqlSe2tdcP6/qVvq66Rlhwv2LCA/sVwhvuV2o+jL1fqfkwtn6l5sN906/0/Q/0K7v7eOvvW/Y48pHneje4nlmb5gi/a01Y09Zd1VU9+50Nfb2ybESWKpcsARNOgXJVOeRa7OpjqppYLvI3chn7msO8cr1jP7dvdcmlk0EBckh80++nOOSQsKaVg/w9cuQf7pVjkz2v5ZKjofGrwiHHxtauOa0mloP8PX1kTqa3j9xszwW75Rgb270X6Uwf2cPVbggL7iNNeGAfSXjDfeSWrbH3kVu2xtZHbtm6b/rIHj9iHxm53t2O8NbbLfYz48c+19tM4gRfb9KZ+jvV2Z9IWNPWX/L33H/V+MjzgT3H4pGn4XvJSpXFr+5WNrEsPXzuJZ860ivLR8iS/IlLFjP5EXxdSGNkCTv7RwlrWlnI3yPLkqO8snyMLCUuWczERDSbaIcsc9rVl6WkiWUhf08fmXu0vyzVQbIwKE+MZv8TRZ7qH0GeXsd45bmlK33iNpc8sqg/rME1fdIFzR8QVl+e1xshj879NDh/sCtAnqV+8pj5kGB5lkaRZ+k+lCcy176jn3dM3mY/t/jK4xyXA2UibfCcCGHRn122RR2XCW94XK7ZFvu4XLMttnGZeM5xucmuyY85JxKpw08d663D2+1nl0/9rrkZy4KuN+kC50UIa9o6TP6eNnllf688d3fjGSNAngbaJOmC50aqmlge8ve0ybwBXnl22M8t273yuOZHgmQibeD8CGFNKxP5e2TKGejtZ76wn2H8ZYppDZW0gXMkhAX3MyY8sJ8hvOF+pmJ77P1MxfbY+pmK7fumn/kx50jM/f/x3npck4Hzv+YNrkmSLnCepKaJ67Dqq55tDoJ55NlpP8985pIn2DgnSDbyCJwrIaxpZVvs82yz3ke2r+xnGx/ZdL4kSBbSBM+XVDaxLL18ngeWn+iV5Rv72WaHjyzRxzbSBM6ZENa0spC/p9+88iRvv7nLfrbxk2VsbPdnpA2cNyEsuN804YH9JuEN95slO2LvN0t2xNZvluzYN/3mjzlvYsb/Qd76+509TxZ0zc3cSeA1J23w3MmWJq7H5O9dHxnslWl3BvzcT6aG7zlJFzR/QljTytPD557TGuKV5wc=
*/