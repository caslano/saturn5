/* Copyright 2016-2017 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/poly_collection for library home page.
 */

#ifndef BOOST_POLY_COLLECTION_BASE_COLLECTION_FWD_HPP
#define BOOST_POLY_COLLECTION_BASE_COLLECTION_FWD_HPP

#if defined(_MSC_VER)
#pragma once
#endif

#include <memory>

namespace boost{

namespace poly_collection{

template<typename Base,typename Allocator=std::allocator<Base>>
class base_collection;

template<typename Base,typename Allocator>
bool operator==(
  const base_collection<Base,Allocator>& x,
  const base_collection<Base,Allocator>& y);

template<typename Base,typename Allocator>
bool operator!=(
  const base_collection<Base,Allocator>& x,
  const base_collection<Base,Allocator>& y);

template<typename Base,typename Allocator>
void swap(
  base_collection<Base,Allocator>& x,base_collection<Base,Allocator>& y);

} /* namespace poly_collection */

using poly_collection::base_collection;

} /* namespace boost */

#endif

/* base_collection_fwd.hpp
fF+mbKF4x6Hxhp3Xnezz876JbZT3WTi+QrjH8bkDdXBynXa2AwGO5f+DNMNFGvVu4/pWyrmeqYaOOPSbBvMs6s57qTNIoPYE0vRE8q2BdP7goe8CSlHCyt8YeC3EEUb+jis3nkdsE2zzfNYNG3J81suxNRjmfn0IbDz025ke2OBDDAXUGckrDMCFMNIwTScM6MUwfLClqCdP8tpLuPnbzCj3snPtbuKYX13FARy/gTBzbBn1h5MW6IcLYaRhOIL7og2N1K0uOPhN3eB42E28Rggl1Ot3KP1wIoQ0LEdyPgbgRhgZmEnTZoSQRa2ZY+DCKHKomUm6wIUwzEdxD9iOJh8QRQE11XyOAbgQxhgKsw79xqELDoRRX/G7hRBSaNJvEpyIooz62RwHO/xIwqDfFHiP4561xAv9cCIE97vIgzrKAOWjG4l6woCmeVwfQ/AgjSJqjyfc6IYNHkSQheEEroMeBBFDHmYL6YYeOBFAAgXUzSc8cCOENMpooJx2YgQRjOm70hb0w40Y8jA3kOYYhhcxjMGs7zh7YYcfSZRQ836uhW7YkYbhA6Q9BhFBsJEwolbfI/bBiQBiyMKs7wcDKMD0IfIBrejGEHyoqfguz44gEsjDTD1sRBeG4EYIZVhO5joYgg9Gfc/WhkG4MYqMvkdrRh9cCCKFEmpO5Rw40fphro8yLPoOqx9OhJBAfwvx1ndEfXDCN76lTeigrnZQnzwI8N67iLr1MPHmc8/7eG8lnTeSvhu4zj7KMfsbC1xv/D2vW2BGOsrxnJM2GTiZNJ/HebWEF5Y5pAeGEUQGRspqE/oRRQ52wulHAkXU6TuxIXgQRQHWaZQlRDCGFhPxn0HY3kF6mDHz0O+p7AggiTIs1NVOtOg3SyOIwVjDdrxOvZs0Ry+cCCMDYx1hRQ8CSMM8l8/QAzuq38O56IMTQaTQPp97Uv4GTuV6yMJMXuVrSbuN3AupJwmbfsthgw91LcQDvorfnCQbD32f3QkH3FHSKYeXuHaUe+S4H3J+0ortCKq5fi1bd4Br7ub6TxE21DzNddjWI4vRFGFCLE2cnyGN2AbZdnKcMU3+PcN92A6zNcDH54O8T7IdYdvAZzZeO3cQBjQ9RrzYxtj2sy0jiNydfHYXafA44dkG3g8gZiWMbI2UvQjb7tWUX/ZnUNzIddmOcF4J9XeTDxxnRxvvragPEuYAYdpE2GDisza2NUghyL4s2jl3lGOLbMubuU+QeCPOewdbD1sbnwdRCyvvO9imULqA9EdCz7d86Eb6CO5nIqwzucZ4m6m5aguabiDtYEP1POLwAY4DzwYYp5BPqLmC+4/PzdcQLtQPcQ5yfGbWPHpozaG5fIzXzSix38c2zDYNO/vaLuM6GH+G4UAJdbyPsg1gmON74Lv80LMLPzxrDj0LaEEf7+1DbM8nHMsJq55nVh9GHun3pL3Hci5GkYWJetOEfpQo77XvJV0/cOh3Hq3oQ++HOQe50zj2LPafyfFsux6l/raSxmz9VzLu4u9+3H8iTX3El/9jz40g4hiD0cdYkGNGLmAcxzEW3jefzNgCPnTwfpRtP1snSrwOsO1bRJnivBj3iN7AfVBGmHrTECXct5B2VtJJzxgNA6QLn43uIk8GCBthDIw/4z2SazH+GH/+5ybMtpsoo2w7eB/Qc8bcpYzlaKCa0M3+NPt7eO25abzc8NmtpOsptLdsa58gnuwbgeUnh74Xr+Zabfx93RD7+9k64EMUGZRQexHxRhcKMF1MI8i5FhRupMyMh4t7NbJt5jr5C0iX8bBwbQP3GeH/N6m/mOPHw9x66HljcRlpfBvHzicdOcZ5O8nA1oUQSijwWZ13/Jk+8wHEBw8=
*/