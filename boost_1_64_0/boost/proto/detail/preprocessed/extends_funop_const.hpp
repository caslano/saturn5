    ///////////////////////////////////////////////////////////////////////////////
    /// \file extends_funop_const.hpp
    /// Definitions for extends\<\>::operator()
    //
    //  Copyright 2008 Eric Niebler. Distributed under the Boost
    //  Software License, Version 1.0. (See accompanying file
    //  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
    template<typename Sig> struct result { typedef typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop< Sig , proto_derived_expr , proto_domain >::type ) >::type const type; };
        BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop0< proto_derived_expr const , proto_domain >::type ) >::type const operator ()() const { typedef boost::proto::result_of::funop0< proto_derived_expr const , proto_domain > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) ) ); }
        template<typename A0> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop1< proto_derived_expr const , proto_domain , const A0 >::type ) >::type const operator ()(A0 const &a0) const { typedef boost::proto::result_of::funop1< proto_derived_expr const , proto_domain , const A0 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 ) ); }
        template<typename A0 , typename A1> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop2< proto_derived_expr const , proto_domain , const A0 , const A1 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1) const { typedef boost::proto::result_of::funop2< proto_derived_expr const , proto_domain , const A0 , const A1 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 ) ); }
        template<typename A0 , typename A1 , typename A2> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop3< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1 , A2 const &a2) const { typedef boost::proto::result_of::funop3< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 , a2 ) ); }
        template<typename A0 , typename A1 , typename A2 , typename A3> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop4< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1 , A2 const &a2 , A3 const &a3) const { typedef boost::proto::result_of::funop4< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 , a2 , a3 ) ); }
        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop5< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1 , A2 const &a2 , A3 const &a3 , A4 const &a4) const { typedef boost::proto::result_of::funop5< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 , a2 , a3 , a4 ) ); }
        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop6< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1 , A2 const &a2 , A3 const &a3 , A4 const &a4 , A5 const &a5) const { typedef boost::proto::result_of::funop6< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 , a2 , a3 , a4 , a5 ) ); }
        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop7< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 , const A6 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1 , A2 const &a2 , A3 const &a3 , A4 const &a4 , A5 const &a5 , A6 const &a6) const { typedef boost::proto::result_of::funop7< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 , const A6 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 , a2 , a3 , a4 , a5 , a6 ) ); }
        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop8< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 , const A6 , const A7 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1 , A2 const &a2 , A3 const &a3 , A4 const &a4 , A5 const &a5 , A6 const &a6 , A7 const &a7) const { typedef boost::proto::result_of::funop8< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 , const A6 , const A7 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 ) ); }
        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> BOOST_FORCEINLINE typename BOOST_PROTO_RESULT_OF< proto_generator( typename boost::proto::result_of::funop9< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 , const A6 , const A7 , const A8 >::type ) >::type const operator ()(A0 const &a0 , A1 const &a1 , A2 const &a2 , A3 const &a3 , A4 const &a4 , A5 const &a5 , A6 const &a6 , A7 const &a7 , A8 const &a8) const { typedef boost::proto::result_of::funop9< proto_derived_expr const , proto_domain , const A0 , const A1 , const A2 , const A3 , const A4 , const A5 , const A6 , const A7 , const A8 > funop; return proto_generator()( funop::call( *static_cast<proto_derived_expr const *>(this) , a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 ) ); }

/* extends_funop_const.hpp
Gw1sLLBEYCnALMCygeUCmwWsENh8YAuBLQFWDKwE2Gpg64CVAdsCbDuwCmCVwPYDOwTsKLBqYKeBnQV2ARi7x745A3MF1gpYO2CdgXkC6wHMF1ggsL7A+gMLBxYFLAbYGGDxwJKApQLLAJYDLA9YAbC5wIqALQK2FNhyYCuBrQG2AdhmYFuB7QC2C9geYFXADgM7BuwksFpg54BdBGbKs2/NgLUE1hpYB2AewLoC8wLmDywIWAiwMGARwKKBjQIWC2w8sGRgacCygM0Alg9sNrB5wBYAWwxsGbAVwFYBKwW2EVg5sG3AdgLbDWwvsAPAjgA7DqwG2Blg54FdAuZ0r31zAeYGzB1YJ2BdgHUD5gMsAFgwsFBgg4BFAhsObDSwscASgaUAswDLBpYLbBawQmDzgS0EtgRYMbASYKuBrQNWBmwLsO3AKoBVAtsP7BCwo8CqgZ0GdhbYBWAs3745A3MF1gpYO2CdgXkC6wHMF1ggsL7A+gMLBxYFLAbYGGDxwJKApQLLAJYDLA9YAbC5wIqALQK2FNhyYCuBrQG2AdhmYFuB7QC2C9geYFXADgM7BuwksFpg54BdBGa6z741+42v+4/qqj4DOP5VUVG/KRoSKhoaKSopGhoaKRYVFel3RkXGkpKKGSkZGTUqZqTkKKnIUbGiQmNJho6KFRkramTUSMlRkWFRo6IkI0dFtafiPjzcc3ifbWfbeZ3nfu/n8/z4fC77Y2AjwQLBxoOFgk0FiwCbCxYNtggsDuxcMB/YRWDJYFeApYGtAcsEuxksB2wjWD7YvWBFYA+DlYI9CVYB9ixYNdjLYHVgb4E1gr0H1gL2KVg72BGwLrCfwPw29G/DwQLAgsBCwKaAhYPNAosCWwgWC3YWWALYcrAksMvAUsFWg2WArQfLBtsAlgd2N1gh2INgJWDbwcrBdoNVge0BqwXbC9YAdgCsGewjsDawr8A6wb4H89zevw0B84KNAQsGmwQWBjYDLBJsPlgM2Olg8WBLwRLBVoClgF0Flg62DiwL7FawXLDNYAVgW8GKwR4DKwPbCVYJ9jxYDdhrYPVg+8CawA6CtYJ9DtYBdhSsG2xgbv/mDzYSLBBsPFgo2FSwCLC5YNFgi8DiwM4F84FdBJYMdgVYGtgasEywm8FywDaC5YPdC1YE9jBYKdiTYBVgz4JVg70MVgf2Flgj2HtgLWCfgrWDHQHrAvsJzO+O/m04WABYEFgI2BSwcLBZYFFgC8Fiwc4CSwBbDpYEdhlYKthqsAyw9WDZYBvA8sDuBisEexCsBGw7WDnYbrAqsD1gtWB7wRrADoA1g30E1gb2FVgn2Pdgno392xAwL9gYsGCwSWBhYDPAIsHmg8WAnQ4WD7YULBFsBVgK2FVg6WDrwLLAbgXLBdsMVgC2FawY7DGwMrCdYJVgz4PVgL0GVg+2D6wJ7CBYK9jnYB1gR8G6wQZu6t/8wUaCBYKNBwsFmwoWATYXLBpsEVicsVNddq7Y6F8tIOV0sZ1vzbrYsRSxk36xUF9KnCvuLrHwnrizxMaV/j3NsWfEfjA2dsqtXY5V5A3yeI01Lrzke8eqxRqMrQoq2+ZYwZ2DPDcO+u1dYl3vMvSuQZ64nrhksaOf/TfPsfPE5hmbtGLID47liC0wtqvm+smO/UPsSWP5eUuudWzV3YM8m41taDrT37EvxSYae/qFkEjHhm+RPTM2e9WWbM272KnGSh/zLXHsWrGxxi7M2v6y7otYRE+OznB/x4mV9sStEFu6+asLNbcFgzz+xi6ZvOUlx9LExhhLejlou2M3i60Z0GsH/POSHWu7Z5BnuKfXZrZ9PcCxI2KPDPjNThN7v3rfuY7dc19vTSw=
*/