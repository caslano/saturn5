# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_4
#
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_4_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_4_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_4_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_4 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_4_DIGIT_3, BOOST_PP_ITERATION_FINISH_4_DIGIT_2, BOOST_PP_ITERATION_FINISH_4_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_4_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_4 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_4_DIGIT_2, BOOST_PP_ITERATION_FINISH_4_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_4 BOOST_PP_ITERATION_FINISH_4_DIGIT_1
# endif

/* upper4.hpp
71op0cnAIh2hkFtEz5mXZpTaOJs0zqWE08r9B49iA2eWjbNY48QTjt72xTHDC3/I30Cc+8OlXunNK5QNBhyk0sCot2kUaho70ikwYdAfCka2Gm5SOso7VNX7h9M/deP5VJUQWAwCQRnTg9DcCLT4IEm73Whspti20YiGDy+SiKgoZ1V/OUeumsjmEaFMvRjzOGGuUD/QBZkMY7+QOcUc6JcSTG2Fe6Uu9yHuU2K9yDi82b6pspJjRPXmJ+nbKtAp0ZvTSn2LnHiN2U7Q4S5nIvbr+o4n7BeqkFFTog/WUBOIqCzY9A6PJA+9boaIhqB+Rqoder4deh2sXvUk5y8lNL63NAJzBFTd9kdMlcGX9Radt+rhr07LoEZK+wMXUCWq3850UnnlGmlp9vtnM4Vj1ReJOdetjKOn27+keCX7pzQUTuXz5xl61e8v0SycwAi1uYY4uk8CkeYBwsPIspn1fA20lL9dZMj7j64zEa3XPpwsoG9jz0Q4FEJzK1rp1K2IB3v1lxPcilidobycXKY6XS0PDbno+RfaZZ48balG7YIp4eu/8pPUQ4hVtw4LK24Qgz3lato1Zllneowsu7CNGVZhD5Qchz7tJfLH8mJT9Z3QGTnNYqq+Cs9quV+/0KMesz22wIPfRvYP0ROMRxVONyPNMMrsOI9dY8X5AqIP3UpBW0Vq2n8OWiO1turzPWqcJv+dH0xyb5DOAO7yqkECDbsAyCY5JJKeqoNMssCDMlfiXCXRjRtfkgSv6MU3O5fa/qq1BvgmjYYNXlj4dMrxyXDyJ0s+OfLJwwdyJyhj0T6aaBjIVYjUdqG0s6S0i3A1/f5pdstebmf8ITvjO2D1qDuqpMhvS6Pims0uV0PhLm5pl9rMwi1PWJzH5yVDxurOxUjLV5WiQnu65tsix14zbmhnfJeSdw89UCFdhoBA6fReJMLnZYamb/C8EkcU/36VcDaxVpMAc2g33cz9bUMPu8OnGUftjF0giQo93pPKiUOysL7aJNSYpZzypIX/76sFfz7wjex4a/IYMF0iZxYfdvSQNCu7YXXy861+WuyhZWSMKsaH/n2sPqgc9KUuUn1Gph3BL68WcUToNHhFKhctjKpRmjZk19z/GI0i/6eUHzSiK1ZyCsWmgOZOs9SG/uZ7XjANYUn7Z87osSXQmeSE7oKf+uZquZhrVDmKKe8F3EYuQrrgKJN245ZPpXyqGGMZaOkXRIaCjm56JCf3Z45RkFEO7T6MMfudiBl0WA9eP7Q4uOkNYElgI2c0Cmmo19yJfQNSTWKnk/JhaDVeUcojQw7RuZ8LSJY5gYvRRJZLwfAUNt0u1+FSMqGXujvkTCAoIx690SHsh+UUjZeeBqG4PSBjNBdRw7oVkVLb4NwPZPJpWGJ2Hc6tPNBxuASBNOP60YR/TqWp2Mdw+Pt41UGfqWnNXD/UIl2hIVj/oUWDOCqRplS+IU16zOhy2G+13jzQ++4qrZEXK5Dz8UKMnalZ8NHW/shf6DXcsdfagtW5iJVU/7wGHJGkSwwKU8YdfgHMvxyfWU4XGrtskl1tkgelC4Tmn0MZ/x4JRYW1SkKRudky5NU7aMjDGVGFeWTYi+RcL/epf1XYsu8HEUN4HSnapUq7kPhPOB/1chLOLpjzaFQyl7aBvtor4fe2/s9KSdjHXZlMj94OTcbErbRxR2vcp4GLRLsd/k7VTtyGkKjRpfy0CvXQgyQwpayWVB2rBrIsI3wIZ8kjwzfP+Oj31pB22MfE0f6m8xTQr9pJBFTVTVY3vLkr1aMd5I8+LTdLiA0/xCQvpScv1AUSgnWkZKk2w8mbLG7gIMDv/3CQIpUITD0BTOhqKo2vzoAMLijDNV0=
*/