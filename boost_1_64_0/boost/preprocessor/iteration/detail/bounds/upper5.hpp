# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_5
#
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_5_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_5_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_5_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_5 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_5_DIGIT_3, BOOST_PP_ITERATION_FINISH_5_DIGIT_2, BOOST_PP_ITERATION_FINISH_5_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_5_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_5 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_5_DIGIT_2, BOOST_PP_ITERATION_FINISH_5_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_5 BOOST_PP_ITERATION_FINISH_5_DIGIT_1
# endif

/* upper5.hpp
LTe4xs1jDKSuilPnaZJpfA995A9EMV1ptv/qA7GYX3zc59YzHj423oWEt83E+yXnIyO4jXkE8KYx6I7qBT71jYerncQi6lJI0gE/0L81lS/hVdf61Dse89Hw642JW2z9L6gSSFn4pL5eQN7M7U7ykqlnrP1LvV2313sF971kpOASyN+xOyXcRX19o35eg+6ygYzBBdBbPQu4W/2RYoKe1Wm2YEaWOWWdaxz4J42vD8xwSpXB/ssZTNdaI11qVOESLO7OISPy5h2uSz0CXHr8looqxae+mMKZRJjZHDe09EZGO6rzfKrnVJMyMIf71E7GTAdmDWPmAOysHu1TT8IjiFZiFMVjWBzlVZ95okIWYcYr54vtHkiMTICXT33Ov4M9XP/o+wu/Px3J313XRc2FpcntBHe8LNzFp1IYw1VEHCIsumpy22AzTKEb845e02hW0KhBqfo7+6yjslncxk5gb/xJPN+YXou9MbO03argWiru4goqbjpwURvQG0lTj0hOpeOggqV5Bldo4eLYuvj6utjL/J9HthFHm1WdGlVbaBdWO9U+HU6t4JKZjWIDNSGDQggDxZgNbA9lLNJ9I/OxUu0XDUmlEEVxJ6J4TYiRRK7ahYA86y+o0q8VrQEEkU9HFZLQCUbPbkat3VbDHlnLbKPI1N/gQhqkM3rUjKlc/qG34hwWGP1zHKWujQNsiQpQ6VGXTTX1mQ5Bt258gMLttSOrk8hCXyXRykL9cyYV6hceq1An+0SwHunNMYviEMXwERfcKFi9Xiq2vzEhC6fV838VV1x9/oDA61Gldb9Hl9YVM3Vp3eD5cWkdsTPw4hQpraytlPk/TGlXWjkeKa1H6NC4E+etK5E7itWo3+s0td2S/KUEgyxNjMfuuUMafqAqXYQqPWQKVR9DFF61ZQb9vgY7ElVk5HHsg6JinwX9LOQL7dvoRqHzkILgGj5aWfoOPcOSPGYHzrjc24eQRDfEurl7G2VMJ1QuqyezCd9EdJvh5d3tynGYhUkX666w77MYhwlBPGXuHWCG7zfFEnFrQz2fTUrWxS8baU9R5LPL2xXhF3CiG081JsK3fLcrwQqUTtNEDejtjsdbSliJRve658rNXpe8dCJwkp+P394MbuMN+XjdPz+JxV1jRozGFDUAjupYYxs8PSqIYFBI3MKOOjik1MVu0p7GtIfQdYGlRzsh3vjtFIAo/70TRTXWdUP+aBfEtuAKbcJ6wORVqQ7XUBvoXK7bQA31zW08YxmVyB/WY25bfD6R0KCXj+MFtnJzvNSV6u9MyPD3MQ8RnrJvV7u1AFd4SvCH+kUdBzeN6+hPd2vEzTZivFumk46UtBia+Mz2d7e7XfuLWfQ52lAp0uE20zXHTW3v0un0W8Z00niyP5yI7D5HM34G/NzqYrfOZiOaNA8n0Lt/pZ2/S+EPGb9JfN+Dx2ufNfbyuTj/qVFAiLBbQvq9xDVxWif6CdaZkOD/+Urzns546FZO9KodAMhaLY8AHvVHC3CJXjZw3mBvdcJOA1ekeys1shNOTPSOqKHOq67jwElUC+y9TsS1p7uNYyhellu59ggzd+CN7Qi8g/Au3AnS/g6FJKccOJeGJqYX3V9GMt4zMcDrUfg7fJKXhrE2CBdWJxh7QTt8sZH2B7MGwSe29R8jSeFUfkv+lF3FF07mhJql3QonRp1p9Psr9kpbjGFN4hmQwFuw2VH303xRdQBra4xY1ayJFBbSOmdoUxJVfrg98e4E8wZ/5yZp1o2YycIJ5tTqU9Ou4NDE5eKE4fLuw2agwDl7RLW6k7eZIaeTl0mA2MfE7uQl/6ISlTNZja9lqa/gk0C3enSS/axVGvRPIUrsnY5MoJw=
*/