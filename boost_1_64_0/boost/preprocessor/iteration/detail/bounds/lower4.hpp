# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_START_4
#
# undef BOOST_PP_ITERATION_START_4_DIGIT_1
# undef BOOST_PP_ITERATION_START_4_DIGIT_2
# undef BOOST_PP_ITERATION_START_4_DIGIT_3
# undef BOOST_PP_ITERATION_START_4_DIGIT_4
# undef BOOST_PP_ITERATION_START_4_DIGIT_5
# undef BOOST_PP_ITERATION_START_4_DIGIT_6
# undef BOOST_PP_ITERATION_START_4_DIGIT_7
# undef BOOST_PP_ITERATION_START_4_DIGIT_8
# undef BOOST_PP_ITERATION_START_4_DIGIT_9
# undef BOOST_PP_ITERATION_START_4_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_START_4_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_START_4_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_START_4_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_START_4_DIGIT_3
#    define BOOST_PP_ITERATION_START_4 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_START_4_DIGIT_3, BOOST_PP_ITERATION_START_4_DIGIT_2, BOOST_PP_ITERATION_START_4_DIGIT_1)
# elif BOOST_PP_ITERATION_START_4_DIGIT_2
#    define BOOST_PP_ITERATION_START_4 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_START_4_DIGIT_2, BOOST_PP_ITERATION_START_4_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_START_4 BOOST_PP_ITERATION_START_4_DIGIT_1
# endif

/* lower4.hpp
VU+Gopds6KdoyTO5zJ7WLDc3Xk6iwVFjOE29vYJqdl/ZmpVnwXkM3lg0xsBHBhxcmiXH+YJmerIXvX1YMkDYS8ppF1cWv5x0mnY0JtU6z5+U50BFS4IpMYQvNz4uD4tW/Oq6cveIRqPCme4/uVf65EnayEU/WHWRK5oF8osXc3LvCi/0PjWQW+wHWsYa467UGNxb6hdi/UQEX6hy9QJepHfXq80D0KXpn5TftSQ8VRYeYsFbRFFwgiNmfr4Bj78PCkUaSXVPO+Kmb960Ix765kw7kkbfrGlHkifwzUQ4N92A3CvU+Zzqhm94B3mn7CC930GtBbMEm4+sW0xbk9Hr1uCzagP+qpOe2FX+5cgbNvyZtOHPXLWbwqSv2o4PfNzG5zAYuVsgw6/2n+DFyjx/nSIMlGl6t4gQDDECb1CQrRIkvsNMX/cjbX6oQMEhEdZcECeeB8OLEYL9DI+6XMSPGLnsEoELjc49cPsN78ew0fHH2hDLnpHHQQolCLpq96CRz05d4HQJSbt/dttOPcW0gpMtkR5WT7M1wJM92jC5H7rhvi11VQBuBjRp75bDMD7C6+ifujL1qV6h1R8jJc5PzWRv/W6ylDUGBxv7nJnl4bmYby731Y3zISWIor1/pXHA8b0Dvpyb65gocW8dzwPPuNDA0TMPbXb5SNC/FpV1bKbs6XS8r+dKv0Rv9Tm99XzbVb8vedfTbnlPoVJdWWdfxNOkADE/TveWStWxTuuURZtHTzW2p1nzmQujWg1knJm865Lw+2eT4JE94lmlSL6q5HDZaCPcORyXHhcA1e6T2ZqKhMZqS2uQTaGRzLJEp3o3jknOoudLiqKEdig2lW+vm1CNHpnw3tY67unbLBaoft1bvckLh7HfVR85Fr1xlqdPs9jZ1UeOR0fM6u/uU+6OnV595ER08Kz+nj7lnljL6iPJaNms/ml9ytPwJk+xM1ktvFs61kF0rF6UYfSfZkFj39d2Lj+eY73Sd9tnuG8udOKOkrgUK+2zNNaD0JfenL4zQ5Y0G0VfCUgSJvg0pqxnvELwTB0JqwVUBUZJ3OH/QtJ4E5E4s9Rp5Kmen0VBhjlBfosgmIW1bdghCpodl+YsItIr3aEao50IL86RXQXxvVaRFibOm9eqei+qPjXrU+cIlxS1/Gi8Dor0WXdIlBQh+tTaeyk/Ux30L9TxgBJbWP2JCC0BY64T4HxJP0K1Z+fb1cKFwKtmWUqI21W5La/rT3EJCzvudax9XKZLqrPp/UuAeTNBQNYCrBF11Sxry3h+ROXCQi/fxHcbM2fR7JCGrIrqQYiOL2CnA7PZyTwtqC59WIIHjWXs9R57BfjKhOrtg1qLz2XmWrkfycJkTXlwBbUl27K0o7/T6a8z7vGfQEz06nyMFezLf84c1woLAnr0j1WZaVsHm+lDeLvbDyyR1lsF2Tg61m9HNkx/zZ76fTCsPDaLZwN4ZmWupHk0FIzUZ8XhWL4+SHutjvzflf/PxjvAcSpEgAbu2V57DzGUC1WAjomiNf7K+7Sgs8t+N48mkbwwbVmpcgsjvGsvjA/0hembqsM0uQN7o1reXRKzxBSv5w5+C5e6vuGajZ5wkTpH5oR6F699/2LsauCiqrL4DAyIiIKJiolGRYVJiqKGAoqAiqY2ODJDZkqt1YusSGcUyxBDUxxJd3PLbW2z1LJWW7ascKMiNT/Kytq2tY8tt9z2zo6VbZZa6uz/nHPfe4PV7sLvzrv33HPP/f4699xz6deBma/G5T/PnPly9zWcSV6U5x8c3N2gOvo70Sx0cbgomBD+p0GTi6EQqELNO0Grj1ShOigoI9AX4UGLz5zjiIdqS3xT4h2BBPOZXtZohJE=
*/