# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_START_1
#
# undef BOOST_PP_ITERATION_START_1_DIGIT_1
# undef BOOST_PP_ITERATION_START_1_DIGIT_2
# undef BOOST_PP_ITERATION_START_1_DIGIT_3
# undef BOOST_PP_ITERATION_START_1_DIGIT_4
# undef BOOST_PP_ITERATION_START_1_DIGIT_5
# undef BOOST_PP_ITERATION_START_1_DIGIT_6
# undef BOOST_PP_ITERATION_START_1_DIGIT_7
# undef BOOST_PP_ITERATION_START_1_DIGIT_8
# undef BOOST_PP_ITERATION_START_1_DIGIT_9
# undef BOOST_PP_ITERATION_START_1_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_START_1_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_START_1_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_START_1_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_START_1_DIGIT_3
#    define BOOST_PP_ITERATION_START_1 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_START_1_DIGIT_3, BOOST_PP_ITERATION_START_1_DIGIT_2, BOOST_PP_ITERATION_START_1_DIGIT_1)
# elif BOOST_PP_ITERATION_START_1_DIGIT_2
#    define BOOST_PP_ITERATION_START_1 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_START_1_DIGIT_2, BOOST_PP_ITERATION_START_1_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_START_1 BOOST_PP_ITERATION_START_1_DIGIT_1
# endif

/* lower1.hpp
7Y+2wwHyzKSfBJxu9tfc/yNdraf562bDoELIDOEql76rMYy3MERfh1btl5pSs4bCThdpordKv0IRBRfaMt5HqmODhJVLDkg9oRWBZpZOP7LkQNRbSXLNC9Y7cs0lllzzzSssueYSFmzKMT52Uv10KbcVoUu88wOfKdH5RVcYCUxDK4hxDMHNtxET9wXLKQEKTSnQJPU3RKIzAiJm92yIY3VH9HkNQc3bGaH2DqnXEsyitRnDTJPpmxu5t2EsxhCb0iMhM7WeutYBxi6aeUjQophyJSLcbas8YbUKgfSS20W8DKmMaGYwrJ5qkL7XOqweREDarp0hXHqsKgUH6BCFVo+QJ3Yc+Gi/XfDTRJjKSugR/YuMZ/isolhqtMT4vRPjcXa/AQ56B7EccwyC9HJySPwnlUBXN50ZhHFD/C487bmrAG5BlIhbfiiO9iw/UgmfnJRZbA78ZSPWoZJWRZv++SJnBS2XjZxoFs2hcq0y56ukzn7NKkcpyescw8utvQ8KFLhv8tRaoqfWwtTsDeLsdZDsjZbs9Q5R9opSsnfVa1b2OjbJXvULnD1ObPz3TTMYUn+DOjddKB3+zJTMDUT4ngfNZj0PUodErxpKkwTtTpCF5kYFdZ0+x7nrD3NFC43RcLD0v3GyPkllhUzCQWO2E2DsGG5Z0kMDKMYt5K37kraA7AJC/dkxC3UXwfNnC88aB093wYNwY1zRKiwoN8SFpN82pAa/osvCO8MD6BYh9bRMi3rkzhwFV4iHHGjl0L+ft6f906TuIAbo8jv07+dFQGSN6B6M9oSJecdj58A0l02dYZrNpnYwTWVTi557uFLTkSK0W5POgEk170QLUZUF8Y2zmvfxabrvZe4+FTRLvo53qE6m+9ZfQ0mm14/Hh6oNy0pVhZ7AUSC0zn3fYf+8hNOM9gmpy7m4Xtbxst2ptZuX2IUsfF4O11cgIm6h+q3h4gEFFYraPdoVA3KmJJiD3J6CO7qeQGtmhCJqFwcPWOWNdqOWQiBfWGWg9sxmIbXyJd1qeawn5PZbpMGkrrCxXYl/iVH7ksR4CF/N4Ia2Uch2lZsZCRiPKuKO4kNdPvUt6rIjeRiusRzqXQ7RHiHCap+QDbDziZ3LexecBDExfAhnDjUfU7I1Qao0Ht7Z4AjMTMW0HarXtTYFx3EFHLE4V6R0A38NlR/dbyB6YjGe6sAZ5a9IyGyPEDu4ajLURnJIV/X4yONXVxp5zkXNh8/CmYv19n7gF0WWpPyOMQYJo2cpI+jwkoXgdKPMQTDfRjAHCHrugWE+DHM/fb3URTB6M2RH8VWNkP8EtNyA928BfwB8C7gaMAZwJ+A+wGOAFwENgJ2AvwOOAs7ZCJ06gBsA4wB3Ae4DPAF4BdAAeBPwNeBPm0pdVwA8gDaA2wCdARcBJgFmAO4FNL1v7bVe5IkyIZO6P4I1rx0pYd+c0cwldPZ4dqKGmIfSigsmnVnce0oX8g6Jf7LdFhAPWKKdgtZmsy6FqmZGYDzJGbb7Eb2FeHtlx+KrbmzGlIeqPiF+GdO5o4w2ix/o/oPZKv6D8wZK9+9pu5oFZrmEvenpGAob2eMd/cfP6HtnEZjR8uuRKnB4vKTFgu9ZwhwZhdiFVF/cLNaaVvAzMTVDH30wUQwDOZBiqUvIQN2Aj9Ih1eMZR6YtB5wojpzhgsWcHStVOsPcv0xzdaBXXhgMVrnDqhPi00KoVnPuc3VBs0BnR89icrdSF0g3Aqc14/Qiui9kHOhN7yhWX5ysjA1U0+uFYpeBeyUR4vdPv9tla0iHlIPVQSuMoU7VPLSYna1MqksETe+M6AqjwAm242kie36+pEmJhMhkCXarOcivEU23KJ9R0uI=
*/