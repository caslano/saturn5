# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_1
#
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_1_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_1_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_1 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_1_DIGIT_3, BOOST_PP_ITERATION_FINISH_1_DIGIT_2, BOOST_PP_ITERATION_FINISH_1_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_1_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_1 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_1_DIGIT_2, BOOST_PP_ITERATION_FINISH_1_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_1 BOOST_PP_ITERATION_FINISH_1_DIGIT_1
# endif

/* upper1.hpp
rkyidQtz8EaDnJZTjwCBFwzGbF79bgQ1Hlyv/KUpjpq85FmWdEhPXvJbWJj36ad3bVxqmGYFcqL6wAHNZdK3sUUAPT689niZ4I4V8o7gfnzx7imQvVhhtMDlUR//kvzQkDD2QifenUzDFTzKAd9ezacs6zl919XrAxaOv1oQTcUzDHuU0I3V1GOSGfBLBtRz8As5eArDL5PAUnBSbg2Fq8GVcbTgl9/iE85ThTnitMw+WkKL0AS+yJNGC/9y9/YCMCFahmhOhFG6nPm/i+TlVjJe9RDWpCZ3ZTynYAhmYkd4m9Z/db/sJ1KYf/59vSh8H3wPfU+od1dbR4wNhWmYEVldpz+B1j9giVBe7Vm/ZJG5whykF20V6rLF7ZZswxa3X7I9zUHSsI1fZ9N5CEA5Qx7vU1OaUIB4ltr2/qjOZG+nDo9LRZoW9hg+NANfmfgK02HFCV44CfIWceToQdvBcWf4IflnYE9+rt6IKSZ+21R8jDab9IUSs5X6m+rbpb62vn3qj9VJ6q819ts0CgGsUI+viuKeNLQP1puDpYcvNQ7aweI52GNADe/RRU3DWk/miLroUWkSLes2nL0C2PWcLmSfMAm69TFDYJY7bNN8+i6uEC0bSfy0G53Fjt/DfArzPUwSCsDh4j9nDJv/8hd71n60jPn/a2z9PBAx1EcBpNvZKw+JkFYrunyXhMt3+/5pvtN4WxBgPAVQGbge7Wtq09TMhJ/nJl3G3KQC4iZdoLlJA4mb1F1zky4gblKCcJMC3WUsAv1SKIlw8hxRthPOMizoAfnqPoGY+t/g9GCCHZoD1jgGI/SsUZH3go4Ns5CPyHvVidj7aXYCXtXufqC5RB5cAk4WTGdCa4QWblIA58cXm4JFgbiG0xf4ZwaJ/7TH70t+zhEsPAHy0Mwr+jVLWSt1WvJzO/MPBi4P+onLFW/5dmd+KprpWOdYExj4miQHZzbmSO5QnbQcgsAhLO3G24uRnwoZ8IPD2mvReTtkVG4iLQRTumOBcIDl3xtx0hD8HtJxmDxADdPfinjP4A+hKufG5OfacL2c0i0pOJ/SqG69xynu2vzEgw3fQnnX8vPGDf4wHNv2mWsFEoyodmMEuMjY5KQFyQb9NsKdd+qNxdUzZyASg26whg8xLxH56v89vSN/dWMOHV02dgWCuZ72qrkLdIQLMnCy7iFX2xkW0EuY3wVduSCOu/IQfGbsjMPvYBisXujPYTOMNT3DEWsma5j6/A5Tb3HSnniqZSp8I1Zj0Hxyh1xLjp+xk8bnStS1LCaFoRW41UjbRL1tKjxU6R025xJ7AOykwTaLwRLRwnhJyIGj2dcNAfbY3W7tsQkeBKWlYexRMDZ3VjtlxBD/pRKQRmKcpkSG+TzWix2z5sOLTlb0dvDs+bfHL4n/Zi6Qx/IC5qV5MqqD87b2GZox+jP9NJ5dcH62mYE9JD/S4NDMfB7NcVZr74lWa9bK2AoVU+3yEH1o1ZNhXSuUM95ljN2EgXNq9VsENxzbCPb0AnuFn3HWmVlLWgytf1e3018MkIf0fGXBgq0La3GFtaIRt/noGR113XxTQ0Y6bkUOiaFrMxWxwMCF2OZ51sl78pJXaSG6txkTs/lElbq7ltYDD9aajMR71wGKc/V7GZKAQUxu/mIkq7hDn0MWwcJ6EbzGISKmCoGMMNM4TGZ0mN5mmCQzjHGEgyTWSvEXTqQG5u+K4L0BArNguiyWPGOVq1afvievrBbd1CngAjl51c9EXp1PE8hWv33ZNY2yuYgwHH8kjA1cNAlmNC7SSgV+yYm7GMyp1EqJ5y/QKb0OFklpKpOoktYGkOQKuGNM3GEWbgbjDhHcMA7U2Z0p0WNuDEQ=
*/