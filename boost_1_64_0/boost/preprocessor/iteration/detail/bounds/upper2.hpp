# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_FINISH_2
#
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_1
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_2
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_3
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_4
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_5
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_6
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_7
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_8
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_9
# undef BOOST_PP_ITERATION_FINISH_2_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_FINISH_2_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_FINISH_2_DIGIT_3
#    define BOOST_PP_ITERATION_FINISH_2 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_FINISH_2_DIGIT_3, BOOST_PP_ITERATION_FINISH_2_DIGIT_2, BOOST_PP_ITERATION_FINISH_2_DIGIT_1)
# elif BOOST_PP_ITERATION_FINISH_2_DIGIT_2
#    define BOOST_PP_ITERATION_FINISH_2 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_FINISH_2_DIGIT_2, BOOST_PP_ITERATION_FINISH_2_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_FINISH_2 BOOST_PP_ITERATION_FINISH_2_DIGIT_1
# endif

/* upper2.hpp
VcMdzIm7eL4p4XOLMZGxv0NdeVBnSfNNYYVrUSwuuDhirc5gB0oF1jysBaJHOkpfOYpvEtClJ4FiERwoyBfm8ewLMYY/IGm1HFnjPEmaT+3B9VR8inC7l7YPsshfcpglly8KWJf6/8yAPAuwZAcDLhOAVguF+62T52kAMSjodiAJ43iNjRxrN3iKGoN7G/SdMfW13ykVKg9cHw0wCh3h1Lnp1Igv5qrTAVnOPk48TaOVqb0akDsd3MXWwKNpTATL9vyDd3UxDkr9M7GEkvy/LWyhrb8ul5UBUXrKdROYC4rq1/WMOcWNPM4hQJ0JMA4xqUomlQbFWD0U3cVO9JOW8z/lPA1OeAZ+cDMZ4iSDA9Qkj94uib0bXxQ8BvETc/RereBpfv+biZHe9t4e1Yy+AW7IUsqYm72P+Mlbtr8TK5RzDkeV+U6Jg/jsHJVRw5g7/BTf7Ln45cejjbmyss+kPb28aH81QPKiPTaDiGItB2zkKJJEuD7vLJQtjHKDoDQU1tC6wD+KFwTUzlBGH9xO7C7yMFoZeTiQtUbFArQpf1Qr/BPTyeGhlM8u0GcR3GRbzetvvMskvpsrqkdFnHNJNIn5TCIDrfcwo74+V3es5SAkS4iUSI5xgj2fYk+IHZXM4RHlQeDgnX049Cbsc2Z9uJF4jJTvw2FkPIOAaAmUKYIbBQyYxYAjOG013AzwAGAYsApU/ZCEZUV3hGAhpNeCB5tuN7ukML/7v1k+RXChf+CtGs4FMyv9IBIuMuqZ7CmkDRxwXKxk1LoLhZ9GE2QuHwQC5+AcfQbIKAsP65J5ZY4MZfcl6inco2LmCpMByHqgXAckj5rnt1WIDp7LN/GLYlhJpVagvaeR9ZUD1u58cDfAj5Qhj7QfNpI2WJP7mDniQQmg7RsOlnsB5zIj3cY5X9IX5ptk5Ybb9unAPkk4Uct5dwxLygkjgxlaT1q1tfxTFh5JXvYB11oZD+RpLDNq+G1q2283z8Zo77KLQJm19n24vgIz1mywtgrLbtfrM2zi+doglueFtJadPz5/76Ix5fKYwW/XyruJUrhetYlDpemEsG5Pl5Gx0UrHIKEKgi7QLXcbbXaM3eFnPGfTukqGB06BSbCbkbfRfv+lRvOANZ+hInik4fCJFlI1onKWR68S6gHyeIMBnEbclRCloM0SzRfFNNq617ZutK3L7TCGBtXbILcGrdMg9cVsOoGPlRe6cJ+0DZ78wraZQeMQVooATnVaRKr0d6J85cCucR2k7fmjlbsZyNApsoo6EXyy5JPpZP8C1QsFAwv2N/xMN0IKgUNCLkdc2RLqRDutcEkCXOKUDOKjkExAysRjonwqxd+Fj1ZC52Are6LozQJzSpKLAF0pqcuBtU3iKhWIm9/qtsvbKb5+/aR3BH9wFgjR/TbCEl0JdjQL4Uyx03FU8DIkmlpYZ0vqa+QzRD5K0HbJp0U+W+AXGZbsa4N9m+ClO6OpGuJKk08VPsldce1YnJspsULE4dJ5tQsbcwRMDowfpsZO4nRYURJc9TGCmaGTZJfau/JZKATr5bNOo4hrLwKrNytYJcCGKtqP9qnk3zL+xWqP6n86VW6V32kqOlTTUTxajx9WygBh/D+GNkiTwhF8jZTHSOIkg3Q9dYCQfZo45dE41YVAGVGgSvVDPM4p4nBN/JhDt8w46hVHSUrHp7ZOpgRmcwJVhtu8D5lN+nj6kBIzvl6Ixz6gHOBkjD8Vup/9ybg4509sOBnnj4MKWLz1OJRCG1mINjQVScRY1rHhZIfkJU0klHAyBw9pnRyCU72TuRR+MIUfSuGHUfjLAxcHkfIiSj5OwuvSjfWP2ePfbDkrTgJVwlp8cnsnDEC4xvc=
*/