# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_START_5
#
# undef BOOST_PP_ITERATION_START_5_DIGIT_1
# undef BOOST_PP_ITERATION_START_5_DIGIT_2
# undef BOOST_PP_ITERATION_START_5_DIGIT_3
# undef BOOST_PP_ITERATION_START_5_DIGIT_4
# undef BOOST_PP_ITERATION_START_5_DIGIT_5
# undef BOOST_PP_ITERATION_START_5_DIGIT_6
# undef BOOST_PP_ITERATION_START_5_DIGIT_7
# undef BOOST_PP_ITERATION_START_5_DIGIT_8
# undef BOOST_PP_ITERATION_START_5_DIGIT_9
# undef BOOST_PP_ITERATION_START_5_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_START_5_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_START_5_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_START_5_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_START_5_DIGIT_3
#    define BOOST_PP_ITERATION_START_5 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_START_5_DIGIT_3, BOOST_PP_ITERATION_START_5_DIGIT_2, BOOST_PP_ITERATION_START_5_DIGIT_1)
# elif BOOST_PP_ITERATION_START_5_DIGIT_2
#    define BOOST_PP_ITERATION_START_5 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_START_5_DIGIT_2, BOOST_PP_ITERATION_START_5_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_START_5 BOOST_PP_ITERATION_START_5_DIGIT_1
# endif

/* lower5.hpp
O6XcyJBAp1ZwRS7+HKmPLD5DA+/8W/3lZHM6/MPoG4MpNNcpr/F6VB/hZTBHWrXq7gNCFUFhndGm1aNilzkdBB0FaOgbXnjuuI86S6ZEu1QaOx+1URxxDv9c+sYjrj0OLVzm8fdWu9EQoZV/lZA7qoPxw5XfABg8SgxTagEYIygC/SiT/CsHQHi/glbkxF03siT2DkxmSLgq+bkSZ+53WBTMPx8LgnXfQSfqEKCEu71Eu4Jw0ku0FcB8Tat/3qa9fq8k5EZQkOv4UE5XREESiRZ0uEkMm3T/+IIv62YZ0wV8r4CJg8EyiHhLNRUfZlbUCMrNjfaVY/0GbALSlQzTA6YPjLW+5TWlT3nv0UcAgXhZwQXHZpJYb/AoWwLHK3K/8ETmpY+JzEuLzEv1qZeXYlo0Uq2Jk/ReL+dFvR4YgaUOrWg3NIZWtB8ar0c6PTh/Os6XzoiDU8G0Fy811TT1Q3Q+dbPl7tVQl+Hwizb3m/BGEDz044xXX4MFJiU7ndTcuyHTWwleo/gH52WReHUhJhWgcfbM9Se/K+sNfnP8497fNXxOTTJhht6w8hLFDb6exM5n1/VLUE0LUB1IVWSJDV9H8Gt96jjDiEwvo2yJrf9imSUcwNvqXh5J38glZvo7GC1Eoi8aLTI4DBMS5a+v5Z9pfGSTC4Kctk5Zbu3YabNt7bXt+kX7qqM6rnaSbBMTTEKaoU7xRIOt/92m6Fhu61cTFle1E9e9EfhogxkYDTaDkvuKT8VZOU6LzrG6x8rxTnND4uUJbyWowJJCr0S9Fub1rJxudUQv87EIucZ/hChRJhI2DMEujnYE3g15sHFKjJRjox3eDQXk/oDchONVH3IiU6mGKTqjGY2d2W8TJPVRYzSTRvEUiT4QbrEpyD3anBoZ1E/roc2rcmSG3y4M7sYuh0d+t5rGOUxHj9mj9zW4UED7o2y14bwzkepsfnYEnGKeq9KRpmBi4+TMxsHByZkYPlODzsb44OiExrGiJKnx9qwZO/fE09aK3XvGJsBuMUQtflQqLjr76MRiOFgoARdGh3HqdSSFX5W+i1omRGD2CkeGXvNhvpO69l9Y1qDNVZNT7VnMozwoZFOpu7xc6jQ9AZTBRAeoeSBKDyCw2FsG+NtzLaI9fCBFlDPUQiaVwqf1XlWGMD5VLHUvGqN3nj0fDsPgX9GErkdD7I1M5JPFwtnBk2WiTlh6peFYWkrchqXmAvOLurt8N9xg6rPFtLeepj1qpCtS41vIsXxqZjc/OCWvQX6a95M51mwYQfmcYxwbQiSPoNGumMonMshgCvgMH0hnDvcI5oXfS35uh9tI58gzpMOMzf924eqZWifXU4JrrUXb81e8v0X+vDQ88yg1zascUdm7dyzNbb4m11YH33khlpCa24fUmXkYmzQOqjfreemUYySgqXlVIUcIJTcoAW8UH+oiSUgw/QXwtTHZ+jslP78T8yMChdPBEVkTNc1WLGeHyVUqa2AxrfRxtC4/vfBJo9yp1zQeVS89hYciKOtlCRxOx7MciI+gItXXeNQl9ZKxNE7ZlVEpCzboTaKP8CKLmEupLuIEpUqCdi1rl6Dn72baWTpBz0A+oouxOpmiHSnE9P4zR1wzr57R7pU1+/078JM9aF8ual+38V3TRRw/VcCHyffSCSlVTwo0jDD37ZO7NV8QB0hVUXnYI3AadpJfSgi+0qDw3i4tovrQT9dy4wgHP7NYVrzpxgG4w0nGNvrEGa0XkO/dQiQCIuPyf1i4XmfiZgHbml7s9PdA+iV90FJax0zgVK5FVuHeAsY+FyzsW9CpeVTfAEvUFmN1nbnFSKMhkEcqtzEbyfIpt/RXPSTbZWfHfz+4lU0=
*/