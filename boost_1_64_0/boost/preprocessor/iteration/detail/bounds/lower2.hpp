# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef BOOST_PP_ITERATION_START_2
#
# undef BOOST_PP_ITERATION_START_2_DIGIT_1
# undef BOOST_PP_ITERATION_START_2_DIGIT_2
# undef BOOST_PP_ITERATION_START_2_DIGIT_3
# undef BOOST_PP_ITERATION_START_2_DIGIT_4
# undef BOOST_PP_ITERATION_START_2_DIGIT_5
# undef BOOST_PP_ITERATION_START_2_DIGIT_6
# undef BOOST_PP_ITERATION_START_2_DIGIT_7
# undef BOOST_PP_ITERATION_START_2_DIGIT_8
# undef BOOST_PP_ITERATION_START_2_DIGIT_9
# undef BOOST_PP_ITERATION_START_2_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define BOOST_PP_ITERATION_START_2_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define BOOST_PP_ITERATION_START_2_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define BOOST_PP_ITERATION_START_2_DIGIT_1 9
# endif
#
# if BOOST_PP_ITERATION_START_2_DIGIT_3
#    define BOOST_PP_ITERATION_START_2 BOOST_PP_SLOT_CC_3(BOOST_PP_ITERATION_START_2_DIGIT_3, BOOST_PP_ITERATION_START_2_DIGIT_2, BOOST_PP_ITERATION_START_2_DIGIT_1)
# elif BOOST_PP_ITERATION_START_2_DIGIT_2
#    define BOOST_PP_ITERATION_START_2 BOOST_PP_SLOT_CC_2(BOOST_PP_ITERATION_START_2_DIGIT_2, BOOST_PP_ITERATION_START_2_DIGIT_1)
# else
#    define BOOST_PP_ITERATION_START_2 BOOST_PP_ITERATION_START_2_DIGIT_1
# endif

/* lower2.hpp
8bQIxNQ2UwXPUVyW/sLM0rlSlb4iAlUfrJAjFglZTeEEAmZm8iJ1tmzCWWHAWcZUJy9fAak2tmhaxWEVsI4iU/KNRU6UV5wou2EMq29fbNIjqMnPrD6ajNLVtZEWoHdFq5phT7PCOh9kGFuAznzx6vgmjpHKjzCI7//XuYXHlXlYmcc1uIE5tQ0wAGDJZNMemIqxi8O6rWn0hYAgYNDJqlE0Hb8MUEHxWSRURKqwyRCNJR5Kec0Mi1V2mCqoTYKnn+Tw8+z3mutK3awxJU1rTPlMNKZoae5HphKV7fBUkdneQwjjsLAQ0U7YuI0l6FgO+qYOupSp4xK0IvEU2YaIrSwxn2xlYitJzBJh70KO/u1YRyA1uk6LoQfMGzEBa/GhEes8lmtotcdyragr/YGphxfTFYUt6V1oS3oPsiW9i2xJ7yDkt+ZQqlumWJLe2Spzpq6jmr8T7bnjbOYuvpDEelJvCT5ZJIvwG2m6KVVoukhog7SUeEVIEIVR4vhujumwJWzFsQwuBl3rMtst/1nPMaj7fvur4tlRTsiXGCkoi6I5QDnC2DXB2f/oEL9FCPj1r96CE5Un1gHDJnvaEeos9BSr12yFu/XYKXWlzfjOLFuEKPXDEFVulhNXPa6wZSgdLxqV7OsK26IM0RbY6y8TQQSFldueedpaGl0XsQtfG8RRRn6bKaz2l6ScXmfLaamQhEUg/6EMe4oGL1e74pfs2i7VRbxSIgxyRS/U+4OR2FBNw3Dl7URElT/BU8qYiNqHyUIrOrsAjphcELHIJWoLK9UhmQpIsCZgHJ7A+s84mM+8EekPV/VEodiB/d4V8a3T9tJUOe0I/r2xy+Kvn+k6kASL9dIMV6wYNjnMlkYLhqgNiBU0vBMJ36rHeRZRz8JN3ajRxV4yQdRB2d8T2fVibETottfInmg36LTH5Z4dmSGR9XKYs5CnU3tjnxw7uxKltCa/RCdEJe7r1nDtZbv64AqH7rbDIVtnyGCNrCsjQ7dGF2QJn5GIUMbb5xxE2ORy8B58WaPhQQ0H03Z4lIO1iELfSCYUS47sbJdh7WPSYs/QWP+WCrS7MqQ+g0HLamfGivigDH0ChU60uxAtpB54Srbxf6bsVbFWC+xchz4n+uq6ygG7tS7JKfA67zm9uz2Xw/hCWDkGMxIMwCm5Rr5TuXlIQRvNxyQZn5Z1FU0qHa4nMfHn4IdVCPk1LqTmKZuoF60ieBg9U5wq1JlwIkEpMBsI99Ag8JZn7Cl1EZwB+OHDUlenj0pd1wMCgL6AvwDuAkQAlwLuASwAPJ0CSwGrABsAbwF2A+Q9uE0rLHmfjbyKQL2ZLoTYkpZNlhstvFvEpoOWthR9NVy4CSK8Hvx1duOvoztF+1aF1tZVomLT9DICc+JOuW6lq5u5uG9t75+hRBfI7H2lsiRAQPa622lqXYt/fe7/1JIvVRVwZMXeL5Gtj9gKEk/ISnAuR9x3s70S0BLh6By/QywyyY8l6dA0czR9vOb19PGYI0RkNEKfdDPI4qzrOHgZmT1mP3tp6EkOaWY+fbwSJhfmth7zNPqkmW3UwxNZQuQUdS8MzI+bmCb3SW5SBnKsRirjXqn6ktRFov4RLQH8mttS+vzdo1obwbJrWQg4X3WES1j1xb/Bj0P4/kLidzsR1Whj2UNqPdnbartI/b7A2AtFhx8MjdwZ1LY7eB0isWNzNibqziRd5442Ed3vzFF9iWtZQJivsqokWy2LflV0/9u/SYQLklru80vIwfrXleV1oOGs3NHL6a8Af7EbLFn+XLwBN8DR8XB5RO140u0iTdBTH5WZ9iJ7DdLyVfkRtSREikRSV6ACy2vaHxxJupYWazCXPKy6YOo=
*/