/*==============================================================================
    Copyright (c) 2001-2010 Joel de Guzman
    Copyright (c) 2010-2011 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
    
    namespace placeholders
    {
        typedef expression::argument<1>::type arg1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type arg2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type arg3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type arg4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type arg5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type arg6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type arg7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type arg8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type arg9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type arg10_type BOOST_ATTRIBUTE_UNUSED;
        typedef expression::argument<1>::type _1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type _2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type _3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type _4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type _5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type _6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type _7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type _8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type _9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type _10_type BOOST_ATTRIBUTE_UNUSED;
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED arg1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED arg2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED arg3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED arg4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED arg5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED arg6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED arg7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED arg8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED arg9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED arg10 = {{{}}};
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED _1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED _2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED _3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED _4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED _5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED _6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED _7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED _8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED _9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED _10 = {{{}}};
    }
    namespace arg_names
    {
        typedef expression::argument<1>::type arg1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type arg2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type arg3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type arg4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type arg5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type arg6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type arg7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type arg8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type arg9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type arg10_type BOOST_ATTRIBUTE_UNUSED;
        typedef expression::argument<1>::type _1_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<2>::type _2_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<3>::type _3_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<4>::type _4_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<5>::type _5_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<6>::type _6_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<7>::type _7_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<8>::type _8_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<9>::type _9_type BOOST_ATTRIBUTE_UNUSED; typedef expression::argument<10>::type _10_type BOOST_ATTRIBUTE_UNUSED;
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED arg1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED arg2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED arg3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED arg4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED arg5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED arg6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED arg7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED arg8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED arg9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED arg10 = {{{}}};
        expression::argument<1>::type const BOOST_ATTRIBUTE_UNUSED _1 = {{{}}}; expression::argument<2>::type const BOOST_ATTRIBUTE_UNUSED _2 = {{{}}}; expression::argument<3>::type const BOOST_ATTRIBUTE_UNUSED _3 = {{{}}}; expression::argument<4>::type const BOOST_ATTRIBUTE_UNUSED _4 = {{{}}}; expression::argument<5>::type const BOOST_ATTRIBUTE_UNUSED _5 = {{{}}}; expression::argument<6>::type const BOOST_ATTRIBUTE_UNUSED _6 = {{{}}}; expression::argument<7>::type const BOOST_ATTRIBUTE_UNUSED _7 = {{{}}}; expression::argument<8>::type const BOOST_ATTRIBUTE_UNUSED _8 = {{{}}}; expression::argument<9>::type const BOOST_ATTRIBUTE_UNUSED _9 = {{{}}}; expression::argument<10>::type const BOOST_ATTRIBUTE_UNUSED _10 = {{{}}};
    }

/* argument_predefined_10.hpp
tEqcQ9FZ+uko7wySy3uQXD5LteO3QO8MtOPZyH9OAevhQs4ZTPnnUvnn0Vx+vuLfBZXmU/fXQM938o2PAnRvBsd3Vd0vVuPjeyjrEuJdhmi/TOW/HPlXgXffR/4raAy0UH1/oOr7w0r5VH2vAo6rXX1Zd01neoiDzHXhEtyJiPzt/4jl7TD7qOkxO27eN0rZchXGvZlLe8eZKOvHXFaB5/PmjDfymTIQBM4XQyaiocP7mLrejmWJa20bHCQ/nDdQuUM2vaM96gcuZM7V8tZPgqTbvZHlRAHn400bwbsh+C+WBZm7Hzw+4pkMfHsgHnh/szcRLakCz9GZr1OKNV9lFym2z4a1Jm6t4Svi0sTXm6ncumJJJ766kJTFMonPsM1fiQluRZ++jcbFR8ru8JaEd8lvt3QZu0GcS4OuO7htPua6dSKNy5+rcfmLSvnUuLwLdbgbsDt6ujHftNL5Sfxu0r1Mc0HnYEWpA0j23Ef03q/ofaBSPkXvg6D3ocL2iwXPf4+QXKK7d3zUG5j4R23b9QxkIQq8f+PHmB8beYbMdiDGHqlM2ZM9gbo/6ecw3l/pMtVOmWPz2RCEi8qWhv2jrC6C2/BpasNnaN31rPzmdddz3Kao2zplh/kC6vVi4loA44748GvA/6aS7qDTOF2fcNf9t8jzCvL8I0uuGeGkZZuJ8zrE5yVfSdDjZPaXrU5RYOhO801SbsrE0f3lXwmcnEFP6wHMSxIWHxTTorLaJDxOwpEMPVPCcn/Zwa+T8ERJX4XwyxKeFKxy6a9KeLKkD1L+KcGgSzf8qCMdpmnzrYTpv6M+M6PAM5mdaKy+ptr1D5XyqbH6Onj+x3xjdSP3Sgbfn4BvKdpwva1Lp5wWW6OOwOsh5M512r+H323bUN5RCY8o+d3RgVaA2rkS89OfeX4qYK+SuKbciPFo/YG69XSCHFo82LW8J3wb4C/YXzgctOd9+xPuLd5Re4sNLF82Xhdn15S3qzXpu+gbf6O582e0B/mH6l/vVcqn+tf7wPHPfGvogvawxal/SU6etz80dcb+WLhOfUr8r9lXtvya6t/MnwJtsA5Qa+6PFH+CMTjjGePX7N8lmbvJGM+rEfKbebXpmPBjXo0Evs0I376Eb3PCt4XCt+UY+RS+UcA3Wv5yPW5SZ5RbAy6l4A5FfV+FLqoMcOWAw57O0VSpaBozRj5FUxVwVKuyahVvawE3lsqao9pjG+Duxh5oW+T5FPLMRD+53aa3t6X5bNToQ3t6M71OJ4q7oYiLdEbbjaF9xcewVbhPnw2A5o9A80TQvIPix8GKH58G3CTix1ji/c6K97uMkU/xfjJwfAawu+bQJbLbMhciOXGMom0K8E4l2jZX9dkNtOyHetchz+5jku/ukSUsXwyLxxNdT6l+PQNl7El0VRDPPqd4ttcY+RTP9gaOfQjH60o//AXkGYm61SPPLM8DsTukMwUaxw2KhrljzKfOFIBvvuJpt2qHfQG3H9F6rup/+0sa52lEnkWUZwuVZxTKOWBMmKcJeZp5bCralqCc6yE7liLPgb69fd/byPaO7gEePCZ+D/AQidP3AOP21gnxkPnnqbovQz32R92/hHocSnW/jPrUYao92yTcptqzHTg6FM+aVXt2AW45lbUllbVCldUj4R5V1uHAcQThCFQde5HndvTfPuTpV/QdoPrOkYAbJNybqDxDyHMxcGeQZ9WY2L0U+dT9EYHhOyKjE+5/HM315Xsl5E8ro/ZoXwENx4IGX4a/38NlHEd0rM4BczzoEBodHZzn3gTav27pKBJ+Sih6y8nEHU93oyQsXyzvKaqdh3x54GU8z2lcjxwwZygYsw/MqHsyZ43Bfg48Tr4=
*/